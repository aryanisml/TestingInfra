{"version":3,"sources":["./src/app/sites/data-management-details/data-management-details.component.html","./src/app/sites/data-management-details/data-management-grid/data-management-grid.component.html","./src/app/sites/data-management-details/data-management-center-list/data-management-center-list.service.ts","./src/app/sites/data-management-details/data-management-details-routing.module.ts","./src/app/sites/data-management-details/data-management-details.component.scss","./src/app/sites/data-management-details/data-management-details.component.ts","./src/app/sites/data-management-details/data-management-details.module.ts","./src/app/sites/data-management-details/data-management-grid/data-management-grid-column.service.ts","./src/app/sites/data-management-details/data-management-grid/data-management-grid.component.ts","./src/app/sites/data-management-details/data-management.service.ts"],"names":[],"mappings":"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","file":"data-management-details-data-management-details-module.js","sourcesContent":["export default \"<ctos-data-management-grid></ctos-data-management-grid>\\r\\n\"","export default \"<div class=\\\"ag_container\\\">\\r\\n    <ag-grid-angular #agGrid \\r\\n        id=\\\"DMGrid\\\"\\r\\n        class=\\\"ag-theme-material\\\"\\r\\n        style=\\\"width: 100%; height: 490px;\\\"   \\r\\n        [autoGroupColumnDef]=\\\"autoGroupColumnDef\\\"\\r\\n        [getDataPath]=\\\"getDataPath\\\"\\r\\n        [treeData]=\\\"true\\\"       \\r\\n        [columnDefs]=\\\"columnDefs\\\" \\r\\n        [context]=\\\"getContext()\\\"\\r\\n        [defaultColDef]=\\\"defaultColDef\\\" \\r\\n        [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n        [gridOptions]=\\\"gridOptions\\\"\\r\\n        [groupDefaultExpanded]=\\\"groupDefaultExpanded\\\"\\r\\n        [rowClassRules]=\\\"rowClassRules\\\" \\r\\n        [rowData]=\\\"rowData\\\"\\r\\n        (gridReady)=\\\"gridReady($event)\\\"      \\r\\n        [isExternalFilterPresent]=\\\"isExternalFilterPresent\\\"\\r\\n        [doesExternalFilterPass]=\\\"doesExternalFilterPass\\\"\\r\\n        [groupRowAggNodes]=\\\"groupRowAggNodes\\\"\\r\\n        (columnVisible)=\\\"columnVisible($event)\\\"\\r\\n         (dragStopped)=\\\"dragStopped($event)\\\"\\r\\n         [enableColResize]=\\\"true\\\"\\r\\n         (rowDataChanged)=\\\"rowDataChanged($event)\\\"\\r\\n        >\\r\\n    </ag-grid-angular>\\r\\n    <!-- <ag-grid-angular #agGrid \\r\\n    id=\\\"DMGrid\\\"\\r\\n    class=\\\"ag-theme-material\\\"\\r\\n    style=\\\"width: 100%; height: 490px;\\\"   \\r\\n    [autoGroupColumnDef]=\\\"autoGroupColumnDef\\\"\\r\\n    [getDataPath]=\\\"getDataPath\\\"\\r\\n    [treeData]=\\\"true\\\"       \\r\\n    [columnDefs]=\\\"columnDefs\\\" \\r\\n    [context]=\\\"getContext()\\\"\\r\\n    [defaultColDef]=\\\"defaultColDef\\\" \\r\\n    [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n    [gridOptions]=\\\"gridOptions\\\"\\r\\n    [groupDefaultExpanded]=\\\"groupDefaultExpanded\\\"\\r\\n    [rowClassRules]=\\\"rowClassRules\\\" \\r\\n    [rowData]=\\\"rowData\\\"\\r\\n    (gridReady)=\\\"gridReady($event)\\\"\\r\\n    (dragStopped)=\\\"dragStopped($event)\\\"\\r\\n    (columnVisible)=\\\"columnVisible($event)\\\"\\r\\n    [isExternalFilterPresent]=\\\"isExternalFilterPresent\\\"\\r\\n    [doesExternalFilterPass]=\\\"doesExternalFilterPass\\\"\\r\\n    > -->\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { UserDataService, CTOSUtil } from 'so-common-library';\r\nimport { AppUtil, PayloadCommandService, BaseConnectionService, Action } from 'common-library';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SITE_MODULE, COMMAND, PAGES, API_ENDPOINT } from '../../../app.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataManagementCenterListService {\r\n  data: any;\r\n  dmSummarySubject: BehaviorSubject<any>;\r\n\r\n  constructor(private userDataService: UserDataService,\r\n    private payloadCommandService: PayloadCommandService,\r\n    private baseConnectionService: BaseConnectionService) {\r\n      this.dmSummarySubject = new BehaviorSubject(null);\r\n     }\r\n\r\n    getDataObservable(): Observable<any> {\r\n      return this.dmSummarySubject.asObservable();\r\n    }\r\n    getDataManagementCenterList(studyKey: number, baseParam?: Action): Observable<any> {\r\n      if (!AppUtil.isDefined(studyKey, true)) {\r\n        return;\r\n      }\r\n      studyKey = studyKey;\r\n      if (studyKey) {\r\n        const params = {\r\n          studyKey: studyKey\r\n        };\r\n      const moduleInfo = CTOSUtil.getModuleInfo(PAGES.DATA_MANAGEMENT_DETAILS, studyKey, SITE_MODULE);\r\n        const payload = this.payloadCommandService.getApiRequest(\r\n          COMMAND.DM_CENTER_LIST,\r\n          params,\r\n          null,\r\n          moduleInfo\r\n        );\r\n        const actionParam: Action = {};\r\n        if (!baseParam) {\r\n          baseParam = actionParam;\r\n        }\r\n        baseParam.url = API_ENDPOINT.DM_CENTER_LIST;\r\n        // const actionParam: Action = {};\r\n        // return this.baseConnectionService.sendRequest(payload, actionParam).pipe(\r\n        //   map((response: any) => {\r\n        //     console.log('GET Get Center Summary : ', response);\r\n        //     this.setDatamanagementCenterList(response);\r\n        //     return response;\r\n        //   }));\r\n        return this.baseConnectionService\r\n        .send(payload, baseParam)\r\n        .pipe(\r\n          map(response => {\r\n            this.setDatamanagementCenterList(response);\r\n            return response;\r\n          })\r\n        );\r\n      }\r\n    }\r\n\r\n  setDatamanagementCenterList(data: any): void {\r\n    this.data = data;\r\n    this.dmSummarySubject.next(data);\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DataManagementDetailsComponent } from './data-management-details.component';\r\n\r\nconst routes: Routes = [{ path: '', component: DataManagementDetailsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DataManagementDetailsRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hcHA0L3NyYy9hcHAvc2l0ZXMvZGF0YS1tYW5hZ2VtZW50LWRldGFpbHMvZGF0YS1tYW5hZ2VtZW50LWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ctos-data-management-details',\r\n  templateUrl: './data-management-details.component.html',\r\n  styleUrls: ['./data-management-details.component.scss']\r\n})\r\nexport class DataManagementDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\n\r\nimport { DataManagementDetailsRoutingModule } from './data-management-details-routing.module';\r\nimport { DataManagementDetailsComponent } from './data-management-details.component';\r\nimport { DataManagementGridComponent } from './data-management-grid/data-management-grid.component';\r\n\r\n@NgModule({\r\n  declarations: [DataManagementDetailsComponent, DataManagementGridComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DataManagementDetailsRoutingModule,\r\n    AgGridModule.withComponents([])\r\n  ]\r\n})\r\nexport class DataManagementDetailsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  LocaleAppResourcesService,\r\n  ErrorTermsStoreService\r\n} from 'common-library';\r\nimport { ValueFormatterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { DatePipe, DecimalPipe } from '@angular/common';\r\nimport { GEOGRAPHY_LEVEL } from './../../../app.constant';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataManagementGridColumnService {\r\n\r\n  constructor(private appResource: LocaleAppResourcesService) { }\r\n\r\n  public get columnResource() {\r\n    return {\r\n      SITE_ID: this.appResource.getResource('DMTColSiteID'),\r\n      COHORT: this.appResource.getResource('DMCOHORT'),\r\n      REGION: this.appResource.getResource('DMREGION'),\r\n      SITE_NAME: this.appResource.getResource('DMTColSiteName'),\r\n      COUNTRY: this.appResource.getResource('DMCOUNTRY'),\r\n      INVESTIGATOR_NAME: this.appResource.getResource('DMTColInvestigator'),\r\n      MONITOR: this.appResource.getResource('DMTColMonitors'),\r\n      SOURCE_FSI: this.appResource.getResource('DMTColSiteInitDt'),\r\n      DATA_ENTRY_PERFORMANCE: this.appResource.getResource('DMTColGroupDEP'),\r\n      DATA_QUERY_PERFORMANCE: this.appResource.getResource('DMTColGroupDQP'),\r\n      DATA_CLOSURE_PERFORMANCE: this.appResource.getResource('DMTColGroupDCP'),\r\n      INITIATION_DATE: this.appResource.getResource('DMTColSiteInitDt'),\r\n      CASEBOOKS: this.appResource.getResource('DMTColTotCaseBook'),\r\n      VISITS: this.appResource.getResource('DMTColTotVisitsEntered'),\r\n      VISITS_LESS_7: this.appResource.getResource('DMTColPercentVisitsEntered'),\r\n      ENTEREDVSEXPECTED: this.appResource.getResource('DMTColVisitsEnteredVsExpected'),\r\n      MEAN_LAG: this.appResource.getResource('DMTColMeanDataEntryLag'),\r\n      OPEN: this.appResource.getResource('DMTColTotOpenQueries'),\r\n      OPEN_GREATER_21: this.appResource.getResource('DMTColPercentQueriesOpen'),\r\n      MEAN_QUERIES: this.appResource.getResource('DMTColMeanQueriesPerSub'),\r\n      RESOLUTION_TIME: this.appResource.getResource('DMTColMeanTimeQueryResolution'),\r\n      COMPLETE: this.appResource.getResource('DMTColTotCaseBookComplete'),\r\n      FROZENVSEXPECTED: this.appResource.getResource('DMTColCaseBookFrozenVsExpected'),\r\n      FROZENVSSTARTED: this.appResource.getResource('DMTColCaseBookFrozenVsStarted'),\r\n      SITE_ID_SHORT: this.appResource.getResource('DMTColShortSiteID'),\r\n      SITE_NAME_SHORT: this.appResource.getResource('DMTColShortSiteName'),\r\n      MONITOR_SHORT: this.appResource.getResource('DMTColShortMonitors'),\r\n      INITIATION_DATE_SHORT: this.appResource.getResource('DMTColShortSiteInitDt'),\r\n      INVESTIGATOR_NAME_SHORT: this.appResource.getResource('DMTColShortInvestigator'),\r\n      CASEBOOKS_SHORT: this.appResource.getResource('DMTColShortTotCaseBook'),\r\n      VISITS_SHORT: this.appResource.getResource('DMTColShortTotVisitsEntered'),\r\n      VISITS_LESS_7_SHORT: this.appResource.getResource('DMTColShortPercentVisitsEntered'),\r\n      ENTEREDVSEXPECTED_SHORT: this.appResource.getResource('DMTColShortVisitsEnteredVsExpected'),\r\n      MEAN_LAG_SHORT: this.appResource.getResource('DMTColShortMeanDataEntryLag'),\r\n      OPEN_SHORT: this.appResource.getResource('DMTColShortTotOpenQueries'),\r\n      OPEN_GREATER_21_SHORT: this.appResource.getResource('DMTColShortPercentQueriesOpen'),\r\n      MEAN_QUERIES_SHORT: this.appResource.getResource('DMTColShortMeanQueriesPerSub'),\r\n      RESOLUTION_TIME_SHORT: this.appResource.getResource('DMTColShortMeanTimeQueryResolution'),\r\n      COMPLETE_SHORT: this.appResource.getResource('DMTColShortTotCaseBookComplete'),\r\n      FROZENVSEXPECTED_SHORT: this.appResource.getResource('DMTColShortCaseBookFrozenVsExpected'),\r\n      FROZENVSSTARTED_SHORT: this.appResource.getResource('DMTColShortCaseBookFrozenVsStarted')\r\n    };\r\n  }\r\n\r\n  getColumnDef() {\r\n    const columnResources = this.columnResource;\r\n    const colDefs: any[] = [];\r\n    // #siteName\r\n    colDefs.push(this.getColDefWithResourceData({\r\n      field: 'name',\r\n    }, columnResources.SITE_NAME_SHORT, columnResources.SITE_NAME));\r\n\r\n    // #regionName\r\n    // colDefs.push(this.getColDefWithResourceData({\r\n    //   field: 'regionName',\r\n    // }, columnResources.REGION));\r\n    // #countryName\r\n    // colDefs.push(this.getColDefWithResourceData({\r\n    //   field: 'countryName',\r\n    // }, columnResources.COUNTRY));\r\n\r\n    // #investigatorName\r\n    colDefs.push(this.getColDefWithResourceData({\r\n      field: 'investigatorName',\r\n    }, columnResources.INVESTIGATOR_NAME_SHORT, columnResources.INVESTIGATOR_NAME));\r\n\r\n    // #monitor\r\n    colDefs.push(this.getColDefWithResourceData({\r\n      field: 'monitors',\r\n    }, columnResources.MONITOR_SHORT, columnResources.MONITOR));\r\n\r\n    // #initiationDate\r\n\r\n    colDefs.push(this.getColDefWithResourceData({\r\n      field: 'siteInitiatedDt',\r\n      valueFormatter: this.dateFormatter\r\n    }, columnResources.INITIATION_DATE_SHORT, columnResources.INITIATION_DATE));\r\n\r\n    // #Data Entry Performance\r\n    const dataEntryPerformance = [\r\n      this.getColDefWithResourceData(\r\n        {\r\n          field: 'totalCBStarted',\r\n        }, columnResources.CASEBOOKS_SHORT, columnResources.CASEBOOKS),\r\n      this.getColDefWithResourceData(\r\n        {\r\n          field: 'totalVisitsEntered',\r\n        }, columnResources.VISITS_SHORT, columnResources.VISITS),\r\n      this.getColDefWithResourceData({\r\n        field: 'percentVisitsValue',\r\n        cellClass: (params) => {\r\n          if (params.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n            if (params.value >= 80) {\r\n              return 'null';\r\n            } else if (params.value > 50 && params.value < 80) {\r\n              return 'red_medium-text';\r\n            } else {\r\n              return 'red-text';\r\n            }\r\n          } else {\r\n            return 'null';\r\n          }\r\n        },\r\n        valueFormatter: this.oneDecimalPercFormatter,\r\n      }, columnResources.VISITS_LESS_7_SHORT, columnResources.VISITS_LESS_7),\r\n      this.getColDefWithResourceData({\r\n        field: 'percentVisitsEnteredVsExpected',\r\n        valueFormatter: this.oneDecimalPercFormatter,\r\n      }, columnResources.ENTEREDVSEXPECTED_SHORT, columnResources.ENTEREDVSEXPECTED),\r\n      this.getColDefWithResourceData({\r\n        field: 'meanDataEntryLag',\r\n        valueFormatter: this.oneDecimalFormatter,\r\n      }, columnResources.MEAN_LAG_SHORT, columnResources.MEAN_LAG)\r\n\r\n    ];\r\n\r\n    colDefs.push(this.getColDefWithResourceData(\r\n      {\r\n        field: '',\r\n        children: dataEntryPerformance\r\n      }, columnResources.DATA_ENTRY_PERFORMANCE, columnResources.DATA_ENTRY_PERFORMANCE));\r\n    // #Data Query Performance\r\n    const dataQueryPerformance = [\r\n      this.getColDefWithResourceData(\r\n        {\r\n          field: 'totalOpenQueries',\r\n        }, columnResources.OPEN_SHORT, columnResources.OPEN),\r\n      this.getColDefWithResourceData(\r\n        {\r\n          field: 'percentOpenQueriesValue',\r\n          cellClass: (params) => {\r\n            if (params.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              if (params.value < 6) {\r\n                return 'null';\r\n              } else if (params.value > 6 && params.value < 15) {\r\n                return 'red_medium-text';\r\n              } else {\r\n                return 'red-text';\r\n              }\r\n            } else {\r\n              return 'null';\r\n            }\r\n          },\r\n          valueFormatter: this.oneDecimalPercFormatter,\r\n        }, columnResources.OPEN_GREATER_21_SHORT, columnResources.OPEN_GREATER_21),\r\n      this.getColDefWithResourceData({\r\n        field: 'meanQueriesPerSubject',\r\n      }, columnResources.MEAN_QUERIES_SHORT, columnResources.MEAN_QUERIES),\r\n      this.getColDefWithResourceData({\r\n        field: 'meanQueryResolutionLag',\r\n        valueFormatter: this.oneDecimalFormatter,\r\n      }, columnResources.RESOLUTION_TIME_SHORT, columnResources.RESOLUTION_TIME)\r\n    ];\r\n    colDefs.push(this.getColDefWithResourceData(\r\n      {\r\n        field: '',\r\n        children: dataQueryPerformance\r\n      }, columnResources.DATA_QUERY_PERFORMANCE, columnResources.DATA_QUERY_PERFORMANCE));\r\n\r\n    // #Data Closure Performance\r\n    const dataClosurePerformance = [\r\n      this.getColDefWithResourceData(\r\n        {\r\n          field: 'totalCBComplete',\r\n        }, columnResources.COMPLETE_SHORT, columnResources.COMPLETE),\r\n      this.getColDefWithResourceData(\r\n        {\r\n          field: 'percentCBFrozenVsExpectedValue',\r\n          cellClass: (params) => {\r\n            if (params.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              if (params.value >= 80) {\r\n                return 'null';\r\n              } else if (params.value > 60 && params.value < 80) {\r\n                return 'red_medium-text';\r\n              } else {\r\n                return 'red-text';\r\n              }\r\n            } else {\r\n              return 'null';\r\n            }\r\n          },\r\n          valueFormatter: this.oneDecimalPercFormatter,\r\n        }, columnResources.FROZENVSEXPECTED_SHORT, columnResources.FROZENVSEXPECTED),\r\n      this.getColDefWithResourceData({\r\n        field: 'percentCBFrozenVsStarted',\r\n        valueFormatter: this.oneDecimalPercFormatter,\r\n      }, columnResources.FROZENVSSTARTED_SHORT, columnResources.FROZENVSSTARTED)\r\n    ];\r\n    colDefs.push(\r\n      {\r\n        field: '',\r\n        headerName: columnResources.DATA_CLOSURE_PERFORMANCE,\r\n        children: dataClosurePerformance\r\n      });\r\n    return colDefs;\r\n  }\r\n\r\n  getColDefWithResourceData(colDef: any, shortName: string, resourceValue: string) {\r\n    return Object.assign(colDef, {\r\n      headerName: shortName,\r\n      headerTooltip: resourceValue,\r\n      colName: resourceValue,\r\n      colValueToMap: resourceValue,\r\n      width: 60,\r\n      marryChildren: true,\r\n      tooltip: function (params) {\r\n        return (params.valueFormatted ? params.valueFormatted : params.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  getDefaultColumnDef() {\r\n    return {\r\n      width: 60,\r\n      editable: false,\r\n      menuTabs: ['columnsMenuTab'],\r\n      filterParams: { suppressMiniFilter: true },\r\n      cellStyle: { 'text-align': 'center' },\r\n      lockPinned: true\r\n    };\r\n  }\r\n  public oneDecimalFormatter = (params: ValueFormatterParams) => {\r\n    const numberPipe = new DecimalPipe('en_US');\r\n    if (isNaN(params.value)) {\r\n      return '';\r\n    }\r\n\r\n    return numberPipe.transform(params.value, '1.0-1');\r\n  }\r\n  public oneDecimalPercFormatter = (params: ValueFormatterParams) => {\r\n    const numberPipe = new DecimalPipe('en_US');\r\n    if (isNaN(params.value)) {\r\n      return '0.0%';\r\n    }\r\n\r\n    return numberPipe.transform(params.value, '1.0-1') + '%';\r\n  }\r\n  public dateFormatter = (params: ValueFormatterParams) => {\r\n    const datePipe = new DatePipe('en_US');\r\n    let date = null;\r\n    if (params.value instanceof Date) {\r\n      date = params.value;\r\n    } else {\r\n      date = new Date((params.value || '').replace(/-/g, '/'));\r\n    }\r\n    if (!params.value || isNaN(date.getTime())) {\r\n      return '';\r\n    }\r\n\r\n    return datePipe.transform(date, 'dd-MMM-yyyy');\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, OnDestroy, ViewChild, ElementRef, Renderer2 } from '@angular/core';\r\nimport { UserDataService, StudySummaryService, PrefGridColumnsKeys, ColumnPreferenceService,\r\n  GROUP_ACTIONS, DOMLAYOUT } from 'so-common-library';\r\nimport { DataManagementService } from './../data-management.service';\r\nimport {\r\n  ColumnApi,\r\n  ColumnVisibleEvent,\r\n  GridApi,\r\n  GridColumnsChangedEvent,\r\n  GridReadyEvent,\r\n  ICellRendererParams,\r\n  RefreshCellsParams,\r\n  RowDataUpdatedEvent,\r\n  RowNode,\r\n  SortChangedEvent,\r\n  GridOptions,\r\n  DragStoppedEvent,\r\n  Column,\r\n  RowDataChangedEvent,\r\n  RowGroupOpenedEvent\r\n} from 'ag-grid-community';\r\nimport { DataManagementGridColumnService } from './data-management-grid-column.service';\r\nimport {Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { GridFilterService } from '../../grid-filter.service';\r\nimport { GEOGRAPHY_LEVEL} from '@app4/app.constant';\r\nimport { SitesService } from '../../sites.service';\r\nimport { EdGridService } from './../../enrollment-details/grid/ed-grid.service';\r\n\r\n@Component({\r\n  selector: 'ctos-data-management-grid',\r\n  templateUrl: './data-management-grid.component.html',\r\n  providers: [DataManagementService],\r\n  encapsulation: ViewEncapsulation.None\r\n // styleUrls: ['./data-management-grid.component.scss']\r\n})\r\nexport class DataManagementGridComponent implements OnInit, OnDestroy {\r\n\r\n  // AG-Grid variables\r\n  private gridApi: GridApi;\r\n  private columnApi: ColumnApi;\r\n  getDataPath: (data: any) => any;\r\n  autoGroupColumnDef: any;\r\n  columnDefs;\r\n  context;\r\n  defaultColDef: any;\r\n  frameworkComponents: any;\r\n  rowData = [];\r\n  gridOptions: GridOptions;\r\n  groupDefaultExpanded = -1;\r\n  private gridColumnApi;\r\n  private readonly subscriptions: Subject<void> = new Subject<void>();\r\n  rowClassRules = {\r\n    'ag-row-focus': function (params) {\r\n      return params.data.rowSelected;\r\n    }\r\n  };\r\n  @ViewChild('agGrid', { read: ElementRef, static: true }) dmGrid: ElementRef;\r\n\r\n  constructor(private userDataService: UserDataService,\r\n    private dataManagementService: DataManagementService,\r\n    private columnPreferencesService: ColumnPreferenceService,\r\n    private dataManagementGridColumnService: DataManagementGridColumnService,\r\n    private gridFilterService: GridFilterService,\r\n    private gridService: EdGridService,\r\n    private renderer: Renderer2,\r\n    private siteService: SitesService) { }\r\n\r\n  ngOnInit() {\r\n    this.autoGroupColumnDef = {\r\n      headerName: 'Site Id',\r\n      cellRendererParams: {\r\n        suppressCount: true\r\n      },\r\n      // cellStyle: function (params) {\r\n      //   return { 'text-align': 'left' };\r\n      // },\r\n      cellStyle: (params) => {\r\n        if (params.data.isLeafNode) {\r\n          return { 'padding-left': '30px', 'text-align': 'left' };\r\n        } else {\r\n          return null;\r\n        }\r\n      },\r\n      pinned: true,\r\n      width: 25\r\n    };\r\n    this.getDataPath = function (data) {\r\n      return data.geoHierarchy;\r\n    };\r\n    this.setGridOptions();\r\n    this.setDefaultColumnDef();\r\n    this.setColumnDef();\r\n    this.externalFilterChanged();\r\n    this.siteService.getStudyChangeObservable().subscribe((studyKey) => {\r\n      this.getDatamanagementData(studyKey);\r\n      // this.rowData = this.getDatamanagementData(studyKey);\r\n     });\r\n  }\r\n\r\n  getStudyKey(): number {\r\n    return this.userDataService.getLastVisitedStudyKey();\r\n  }\r\n\r\n  getContext() {\r\n    return {\r\n      componentParent: this\r\n    };\r\n  }\r\n\r\n  setDefaultColumnDef() {\r\n    this.defaultColDef = this.dataManagementGridColumnService.getDefaultColumnDef();\r\n  }\r\n\r\n  setColumnDef() {\r\n    this.columnDefs = this.dataManagementGridColumnService.getColumnDef();\r\n  }\r\n\r\n\r\n  setGridPrefences(): void {\r\n    const self = this;\r\n    if (self.\r\n      columnPreferencesService.getPrefForGridColumns().\r\n      PreferenceGridColumns[PrefGridColumnsKeys.SITE_DATA_MANAGEMENT_GRID] !== '' &&\r\n      self.\r\n      columnPreferencesService.getPrefForGridColumns().\r\n      PreferenceGridColumns[PrefGridColumnsKeys.SITE_DATA_MANAGEMENT_GRID] !== undefined) {\r\n        self.columnApi.setColumnState(self.\r\n          columnPreferencesService.getPrefForGridColumns().PreferenceGridColumns[PrefGridColumnsKeys.SITE_DATA_MANAGEMENT_GRID]);\r\n      }\r\n    self.columnPreferencesService.getGridPreference().subscribe(data => {\r\n      if (data) {\r\n     if (self.\r\n      columnPreferencesService.getPrefForGridColumns().\r\n      PreferenceGridColumns[PrefGridColumnsKeys.SITE_DATA_MANAGEMENT_GRID] !== '' &&\r\n      self.\r\n      columnPreferencesService.getPrefForGridColumns().\r\n      PreferenceGridColumns[PrefGridColumnsKeys.SITE_DATA_MANAGEMENT_GRID] !== undefined) {\r\n        self.columnApi.setColumnState(self.\r\n          columnPreferencesService.getPrefForGridColumns().PreferenceGridColumns[PrefGridColumnsKeys.SITE_DATA_MANAGEMENT_GRID]);\r\n        }\r\n     }\r\n    });\r\n  }\r\n\r\n\r\n  columnVisible(event: ColumnVisibleEvent) {\r\n    if (!event.column) {\r\n      return;\r\n    }\r\n      this.columnPreferencesService.sendUpdateColumnPrefRequest(\r\n       this.gridColumnApi.getColumnState(), PrefGridColumnsKeys.SITE_DATA_MANAGEMENT_GRID);\r\n     sessionStorage.setItem(PrefGridColumnsKeys.SITE_DATA_MANAGEMENT_GRID, this.gridColumnApi.getColumnState()) ;\r\n  }\r\n\r\n\r\n  dragStopped(event: DragStoppedEvent): void {\r\n    this.columnPreferencesService.sendUpdateColumnPrefRequest(\r\n      this.gridColumnApi.getColumnState(), PrefGridColumnsKeys.SITE_DATA_MANAGEMENT_GRID);\r\n  }\r\n\r\n  disableArrowKeys(params): boolean {\r\n    const KEY_LEFT = 37;\r\n    const KEY_UP = 38;\r\n    const KEY_RIGHT = 39;\r\n    const KEY_DOWN = 40;\r\n\r\n    // return true (to suppress) if editing and user hit up/down keys\r\n    const keyCode = params.event.keyCode;\r\n    const gridShouldDoNothing =\r\n      params.editing &&\r\n      (keyCode === KEY_UP ||\r\n        keyCode === KEY_DOWN ||\r\n        keyCode === KEY_LEFT ||\r\n        keyCode === KEY_RIGHT);\r\n\r\n    return gridShouldDoNothing;\r\n  }\r\n\r\n  setGridOptions() {\r\n    this.gridOptions = {\r\n      domLayout: DOMLAYOUT.normal,\r\n      suppressMovableColumns: false,\r\n      suppressNoRowsOverlay: true,\r\n      enableFilter: true,\r\n      enableSorting: true,\r\n      rowSelection: 'single',\r\n      rowMultiSelectWithClick: false,\r\n      singleClickEdit: true,\r\n      suppressContextMenu: true,\r\n      suppressDragLeaveHidesColumns: true,\r\n      suppressRowClickSelection: false,\r\n      excludeChildrenWhenTreeDataFiltering: true,\r\n      getRowClass: (params) => {\r\n        return '';\r\n      },\r\n    };\r\n  }\r\n\r\n  gridReady(params: GridReadyEvent) {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n    this.gridColumnApi = params.columnApi;\r\n    // this.dataManagementService.getDataManagementData(this.getStudyKey()).pipe(takeUntil(this.subscriptions)).subscribe( data => {\r\n    //   console.log('Data Management Details Data : ', data);\r\n    //   this.rowData = data;\r\n    //   this.gridApi.onFilterChanged();\r\n    // });\r\n    this.getDatamanagementData(this.getStudyKey());\r\n    // this.rowData = this.getDatamanagementData(this.getStudyKey());\r\n    this.gridApi.onFilterChanged();\r\n     this.setGridPrefences();\r\n  }\r\n  getDatamanagementData(studyKey: number) {\r\n    // let gridData: any;\r\n    this.dataManagementService.getDataManagementData(this.getStudyKey()).pipe(takeUntil(this.subscriptions)).subscribe( data => {\r\n      console.log('Data Management Details Data : ', data);\r\n      this.rowData = data;\r\n        // return data;\r\n    });\r\n  }\r\n  groupRowAggNodes(nodes) {\r\n    const result = {\r\n      totalCBStarted: 0,\r\n      totalVisitsEntered: 0,\r\n      percentVisitsValue: 0,\r\n      percentVisitsEnteredVsExpected: 0,\r\n      meanDataEntryLag: 0,\r\n      totalOpenQueries: 0,\r\n      percentOpenQueriesValue: 0,\r\n      meanQueriesPerSubject: 0,\r\n      meanQueryResolutionLag: 0,\r\n      totalCBComplete: 0,\r\n      percentCBFrozenVsExpectedValue: 0,\r\n      percentCBFrozenVsStarted: 0,\r\n      actualFSSVCountForRegionForRR: 0,\r\n      actualFSSVCountForWWForRR: 0,\r\n      totalRRForRegion: 0,\r\n      totalRRForWW: 0,\r\n      totalVisitsEnteredLes7Day: 0,\r\n      totalVisitsEntExclUnex: 0,\r\n      totalOpenQueriesMor21Day: 0,\r\n      totalLagDay: 0,\r\n      totalNumPages: 0,\r\n      totalQueries: 0,\r\n      totalSubjQuerying: 0,\r\n      totalDaysToResolve: 0,\r\n      totalRslvdQueries: 0,\r\n      totalCBEntered: 0,\r\n      totalCBFrozen: 0,\r\n      totalCBExpected: 0,\r\n      percentVisitsIndicator: 0,\r\n      percentOpenQueriesIndicator: 0,\r\n      percentCBFrozenVsExpectedIndicator: 0,\r\n      totalVisitsExpected: 0,\r\n\r\n    };\r\n     nodes.forEach((node) => {\r\n     // const resources = (this && this.edColDefService && this.edColDefService.getResourceForMapping()) || { ALL: 'ALL', OF: 'of' };\r\n      let data = null;\r\n      if (node.data) {\r\n        if (node.data.isLeafNode) {\r\n          data = node.data;\r\n        } else {\r\n          data = node.aggData;\r\n        }\r\n        if (data && data.totalCBStarted && typeof data.totalCBStarted === 'number') {\r\n          result.totalCBStarted += data.totalCBStarted;\r\n        }\r\n        if (data && data.totalVisitsEntered && typeof data.totalVisitsEntered === 'number') {\r\n          result.totalVisitsEntered += data.totalVisitsEntered;\r\n        }\r\n        if (data && data.totalCBComplete && typeof data.totalCBComplete === 'number') {\r\n          result.totalCBComplete += data.totalCBComplete;\r\n        } // test\r\n        if (data && data.percentCBFrozenVsExpectedIndicator && typeof data.percentCBFrozenVsExpectedIndicator === 'number') {\r\n          result.percentCBFrozenVsExpectedIndicator += data.percentCBFrozenVsExpectedIndicator;\r\n        }\r\n        if (data && data.percentOpenQueriesIndicator && typeof data.percentOpenQueriesIndicator === 'number') {\r\n          result.percentOpenQueriesIndicator += data.percentOpenQueriesIndicator;\r\n        }\r\n        if (data && data.percentVisitsIndicator && typeof data.percentVisitsIndicator === 'number') {\r\n          result.percentVisitsIndicator += data.percentVisitsIndicator;\r\n        }\r\n        if (data && data.totalCBExpected && typeof data.totalCBExpected === 'number') {\r\n          result.totalCBExpected += data.totalCBExpected;\r\n        }\r\n        if (data && data.totalCBFrozen && typeof data.totalCBFrozen === 'number') {\r\n          result.totalCBFrozen += data.totalCBFrozen;\r\n        }\r\n        if (data && data.totalCBEntered && typeof data.totalCBEntered === 'number') {\r\n          result.totalCBEntered += data.totalCBEntered;\r\n        }\r\n        if (data && data.totalRslvdQueries && typeof data.totalRslvdQueries === 'number') {\r\n          result.totalRslvdQueries += data.totalRslvdQueries;\r\n        }\r\n        if (data && data.totalDaysToResolve && typeof data.totalDaysToResolve === 'number') {\r\n          result.totalDaysToResolve += data.totalDaysToResolve;\r\n        }\r\n        if (data && data.totalSubjQuerying && typeof data.totalSubjQuerying === 'number') {\r\n          result.totalSubjQuerying += data.totalSubjQuerying;\r\n        }\r\n        if (data && data.totalQueries && typeof data.totalQueries === 'number') {\r\n          result.totalQueries += data.totalQueries;\r\n        }\r\n        if (data && data.totalNumPages && typeof data.totalNumPages === 'number') {\r\n          result.totalNumPages += data.totalNumPages;\r\n        }\r\n        if (data && data.totalLagDay && typeof data.totalLagDay === 'number') {\r\n          result.totalLagDay += data.totalLagDay;\r\n        }\r\n        if (data && data.totalOpenQueriesMor21Day && typeof data.totalOpenQueriesMor21Day === 'number') {\r\n          result.totalOpenQueriesMor21Day += data.totalOpenQueriesMor21Day;\r\n        }\r\n        if (data && data.totalVisitsEntExclUnex && typeof data.totalVisitsEntExclUnex === 'number') {\r\n          result.totalVisitsEntExclUnex += data.totalVisitsEntExclUnex;\r\n        }\r\n        if (data && data.totalVisitsEnteredLes7Day && typeof data.totalVisitsEnteredLes7Day === 'number') {\r\n          result.totalVisitsEnteredLes7Day += data.totalVisitsEnteredLes7Day;\r\n        }\r\n        if (data && data.totalVisitsExpected && typeof data.totalVisitsExpected === 'number') {\r\n          result.totalVisitsExpected += data.totalVisitsExpected;\r\n        }\r\n        if (data && data.totalOpenQueries && typeof data.totalOpenQueries === 'number') {\r\n          result.totalOpenQueries += data.totalOpenQueries;\r\n        }\r\n        if (data && data.totalVisitsEnteredLes7Day && typeof data.totalVisitsEnteredLes7Day === 'number') {\r\n          if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY ||\r\n             node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              result.percentVisitsValue =\r\n              (result.totalVisitsEnteredLes7Day / result.totalVisitsEntExclUnex) * 100;\r\n             }\r\n        }\r\n        if (data && data.totalVisitsExpected && typeof data.totalVisitsExpected === 'number') {\r\n          if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY ||\r\n             node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              result.percentVisitsEnteredVsExpected =\r\n              (result.totalVisitsEntered / result.totalVisitsExpected) * 100;\r\n             }\r\n        }\r\n        if (data && data.totalNumPages && typeof data.totalNumPages === 'number') {\r\n          if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY ||\r\n             node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              result.meanDataEntryLag = (result.totalLagDay / result.totalNumPages);\r\n             }\r\n        }\r\n        if (data && data.totalNumPages && typeof data.totalNumPages === 'number') {\r\n          if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY ||\r\n             node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              result.meanDataEntryLag = (result.totalLagDay / result.totalNumPages);\r\n             }\r\n        }\r\n        if (data && data.totalOpenQueries && typeof data.totalOpenQueries === 'number') {\r\n          if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY ||\r\n             node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              result.percentOpenQueriesValue = (result.totalOpenQueriesMor21Day / result.totalOpenQueries) * 100;\r\n             }\r\n        }\r\n        if (data && data.totalSubjQuerying && typeof data.totalSubjQuerying === 'number') {\r\n          if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY ||\r\n             node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              result.meanQueriesPerSubject = (result.totalQueries / result.totalSubjQuerying);\r\n             }\r\n        }\r\n        if (data && data.totalRslvdQueries && typeof data.totalRslvdQueries === 'number') {\r\n          if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY ||\r\n             node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              result.meanQueryResolutionLag = (result.totalDaysToResolve / result.totalRslvdQueries);\r\n             }\r\n        }\r\n        if (data && data.totalCBExpected && typeof data.totalCBExpected === 'number') {\r\n          if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY ||\r\n             node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              result.percentCBFrozenVsExpectedValue =\r\n              (result.totalCBFrozen / result.totalCBExpected) * 100;\r\n             }\r\n        }\r\n        if (data && data.totalCBEntered && typeof data.totalCBEntered === 'number') {\r\n          if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY ||\r\n             node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n              result.percentCBFrozenVsStarted =\r\n              (result.totalCBFrozen / result.totalCBEntered) * 100;\r\n             }\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  // firstDataRendered(event) {\r\n  //   event.api.refreshClientSideRowModel('filter');\r\n  // }\r\n  externalFilterChanged() {\r\n    this.dataManagementService.externalFilterChanged().\r\n    pipe(takeUntil(this.subscriptions))\r\n    .subscribe(data => {\r\n       if (data) {\r\n        this.gridApi.onFilterChanged();\r\n      }\r\n    });\r\n  }\r\n\r\n  isExternalFilterPresent() {\r\n    return true;\r\n  }\r\n\r\n  doesExternalFilterPass = (node) => {\r\n    return this.gridFilterService.filterDataManagmenttDetailGrid(node);\r\n  }\r\n  rowDataChanged(event: RowDataChangedEvent) {\r\n    console.log('gridheight : rowDataChanged');\r\n    this.setCountryGridHeight(event, GROUP_ACTIONS.EXPAND);\r\n  }\r\n  onrowGroupOpened(event: RowGroupOpenedEvent) {\r\n    console.log('gridheight : onrowGroupOpened');\r\n    this.setCountryGridHeight(event, GROUP_ACTIONS.EXPAND);\r\n  }\r\n\r\n  setCountryGridHeight(event, action = GROUP_ACTIONS.EXPAND) {\r\n    const parentDiv = this.dmGrid.nativeElement;\r\n    const gridHeight = this.gridService.setGridHeight(action, event.api, 0);\r\n    this.renderer.setStyle(parentDiv, 'height', gridHeight + 'px');\r\n    event.api.refreshView();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.next();\r\n    this.subscriptions.complete();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CenterSummaryService } from '../center-summary/center-summary.service';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SiteFilterService } from '../sites-filter/sites-filter.service';\r\nimport { DataManagementCenterListService } from './data-management-center-list/data-management-center-list.service';\r\nimport { GEOGRAPHY_LEVEL, SELECT_WORLD_WIDE} from '@app4/app.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataManagementService {\r\n\r\n  constructor(private centerSummaryService: CenterSummaryService,\r\n  private dataManagementCenterListSerVice: DataManagementCenterListService,\r\n  private siteFilterService: SiteFilterService) { }\r\n\r\n    getDataManagementData(studyKey: number): Observable<any> {\r\n      return forkJoin(\r\n        this.centerSummaryService.getCenterSummary(studyKey),\r\n        this.dataManagementCenterListSerVice.getDataManagementCenterList(studyKey)\r\n      ).pipe(\r\n        // catchError(error => of(error)),\r\n        map(response => {\r\n          console.log('response data : ', response);\r\n          const data = this.getRowData(response[0], response[1]);\r\n          return data;\r\n        })\r\n      );\r\n    }\r\n\r\n    getRowData(centerSummaryData: any, dmCenterList: any) {\r\n      const centerSummaryModel = this.convertCenterSummaryModel(centerSummaryData.centerSummary.centerThumbnail);\r\n      return this.getDMCenterListModel(dmCenterList.dMCenterList.dMGeoList.geography,\r\n        centerSummaryModel);\r\n    }\r\n\r\n    getDMCenterListModel(geographies: any[], centerSummaryModel: any) {\r\n      const rowData: any[] = [];\r\n      let currentRegion = null;\r\n      if (!geographies) {\r\n        return;\r\n      }\r\n      for (let index = 0; index < geographies.length; index++) {\r\n        const element = geographies[index];\r\n        if (element.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY) {\r\n          element.regionKey = currentRegion.geographyKey;\r\n          element.regionName = currentRegion.geographyName;\r\n          element.geoHierarchy = [SELECT_WORLD_WIDE, element.regionName, element.geographyName];\r\n          rowData.push(element);\r\n          const centerRowData = this.getCenterDataFromCountry(element, element.centerList.dMCenterThumbnail, centerSummaryModel);\r\n          rowData.push(...centerRowData);\r\n        } else if (element.geographyLevel === GEOGRAPHY_LEVEL.REGION) {\r\n          element.regionName = element.geographyName;\r\n          element.geoHierarchy = [SELECT_WORLD_WIDE, element.geographyName];\r\n          rowData.push(element);\r\n          currentRegion = element;\r\n        } else if (element.geographyLevel === GEOGRAPHY_LEVEL.WORLDWIDE) {\r\n          element.geoHierarchy = [SELECT_WORLD_WIDE];\r\n          rowData.push(element);\r\n        }\r\n      }\r\n      return rowData;\r\n    }\r\n\r\n    convertCenterSummaryModel(centerThumbnail: any[]) {\r\n      const model = {};\r\n      if (!centerThumbnail) {\r\n        return;\r\n      }\r\n      for (let index = 0; index < centerThumbnail.length; index++) {\r\n        const element = centerThumbnail[index];\r\n        model[element.studyCenterKey] = element;\r\n      }\r\n      return model;\r\n    }\r\n\r\n    getCenterDataFromCountry(country: any, centers: any[], centerSummaryModel: any) {\r\n      const rowData = [];\r\n      if (!centers) {\r\n        return;\r\n      }\r\n      for (let index = 0; index < centers.length; index++) {\r\n        const element = centers[index];\r\n        element.geographyLevel = GEOGRAPHY_LEVEL.SITE;\r\n        element.countryName = country.geographyName;\r\n        element.countryKey = country.geographyKey;\r\n        element.regionKey = country.regionKey;\r\n        element.regionName = country.regionName;\r\n        element.isLeafNode = true;\r\n        Object.assign(element, centerSummaryModel[element.key]);\r\n        element.geoHierarchy = [SELECT_WORLD_WIDE, element.regionName, element.countryName, element.name];\r\n        rowData.push(element);\r\n       }\r\n      return rowData;\r\n    }\r\n\r\n    externalFilterChanged(): Observable<Boolean> {\r\n      return this.siteFilterService.filterHasBeenChanged$;\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}