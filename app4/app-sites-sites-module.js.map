{"version":3,"sources":["D:/DecisionView/6.1Country/studyoptimizer/client/nworkspace/client-studyOptimizer-app/environments/environment.prod.ts","./src/app/header/header.component.html","./src/app/shared/components/context-menus/context-menus.component.html","./src/app/shared/components/menu-panel/menu-panel.component.html","./src/app/shared/components/select-box/select-box.component.html","./src/app/sites/sites-filter/sites-filter.component.html","./src/app/sites/sites.component.html","../app1/src/app/app.constant.ts","../app1/src/app/shared/model/menus-option.model.ts","../app1/src/app/shared/services/app-resource.service.ts","./src/app/header/header.component.ts","./src/app/shared/components/context-menus/context-menus.component.ts","./src/app/shared/components/menu-panel/menu-panel.component.scss","./src/app/shared/components/menu-panel/menu-panel.component.ts","./src/app/shared/components/select-box/select-box.component.ts","./src/app/shared/model/site-sub-tab.ts","./src/app/shared/service/app-resource.service.ts","./src/app/shared/service/site-filter-preference.service.ts","./src/app/shared/service/site-resource.service.ts","./src/app/shared/shared.module.ts","./src/app/sites/center-summary/center-summary.service.ts","./src/app/sites/grid-filter.service.ts","./src/app/sites/recruitment-center-list/recruitment-center-list.service.ts","./src/app/sites/sites-filter/sites-filter.component.ts","./src/app/sites/sites-filter/sites-filter.service.ts","./src/app/sites/sites-routing.module.ts","./src/app/sites/sites.component.scss","./src/app/sites/sites.component.ts","./src/app/sites/sites.module.ts","./src/app/sites/sites.service.ts"],"names":[],"mappings":"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","file":"app-sites-sites-module.js","sourcesContent":["import { CryptoJSEncryption } from 'common-library';\r\n\r\n// const mainUrl = 'http://10.44.29.23:8089'; // Shrikesh\r\n// const mainUrl = 'http://10.44.75.5:7070'; // Vipin\r\n// const mainUrl = '${ZUUL_SERVER_IP}';\r\n// const mainUrl = 'http://10.44.234.27:8090';\r\n// const mainUrl = 'http://10.44.74.20:8090';\r\nconst mainUrl = window.location.protocol + '//' +\r\n  window.location.hostname + ':' +\r\n  window.location.port;\r\n\r\nexport const environment = {\r\n  production: true,\r\n  clientEncryptionKey: 'TEST1234',\r\n  cacheAge: 30000,\r\n  app_url: window.location.protocol + '//' +\r\n    window.location.hostname + ':' +\r\n    window.location.port + '/app1/index.html',\r\n  login_url: window.location.protocol + '//' +\r\n    window.location.hostname + ':' +\r\n    window.location.port + '/dv/StudyOptimizer/so-main.html',\r\n  cryptoJS: new CryptoJSEncryption(),\r\n\r\n  authUrl: `${mainUrl}/api/`,\r\n  soApiUrl: `${mainUrl}/studyoptimizer/api/`,\r\n  toSuppressContextMenu: false\r\n};\r\n","export default \"<div *ngIf=\\\"isDataAvailable\\\" class=\\\"plans-fixed-header-container\\\">\\r\\n  <ctos-so-header [userProfile]=\\\"userProfile\\\" [mainHeaderItems]=\\\"mainHeaderItems\\\" [appInfoUrl]=\\\"appInfoUrl\\\"\\r\\n    [logoUrl]=\\\"logoUrl\\\" [subHeaderItems]=\\\"subHeaderItems\\\" [alertConfirmUrl]=\\\"alertConfirmUrl\\\"\\r\\n    [studyRefreshDate]=\\\"studyRefreshDate\\\" [studyRefreshDateLabel]=\\\"studyRefreshDateLabel\\\"\\r\\n    [studyListInput]=\\\"studyListInput\\\" (itemSelect)=\\\"studySelected($event)\\\" [aboutResource]=\\\"aboutResource\\\"\\r\\n    [passwordResource]=\\\"passwordResource\\\" [searchListFormGroupName]=\\\"searchListFormGroupName\\\">\\r\\n  </ctos-so-header>\\r\\n</div>\\r\\n<ng-template #studyListOptionTemplate let-item>\\r\\n  <img src=\\\"assets/images/preScreening.png\\\" *ngIf=\\\"item.prescreenInd\\\" />\\r\\n  <span [matTooltip]=\\\"item.id\\\" [matTooltipClass]=\\\"'ctos-tooltip'\\\">&nbsp;{{item.id}}</span>\\r\\n</ng-template>\\r\\n\"","export default \"<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n  <mat-icon>more_vert</mat-icon>\\r\\n</button>\\r\\n<mat-menu #menu=\\\"matMenu\\\" class=\\\"context-menu\\\">\\r\\n  <button mat-menu-item (click)=\\\"menuClicked(item)\\\" class=\\\"mat-button-action\\\" *ngFor=\\\"let item of options\\\">\\r\\n    {{item.text}}\\r\\n  </button>\\r\\n</mat-menu>\"","export default \"<mat-menu #menu   >\\r\\n    <ng-container *ngFor=\\\"let item of items\\\">\\r\\n      <button *ngIf=\\\"!item.children; else branch\\\" (click)=\\\"menuClicked(item)\\\" mat-menu-item>{{item.viewValue}}</button>\\r\\n      <ng-template #branch>\\r\\n        <button  (click)=\\\"menuClicked(item)\\\" mat-menu-item [matMenuTriggerFor]=\\\"innerPanel.menu\\\">{{item.viewValue}}</button>\\r\\n        <ctos-menu-panel (emitMenuClick)=\\\"menuClicked($event)\\\" #innerPanel [items]=\\\"item.children\\\"></ctos-menu-panel>\\r\\n      </ng-template>\\r\\n    </ng-container>\\r\\n</mat-menu>\"","export default \"\\r\\n<mat-form-field class=\\\"over-threshold-cohort-dropdown\\\">\\r\\n    <mat-select [disabled]=\\\"selectBoxOptions && selectBoxOptions.length < 2\\\" panelClass=\\\"filter-dropdown-panel ctos-cohort-list-panel\\\" disableOptionCentering [matTooltip]=\\\"getToolTipData()\\\" [(value)]=\\\"selectedOption\\\" (selectionChange)=\\\"selectionChanged($event)\\\">\\r\\n        <mat-option [matTooltip]=\\\"option.viewValue\\\"  *ngFor=\\\"let option of selectBoxOptions\\\" [value]=\\\"option.value\\\">\\r\\n            <span [innerHTML]=\\\"option.viewValue\\\"></span>\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\\r\\n\"","export default \"<div class=\\\"d-flex filter-bar\\\">\\r\\n    <div class=\\\"geography-select  select-dropdown\\\">\\r\\n        <span>{{filterBar?.resources?.geography}}:</span>\\r\\n        <ctos-so-worldwide-dropdown [geoFilters]=\\\"filterBar?.geography\\\" [selectedOption]=\\\"defaultSelectedGeography\\\" (optionClick)=\\\"OnGeographyChange($event)\\\">\\r\\n        </ctos-so-worldwide-dropdown>    \\r\\n    </div>\\r\\n    <div class=\\\"cohort-select select-dropdown\\\" *ngIf=\\\"(isCohortStudy && !hideRandomizationFilter)\\\">\\r\\n        <span>{{filterBar?.resources?.cohort}}:</span> \\r\\n        <ctos-so-multi-level-dropdown [selectedOption]=\\\"defaultSelectedCohort\\\"  (emitMenuClick)=\\\"OnCohortChange($event)\\\" [multiOptionGroups]=\\\"filterBar.cohort\\\"></ctos-so-multi-level-dropdown>\\r\\n    </div> \\r\\n    <div class=\\\"monitor-select select-dropdown\\\">\\r\\n        <span>{{filterBar?.resources?.monitor}}:</span>\\r\\n        <ctos-select-box [selectedOption]=\\\"defaultSelectedMonitor\\\"  (emitMenuClick)=\\\"OnMonitorChange($event)\\\" [selectBoxOptions]=\\\"filterBar.monitor\\\"></ctos-select-box>\\r\\n    </div>\\r\\n    <div class=\\\"randomization-select select-dropdown\\\" *ngIf=\\\"!hideRandomizationFilter\\\">\\r\\n        <span>{{filterBar?.resources?.randomization}}:</span>\\r\\n        <ctos-select-box [selectedOption]=\\\"defaultSelectedRandomization\\\"  (emitMenuClick)=\\\"OnRandomizationChange($event)\\\" [selectBoxOptions]=\\\"filterBar.randomization\\\"></ctos-select-box>\\r\\n    </div>\\r\\n</div>\"","export default \"<ctos-header (studyChanged)=\\\"onStudyChanged($event)\\\"></ctos-header>\\r\\n<div class=\\\"site-sub-tabs \\\">\\r\\n  <div class=\\\"fixed-site-sub-tabs-header\\\">\\r\\n    <div class=\\\"site-sub-tabs-row\\\">\\r\\n      \\r\\n        <div class=\\\"site-sub-tabs-header\\\">\\r\\n          <div class=\\\"ctos-tab-container d-flex justify-content-start top-padding\\\">\\r\\n            <ctos-tab [items]=\\\"siteSubTab.tabItems\\\"  [selectedTabItem]=\\\"selectedItem\\\"\\r\\n              (tabClicked)=\\\"onTabClicked($event)\\\" class=\\\"ctos-tab\\\">\\r\\n            </ctos-tab>\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <ctos-sites-filter [hideRandomizationFilter]=\\\"hideRandomizationFilter\\\" [isCohortStudy]='isCohortStudy' ></ctos-sites-filter>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n    \\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"site-sub-tabs-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { PlanAction } from './shared/model/plan/plan-action';\r\n\r\n// NUMBERS\r\nexport const NUMBERS = {\r\n  ZERO: 0,\r\n  ONE: 1,\r\n  FIFTY: 50,\r\n  HUNDRED: 100,\r\n  THREE_HUNDRED: 300\r\n};\r\n\r\nexport const LOGIN_PARAMS = {\r\n  commandName: 'GetTerms',\r\n  categoriesTerms: {\r\n    category: 'terms'\r\n  },\r\n  categories: {\r\n    category: 'login'\r\n  }\r\n};\r\nexport const ERROR_PARAMS = {\r\n  commandName: 'GetTerms',\r\n  categoriesTerms: {\r\n    category: 'terms'\r\n  },\r\n  categoriesError: {\r\n    category: 'error'\r\n  }\r\n};\r\n\r\nexport const USER_PARAMS = {\r\n  commandName: 'getUserData',\r\n  app: {\r\n    appType: 'SOMAIN'\r\n  }\r\n};\r\n\r\nexport const MANAGE_COUNTRIES_PCE_HEADER_COL = {\r\n  COUNTRY_LOCKED: 'Country Locked',\r\n  RA_APPLIED: 'RA Applied',\r\n  NOTE_APPLIED: 'Notes Applied'\r\n};\r\n\r\nexport const HEADER_ITEMS = [\r\n  {\r\n    name: 'Study List',\r\n    url: '/studylist',\r\n    moduleName: 'MODULE_STUYD_LIST'\r\n  },\r\n  {\r\n    name: 'Runway',\r\n    url: '/runway',\r\n    moduleName: 'MODULE_RUNWAY'\r\n  },\r\n  {\r\n    name: 'Analysis & Templates',\r\n    url: '/ant',\r\n    moduleName: 'MODULE_HISTORICAL'\r\n  }\r\n];\r\n\r\nexport const EB_HEADER_ITEM = {\r\n  name: 'Enrollment Benchmarks',\r\n  url: '/eb',\r\n  moduleName: 'MODULE_ENROLLMENT'\r\n};\r\n\r\nexport const LOGO = {\r\n  name: ''\r\n};\r\n\r\nexport const PROFILE_ITEMS = [\r\n  //     {\r\n  //     name: 'Home',\r\n  //     url: '/home',\r\n  //     moduleName: 'MODULE_HOME'\r\n  // },\r\n  {\r\n    name: 'Help',\r\n    url: '/help'\r\n  },\r\n  {\r\n    name: 'Password',\r\n    url: '/password'\r\n  },\r\n  {\r\n    name: 'About',\r\n    url: '/about'\r\n  },\r\n  {\r\n    name: 'Logout',\r\n    url: '/logout'\r\n  }\r\n];\r\n\r\nexport const SUB_HEADER_ITEMS = [\r\n  {\r\n    name: 'Study',\r\n    url: '/study',\r\n    moduleName: 'MODULE_STUDY'\r\n  },\r\n  {\r\n    name: 'Countries',\r\n    url: '/countries',\r\n    moduleName: 'MODULE_COUNTRY'\r\n  },\r\n  {\r\n    name: 'Sites',\r\n    url: '/sites',\r\n    moduleName: 'MODULE_SITES'\r\n  },\r\n  {\r\n    name: 'Plans',\r\n    url: '/plan',\r\n    moduleName: 'MODULE_PLANNING'\r\n  },\r\n  {\r\n    name: 'Plans',\r\n    url: '/newPlans'\r\n  }\r\n];\r\n\r\nexport const NA_TOOLTIP = 'Previously approved plans and their adjustments do not contain projections';\r\n\r\nexport const GSK_LOGO_URL = 'assets/images/';\r\nexport const ALERT_CONFIRM_URL = 'assets/images/alertConfirm.png';\r\nexport const ALERT = 'Alert';\r\nexport const HELP_URL = 'assets/images/help.gif';\r\nexport const PLAN_ACTION_LABELS = {\r\n  EDIT_PLAN: 'Edit Plan',\r\n  DUPLICATE_PLAN: 'Duplicate Plan',\r\n  APPROVE_PLAN: 'Approve Plan',\r\n  DELETE_PLAN: 'Delete Plan',\r\n  CREATE_ADJUSTMENT: 'Create Adjustment',\r\n  CREATE_TEMPLATE: 'Create Template',\r\n  UPDATE_COST: 'Update Cost',\r\n  PRINT_COPY_EXPORT: 'Print-Copy-Export'\r\n};\r\n\r\nexport const APPROVE = 'Approve';\r\nexport const EDIT = 'Edit';\r\nexport const VIEW = 'View';\r\nexport const HASuperUser = 'HASuperUser';\r\n\r\nexport const ALL_PLAN_ACTIONS: Array<PlanAction> = [\r\n  {\r\n    name: PLAN_ACTION_LABELS.EDIT_PLAN,\r\n    isVisible: true,\r\n    isEnabled: true\r\n  },\r\n  {\r\n    name: PLAN_ACTION_LABELS.DUPLICATE_PLAN,\r\n    isVisible: true,\r\n    isEnabled: true\r\n  },\r\n  {\r\n    name: PLAN_ACTION_LABELS.CREATE_ADJUSTMENT,\r\n    isVisible: true,\r\n    isEnabled: true\r\n  },\r\n  {\r\n    name: PLAN_ACTION_LABELS.CREATE_TEMPLATE,\r\n    isVisible: true,\r\n    isEnabled: true\r\n  },\r\n  {\r\n    name: PLAN_ACTION_LABELS.UPDATE_COST,\r\n    isVisible: true,\r\n    isEnabled: true\r\n  },\r\n  {\r\n    name: PLAN_ACTION_LABELS.DELETE_PLAN,\r\n    isVisible: true,\r\n    isEnabled: true\r\n  },\r\n  {\r\n    name: PLAN_ACTION_LABELS.APPROVE_PLAN,\r\n    isVisible: true,\r\n    isEnabled: true\r\n  }\r\n];\r\n\r\nexport const COMMAND = {\r\n  PLANLIST: 'GetPlanList',\r\n  STUDYSUMMARY: 'GetStudySummary',\r\n  SOURCESUMMARY: 'GetSourceSummary',\r\n  DELTEPLAN: 'deleteStudyPlan',\r\n  DELETEALLPLAN: 'deleteAllStudyPlans',\r\n  SOURCECOHORTLIST: 'getSourceCohortList',\r\n  ALLCOHORTLIST: 'getAllCohortList',\r\n  COPYPLAN: 'copyStudyPlan',\r\n  CREATE_PLAN_TEMPLATE: 'createPlanTemplate',\r\n  GET_TEMPLATE_LIST: 'getTemplateList',\r\n  UPDATE_COST: 'updatePlanCostValues',\r\n  GET_BRIEF_PLAN_LIST: 'GetBriefPlanList',\r\n  GET_PLAN_DETAILS: 'getPlanDetails',\r\n  GET_FILTER_COUNTRY_DATA: 'GetFilterCountryData',\r\n  CREATESTUDYPLAN: 'createStudyPlan',\r\n  UPDATESTUDYPLAN: 'updateStudyPlan',\r\n  CREATE_ADJUSTMENT_PLAN: 'createAdjustStudyPlan',\r\n  UPDATE_ADJUSTMENT_PLAN: 'updateAdjustStudyPlan',\r\n  GETSTUDYSOURCEDETAILS: 'getStudySourceDetails',\r\n  GET_CURVE: 'GetAllCurves',\r\n  GET_INTERIM_ANALYSIS_LIST: 'getInterimAnalysisList',\r\n  SAVECOHORTS: 'saveCohorts',\r\n  UPDATECOUNTRYLOCK: 'updateCountryLock',\r\n  UPDATEADJUSTCOUNTRYLOCKED: 'updateAdjustCountryLock',\r\n  DELETEADJUSTCOUNTRYLOCKED: 'deleteAdjustCountryPlan',\r\n  DELETEBASECOUNTRYLOCKED: 'deleteCountryPlan',\r\n  UPDATE_COUNTRY_PLAN: 'updateCountryPlan',\r\n  UPDATE_ADJ_COUNTRY_PLAN: 'updateAdjustCountryPlan',\r\n  UPDATE_COUNTRY_RATEADJUSTMENTS: 'updateCountryRateAdjustments',\r\n  UPDATE_ADJ_COUNTRY_RATEADJUSTMENTS: 'updateAdjustCountryPlanRateAdj',\r\n  ADD_COUNTRY: 'addCountry',\r\n  ADD_ADJUST_COUNTRY_PLAN: 'addAdjustCountryPlan',\r\n  UPDATE_COUNTRY_PLAN_NOTES: 'updateCountryPlanNotes',\r\n  UPDATE_ADJUST_COUNTRY_PLAN_NOTES: 'updateAdjustCountryPlanNotes',\r\n  SAVE_PLAN_DESIGN: 'savePlanDesign',\r\n  GET_PLAN_DESIGN: 'getPlanDesign',\r\n  GET_MILESTONES: 'getAllMileStones',\r\n  CALC_DYNAMIC_PROJECTIONS: 'CalcDynamicProjsMilestones',\r\n  READ_DYNAMIC_PROJECTIONS: 'ReadDynPlanProjValues',\r\n  EVALUATE_MULTI_COUNTRY_PLAN: 'evaluateMultiCountryPlans',\r\n  EVALUATE_ADJUST_MULTI_COUNTRY_PLAN: 'evaluateAdjustMultiCountryPlans',\r\n  GET_COHORT_DETAILS: 'getCohortsDetails',\r\n  EVALUATE_ADJUST_COUNTRY_PLAN: 'evaluateAdjustCountryPlan',\r\n  EVALUATE_COUNTRY_PLAN: 'evaluateCountryPlan',\r\n  EVALUATE_COUNTRTY_PLAN: 'evaluateCountryPlan',\r\n  COPY_COUNTRY_PLAN: 'copyCountryPlan',\r\n  COPY_ADJUST_COUNTRY_PLAN: 'copyAdjustCountryPlan',\r\n  UPLOAD_PLAN: 'uploadPlan',\r\n  GET_STUDY_DETAILS: 'getStudyDetails'\r\n};\r\n\r\nexport const STUDYSUMMARY_TARGET = 'target';\r\nexport const STUDYSUMMARY_SOURCE = 'source';\r\nexport const STUDYSUMMARY_PLANNED = 'planned';\r\nexport const STUDYSUMMARY_ACTUALS = 'actual';\r\nexport const UNIQUECOHORT = 1;\r\nexport const NOCOHORT = 0;\r\nexport const UNIQUE = 1;\r\nexport const WEEKS = `Weeks`;\r\nexport const DAYS = `Days`;\r\nexport const NOVALUE = ` `;\r\nexport const DASH = '-'; // Use this instead of NOVALUE\r\nexport const SPACE = ' ';\r\nexport const EMPTY = '';\r\nexport const UNMAPPED = 'Unmapped';\r\nexport const REPORTINGPERIOD = {\r\n  WEEK: { NAME: 'WEEK', VAL: 7, LABEL: 'Weekly' },\r\n  MONTH: { NAME: 'MONTH', VAL: 30, LABEL: 'Monthly' },\r\n  DAY: { NAME: 'DAY', VAL: 1, LABEL: 'Daily' },\r\n  QUARTER: { NAME: 'QUARTER', VAL: 90, LABEL: 'Quarterly' }\r\n};\r\nexport const NOPLAN = 'NOPLAN';\r\n\r\n// Plan-card component constants\r\nexport const PLAN_CARD_LABELS = {\r\n  RANDOMIZATION_RATE: 'RR',\r\n  SCREEN_FAILURE: 'SF',\r\n  TARGET_RANDOMIZATION: 'TR',\r\n  PLANNED_RANDOMIZATION: 'PR',\r\n  PLANNED_CYCLE: 'Planned cycle'\r\n};\r\n\r\nexport const SOLVE_FOR = {\r\n  MINIMUM_MONTHLY_SCREEN_RATE: 'Minimum Screening Rate',\r\n  NUMBER_OF_SUBJECTS: 'Optimum Randomization Target',\r\n  LAST_SUBJECT_RANDOMIZED_DATE: 'Last Subject Randomized Date'\r\n};\r\n\r\nexport const ErrorMsg = {\r\n  SOLVERERORFIRST: 'StudyOptimizer cannot calculate the minimum rate based on the parameters entered in the country ',\r\n  SOLVERERORSECOND: ' plan. Consider making changes in the plan, such as increasing the number of sites or decreasing the Screen Failure %.'\r\n};\r\n\r\nexport const CountryFieldValidationMsg = {\r\n  VALIDATIONMSG: 'Correct the following parameters and then save the plan: ',\r\n};\r\n\r\n// All app-enrollment component constants will go here\r\nexport const MODULE_ENROLLMENT = {\r\n  LABEL: {\r\n    ACTUAL_VALUE: PLAN_CARD_LABELS.TARGET_RANDOMIZATION,\r\n    EXPECTED_VALUE: PLAN_CARD_LABELS.PLANNED_RANDOMIZATION\r\n  },\r\n  TOOLTIP_LABELS: {\r\n    TR: 'Target Randomization',\r\n    PR: 'Planner Randomization'\r\n  },\r\n  LINEAR_GRADIENT_ID: 'linearGradient',\r\n  ZERO: NUMBERS.ZERO,\r\n  HUNDRED: NUMBERS.HUNDRED,\r\n  VIEWBOX: '0 -2 44 125',\r\n  X1: 0.5,\r\n  X2: 0.5,\r\n  Y1: 1,\r\n  Y2: 0,\r\n  PATH: {\r\n    D:\r\n      'M17 117.9' +\r\n      'C8.4 114.1 5.2 104.1 10 96' +\r\n      'L12.1 92.4 9.6 90' +\r\n      // tslint:disable-next-line:max-line-length\r\n      'C8.2 88.7 6.3 86.3 5.5 84.7 4 81.7 0 58.3 0 52.3 0 49.1 3.3 44.7 5.7 44.7 8.1 44.7 8.8 41.4 9.8 25.1 10.4 15.7 11.4 6.8 12.1 5.4 14.8-0.5 24.9-1.8 29.9 3.1 32.1 5.3 32.4 6.8 33.2 16.9 35.3 43.4 35.2 43 38.3 44.5 39.8 45.2 41.8 46.9 42.7 48.3 44.2 50.6 44.2 51.7 42.6 63.5 40.1 81.1 39.2 84.5 35.3 88.8' +\r\n      'L31.9 92.5 34 96.4C37.8 103.5 35.7 112 29.1 116.4 25.8 118.7 20.2 119.3 17 117.9Z'\r\n  }\r\n};\r\n\r\nexport const PLAN_STATUS = {\r\n  VALID: 'VALID',\r\n  INVALID: 'INVALID',\r\n  APPROVED: 'APPROVED',\r\n  PREVIOUS_APPROVED: 'PREVAPPROVED'\r\n};\r\n\r\nexport const ICONS = {\r\n  MATERIAL: {\r\n    CHEVRON_UP: 'expand_less',\r\n    CHEVRON_DOWN: 'expand_more'\r\n  }\r\n};\r\n\r\nexport const IMAGES = {\r\n  STATUS: {\r\n    ADJUSTMENT: {\r\n      VALID: 'assets/images/manageplans/status-adjustment-valid.png',\r\n      INVALID: 'assets/images/manageplans/status-adjustment-invalid.png',\r\n      PREVIOUSLY_APPROVED:\r\n        'assets/images/manageplans/status-adjustment-previously-approved.png'\r\n    },\r\n    VALID: 'assets/images/manageplans/status-valid.png',\r\n    INVALID: 'assets/images/manageplans/status-invalid.png',\r\n    APPROVED: 'assets/images/manageplans/status-approved.png',\r\n    PREVIOUSLY_APPROVED:\r\n      'assets/images/manageplans/status-previously-approved.png'\r\n  },\r\n  ICON_ARROW_BACK: 'assets/images/icon-arrow-back.png',\r\n  ICON_REFRESH: 'assets/images/icon-refresh.png',\r\n  ICON_REVERT: 'assets/images/icon-revert.png',\r\n  COHORT_IMG: 'assets/images/manageplans/icon-cohorts.png',\r\n  COHORT_IMG_BLUE: 'assets/images/manageplans/cohort-icon-blue.png',\r\n  COUNTRY_IMG: 'assets/images/manageplans/icon-country.png',\r\n  SITES_IMG: 'assets/images/manageplans/icon-sites.png',\r\n  ICON_ARROW_LEFT: 'assets/images/icon-arrow-left.png',\r\n  ICON_ARROW: 'assets/images/icon-arrow.png',\r\n  ICON_REFRESH_DISABLED: 'assets/images/refresh-disabled.png',\r\n  ICON_ERROR_MESSAGES: 'assets/images/error-messages.png'\r\n};\r\n\r\nexport const INVALID_SITES_DIALOG = {\r\n  WIDTH: '350px',\r\n  PANEL_OK_CLASS: 'confirmation-ok-dialog'\r\n};\r\n\r\nexport const DIALOG_CONFIG = {\r\n  DELETE_ALL_PLANS: {\r\n    WIDTH: '310px',\r\n    HEIGHT: '180px',\r\n    PANEL_CLASS: 'delete-all-confirmation-dialog'\r\n  },\r\n  DELETE_PLAN: {\r\n    WIDTH: '310px',\r\n    HEIGHT: '180px',\r\n    PANEL_CLASS: 'delete-plan-confirmation-dialog'\r\n  },\r\n  CREATE_TEMPLATE: {\r\n    WIDTH: '450px',\r\n    PANEL_CLASS: 'create-template-dialog'\r\n  },\r\n  COUNTRY_LOG: {\r\n    WIDTH: '620px',\r\n    PANEL_CLASS: 'country-log-dialog'\r\n  },\r\n  COUNTRY_NOTES: {\r\n    WIDTH: '600px',\r\n    PANEL_CLASS: 'country-notes-dialog'\r\n  },\r\n  CONFIRM_UNSAVED_DATA: {\r\n    WIDTH: '310px',\r\n    HEIGHT: '190',\r\n    PANEL_CLASS: 'unsaved-data-confirmation-dialog'\r\n  },\r\n  CONFIRM_DIALOG: {\r\n    WIDTH: '336px',\r\n    HEIGHT: '200px',\r\n    MAXHEIGHT: '235px',\r\n    PANEL_CLASS: 'confirmation-dialog',\r\n    PANEL_OK_CLASS: 'confirmation-ok-dialog',\r\n    ID: 'confirmation-dialog'\r\n  },\r\n  CONFIRM_DIALOG_OVERRIDE: {\r\n    WIDTH: '336px',\r\n    HEIGHT: '240px',\r\n    PANEL_CLASS: 'confirmation-dialog',\r\n    ID: 'confirmation-dialog-override'\r\n  },\r\n  PLAN_OUTDATED: {\r\n    WIDTH: '350px',\r\n    HEIGHT: '200px',\r\n    PANEL_CLASS: 'plan-outdated-dialog'\r\n  },\r\n  CONFIRM_DIALOG_IH: {\r\n    WIDTH: '350px',\r\n    HEIGHT: '220px',\r\n    PANEL_CLASS: 'plan-outdated-dialog'\r\n  },\r\n  ENROLLMENT_PAUSE: {\r\n    WIDTH: '400px',\r\n    PANEL_CLASS: 'ep-dialog'\r\n  },\r\n  EP_WARNING: {\r\n    WIDTH: '300px',\r\n    HEIGHT: '180px',\r\n    PANEL_CLASS: 'plan-outdated-dialog'\r\n  },\r\n  MANAGE_COHORT: {\r\n    WIDTH: '336px',\r\n    HEIGHT: '200px',\r\n    PANEL_CLASS: 'manage-plan-dialog'\r\n  },\r\n  SELECT_COHORT: {\r\n    WIDTH: '700px',\r\n    HEIGHT: '450px',\r\n    PANEL_CLASS: 'select-plan-dialog'\r\n  },\r\n  PASTE_DATES: {\r\n    WIDTH: '450px',\r\n    PANEL_CLASS: 'paste-dates-dialog',\r\n    ID: 'paste-dates'\r\n  },\r\n  MAP_COHORTS: {\r\n    WIDTH: '450px',\r\n    PANEL_CLASS: 'map-cohorts-dialog',\r\n    ID: 'map-cohorts'\r\n  },\r\n  CONFIRM_SI_METHOD_CHANGE: {\r\n    WIDTH: '450px',\r\n    PANEL_CLASS: 'confirm-simc-dialog',\r\n    ID: 'confirm-simc'\r\n  },\r\n  COUNTRY_OPTIONS_DIALOG: {\r\n    PANEL_CLASS: 'confirmation-dialog-with-scroll',\r\n  },\r\n  DELETE_COHORT_DIALOG: {\r\n    WIDTH: '700px',\r\n    PANEL_CLASS: 'delete-cohort-panel-class',\r\n    ID: 'deleteCohortDialog'\r\n  },\r\n  SOLVERS_VALIDATION_WARNING: {\r\n    WIDTH: '300px',\r\n    PANEL_CLASS: 'solvers-warning',\r\n    ID: 'solversvalidationwarning'\r\n  },\r\n  IMPORT_COUNTRIES: {\r\n    WIDTH: '90%',\r\n    HEIGHT: '80%',\r\n    PANEL_CLASS: 'import-countries-dialog',\r\n    ID: 'import-countries-dialog',\r\n    AG_GRID_CONFIG: {\r\n      ROW_HEIGHT: 36,\r\n      COUNTRY_COL_WIDTH: 250,\r\n      NUMBER_COL_WIDTH: 75,\r\n      DATE_COL_WIDTH: 120,\r\n      DEFAULT_ROW_COUNT: 100,\r\n      NUMBER_RANGE: {\r\n        MIN: 0,\r\n        MAX: 150000\r\n      }\r\n    }\r\n  },\r\n  COPY_COUNTRY_DIALOG: {\r\n    WIDTH: '500px',\r\n    HEIGHT: '212px',\r\n    MIN_HEIGHT: '212px'\r\n  },\r\n  BULK_EDIT_DIALOG: {\r\n    WIDTH: '500px',\r\n    HEIGHT: '400px',\r\n    PANEL_CLASS: 'bulk-edit-dialog'\r\n  },\r\n  BULK_EDIT_WARNING_DIALOG: {\r\n    WIDTH: '500px',\r\n    HEIGHT: '200px',\r\n    MIN_HEIGHT: '200px'\r\n  },\r\n  CUSTOM_SIV: {\r\n    WIDTH: '765px',\r\n    PANEL_CLASS: 'custom-siv-dialog'\r\n  },\r\n  NO_TLSR: {\r\n    WIDTH: '350px',\r\n    HEIGHT: '200px',\r\n    PANEL_CLASS: 'no-tlsr-dialog'\r\n  },\r\n  CYCLE_TIME_ERROR: {\r\n    WIDTH: '350px',\r\n    HEIGHT: '200px',\r\n    PANEL_CLASS: 'cycle-time-error-dialog',\r\n    ID: 'cycle-time-error-dialog'\r\n  }\r\n};\r\n\r\nexport const APP_DATE_FORMATS = {\r\n  parse: {\r\n    dateInput: [\r\n      'MM-DD-YYYY',\r\n      'MM/DD/YYYY',\r\n      'YYYY-MM-DD',\r\n      'YYYY/MM/DD',\r\n      'DD-MMM-YYYY',\r\n      'DD/MMM/YYYY',\r\n      'DDMMMYYYY',\r\n      'YYYY-MMM-DD',\r\n      'YYYY/MMM/DD',\r\n      'MMM-DD-YYYY',\r\n      'MMM/DD/YYYY'\r\n    ]\r\n  },\r\n  display: {\r\n    dateInput: 'input',\r\n    monthYearLabel: { year: 'numeric', month: 'medium' },\r\n    dateA11yLabel: { year: 'numeric', month: 'medium', day: 'numeric' },\r\n    monthYearA11yLabel: { year: 'numeric', month: 'medium' },\r\n  }\r\n};\r\n\r\nexport const DATE_FORMAT = {\r\n  NOTE_API_DATE_FORMAT: 'MMM-DD-YYYY HH:MM:SS',\r\n  NOTE_API_DATE_FORMAT_SMALL: 'MMM-DD-YYYY HH:mm:ss',\r\n  SERVER_DATE_FORMAT: 'YYYY-MM-DD',\r\n  MONTH_DATE_FORMAT: 'DD-MMM-YYYY'\r\n};\r\n\r\nexport const DIALOG_ACIONS = {\r\n  OK: 'OK',\r\n  CANCEL: 'CANCEL',\r\n  CONTINUE: 'CONTINUE',\r\n  APPLY: 'APPLY'\r\n};\r\n\r\nexport const MIN_MAX_RANGE = {\r\n  MIN: 0,\r\n  MIN_V1: 1,\r\n  MAX: 150000,\r\n  MAX_CHAR: 255,\r\n  MAX_V1: 1000,\r\n  EP_NAME_MAX: 30\r\n};\r\n\r\nexport const LOCALE_FORMAT = 'en-US';\r\n\r\nexport const PAGE_IDS = {\r\n  PLANS: '/plans',\r\n  PLANDETAILS: 'plandetails',\r\n  PLAN_PROPERTY: 'plan-properties',\r\n  COUNTRIES: 'countries',\r\n  RATE_ADJUSTMENT: 'rate-adjustments',\r\n  REPORTS: 'reports',\r\n  INVALID: 'invalid',\r\n  PLAN_DESIGN: 'plan-design'\r\n};\r\n\r\nexport const INDICATOR = {\r\n  INSERT: 'I',\r\n  UPDATE: 'U',\r\n  DELETE: 'D'\r\n};\r\n\r\nexport const PLANNINGFORM = {\r\n  FPA: 'FPA',\r\n  FSI: 'FSI',\r\n  LSS: 'LSS',\r\n  LSR: 'LSR',\r\n  CYCLETIME: 'cycleTime',\r\n  SCREENINGPERIOD: 'screeningPeriod',\r\n  NAME: 'name',\r\n  DESCRIPTION: 'description',\r\n  PLANTYPEKEY: 'planTypeKey',\r\n  FPATOFSI: 'FPAtoFSI',\r\n  NEWFSI: 'newFSI',\r\n  FPATOCHK: 'FPAtoChk',\r\n  NEWTFSICHK: 'newTFSIChk',\r\n  ENROLLEMENTTARGET: 'enrollmentTarget',\r\n  SITES: 'sites'\r\n};\r\nexport const ZERO = 0;\r\nexport const Day = 'd';\r\nexport const Week = 'w';\r\nexport const Id = 'id';\r\nexport const ERROR = 'error';\r\nexport const ERROR_CAPS = 'Error';\r\nexport const ERRORSUFFIX_A = 'EA';\r\nexport const ERRORSUFFIX = 'E';\r\nexport const MESSAGETYPE_POSITIVE = 'positive';\r\nexport const MESSAGETYPE_NEGATIVE = 'negative';\r\nexport const SNACKBAR_POSITIVE = 'positive-snackbar';\r\nexport const SNACKBAR_NEGATIVE = 'error-snackbar';\r\nexport const ICON_POSITIVE = 'assets/images/manageplans/icon-positive.png';\r\nexport const ICON_NEGATIVE = 'assets/images/manageplans/icon-error.png';\r\nexport const REPLACE_POSITION = '{0}';\r\nexport const PLANKEY = 'plankey';\r\nexport const ADJUSTMENT = '- Adjustment';\r\nexport const PLANS = 'PLANS';\r\nexport const NEWPLANSTAB = 'NEWPLANTAB';\r\nexport const PLANPROPERTYPAGE = 'PLANPROP';\r\nexport const COUNTRY_DETAILS_PAGE = 'NCTRYDTL';\r\nexport const CTOS_TOOLTIP = 'ctos-tooltip';\r\nexport const WARN_CTOS_TOOLTIP = 'warn ctos-tooltip';\r\nexport const MNGCNTRY = 'MNGCNTRY';\r\nexport const DFNCNTPLN = 'DFNCNTPLN';\r\nexport const DFNSOLVE = 'DFNSOLVE';\r\n\r\nexport const ALGORITHM_SITE_COMP = {\r\n  RANDOM: 'Random'\r\n};\r\n\r\nexport const ERROR_CODES = {\r\n  PLAN_OUTDATED: '21037',\r\n  PLAN_LOCKED_PLAN_DESIGN: '21057',\r\n  PLAN_ALREADY_APPROVED: '21034',\r\n  ADD_COUNTRY_TO_APPROVED_PLAN: '21035',\r\n  PLAN_DELETED: '9013',\r\n  PLAN_UPDATE_FAILED: '9007'\r\n};\r\n\r\nexport const VALID = 'valid';\r\n\r\nexport const CONTROL_STATUS = {\r\n  VALID: 'VALID',\r\n  INVALID: 'INVALID'\r\n};\r\n\r\nexport const TOOLTIP_LABELS = {\r\n  SRC_FSI_GREATER: 'NGSourceFSIGreater',\r\n  SRC_LSR_LESSER: 'NGSourceLSRLesser',\r\n  INVALID_DATE_FORMAT: 'DateFormatIncorrect',\r\n  MAX_CHAR_EXCEED: 'maxCharExceedError',\r\n  DATEPICKER_PARSE_ERROR: 'matDatepickerParse',\r\n  REQUIRED: 'required'\r\n};\r\n\r\nexport const PERCENTAGE = '%';\r\n\r\nexport const VALIDATION_PARAMS = {\r\n  MIN_NUM_SITES: 1,\r\n  MAX_NUM_SITES: 1000,\r\n  MIN_ENROLLMENT_TARGET: 0,\r\n  MAX_ENROLLMENT_TARGET: 150000,\r\n  MIN_OVER_RECRUITMENT_PERCENT: 0,\r\n  MAX_OVER_RECRUITMENT_PERCENT: 1000,\r\n  MAX_SR: 1000,\r\n  MIN_SFR: 0,\r\n  MAX_SFR: 99,\r\n  MAX_RR: 1000,\r\n  MIN_ACTIVE_SITES: 1,\r\n  MAX_ACTIVE_SITES: 1000,\r\n  MIN_CALC_SAS: 0,\r\n  MAX_CALC_SAS: 100,\r\n  MIN_SITOFSSDAYS: 0,\r\n  MAX_COHORT_NAME: 100,\r\n  MAX_COHORT_DESCRIPTION: 200,\r\n  MAX_PERIOD_25: 1000,\r\n  MAX_PERIOD_50: 1000,\r\n  MAX_PERIOD_90: 15000\r\n};\r\n\r\nexport const SITE_INITIATION_METHOD = {\r\n  PERCENT: 'percent',\r\n  GRANULAR: 'granular'\r\n};\r\n\r\nexport const SITE_INITIATION_SUB_METHOD = {\r\n  SCHEDULER: 'scheduler',\r\n  PLANNER: 'planner'\r\n};\r\n\r\nexport const SIOPTION = {\r\n  RANDOM: 'Random',\r\n  LINEAR: 'Linear'\r\n};\r\n\r\nexport const ALGORITHM_CODE = {\r\n  SIMPLE_FRCST: 'simpleFrcst'\r\n};\r\n\r\nexport const EP_ACTION_TYPE = {\r\n  CREATE: 'create',\r\n  EDIT: 'edit',\r\n  DELETE: 'delete',\r\n  EDIT_ALL: 'editAll'\r\n};\r\n\r\nexport const EP_FORM = {\r\n  COHORT: 'cohort',\r\n  NAME: 'name',\r\n  DESCRIPTION: 'description',\r\n  EP_TARGET: 'interimTarget',\r\n  TARGET_TYPE: 'Randomization',\r\n  EP_DURATION: 'duration',\r\n  SCREEN_OPTION: 'rstrtScrngType',\r\n  EOF_EP: 'rstrtScrngBfrEPDays'\r\n};\r\n\r\nexport const EP = {\r\n  DEFAULT_COHORT: 'All Cohorts',\r\n  COHORT_PLAN: 'Y',\r\n  ALL_COHORTS_KEY: -1\r\n};\r\n\r\nexport const EP_SCR_OPTIONS = {\r\n  OPT_1_KEY: 'EndofEP',\r\n  OPT_2_KEY: 'ScreeningPeriod',\r\n  OPT_3_KEY: 'DaysBeforeEP'\r\n};\r\n\r\nexport const GEOGRAPHY_LEVEL = {\r\n  COUNTRY: 'Country',\r\n  WW: 'WW'\r\n};\r\n\r\nexport const DATE_DISPLAY_FORMAT = 'DD-MMM-YYYY';\r\n\r\nexport const ISCOHORTYES = 'Y';\r\nexport const ISCOHORTNO = 'N';\r\nexport const COHORTTYPE = 'cp';\r\nexport const COUNTRYPLANUPDATOR = 'countryPlanUpdator';\r\nexport const ADJUSTCOUNTRYPLANUPDATOR = 'adjustCountryPlanUpdator';\r\nexport const COHORTPLANUPDATOR = 'cohortPlanUpdator';\r\nexport const ADJUSTCOHORTPLANUPDATOR = 'adjustCohortPlanUpdator';\r\nexport const ISCOHORTPLAN = 'Y';\r\nexport const ISNOTCOHORTPLAN = 'N';\r\nexport const RESULT = {\r\n  Okay: 'OK',\r\n  Errors: 'error'\r\n};\r\nexport const OPERATIONTYPE = {\r\n  E: 'E'\r\n};\r\n\r\nexport const ERRORS_CODES_POPUP = [21037, 9017, 9021, 20161, 21057, 9013, 21060, 21061, 21062];\r\nexport const ERROR_CODES_FOR_CUSTOM_MESSAGE = {\r\n  '21060': true, '21061': true, '21062': true\r\n};\r\nexport const ERROR_CODES_POPUP_TITLE = {\r\n  '21063': 'Delete', '21064': 'Lock', '21065': 'Unlock'\r\n};\r\n\r\nexport const ERRORCODE_REVERT = [21063, 21064, 21065, 21037, 21066];\r\n\r\nexport const ERROR_FOR_SAVE_PLAN_ON_ALREADY_DELETED_PLAN = 9013;\r\n\r\nexport const ERRORS_PLANS = 'PLANUNSAVED';\r\nexport const DEBOUNCE_TIME = 750;\r\nexport const NOTPLANKEYCHANGED = 'planKeyChanged';\r\nexport const SAVEDEFAULT_VAL = -1;\r\n\r\nexport const COHORT_EXCLUDED_STATE = {\r\n  EXCLUDED: 0,\r\n  INCLUDED: 1,\r\n  EXCLUDED_BUT_NOT_SAVED: 2\r\n};\r\n\r\nexport const COUNTRY_OPTIONS = {\r\n  COPY_PARAMETERS: 'COPY_PARAMETERS',\r\n  PASTE_PARAMETERS: 'PASTE_PARAMETERS'\r\n};\r\n\r\nexport const ALGORITHM_ID_1 = 1;\r\n\r\nexport const CHECKBOX_STATE = {\r\n  CHECKED: 'checked',\r\n  INDETERMINATE: 'indeterminate',\r\n  UNCHECKED: 'unchecked'\r\n};\r\n\r\nexport const COHORT_TYPE = {\r\n  R: 'R',\r\n  S: 'S'\r\n};\r\n\r\nexport const COHORT_TYPE_STRING = {\r\n  R: 'R Type Cohort',\r\n  S: 'S Type Cohort'\r\n};\r\n\r\nexport const ALL_COHORTS = 'ALL';\r\nexport const MAP_COHORT_LABELS = {\r\n  USED_COHORT_KEYS: 'usedCohortKeys'\r\n};\r\n\r\nexport const SOLVER_TYPES = {\r\n  SDS: 'SDS',\r\n  LSR: 'LSR',\r\n  MRS: 'MRS',\r\n  CRT: 'CRT'\r\n};\r\n\r\nexport const SOLVER_TYPES_VALUES = {\r\n  SUBJECT_DISTRIBUTION: 'distribution',\r\n  LAST_SUBJECT: 'last-subject',\r\n  MIN_NUM_RATE: 'rate',\r\n  SUBJECTS: 'subjects'\r\n};\r\n\r\n\r\nexport enum CountryForms {\r\n  ActualNumSites = 'ActualNumSites',\r\n  TLSS = 'TLSS',\r\n  actEnrlWhnSFRMod = 'actEnrlWhnSFRMod',\r\n  actEnrlWhnSRMod = 'actEnrlWhnSRMod',\r\n  cohortEnrollmentParameters = 'cohortEnrollmentParameters',\r\n  cohortList = 'cohortList',\r\n  countryKey = 'countryKey',\r\n  countryName = 'countryName',\r\n  dateSFRMod = 'dateSFRMod',\r\n  dateSRMod = 'dateSRMod',\r\n  enrolmentParameters = 'enrolmentParameters',\r\n  isAdjustable = 'isAdjustable',\r\n  isAdjustment = 'isAdjustment',\r\n  siBody = 'siBody',\r\n  siHeader = 'siHeader',\r\n  studyFSI = 'studyFSI',\r\n  siField = 'siField',\r\n  siMethod = 'siMethod',\r\n  siCustomMethod = 'siCustomMethod'\r\n}\r\nexport const REQUEST_MODULE_PAGENAME = {\r\n  updateCountryDCPView: 'DFNCNTPLN',\r\n  updateCountryMCEView: 'DFNSOLVE'\r\n};\r\n\r\nexport const COEFFICIENT = 0.5;\r\n\r\nexport const YES = 'Y';\r\nexport const NO = 'N';\r\n\r\nexport const DOWNLOAD_TEMPLATE_FILE_NAME = 'Import_Country_Worksheet.xlsx';\r\nexport const DOWNLOADTEMPLATEURL = 'assets/' + DOWNLOAD_TEMPLATE_FILE_NAME;\r\nexport const DOWNLOAD_TEMPLATE_RESPONSE_TYPE = 'blob';\r\nexport const DOWNLOAD_TEMPLATE_PARAMS = {\r\n  url: DOWNLOADTEMPLATEURL,\r\n  headers: {\r\n    responseType: DOWNLOAD_TEMPLATE_RESPONSE_TYPE\r\n  }\r\n};\r\n\r\nexport enum COPY_COUNTRY {\r\n  COPY_PLAN_MSG = 'CopyPlanMsg',\r\n  COPY_PLAN_LOCKED_MSG = 'CopyPlanLockedMsg',\r\n  COPY_COUNTRY_AFSI_ACHIEVED_MSG = 'CopyCountryAFSIAchievedMsg',\r\n  COUNTRY_EXIST = 'CountryExist',\r\n  COUNTRY_ALREADY_PRESENT = 'CountryAlreadyPresent',\r\n  CONFIRM_COPY = 'ConfirmDialogHeading',\r\n  CONFIRM_COPY_LABEL = 'ConfirmCopy',\r\n  COPY_COUNTRY_PANEL_TITLE = 'CopyCountryPanelTitle',\r\n  COPY_COUNTRY_HEADING = 'CopyCountryHeading'\r\n}\r\n\r\nexport const MIN_SELECTED_COUNTRIES_FOR_BULK_EDIT = 2;\r\n\r\nexport const LOCKED_COUNTRY_ERROR = 'locked country';\r\n\r\n\r\nexport enum PCEOPTIONS {\r\n  PRINT = 'print',\r\n  EXPORT = 'export',\r\n  COPY = 'copy',\r\n  EXPAND = 'expand',\r\n  COLLAPSE = 'collapse'\r\n}\r\n\r\nexport const PCEEXPANDCOLLAPSECNT = 4;\r\nexport const COUNTRIESFILENAME = 'CountriesTable.xlsx';\r\nexport const MANAGECOUNTRIESGRIDFILENAME = 'ManageCountriesTable.xlsx';\r\nexport const AGGRIDROWS = '.ag-row';\r\nexport const GRIDROWHEIGHT = 48;\r\nexport enum DOMLAYOUT {\r\n  auto = 'autoHeight',\r\n  normal = 'normal'\r\n}\r\nexport enum DYNAMICGRIDCONTAINER {\r\n  top = '-19px',\r\n  topnone = '0px'\r\n}\r\nexport enum SI_SLOT_TYPE {\r\n  ACTUAL = 'actual',\r\n  PROJECTED = 'projected',\r\n  REDISTRIBUTED = 'redistributed',\r\n  NEW = 'new'\r\n}\r\n\r\nexport enum MILESTONES {\r\n  ACTUALS = 'Actuals',\r\n  PROJECTED = 'Projected',\r\n  PARENT = 'ParentPlan'\r\n}\r\n\r\nexport enum MCGOPT {\r\n  VALUE = 'value',\r\n  OPTIONS = 'options',\r\n  CONTROLS = 'controls'\r\n}\r\n\r\nexport enum MCG_CONSTANTS {\r\n  MC_GRID_TOGGLE_LEFT_MESSAGE = 'MC_GRID_TOGGLE_LEFT_MESSAGE',\r\n  MC_GRID_TOGGLE_RIGHT_MESSAGE = 'MC_GRID_TOGGLE_RIGHT_MESSAGE'\r\n}\r\n\r\nexport enum UNITS {\r\n  PX = 'px',\r\n  RM = 'rm'\r\n}\r\n\r\nexport enum MEASUREMENT {\r\n  HEIGHT = 'height',\r\n  OFFSETHEIGHT = 'offsetHeight',\r\n  OFFSETTOP = 'offsetTop'\r\n}\r\n\r\nexport const DEFAULT_PREFERENCE_GRID_COLUMN = {\r\n  PreferenceGridColumns: {},\r\n  appType: 'SOMAIN',\r\n  category: 'PreferenceGridColumns'\r\n};\r\n\r\nexport const GRIDCONFIG = {\r\n  rowHeight: 48,\r\n  headerHeight: 73,\r\n  minHeight: 150,\r\n  margin: 50,\r\n  bufferPixel: 18,\r\n  fixedRowCount: 5,\r\n  collpasedPinnedRowCount : 2\r\n};\r\n","\r\nimport { MenusOptionType } from './menus-option.interface';\r\n\r\nexport class MenusOption implements MenusOptionType {\r\n\r\n    constructor(public text: string, public value: string) {\r\n        this.text = text;\r\n        this.value = value;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    LocaleAppResourcesService,\r\n    ErrorTermsStoreService\r\n} from 'common-library';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppResourceService {\r\n\r\n    constructor(\r\n        public localAppResources: LocaleAppResourcesService,\r\n        private errorTermsStoreService: ErrorTermsStoreService\r\n    ) {}\r\n\r\n    /**\r\n     * To get local app resource from application.properties file\r\n     * @param { string } key\r\n     */\r\n    getResource(key: string) {\r\n        return this.localAppResources.getResource(key);\r\n    }\r\n\r\n    /**\r\n     * To get error message from errorterm properties file\r\n     * @param { string } key\r\n     */\r\n    getErrorMessage(key: string) {\r\n        return this.errorTermsStoreService.getErrorMessage(key);\r\n    }\r\n}\r\n","\r\nimport { Component, OnInit, OnDestroy, ViewChild, TemplateRef, ElementRef, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { AboutResource, ListItem, PasswordResource, UserProfile, Action } from 'common-library';\r\nimport { StudyListService, StudyListInput, CommonHeaderService } from 'so-common-library';\r\n\r\nimport { HeaderService } from './header.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { CenterSummaryService } from '../sites/center-summary/center-summary.service';\r\n\r\n@Component({\r\n  selector: 'ctos-header',\r\n  templateUrl: './header.component.html',\r\n  providers: [],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('studyListOptionTemplate', { static: true })\r\n  private studyListOptionTemplate: TemplateRef<any>;\r\n  private readonly subscriptions: Subject<void> = new Subject<void>();\r\n\r\n  isDataAvailable: boolean;\r\n  userProfile: UserProfile;\r\n  mainHeaderItems: ListItem[];\r\n  subHeaderItems: ListItem[];\r\n  studyRefreshDate: string;\r\n  appInfoUrl: string;\r\n  menu: any;\r\n  logoUrl: string;\r\n  alertConfirmUrl: string;\r\n  studyRefreshDateLabel: string;\r\n  studyListInput: StudyListInput;\r\n\r\n  aboutResource: AboutResource;\r\n  passwordResource: PasswordResource;\r\n  searchListFormGroupName: FormGroup;\r\n\r\n  @Output()\r\n  studyChanged: EventEmitter<any>;\r\n\r\n  constructor(private headerService: HeaderService,\r\n    private studyListService: StudyListService,\r\n    private commonHeaderService: CommonHeaderService,\r\n    private centerSummaryService: CenterSummaryService) {\r\n      this.studyChanged = new EventEmitter();\r\n     }\r\n\r\n  ngOnInit() {\r\n    const self = this;\r\n    // self.subscriptions = [];\r\n     self.studyListInput = new StudyListInput();\r\n    self.searchListFormGroupName = self.headerService.searchListFormGroupName;\r\n    self.menu = this.commonHeaderService.menu;\r\n    self.setMainHeaderItems();\r\n    // self.setSubHeaderItems(self.menu.subHeaderMenu);\r\n    this.commonHeaderService.getSubHeaderItems(self.menu.subHeaderMenu);\r\n     self.subHeaderItems = this.commonHeaderService.subHeaderItems;\r\n\r\n    self.logoUrl = self.commonHeaderService.logoUrl;\r\n    self.appInfoUrl = self.commonHeaderService.appInfoUrl;\r\n    self.alertConfirmUrl = self.commonHeaderService.alertConfirmUrl;\r\n    self.studyRefreshDateLabel = self.commonHeaderService.studyRefreshDateLabel;\r\n    const actionParam: Action = {};\r\n    actionParam.endPoint = true;\r\n    self.studyListInput = self.commonHeaderService.getStudyInputResource(self.studyListOptionTemplate, actionParam);\r\n    self.isDataAvailable = false;\r\n    self.setData();\r\n    self.passwordResource = self.commonHeaderService.passwordResource;\r\n    self.aboutResource = self.commonHeaderService.aboutResource;\r\n    self.checkIfAllDataAvailable();\r\n    self.getStudyDetails();\r\n    self.centerSummaryService.getCenterSummary(this.headerService.getLastVisitedStudyKey());\r\n  }\r\n\r\n  private setMainHeaderItems() {\r\n    const self = this;\r\n    this.commonHeaderService.getAppData()\r\n    .pipe(takeUntil(this.subscriptions))\r\n    .subscribe(data => {\r\n      this.commonHeaderService.setHeaderItems(data);\r\n      self.mainHeaderItems = this.commonHeaderService.mainHeaderItems;\r\n      self.checkIfAllDataAvailable();\r\n    });\r\n  }\r\n\r\n  private checkIfAllDataAvailable() {\r\n    this.isDataAvailable = this.commonHeaderService.checkIfAllDataAvailable(this.studyRefreshDate);\r\n  }\r\n\r\n  studySelected(event) {\r\n    const self = this;\r\n    const selectedStudy = event.option.value;\r\n    self.studyListService.shareStudyKey(event.option.value);\r\n    self.headerService.setSelectedStudyKey(event.option.value);\r\n    this.headerService.updateSelectedStudyPreferences(selectedStudy)\r\n    .pipe(takeUntil(this.subscriptions))\r\n    .subscribe((successResponse) => {\r\n      self.setData();\r\n      this.studyChanged.emit(event);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function sets\r\n   * 1. Data required for User Profile Menu in Header Component.\r\n   * 2. Updates preference for study refresh date in back end.\r\n   */\r\n  private setData() {\r\n    const self = this;\r\n    const actionParam: Action = {};\r\n    actionParam.endPoint = true;\r\n    self.commonHeaderService.getUserData(actionParam)\r\n    .pipe(takeUntil(this.subscriptions))\r\n    .subscribe(data => {\r\n      self.commonHeaderService.setUserProfile(data, self.menu.profileItem);\r\n      self.userProfile = this.commonHeaderService.userProfile;\r\n      self.checkIfAllDataAvailable();\r\n    });\r\n    self.setStudyRefreshDate();\r\n  }\r\n\r\n  /**\r\n   * This function updates preference for study refresh date in back end.\r\n   * Based on response function sets header data. Sets property isDataAvailable property of header component.\r\n   */\r\n  private setStudyRefreshDate() {\r\n    const self = this;\r\n    self.headerService.getStudyRefreshDate()\r\n    .pipe(takeUntil(this.subscriptions))\r\n    .subscribe(studyRefreshDate => {\r\n      self.studyRefreshDate = studyRefreshDate;\r\n      this.headerService.studyRefreshDate = studyRefreshDate;\r\n      self.checkIfAllDataAvailable();\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.next();\r\n    this.subscriptions.complete();\r\n  }\r\n\r\n  private getStudyDetails(selectedStudy?: any): void {\r\n    let studyKey;\r\n    if (!selectedStudy) {\r\n      studyKey = this.headerService.getLastVisitedStudyKey();\r\n    } else {\r\n      studyKey = selectedStudy.key;\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component, OnInit, OnDestroy, OnChanges, Input,\r\n  Output, EventEmitter, SimpleChanges\r\n} from '@angular/core';\r\nimport { MenusOptionType } from '@app/shared/model/menus-option.interface';\r\n\r\n@Component({\r\n  selector: 'ctos-context-menus',\r\n  templateUrl: './context-menus.component.html'\r\n})\r\nexport class ContextMenusComponent implements OnInit, OnDestroy, OnChanges {\r\n\r\n  @Input() menuOption: MenusOptionType[];\r\n  @Output() emitMenuClick: EventEmitter<string> = new EventEmitter();\r\n  options: MenusOptionType[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes && changes.menuOption && changes.menuOption.currentValue) {\r\n      this.options = changes.menuOption.currentValue;\r\n    }\r\n  }\r\n\r\n  menuClicked(item) {\r\n    this.emitMenuClick.emit(item);\r\n  }\r\n\r\n}\r\n","export default \"ctos-menu-panel geography-select {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  margin-bottom: 2px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2FwcDQvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9tZW51LXBhbmVsL0Q6XFxEZWNpc2lvblZpZXdcXDYuMUNvdW50cnlcXHN0dWR5b3B0aW1pemVyXFxjbGllbnRcXG53b3Jrc3BhY2VcXGNsaWVudC1zdHVkeU9wdGltaXplci1hcHAvcHJvamVjdHNcXGFwcDRcXHNyY1xcYXBwXFxzaGFyZWRcXGNvbXBvbmVudHNcXG1lbnUtcGFuZWxcXG1lbnUtcGFuZWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxvQkFBYTtFQUFiLGFBQWE7RUFDVCx5QkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLGtCQUFrQixFQUFBIiwiZmlsZSI6InByb2plY3RzL2FwcDQvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9tZW51LXBhbmVsL21lbnUtcGFuZWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJjdG9zLW1lbnUtcGFuZWwge1xyXG4gICAgZ2VvZ3JhcGh5LXNlbGVjdCAge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJweDtcclxuICAgICAgICB9XHJcbiAgICB9Il19 */\"","import { Component, OnInit, ViewChild, Input, EventEmitter, Output} from '@angular/core';\r\nimport { MatMenu } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'ctos-menu-panel',\r\n  templateUrl: './menu-panel.component.html',\r\n  styleUrls: ['./menu-panel.component.scss']\r\n})\r\nexport class MenuPanelComponent implements OnInit {\r\n\r\n  @ViewChild('menu', {static: true}) menu: MatMenu;\r\n@Input() items: any;\r\n  @Output() emitMenuClick: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  menuClicked(event) {\r\n    console.log(event);\r\n    this.emitMenuClick.emit(event);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation, OnDestroy} from '@angular/core';\r\n\r\nexport interface SelectBoxConfig {\r\n  value: string;\r\n  viewValue: string;\r\n  disabled: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'ctos-select-box',\r\n  templateUrl: './select-box.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SelectBoxComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() selectBoxOptions: SelectBoxConfig[] = [];\r\n  @Output() emitMenuClick: EventEmitter<string> = new EventEmitter();\r\n  @Input() selectedOption: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  selectionChanged(event) {\r\n    this.emitMenuClick.emit(event);\r\n  }\r\n\r\n  getToolTipData() {\r\n    if (this.selectBoxOptions && this.selectBoxOptions.length > 0) {\r\n        const selectedItemToolTip = this.selectBoxOptions.filter(item => item.value === this.selectedOption );\r\n        return selectedItemToolTip && selectedItemToolTip.length > 0 ? selectedItemToolTip[0].viewValue : '';\r\n    }\r\n    return '';\r\n  }\r\n\r\n}\r\n","import { TabItem } from 'common-library';\r\n\r\nexport class SiteSubTab {\r\n    tabItems: Array<TabItem>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    LocaleAppResourcesService,\r\n    ErrorTermsStoreService\r\n} from 'common-library';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppResourceService {\r\n\r\n    constructor(\r\n        public localAppResources: LocaleAppResourcesService,\r\n        private errorTermsStoreService: ErrorTermsStoreService\r\n    ) {}\r\n\r\n    /**\r\n     * To get local app resource from application.properties file\r\n     * @param { string } key\r\n     */\r\n    getResource(key: string) {\r\n        return this.localAppResources.getResource(key);\r\n    }\r\n\r\n    /**\r\n     * To get error message from errorterm properties file\r\n     * @param { string } key\r\n     */\r\n    getErrorMessage(key: string) {\r\n        return this.errorTermsStoreService.getErrorMessage(key);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FILTER_PREFERENCES } from '../../app.constant';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SiteFilterPreferenceService {\r\n\r\n    constructor() { }\r\n\r\n    /**\r\n     * To get prefrences value based on key- geography key, monitorKey, cohort Key, randomization Key\r\n     * and lastvisitedStudyKey from sites_filter_preference session storage\r\n     * @param { string } storageKey\r\n     */\r\n    getSitesFilterPreference(storageKey: string) {\r\n        if (this.getSitesFilterSessionStorage()) {\r\n            const retrievedObject = this.getSitesFilterSessionStorage();\r\n            const sites_filter_preference = JSON.parse(retrievedObject);\r\n            if (sites_filter_preference[storageKey]) {\r\n                if (storageKey === FILTER_PREFERENCES.GEOGRAPHY) {\r\n                    return JSON.parse(sites_filter_preference[storageKey]);\r\n                } else {\r\n                    return sites_filter_preference[storageKey];\r\n                }\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method used to storage filter preferences (geography key, monitorKey, cohort Key and randomization Key) into\r\n     * the sites_filter_preference session storage.\r\n     * @param { string } storageKey\r\n     */\r\n    setSitesFilterPreference(storageKey: string, value: string) {\r\n        if (this.getSitesFilterSessionStorage()) {\r\n            const retrievedObject = this.getSitesFilterSessionStorage();\r\n            const sites_filter_preference = JSON.parse(retrievedObject);\r\n            sites_filter_preference[storageKey] = value;\r\n            this.setSitesFilterSessionStorage(JSON.stringify(sites_filter_preference));\r\n        } else {\r\n            const sites_filter_preference = {};\r\n            sites_filter_preference[storageKey] = value;\r\n            this.setSitesFilterSessionStorage(JSON.stringify(sites_filter_preference));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method used to clear filter preferences(geogrpahy,monitor, cohort and randomization)\r\n     * from session storage when study change.\r\n     */\r\n    clearGridFilterPreferences() {\r\n        if (this.getSitesFilterSessionStorage()) {\r\n            const retrievedObject = this.getSitesFilterSessionStorage();\r\n            const sites_filter_preference = JSON.parse(retrievedObject);\r\n            const LASTVISITED_STUDYKEY = FILTER_PREFERENCES.LASTVISITED_STUDYKEY;\r\n            const sites_filter_preference_new = {\r\n                LASTVISITED_STUDYKEY: sites_filter_preference.sites_lastvisitedstudyID\r\n            };\r\n            this.removeSitesFilterSessionStorage();\r\n            this.setSitesFilterSessionStorage(JSON.stringify(sites_filter_preference_new));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method used to get sites_filter_preference key from session storage\r\n     */\r\n    getSitesFilterSessionStorage() {\r\n        return sessionStorage.getItem(FILTER_PREFERENCES.SITE_FILTER_PREFERENCE);\r\n    }\r\n\r\n    /**\r\n     * This method used to set sites_filter_preference key to session storage\r\n     * @param { string } value\r\n     */\r\n    setSitesFilterSessionStorage(value: any) {\r\n        return sessionStorage.setItem(FILTER_PREFERENCES.SITE_FILTER_PREFERENCE, value);\r\n    }\r\n\r\n    /**\r\n     * This method used to remove sites_filter_preference key from session storage\r\n     */\r\n    removeSitesFilterSessionStorage() {\r\n        sessionStorage.removeItem(FILTER_PREFERENCES.SITE_FILTER_PREFERENCE);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ResourceService } from 'so-common-library';\r\nimport { AppResourceService } from '@app/shared/services/app-resource.service';\r\nimport { MCG_CONSTANTS } from '@app/app.constant';\r\nimport { MultiLevelOption } from '../model/multi-level-option.interface';\r\nimport { HeaderService  } from '../../header/header.service';\r\nimport { DEFAULT_SELECTED } from '../../app.constant';\r\n\r\n@Injectable()\r\nexport class SiteResourceService {\r\n\r\n    constructor(\r\n        private appResource: AppResourceService,\r\n        private headerService: HeaderService,\r\n        private resourceService: ResourceService\r\n    ) { }\r\n\r\n    public get errorResource() {\r\n        return {\r\n            SOLVERS_VALIDATION_ERROR_MSG: this.appResource.getErrorMessage('SolversValidationErrorMessage'),\r\n            SOLVERS_CALCULATION_ERROR_MSG: this.appResource.getErrorMessage('SolversCalculationErrorMsg')\r\n        };\r\n    }\r\n\r\n    public get siteSubTabResource() {\r\n        return {\r\n            ENROLLMENT_DETAILS: this.appResource.getResource('ENROLLMENT_DETAILS'),\r\n            ENROLLMENT_SCORECARD: this.appResource.getResource('ENROLLMENT_SCORECARD'),\r\n            DATA_MANAGEMENT_DETAILS: this.appResource.getResource('DATA_MANAGEMENT_DETAILS')\r\n        };\r\n    }\r\n    public get actionResource() {\r\n        return {\r\n            EXPANDGRID: this.appResource.getResource('Expand'),\r\n            COLLAPSEGRID: this.appResource.getResource('Collapse'),\r\n            OK: this.appResource.getResource('OK'),\r\n            Cancel: this.appResource.getResource('Cancel'),\r\n            PRINT: this.appResource.getResource('Print'),\r\n            COPY: this.appResource.getResource('Copy'),\r\n            EXPORT: this.appResource.getResource('Export'),\r\n            CLICK_TO_CALCULATE: this.appResource.getResource('ClickToCalculate'),\r\n            CLICK_TO_APPLY: this.appResource.getResource('ClickToApply'),\r\n            SELECT_COUNTRIES: this.appResource.getResource('SELECT_COUNTRIES'),\r\n            SELECT_COUNTRIES_MSG: this.appResource.getResource('SelectCountryMsg'),\r\n            SUBJECTS_SOLVER_TAB: this.appResource.getResource('SubjectsSolverTab'),\r\n            UNEDITABLE_PLAN_MSG: this.appResource.getResource('PECDisableApprovedMsg'),\r\n            ADD_COUNTRIES: this.appResource.getResource('ADD_COUNTRIES'),\r\n            SELECT_ALL: this.appResource.getResource('SELECT_ALL'),\r\n            ENABLE_UPDATED_PROJECTIONS: this.appResource.getResource('ENABLE_UPDATED_PROJECTIONS'),\r\n            SELECT_COHORTS_TO_EDIT: this.appResource.getResource('SELECT_COHORTS_TO_EDIT'),\r\n            MANGECOUNTRYGRID: this.appResource.getResource('MANGECOUNTRYGRID'),\r\n            MANAGECOUNTRYGRIDEDIT: this.appResource.getResource('MCG_CONSTANTS'),\r\n            MC_ACTUALS_CHECKBOX_LABEL: this.appResource.getResource('MC_ACTUALS_CHECKBOX_LABEL'),\r\n            MC_PROJECTED_CHECKBOX_LABEL: this.appResource.getResource('MC_PROJECTED_CHECKBOX_LABEL'),\r\n            MC_PARENTPLAN_CHECKBOX_LABEL: this.appResource.getResource('MC_PARENTPLAN_CHECKBOX_LABEL'),\r\n            MC_GRID_TOGGLE_LEFT_MESSAGE: this.appResource.getResource(MCG_CONSTANTS.MC_GRID_TOGGLE_LEFT_MESSAGE),\r\n            MC_GRID_TOGGLE_RIGHT_MESSAGE: this.appResource.getResource(MCG_CONSTANTS.MC_GRID_TOGGLE_RIGHT_MESSAGE)\r\n        };\r\n    }\r\n\r\n    public get sitesFilterControlResources() {\r\n        return {\r\n            geography: this.appResource.getResource('GEOGRAPHY_FILTER_LABEL'),\r\n            cohort: this.appResource.getResource('COHORT_FILTER_LABEL'),\r\n            monitor: this.appResource.getResource('MONITOR_FILTER_LABEL'),\r\n            randomization: this.appResource.getResource('RANDOMIZATION_FILTER_LABEL'),\r\n            sites_monitor_selectAll: this.appResource.getResource('SITES_MONITOR_SELECTALL')\r\n        };\r\n    }\r\n\r\n    public get sitesRandomizationOptionResources() {\r\n        return [\r\n            {\r\n                value: DEFAULT_SELECTED,\r\n                viewValue: this.appResource.getResource('RANDOMIZATION_SUB_ALL'),\r\n                disabled: false\r\n            },\r\n            {\r\n                value: '0',\r\n                viewValue: this.appResource.getResource('RANDOMIZATION_SUB_0'),\r\n                disabled: false\r\n            },\r\n            {\r\n                value: '1',\r\n                viewValue: this.appResource.getResource('RANDOMIZATION_SUB_1'),\r\n                disabled: false\r\n            }\r\n        ];\r\n    }\r\n\r\n    public get getCohortCategories(): MultiLevelOption[]  {\r\n        return this.resourceService.getCohortDropDownOptions;\r\n    }\r\n\r\n    public get getCohortDropDownResource() {\r\n        return this.resourceService.getCohortDropDownResource();\r\n    }\r\n}\r\n","import { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonAngularMaterialModule, CommonLibraryModule } from 'common-library';\r\nimport { SoCommonLibraryModule } from 'so-common-library';\r\nimport { SiteResourceService } from '../shared/service/site-resource.service';\r\nimport { AppResourceService } from '../shared/service/app-resource.service';\r\n\r\nimport { ContextMenusComponent } from './components/context-menus/context-menus.component';\r\nimport { SelectBoxComponent } from '../shared/components/select-box/select-box.component';\r\nimport { MenuPanelComponent } from './components/menu-panel/menu-panel.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CommonAngularMaterialModule, CommonLibraryModule, SoCommonLibraryModule],\r\n  declarations: [ContextMenusComponent, SelectBoxComponent, MenuPanelComponent],\r\n  providers: [DatePipe, SiteResourceService, AppResourceService],\r\n  entryComponents: [ContextMenusComponent],\r\n  exports: [ContextMenusComponent, SelectBoxComponent, MenuPanelComponent]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { UserDataService, CTOSUtil } from 'so-common-library';\r\nimport { AppUtil, PayloadCommandService, BaseConnectionService, Action, COMMON, ApplicationError } from 'common-library';\r\nimport { SITE_MODULE, COMMAND, PAGES, API_ENDPOINT } from '../../app.constant';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CenterSummaryService {\r\n\r\n  data: any;\r\n  centerSummarySubject: BehaviorSubject<any>;\r\n\r\n  constructor(private userDataService: UserDataService,\r\n    private payloadCommandService: PayloadCommandService,\r\n    private baseConnectionService: BaseConnectionService\r\n  ) {\r\n    this.centerSummarySubject = new BehaviorSubject(null);\r\n  }\r\n\r\n  getDataObservable(): Observable<any> {\r\n    return this.centerSummarySubject.asObservable();\r\n  }\r\n\r\n  setCenterSummaryData(data: any): void {\r\n    this.data = data;\r\n    this.centerSummarySubject.next(data);\r\n  }\r\n\r\n  getCenterSummary(studyKey: number, baseParam?: Action): Observable<any> {\r\n    if (!AppUtil.isDefined(studyKey, true)) {\r\n      console.log('Error : Can not get Center Summary without Study key');\r\n      return;\r\n    }\r\n    studyKey = studyKey;\r\n    if (studyKey) {\r\n      const params = {\r\n        studyKey: studyKey\r\n      };\r\n      const moduleInfo = CTOSUtil.getModuleInfo(PAGES.ENROLLMENT_DETAILS, studyKey, SITE_MODULE);\r\n      const payload = this.payloadCommandService.getApiRequest(\r\n        COMMAND.CENTER_SUMMARY,\r\n        params,\r\n        null,\r\n        moduleInfo\r\n      );\r\n      const actionParam: Action = {};\r\n      if (!baseParam) {\r\n        baseParam = actionParam;\r\n      }\r\n      baseParam.url = API_ENDPOINT.CENTER_SUMMARY; // rest api end point\r\n      return this.baseConnectionService\r\n        .send(payload, baseParam)\r\n        .pipe(\r\n          map(response => {\r\n            if (response.result === COMMON.RESULT_OK) {\r\n              this.setCenterSummaryData(response);\r\n              return response;\r\n            } else {\r\n              throw new ApplicationError(\r\n                response.error.message,\r\n                response.error.errorCode\r\n              );\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SiteFilterService } from './sites-filter/sites-filter.service';\r\nimport { HeaderService } from '../header/header.service';\r\nimport { GEOGRAPHY_LEVEL, DEFAULT_SELECTED } from '../app.constant';\r\n\r\n@Injectable()\r\nexport class GridFilterService {\r\n\r\n  constructor(private siteFilterService: SiteFilterService,\r\n    private headerService: HeaderService\r\n  ) { }\r\n\r\n  /***\r\n   *  @FilterEnrollmentDetailGrid\r\n   *  This method is used to applied all geography,cohort, monitor and randomization filter on\r\n   *  Enrollment details grid data.\r\n   */\r\n  filterEnrollmentGridData(node: any): Boolean {\r\n    if (this.worldWideFilter(node)) {\r\n      // console.log(node.data);\r\n      if (this.cohortFilter(node)) {\r\n        if (this.monitorFilter(node)) {\r\n          return this.randomizationFilter(node);\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n   /***\r\n   *  @FilterDataManagmenttDetailGrid\r\n   *  This method is used to applied all geography,cohort, monitor and randomization filter on\r\n   *  Enrollment details grid data.\r\n   */\r\n  filterDataManagmenttDetailGrid(node: any): Boolean {\r\n    if (this.worldWideFilter(node)) {\r\n      // console.log(node.data);\r\n        return this.monitorFilter(node);\r\n       } else {\r\n      return false;\r\n    }\r\n  }\r\n  /***\r\n   *  @WorldWideFilter\r\n   *  This method is used to filter grid data based on world wide and region and country.\r\n   */\r\n  worldWideFilter(node: any): Boolean {\r\n    const selectedGeography = this.siteFilterService.selectedGeography;\r\n    if (!selectedGeography) {\r\n      return true;\r\n    } else if (selectedGeography.code === GEOGRAPHY_LEVEL.WORLDWIDE) {\r\n      return true;\r\n    } else if (selectedGeography.level === GEOGRAPHY_LEVEL.REGION && node.data.geographyLevel === selectedGeography.level) {\r\n      return node.data.regionName.toString() === selectedGeography.name.toString();\r\n    } else {\r\n      if (node.data.geographyLevel !== GEOGRAPHY_LEVEL.WORLDWIDE) {\r\n        return node.data.geoHierarchy.findIndex(geo => geo === selectedGeography.name) !== -1;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n    // Old function code do not remove\r\n    // const selectedGeography = this.siteFilterService.selectedGeography;\r\n    // if (selectedGeography && node.data && (selectedGeography.code && selectedGeography.code !== 'WW')) {\r\n    //   if (selectedGeography.code !== 'WW' && selectedGeography.children) {\r\n    //     return node.data.regionName && node.data.regionName.toString() === selectedGeography.name.toString();\r\n    //   } else {\r\n    //     return node.data.countryName && node.data.countryName.toString() === selectedGeography.name.toString();\r\n    //   }\r\n    // } else {\r\n    //   return true;\r\n    // }\r\n  }\r\n\r\n\r\n  /***\r\n   *  @MonitorListFilter\r\n   *  This method is used to filter grid data based on center monitor list.\r\n   */\r\n  monitorFilter(node: any): Boolean {\r\n    const selectedMonitor = this.siteFilterService.selectedMonitor;\r\n    if (selectedMonitor && selectedMonitor !== DEFAULT_SELECTED) {\r\n      if (node.data.geographyLevel !== GEOGRAPHY_LEVEL.WORLDWIDE) {\r\n        const monitorList = node.data.centerMonitorList && node.data.centerMonitorList.centerMonitor\r\n          ? [].concat(node.data.centerMonitorList.centerMonitor) : [];\r\n        if (node.data && monitorList.length > 0) {\r\n          return monitorList.find(item => item.monitorKey === (+selectedMonitor));\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /***\r\n   *  @RandomizationFilter\r\n   *  This method is used to filter grid data based on world wide and region and country.\r\n   */\r\n  randomizationFilter(node: any): Boolean {\r\n    // const selectedRandomizationKey = this.siteFilterService.selectedRandomizationKey;\r\n    // if (selectedRandomizationKey && selectedRandomizationKey !== DEFAULT_SELECTED && node.data ) {\r\n    //   if (node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n    //     if (selectedRandomizationKey === '0') {\r\n    //       const actualEnrolled = node.data.actualEnrolled ? node.data.actualEnrolled : 0;\r\n    //       return actualEnrolled === 0;\r\n    //     } else if (selectedRandomizationKey === '1') {\r\n    //       return node.data.actualEnrolled > 0;\r\n    //     } else {\r\n    //       return false;\r\n    //     }\r\n    //   } else if (selectedRandomizationKey === '1'\r\n    //   && node.data.geographyLevel === GEOGRAPHY_LEVEL.COHORT && node.data.siteActualEnrolled === 0 ) {\r\n    //     return false;\r\n    //   } else {\r\n    //     return true;\r\n    //   }\r\n    // } else {\r\n    //   return true;\r\n    // }\r\n\r\n    const selectedRandomizationKey = this.siteFilterService.selectedRandomizationKey;\r\n    if (selectedRandomizationKey && selectedRandomizationKey !== DEFAULT_SELECTED && node.data) {\r\n      if (selectedRandomizationKey === '0') {\r\n        if (node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY\r\n          || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n          const actualEnrolled = node.data.actualEnrolled ? node.data.actualEnrolled : 0;\r\n          return actualEnrolled === 0;\r\n        } else if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COHORT && node.data.siteActualEnrolled > 0) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      } else {\r\n        if (node.data.geographyLevel === GEOGRAPHY_LEVEL.REGION || node.data.geographyLevel === GEOGRAPHY_LEVEL.COUNTRY\r\n          || node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n          return node.data.actualEnrolled > 0;\r\n        } else if (node.data.geographyLevel === GEOGRAPHY_LEVEL.COHORT && node.data.siteActualEnrolled === 0) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n    //   if (node.data.geographyLevel === GEOGRAPHY_LEVEL.SITE) {\r\n\r\n    //       const actualEnrolled = node.data.actualEnrolled ? node.data.actualEnrolled : 0;\r\n    //       return actualEnrolled === 0;\r\n    //     } else if (selectedRandomizationKey === '1') {\r\n    //       return node.data.actualEnrolled > 0;\r\n    //     } else {\r\n    //       return false;\r\n    //     }\r\n    //   } else if (selectedRandomizationKey === '1'\r\n    //   && node.data.geographyLevel === GEOGRAPHY_LEVEL.COHORT && node.data.siteActualEnrolled === 0 ) {\r\n    //     return false;\r\n    //   } else {\r\n    //     return true;\r\n    //   }\r\n    // } else {\r\n    //   return true;\r\n    // }\r\n  }\r\n\r\n  /***\r\n   *  @WorldWideFilter\r\n   *  This method is used to filter grid data based on world wide and region and country.\r\n   */\r\n  cohortFilter(node: any): Boolean {\r\n    const selectedCohort = this.siteFilterService.selectedCohort;\r\n    const studyID = this.headerService.getLastVisitedStudyKey();\r\n    if (this.headerService.isCohortStudy(studyID) && node.data) {\r\n      if (selectedCohort && selectedCohort !== DEFAULT_SELECTED && node.data.cohortName) {\r\n        return node.data.cohortKey.toString() === selectedCohort.toString();\r\n      } else {\r\n        if (selectedCohort && selectedCohort !== DEFAULT_SELECTED && node.data.cohortID) {\r\n          return node.data.studyCohortKey.toString() === selectedCohort.toString();\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserDataService, CTOSUtil } from 'so-common-library';\r\nimport { AppUtil, PayloadCommandService, BaseConnectionService, Action, COMMON, ApplicationError } from 'common-library';\r\nimport { SITE_MODULE, COMMAND, PAGES, API_ENDPOINT } from '../../app.constant';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecruitmentCenterListService {\r\n\r\n  data: any;\r\n  recruitmentCenterListSubject: BehaviorSubject<any>;\r\n\r\n  constructor(private userDataService: UserDataService,\r\n    private payloadCommandService: PayloadCommandService,\r\n    private baseConnectionService: BaseConnectionService\r\n  ) {\r\n    this.recruitmentCenterListSubject = new BehaviorSubject(null);\r\n  }\r\n\r\n  getDataObservable(): Observable<any> {\r\n    return this.recruitmentCenterListSubject.asObservable();\r\n  }\r\n\r\n  setRecruitmentCenterListData(data: any): void {\r\n    this.data = data;\r\n    this.recruitmentCenterListSubject.next(data);\r\n  }\r\n\r\n  getRecruitmentCenterList(studyKey: number, baseParam?: Action): Observable<any> {\r\n    if (!AppUtil.isDefined(studyKey, true)) {\r\n      console.log('Error : Can not get Center Summary without Study key');\r\n      return;\r\n    }\r\n    studyKey = studyKey;\r\n    if (studyKey) {\r\n      const params = {\r\n        studyKey: studyKey\r\n      };\r\n      const moduleInfo = CTOSUtil.getModuleInfo(PAGES.ENROLLMENT_DETAILS, studyKey, SITE_MODULE);\r\n      const payload = this.payloadCommandService.getApiRequest(\r\n        COMMAND.RECRUITMENT_CENTER_LIST,\r\n        params,\r\n        null,\r\n        moduleInfo\r\n      );\r\n      const actionParam: Action = {};\r\n      if (!baseParam) {\r\n        baseParam = actionParam;\r\n      }\r\n      baseParam.url = API_ENDPOINT.RECRUITMENT_CENTER_LIST;\r\n      return this.baseConnectionService\r\n        .send(payload, baseParam)\r\n        .pipe(\r\n          map(response => {\r\n            if (response.result === COMMON.RESULT_OK) {\r\n              this.setRecruitmentCenterListData(response);\r\n              return response;\r\n            } else {\r\n              return new ApplicationError(\r\n                response.error.message,\r\n                response.error.errorCode\r\n              );\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnChanges, ViewEncapsulation, SimpleChanges, Input, OnDestroy } from '@angular/core';\r\nimport { NestedItem } from 'common-library';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { FilterBar } from '../../shared/model/sites-filter/filter-bar.interface';\r\nimport { SiteFilterService } from './sites-filter.service';\r\nimport { SELECT_WORLD_WIDE, DEFAULT_SELECTED } from '../../app.constant';\r\n\r\n@Component({\r\n  selector: 'ctos-sites-filter',\r\n  templateUrl: './sites-filter.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SitesFilterComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input() hideRandomizationFilter: Boolean;\r\n  @Input() isCohortStudy: Boolean;\r\n  private readonly subscriptions: Subject<void> = new Subject<void>();\r\n  filterBar: FilterBar;\r\n\r\n  defaultSelectedGeography: NestedItem;\r\n  defaultSelectedCohort: string;\r\n  defaultSelectedMonitor: string;\r\n  defaultSelectedRandomization: string;\r\n\r\n  constructor(private siteFilterService: SiteFilterService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filterBar = {\r\n      resources: this.getResources(),\r\n      randomization: this.siteFilterService.getRandomizationData(),\r\n      geography: []\r\n    };\r\n    this.setDefaultSelection();\r\n    this.defaultSelectedRandomization = this.siteFilterService.selectedRandomizationKey ?\r\n      this.siteFilterService.selectedRandomizationKey : DEFAULT_SELECTED;\r\n    this.setGeographyData();\r\n    this.setCohortData();\r\n    this.setMonitorList();\r\n    this.resetFilter();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n  }\r\n\r\n\r\n  /**\r\n   * @resetFilter\r\n   * This method is used to reset all filters to default value when grid data has been changed by\r\n   * And clear the filter selection values from session storage.\r\n   */\r\n  resetFilter() {\r\n    this.siteFilterService.gridDataHasBeenChanged()\r\n    .pipe(takeUntil(this.subscriptions))\r\n    .subscribe(item => {\r\n      this.siteFilterService.clearGridFilters();\r\n      this.filterBar.randomization = this.siteFilterService.getRandomizationData();\r\n      this.setDefaultSelection();\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * This method is used to set geography dropdown modal data.\r\n  */\r\n  setGeographyData() {\r\n    this.siteFilterService.setGeographyData()\r\n    .pipe(takeUntil(this.subscriptions))\r\n    .subscribe((result) => {\r\n      if (result && result.recruitmentCenterList && result.recruitmentCenterList.recGeoList\r\n        && result.recruitmentCenterList.recGeoList.geography && result.recruitmentCenterList.recGeoList.geography.length > 0) {\r\n        this.filterBar.geography = this.siteFilterService.transformGeographyData(result.recruitmentCenterList.recGeoList.geography);\r\n        this.defaultSelectedGeography = this.siteFilterService.selectedGeography ?\r\n          this.siteFilterService.selectedGeography : { name: SELECT_WORLD_WIDE };\r\n      } else {\r\n        this.filterBar.geography = [];\r\n        this.defaultSelectedGeography = { name: SELECT_WORLD_WIDE };\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * This method is used to set cohort dropdown modal data.\r\n  */\r\n  setCohortData() {\r\n    this.siteFilterService.setCohortData()\r\n    .pipe(takeUntil(this.subscriptions))\r\n    .subscribe((result) => {\r\n      if (result.studySummary && result.studySummary.geoList && result.studySummary.geoList.geography) {\r\n        this.filterBar.cohort = this.siteFilterService.transformCohortData(result.studySummary);\r\n        this.defaultSelectedCohort = this.siteFilterService.selectedCohort ? this.siteFilterService.selectedCohort : DEFAULT_SELECTED;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * This method is used to set monitor dropdown modal data.\r\n  */\r\n  setMonitorData() {\r\n    this.filterBar.monitor = this.siteFilterService.getMonitorData(this.siteFilterService.selectedGeography);\r\n    this.defaultSelectedMonitor = this.siteFilterService.selectedMonitor ? this.siteFilterService.selectedMonitor : DEFAULT_SELECTED;\r\n  }\r\n\r\n  /**\r\n  * This method is used to set default selection of all filter controls\r\n  */\r\n  setDefaultSelection() {\r\n    this.defaultSelectedMonitor = DEFAULT_SELECTED;\r\n    this.defaultSelectedCohort = DEFAULT_SELECTED;\r\n    this.defaultSelectedRandomization = DEFAULT_SELECTED;\r\n    this.defaultSelectedGeography = { name: SELECT_WORLD_WIDE };\r\n  }\r\n\r\n  /**\r\n   * get Filter controls label\r\n   */\r\n  setMonitorList() {\r\n    this.siteFilterService.getCenterSummaryService()\r\n    .pipe(takeUntil(this.subscriptions))\r\n    .subscribe(response => {\r\n      if (response && response.centerSummary) {\r\n        this.siteFilterService.setCenterMonitorList(response.centerSummary);\r\n      } else {\r\n      this.siteFilterService._centerMonitorList = [];\r\n      }\r\n      this.setMonitorData();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * get Filter controls label\r\n   */\r\n  getResources() {\r\n    return this.siteFilterService.sitesFilterControlResources();\r\n  }\r\n\r\n  /**\r\n   * on change of geography select box change\r\n   */\r\n  OnGeographyChange(event) {\r\n    this.siteFilterService.selectedGeography = event;\r\n    console.log(event);\r\n    this.filterBar.monitor = this.siteFilterService.getMonitorData(event);\r\n    this.defaultSelectedMonitor = DEFAULT_SELECTED;\r\n    this.defaultSelectedGeography = event;\r\n    this.siteFilterService.selectedMonitor = this.defaultSelectedMonitor;\r\n    this.siteFilterService.filterHasBeenChanged.next(true);\r\n  }\r\n\r\n  /**\r\n   * on change of cohort select box change\r\n   */\r\n  OnCohortChange(event) {\r\n    console.log(event);\r\n    this.defaultSelectedCohort = event.value;\r\n    this.siteFilterService.selectedCohort = event.value;\r\n    this.siteFilterService.filterHasBeenChanged.next(true);\r\n  }\r\n\r\n\r\n  /**\r\n   * on change of monitor select box change\r\n   */\r\n  OnMonitorChange(event) {\r\n    this.siteFilterService.selectedMonitor = event.value;\r\n    this.defaultSelectedMonitor = event.value;\r\n    this.siteFilterService.filterHasBeenChanged.next(true);\r\n  }\r\n\r\n  /**\r\n   * on change of randomization select box change\r\n   */\r\n  OnRandomizationChange(event) {\r\n    this.defaultSelectedRandomization = event.value;\r\n    this.siteFilterService.selectedRandomizationKey = event.value;\r\n    this.siteFilterService.filterHasBeenChanged.next(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.next();\r\n    this.subscriptions.complete();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { forkJoin, Observable, Subject } from 'rxjs';\r\n\r\nimport { GeoFilter } from 'so-common-library';\r\nimport { GEOGRAPHY_LEVEL, FILTER_PREFERENCES, UNMAPPED_COHORT, DEFAULT_SELECTED, YES, NO } from '../../app.constant';\r\nimport { HeaderService } from '../../header/header.service';\r\nimport { SiteResourceService } from '../../shared/service/site-resource.service';\r\nimport { CenterSummaryService } from '../center-summary/center-summary.service';\r\nimport { NestedItem } from 'common-library';\r\nimport { RecruitmentCenterListService } from '../recruitment-center-list/recruitment-center-list.service';\r\nimport { SelectBox } from '../../shared/model/sites-filter/select-box.interface';\r\nimport { SiteFilterPreferenceService } from '../../shared/service/site-filter-preference.service';\r\nimport { SitesService } from '../sites.service';\r\n\r\n\r\n@Injectable()\r\nexport class SiteFilterService {\r\n\r\n    public _centerMonitorList: any = [];\r\n    public _regionMonitorList: any = {};\r\n    public _countryMonitorList: any = {};\r\n    filterHasBeenChanged: Subject<Boolean>;\r\n    filterHasBeenChanged$: Observable<Boolean>;\r\n\r\n    constructor(\r\n        private siteResourceService: SiteResourceService,\r\n        private headerService: HeaderService,\r\n        private centerSummaryService: CenterSummaryService,\r\n        private recruitmentCenterListService: RecruitmentCenterListService,\r\n        private siteFilterPreferenceService: SiteFilterPreferenceService,\r\n        private sitesService: SitesService) {\r\n        this.filterHasBeenChanged = new Subject<Boolean>();\r\n        this.filterHasBeenChanged$ = this.filterHasBeenChanged.asObservable();\r\n    }\r\n\r\n\r\n    /*\r\n     * getter and setter of last selected value of filter control.\r\n     * These methods are used to get last preference value from session storage and\r\n     * also it is used to set lasted preference value into session storage\r\n     */\r\n\r\n    public set selectedGeography(geography: NestedItem) {\r\n        // this.setGeographyKey(geography);\r\n        this.siteFilterPreferenceService.setSitesFilterPreference(FILTER_PREFERENCES.GEOGRAPHY, JSON.stringify(geography));\r\n    }\r\n\r\n    public get selectedGeography(): NestedItem {\r\n        // return this.getGeographyKey();\r\n        return this.siteFilterPreferenceService.getSitesFilterPreference(FILTER_PREFERENCES.GEOGRAPHY);\r\n    }\r\n\r\n\r\n    public set selectedCohort(cohortKey: string) {\r\n        // this.setCohortKey(cohortKey);\r\n        this.siteFilterPreferenceService.setSitesFilterPreference(FILTER_PREFERENCES.COHORT, cohortKey);\r\n    }\r\n\r\n    public get selectedCohort() {\r\n        // return this.getCohortKey();\r\n        return this.siteFilterPreferenceService.getSitesFilterPreference(FILTER_PREFERENCES.COHORT);\r\n    }\r\n\r\n\r\n    public set selectedMonitor(monitorKey: string) {\r\n        // this.setMonitorKey(monitorKey);\r\n        this.siteFilterPreferenceService.setSitesFilterPreference(FILTER_PREFERENCES.MONITOR, monitorKey);\r\n    }\r\n\r\n    public get selectedMonitor() {\r\n        // return this.getMonitorKey();\r\n        return this.siteFilterPreferenceService.getSitesFilterPreference(FILTER_PREFERENCES.MONITOR);\r\n    }\r\n\r\n\r\n    public set selectedRandomizationKey(randomization_key: string) {\r\n        // this.setRandomizationKey(randomization_key);\r\n        this.siteFilterPreferenceService.setSitesFilterPreference(FILTER_PREFERENCES.RANDOMIZATION, randomization_key);\r\n    }\r\n\r\n    public get selectedRandomizationKey() {\r\n        // return this.getRandomizationKey();\r\n        return this.siteFilterPreferenceService.getSitesFilterPreference(FILTER_PREFERENCES.RANDOMIZATION);\r\n    }\r\n\r\n    clearGridFilters() {\r\n        this.siteFilterPreferenceService.clearGridFilterPreferences();\r\n    }\r\n\r\n    /********************* Finish *********************/\r\n\r\n    setGeographyData(): Observable<any> {\r\n        return this.recruitmentCenterListService.getDataObservable();\r\n    }\r\n\r\n    setCohortData(): Observable<any> {\r\n        return this.headerService.studySummary;\r\n    }\r\n\r\n    /**\r\n     *  This is method is used to transform and return geography dropdown data\r\n     */\r\n    transformGeographyData(geoListDetails: any): GeoFilter[] {\r\n        let geoList = [];\r\n        geoList = geoListDetails.map((geo) => {\r\n            return {\r\n                key: geo.geographyKey,\r\n                level: geo.geographyLevel\r\n            };\r\n        });\r\n        return geoList;\r\n    }\r\n\r\n    /**\r\n     *  This method is called when grid data has been changed.\r\n     */\r\n\r\n    gridDataHasBeenChanged(): Observable<boolean> {\r\n        return this.sitesService.gridDataHasBeenChanged$;\r\n    }\r\n\r\n    /**\r\n     *  This is method is used to transform and return cohort dropdown data\r\n     */\r\n\r\n    transformCohortData(geoListDetails: any): any[] {\r\n        let cohorList = [];\r\n        const geoList = geoListDetails.geoList &&  geoListDetails.geoList.geography ? [].concat(geoListDetails.geoList.geography) : [];\r\n        const geoListWithcohort = geoList.filter((geo) => geo.geographyLevel === GEOGRAPHY_LEVEL.WORLDWIDE);\r\n        const cohortData = geoListWithcohort.length > 0 ? geoListWithcohort[0] : [];\r\n        cohorList = this.getCohortList(cohortData);\r\n        return cohorList;\r\n    }\r\n\r\n    getCohortList(cohortData) {\r\n\r\n        let cohortOptionsList = [];\r\n        const cohortCategories = this.siteResourceService.getCohortCategories;\r\n        const groupingDropDownResource = this.siteResourceService.getCohortDropDownResource;\r\n        if (cohortData.cohortList && cohortData.cohortList.cohort) {\r\n        const cohortDataList = cohortData.cohortList && cohortData.cohortList.cohort ? [].concat(cohortData.cohortList.cohort) : [];\r\n            if (cohortDataList.length > 0) {\r\n                cohortDataList.map(data => {\r\n                    let tooltip = '';\r\n                    if (data.isInPlan === NO && !data.cohortName &&  data.cohortId !== UNMAPPED_COHORT && data.isInSource === YES) {\r\n                        const cohortObj = cohortCategories.find(index => index.name === groupingDropDownResource.unmapped_actual_cohort);\r\n                        if (!data.cohortName) {\r\n                            data.cohortName = data.cohortId;\r\n                            data.cohortKey = data.studyCohortKey;\r\n                        }\r\n                        tooltip = data.cohortName;\r\n                        cohortObj.options.push({ value: data.cohortKey, viewValue: data.cohortName, tooltip: tooltip });\r\n                    } else if (data.isInPlan === YES && data.cohortId !== UNMAPPED_COHORT) {\r\n                        const cohortObj = cohortCategories.find(index => index.name === groupingDropDownResource.mapped_planned_cohort);\r\n                        tooltip = data.cohortName;\r\n                        cohortObj.options.push({ value: data.cohortKey, viewValue: data.cohortName, tooltip: tooltip });\r\n                    } else if (data.isInPlan === YES && data.cohortId === UNMAPPED_COHORT) {\r\n                        const cohortObj = cohortCategories.find(index => index.name === groupingDropDownResource.unmapped_planned_cohort);\r\n                        tooltip = data.cohortName;\r\n                        cohortObj.options.push({ value: data.cohortKey, viewValue: data.cohortName, tooltip: tooltip });\r\n                    } else if (data.isInPlan === NO && data.cohortId !== UNMAPPED_COHORT) {\r\n                        const cohortObj = cohortCategories.find(index => index.name === groupingDropDownResource.mapped_unplanned_cohort);\r\n                        tooltip = data.cohortName;\r\n                        cohortObj.options.push({ value: data.cohortKey, viewValue: data.cohortName, tooltip: tooltip });\r\n                    } else { }\r\n                });\r\n            }\r\n        }\r\n        cohortOptionsList = cohortCategories.filter(items => {\r\n            return items.options.length > 0;\r\n        });\r\n        return cohortOptionsList;\r\n    }\r\n\r\n    /**\r\n     *  This is method is used to set country and region vice monitor list from center summary.\r\n     *  @example\r\n     *  @centerSummaryData center summary data\r\n     */\r\n    setCenterMonitorList(centerSummaryData) {\r\n        const countryMonitorList = {};\r\n        const regionMonitorList = {};\r\n        let allMonitorList = [];\r\n        if (centerSummaryData && centerSummaryData.centerThumbnail) {\r\n            const centerMonitorList = centerSummaryData.centerThumbnail;\r\n            centerMonitorList.forEach(function (item) {\r\n                const cohortMonitorList = item.centerMonitorList && item.centerMonitorList.centerMonitor\r\n                ? [].concat(item.centerMonitorList.centerMonitor) : [];\r\n                if (cohortMonitorList\r\n                    && cohortMonitorList.length > 0) {\r\n\r\n                    if (countryMonitorList[item.country]) {\r\n                        countryMonitorList[item.country] = [...countryMonitorList[item.country], ...cohortMonitorList];\r\n                    } else {\r\n                        countryMonitorList[item.country] = [...cohortMonitorList];\r\n                    }\r\n                    if (regionMonitorList[item.region]) {\r\n                        regionMonitorList[item.region] = [...regionMonitorList[item.region], ...cohortMonitorList];\r\n                    } else {\r\n                        regionMonitorList[item.region] = [...cohortMonitorList];\r\n                    }\r\n\r\n                    if (allMonitorList.length > 0) {\r\n                        allMonitorList = [...allMonitorList, ...cohortMonitorList];\r\n                    } else {\r\n                        allMonitorList = [...cohortMonitorList];\r\n                    }\r\n                }\r\n            });\r\n            this._countryMonitorList = countryMonitorList; // country vice monitor list\r\n            this._regionMonitorList = regionMonitorList;   // region vice monitor list\r\n            this._centerMonitorList = allMonitorList;      // region and country vice monitor list\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is used to set monitor data.\r\n     * It works for default WW selection and Onchange of geography dropdown.\r\n     */\r\n    getMonitorData(selectedGeographyObj?: any) {\r\n        let monitorList = [];\r\n        if (this._centerMonitorList && this._centerMonitorList.length > 0) {\r\n            const filteredCenterList = this.filterMonitorList(selectedGeographyObj);\r\n            if (filteredCenterList.length > 0) {\r\n                monitorList = filteredCenterList.sort((a, b) => a.viewValue.localeCompare(b.viewValue));\r\n            }\r\n        }\r\n        return [this.getDefaultValue(this.sitesFilterControlResources().sites_monitor_selectAll),\r\n        ...monitorList];\r\n    }\r\n\r\n    filterMonitorList(selectedGeographyObj?: any) {\r\n        let filterList = [];\r\n        if (this._centerMonitorList && this._centerMonitorList.length > 0) {\r\n            if (!selectedGeographyObj) {\r\n                filterList = this.transformMonitorData(this._centerMonitorList);\r\n            } else {\r\n                let selectedMonitorList = [];\r\n                if (selectedGeographyObj.code !== GEOGRAPHY_LEVEL.WORLDWIDE && !selectedGeographyObj.children) {\r\n                    selectedMonitorList = this._countryMonitorList[selectedGeographyObj.name] ?\r\n                        this._countryMonitorList[selectedGeographyObj.name] : '';\r\n                } else if (selectedGeographyObj.code !== GEOGRAPHY_LEVEL.WORLDWIDE && selectedGeographyObj.children) {\r\n                    selectedMonitorList = this._regionMonitorList[selectedGeographyObj.name] ?\r\n                        this._regionMonitorList[selectedGeographyObj.name] : '';\r\n                } else {\r\n                    selectedMonitorList = this._centerMonitorList;\r\n                }\r\n                if (selectedMonitorList.length > 0) {\r\n                    filterList = this.transformMonitorData(selectedMonitorList);\r\n                }\r\n            }\r\n        }\r\n        return filterList;\r\n    }\r\n\r\n    transformMonitorData(monitorList: any[]) {\r\n        const MList = [];\r\n        const checkDupMonitorList = [];\r\n        for (const key in monitorList) {\r\n            if (monitorList.hasOwnProperty(key)) {\r\n                const monitor = monitorList[key];\r\n                /***check for duplication of monitor ***/\r\n                if (checkDupMonitorList.indexOf(monitor.monitorKey) === -1) {\r\n                    MList.push(this.getMonitor(monitor));\r\n                    checkDupMonitorList.push(monitor.monitorKey);\r\n                }\r\n            }\r\n        }\r\n        return MList;\r\n    }\r\n\r\n    /**\r\n     * This method is used to return modal data of monitor dropdown\r\n     */\r\n    getMonitor(monitor: any) {\r\n        return {\r\n            value: monitor.monitorKey.toString(),\r\n            viewValue: monitor.monitorName,\r\n            disabled: false\r\n        };\r\n    }\r\n\r\n    getCenterSummaryService(): Observable<any> {\r\n        return this.centerSummaryService.getDataObservable();\r\n    }\r\n\r\n    /**\r\n     * This method is used to set select All resource of filter controls.\r\n     */\r\n    getDefaultValue(defaultValueResource: string): SelectBox {\r\n        return { value: DEFAULT_SELECTED, viewValue: defaultValueResource, disabled: false };\r\n    }\r\n\r\n    /**\r\n     * This method is used to return modal data of randomization dropdown.\r\n     */\r\n    getRandomizationData() {\r\n        return this.siteResourceService.sitesRandomizationOptionResources;\r\n    }\r\n\r\n    /**\r\n     * This method is used to return all sites filter component resources.\r\n     * @returns\r\n     * {geography: geography,\r\n     * monitor: monitor,\r\n     * cohort: cohort,\r\n     * randomization:randomization};\r\n     */\r\n    sitesFilterControlResources() {\r\n        return this.siteResourceService.sitesFilterControlResources;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // private setGeographyKey(value: any) {\r\n    //    // sessionStorage.setItem('geography_key', );\r\n    //     this.setSitesFilterPreference('geography_key', JSON.stringify(value));\r\n    // }\r\n\r\n    // private getGeographyKey() {\r\n    //     // const retrievedObject = sessionStorage.getItem('geography_key');\r\n    //     // return JSON.parse(retrievedObject)\r\n    //  return this.getSitesFilterPreference('geography_key');\r\n    // }\r\n\r\n    // setMonitorKey(value: string) {\r\n    //     // sessionStorage.setItem('monitor_key', value);\r\n    //     this.setSitesFilterPreference('monitor_key', value);\r\n    // }\r\n\r\n    // getMonitorKey() {\r\n    //     // return sessionStorage.getItem('monitor_key');\r\n    //     return this.getSitesFilterPreference('monitor_key');\r\n    // }\r\n\r\n    // setCohortKey(value: any) {\r\n    //     // sessionStorage.setItem('cohort_key', value);\r\n    //     this.setSitesFilterPreference('cohort_key', value);\r\n    // }\r\n\r\n    // getCohortKey() {\r\n    //    // return sessionStorage.getItem('cohort_key');\r\n    //    return this.getSitesFilterPreference('cohort_key');\r\n    // }\r\n\r\n    // setRandomizationKey(value: any) {\r\n    //     // sessionStorage.setItem('randomization_key', value);\r\n    //     this.setSitesFilterPreference('randomization_key', value);\r\n    // }\r\n\r\n    // getRandomizationKey() {\r\n    //    return  this.getSitesFilterPreference('randomization_key');\r\n    //     // return sessionStorage.getItem('randomization_key');\r\n    // }\r\n\r\n\r\n    /************ Finish    *************************/\r\n    // getSitesFilterPreference(storageKey: string) {\r\n    //     if (this.getSitesFilterSessionStorage()) {\r\n    //         const retrievedObject = this.getSitesFilterSessionStorage();\r\n    //         const sites_filter_preference = JSON.parse(retrievedObject);\r\n    //         if (sites_filter_preference[storageKey]) {\r\n    //             if (storageKey === 'geography_key') {\r\n    //                 return JSON.parse(sites_filter_preference[storageKey]);\r\n    //             } else {\r\n    //                 return sites_filter_preference[storageKey];\r\n    //             }\r\n    //         } else {\r\n    //             return null;\r\n    //         }\r\n    //     } else {\r\n    //         return null;\r\n    //     }\r\n    // }\r\n\r\n\r\n    // setSitesFilterPreference(storageKey: string, value: string) {\r\n    //     if (this.getSitesFilterSessionStorage()) {\r\n    //         const retrievedObject = this.getSitesFilterSessionStorage();\r\n    //         const sites_filter_preference = JSON.parse(retrievedObject);\r\n    //         sites_filter_preference[storageKey] = value;\r\n    //         this.setSitesFilterSessionStorage(JSON.stringify(sites_filter_preference));\r\n    //     } else {\r\n    //         const sites_filter_preference = {};\r\n    //         sites_filter_preference[storageKey] =  value;\r\n    //         this.setSitesFilterSessionStorage(JSON.stringify(sites_filter_preference));\r\n    //     }\r\n    // }\r\n\r\n    // getSitesFilterSessionStorage() {\r\n    //     return sessionStorage.getItem('sites_filter_preference');\r\n    // }\r\n\r\n    // setSitesFilterSessionStorage(value: any) {\r\n    //     return sessionStorage.setItem('sites_filter_preference', value);\r\n    // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SitesComponent } from './sites.component';\r\nimport { AuthGuard } from 'so-common-library';\r\nimport { environment } from 'environments/environment.prod';\r\nimport { HELP_ID_CONSTANTS } from 'common-library';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SitesComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { 'loginUrl': environment.login_url, 'moduleId': 5 },\r\n    children: [\r\n      {\r\n        path: 'enrollment-details',\r\n        loadChildren: () => import('./enrollment-details/enrollment-details.module').then(m => m.EnrollmentDetailsModule),\r\n      //  data: { preload: true }\r\n        data: { preload: true}\r\n      },\r\n      {\r\n        path: 'enrollment-scorecard',\r\n        loadChildren: () => import('./enrollment-scorecard/enrollment-scorecard.module').then(m => m.EnrollmentScorecardModule),\r\n        data: { preload: true, helpId: HELP_ID_CONSTANTS.SITE_SCORECARD }\r\n      },\r\n      {\r\n        path: 'data-management-details',\r\n        loadChildren: () => import('./data-management-details/data-management-details.module')\r\n        .then(m => m.DataManagementDetailsModule),\r\n        data: { preload: true, helpId: HELP_ID_CONSTANTS.SITE_DATA_MANAGMENT }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SitesRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hcHA0L3NyYy9hcHAvc2l0ZXMvc2l0ZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { TabItem, Action } from 'common-library';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { PAGE_IDS, GEOGRAPHY_LEVEL } from '../app.constant';\r\nimport { SiteSubTab } from '../shared/model/site-sub-tab';\r\nimport { SitesService } from './sites.service';\r\nimport { MenusOption } from '@app/shared/model/menus-option.model';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n// import { CenterSummaryService } from './center-summary/center-summary.service';\r\n// import { RecruitmentCenterListService  } from './recruitment-center-list/recruitment-center-list.service';\r\n\r\n@Component({\r\n  selector: 'ctos-sites',\r\n  templateUrl: './sites.component.html',\r\n  styleUrls: ['./sites.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SitesComponent implements OnInit, OnDestroy {\r\n\r\n  siteSubTab: SiteSubTab;\r\n  selectedItem: TabItem;\r\n  public menuOption: MenusOption[] = [];\r\n  public hideRandomizationFilter = false;\r\n  public isCohortStudy = false;\r\n\r\n  private readonly subscriptions: Subject<void> = new Subject<void>();\r\n\r\n  constructor(private sitesService: SitesService,\r\n    private route: Router\r\n    ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    const studyID = this.sitesService.getLastVisitedStudyKey();\r\n    this.loadSiteData(studyID);\r\n    this.siteSubTab = new SiteSubTab();\r\n    this.siteSubTab.tabItems = this.sitesService.getTabItems();\r\n    this.selectedItem = this.sitesService.getTabItem();\r\n    this.getMenuOptions();\r\n    this.redirectToTab();\r\n    this.checkIscohortStudy();\r\n  }\r\n\r\n  /**\r\n    * This method is used to redirect to default enrollment details if last selected tab is not set\r\n    * If last selected tab is set then it should be redirect to it.\r\n    */\r\n   redirectToTab() {\r\n    if (this.selectedItem) {\r\n      const routePath = this.sitesService.lastSelectedTabKey ? this.sitesService.lastSelectedTabKey : this.selectedItem.routePath;\r\n      this.route.navigate([\r\n        '/sites',\r\n        routePath\r\n      ]).then(data => {\r\n        this.sitesService.lastSelectedTabKey = routePath;\r\n        this.selectedItem = this.siteSubTab.tabItems.find(item => item.routePath === routePath);\r\n        this.hideRandomizationFilter = routePath === PAGE_IDS.DATA_MANAGEMENT_DETAILS;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n    * Action After clicked on sites subtab\r\n    * then it will load respective modules\r\n    */\r\n  onTabClicked(event) {\r\n    if (event !== undefined && event !== null && event.routePath !== undefined &&  event.routePath !== null) {\r\n      this.route.navigate([\r\n        '/sites',\r\n        event.routePath\r\n      ]).then(data => {\r\n        this.sitesService.lastSelectedTabKey = event.routePath;\r\n        this.hideRandomizationFilter = event.routePath === PAGE_IDS.DATA_MANAGEMENT_DETAILS;\r\n        // this.checkIscohortStudy();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Gets menu options\r\n  */\r\n  getMenuOptions() {\r\n    this.sitesService.setMenuOption();\r\n    this.menuOption = this.sitesService.options;\r\n  }\r\n\r\n  checkIscohortStudy() {\r\n    const actionParam: Action = {\r\n      endPoint: true\r\n    };\r\n    this.sitesService.getStudytags(actionParam).pipe(takeUntil(this.subscriptions)).subscribe(items => {\r\n      const studyID = this.sitesService.getLastVisitedStudyKey();\r\n      this.isCohortStudy = this.sitesService.isCohortStudy(studyID) &&  !this.hideRandomizationFilter;\r\n    });\r\n  }\r\n\r\n  /**\r\n    * onStudyChanged is called when change study from study dropdown.\r\n    * @param event\r\n    */\r\n  onStudyChanged(event: any) {\r\n    console.log('Event: Study changed : ', event);\r\n    if (event && event.option && event.option.value) {\r\n      this.isCohortStudy = this.sitesService.isCohortStudy(event.option.value.key);\r\n      this.loadSiteData(event.option.value.key);\r\n      this.sitesService.setStudyChangeData(event.option.value.key);\r\n    } else {\r\n      throw Error('Study event data is missing');\r\n    }\r\n  }\r\n\r\n  /**\r\n    * This method used to call center cummary and recruiterList Api.\r\n    * @param studyID\r\n    */\r\n  loadSiteData(studyID: number) {\r\n    this.sitesService.getSiteData(studyID).pipe(takeUntil(this.subscriptions)).subscribe(item => {\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n      this.subscriptions.next();\r\n      this.subscriptions.complete();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SitesRoutingModule } from './sites-routing.module';\r\nimport { SitesComponent } from './sites.component';\r\nimport { HeaderComponent } from '../header/header.component';\r\nimport { CommonAngularMaterialModule, CommonLibraryModule } from 'common-library';\r\nimport { SoCommonLibraryModule, StudySummaryService} from 'so-common-library';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\nimport { SitesFilterComponent } from './sites-filter/sites-filter.component';\r\n\r\nimport { SitesService } from './sites.service';\r\nimport { SiteFilterService } from './sites-filter/sites-filter.service';\r\nimport { GridFilterService } from './grid-filter.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [SitesComponent, HeaderComponent, SitesFilterComponent],\r\n  providers: [SitesService, SiteFilterService, GridFilterService, StudySummaryService],\r\n  imports: [\r\n    CommonModule,\r\n    SitesRoutingModule,\r\n    SoCommonLibraryModule,\r\n    CommonLibraryModule,\r\n    HttpClientModule,\r\n    CommonAngularMaterialModule,\r\n    SharedModule\r\n  ],\r\n  exports: [SitesComponent]\r\n})\r\nexport class SitesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { forkJoin, Observable, BehaviorSubject, Subject } from 'rxjs';\r\nimport { LocaleAppResourcesService, TabItem, Action, AppUtil } from 'common-library';\r\n\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { PAGE_IDS, FILTER_PREFERENCES } from '../app.constant';\r\nimport { MenusOption } from '@app/shared/model/menus-option.model';\r\nimport { MenusOptionType } from '@app/shared/model/menus-option.interface';\r\n\r\nimport { SiteResourceService } from '../shared/service/site-resource.service';\r\nimport { HeaderService } from '../header/header.service';\r\nimport { CenterSummaryService } from './center-summary/center-summary.service';\r\nimport { StudySummaryService, StudyListService, AppDataService } from 'so-common-library';\r\nimport { RecruitmentCenterListService } from './recruitment-center-list/recruitment-center-list.service';\r\nimport { SiteFilterPreferenceService } from '../shared/service/site-filter-preference.service';\r\n\r\n@Injectable()\r\nexport class SitesService {\r\n  public studyRefreshDate: any;\r\n  studySummaryData: any = {};\r\n  searchListFormGroupName: FormGroup;\r\n  siteSubject: BehaviorSubject<any>;\r\n  studyChangeSubject: BehaviorSubject<any>;\r\n  data: any;\r\n\r\n  gridDataHasBeenChanged: Subject<boolean>;\r\n  gridDataHasBeenChanged$: Observable<boolean>;\r\n\r\n  constructor(private localeAppResourcesService: LocaleAppResourcesService,\r\n    private siteResourceService: SiteResourceService,\r\n    private headerService: HeaderService,\r\n    private centerSummaryService: CenterSummaryService,\r\n      private recruitmentCenterListService: RecruitmentCenterListService,\r\n      private studySummaryService: StudySummaryService,\r\n      public studyListService: StudyListService,\r\n    public appDataService: AppDataService,\r\n    public siteFilterPreferenceService: SiteFilterPreferenceService,\r\n  ) {\r\n    this.setResources();\r\n    this.siteSubject = new BehaviorSubject(null);\r\n    this.studyChangeSubject = new BehaviorSubject(null);\r\n    this.gridDataHasBeenChanged = new Subject<boolean>();\r\n    this.gridDataHasBeenChanged$ = this.gridDataHasBeenChanged.asObservable();\r\n  }\r\n\r\n  private _options: Array<MenusOptionType>;\r\n  public get options(): Array<MenusOptionType> {\r\n    return this._options;\r\n  }\r\n  public set options(v: Array<MenusOptionType>) {\r\n    this._options = v;\r\n  }\r\n\r\n  private _resources: any;\r\n  public get resources(): any {\r\n    return this._resources;\r\n  }\r\n  public set resources(v: any) {\r\n    this._resources = v;\r\n  }\r\n\r\n  public set lastSelectedTabKey(tabKey: string) {\r\n    this.setLastSelectedTabKey(tabKey);\r\n}\r\n\r\n  public get lastSelectedTabKey() {\r\n      return this.getLastSelectedTabKey();\r\n  }\r\n\r\n  getResource(resource: string): string {\r\n    return this.localeAppResourcesService.getResource(resource);\r\n  }\r\n\r\n  /**\r\n  * @returns [{tabLabels.ENROLLMENT_DETAILS},\r\n  * {tabLabels.ENROLLMENT_SCORECARD},\r\n  * {tabLabels.DATA_MANAGEMENT_DETAILS}\r\n  */\r\n  getTabItems() {\r\n    // tslint:disable-next-line:prefer-const\r\n    let tabItems = new Array<TabItem>();\r\n    const tabLabels = this.getTabLabels();\r\n    let item = {\r\n      label: tabLabels.ENROLLMENT_DETAILS,\r\n      routePath: PAGE_IDS.ENROLLMENT_DETAILS,\r\n      enable: true\r\n    };\r\n    tabItems.push(item);\r\n    item = {\r\n      label: tabLabels.ENROLLMENT_SCORECARD,\r\n      routePath: PAGE_IDS.ENROLLMENT_SCORECARD,\r\n      enable: true\r\n    };\r\n    tabItems.push(item);\r\n   if (this.appDataService.appDataResponse.appMetadata.isDMAvailable) {\r\n    console.log('appDataService', this.appDataService.appDataResponse.appMetadata.isDMAvailable);\r\n    item = {\r\n      label: tabLabels.DATA_MANAGEMENT_DETAILS,\r\n      routePath: PAGE_IDS.DATA_MANAGEMENT_DETAILS,\r\n      enable: true\r\n    };\r\n    tabItems.push(item);\r\n  }\r\n    return tabItems;\r\n  }\r\n\r\n  getTabItem(): TabItem {\r\n    const tabLabels = this.getTabLabels();\r\n    return {\r\n      enable: true,\r\n      label: tabLabels.ENROLLMENT_DETAILS,\r\n      routePath: PAGE_IDS.ENROLLMENT_DETAILS\r\n    };\r\n  }\r\n  /**\r\n   * @returns\r\n   * {PLAN_PROPERTIES: ENROLLMENT_DETAILS,\r\n   * COUNTRIES: ENROLLMENT_SCORECARD,\r\n   * RATE_ADJUSTMENTS: DATA_MANAGEMENT_DETAILS};\r\n   */\r\n  private getTabLabels() {\r\n    return this.siteResourceService.siteSubTabResource;\r\n  }\r\n\r\n  public setOptions(): void {\r\n    this.options = [];\r\n    this.options.push(new MenusOption(this.resources.EXPANDGRID, 'Refresh'));\r\n  }\r\n\r\n  setMenuOption() {\r\n    this.setOptions();\r\n  }\r\n\r\n  getStudytags(actionParam?: Action): Observable<any> {\r\n    return this.headerService.getStudytags(actionParam);\r\n  }\r\n\r\n  isCohortStudy(studyID: number): boolean {\r\n    return this.headerService.isCohortStudy(studyID);\r\n  }\r\n\r\n  getLastVisitedStudyKey(): number {\r\n    return this.headerService.getLastVisitedStudyKey();\r\n  }\r\n\r\n  private setResources(): void {\r\n    const actionResource = this.siteResourceService.actionResource;\r\n    this.resources = {\r\n      EXPANDGRID: actionResource.EXPANDGRID,\r\n      COLLAPSEGRID: actionResource.COLLAPSEGRID,\r\n      PRINT: actionResource.PRINT,\r\n      COPY: actionResource.COPY,\r\n      EXPORT: actionResource.EXPORT,\r\n      MANGECOUNTRYGRID: actionResource.MANGECOUNTRYGRID,\r\n      MANAGECOUNTRYGRIDEDIT: actionResource.MANAGECOUNTRYGRIDEDIT\r\n    };\r\n  }\r\n\r\n\r\n  /**** Setter and Getter of last selected tab in session storage *****/\r\n\r\n  private setLastSelectedTabKey(value: any) {\r\n    sessionStorage.setItem('last_selected_site_sub_key', value);\r\n  }\r\n\r\n  private getLastSelectedTabKey() {\r\n    return sessionStorage.getItem('last_selected_site_sub_key');\r\n  }\r\n\r\n  /**\r\n   * This method used to call to center Summary list and recruitement list and study Summary data\r\n   * After getting data, its set behaviour subject and it is going access in Enrollment details grid service\r\n   * and filter Service.\r\n   * Also it reset previous filter preferences\r\n   * @param { Number } StudyKey\r\n   */\r\n  getSiteData(studyKey: number): Observable<any> {\r\n    if (!AppUtil.isDefined(studyKey)) {\r\n      throw Error('Study Key missing : Can not get site data without study key');\r\n      return;\r\n    }\r\n    this.resetFilters(studyKey);\r\n    return forkJoin(\r\n      this.centerSummaryService.getCenterSummary(studyKey),\r\n      this.recruitmentCenterListService.getRecruitmentCenterList(studyKey),\r\n      this.studySummaryService.getStudySummary(studyKey)\r\n    ).pipe(\r\n      map(response => {\r\n        this.setSiteData(response);\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method used to reset previous filter preferences.\r\n   * @param { number } studyKey\r\n   */\r\n  resetFilters(studyKey: number): void {\r\n    const lastVisitedStudyID = parseInt(this.siteFilterPreferenceService.getSitesFilterPreference(FILTER_PREFERENCES.LASTVISITED_STUDYKEY\r\n    ), 10);\r\n    if (lastVisitedStudyID && lastVisitedStudyID !== studyKey ) {\r\n      this.gridDataHasBeenChanged.next(true);\r\n      this.siteFilterPreferenceService.setSitesFilterPreference(FILTER_PREFERENCES.LASTVISITED_STUDYKEY, studyKey.toString());\r\n    } else {\r\n      this.siteFilterPreferenceService.setSitesFilterPreference(FILTER_PREFERENCES.LASTVISITED_STUDYKEY, studyKey.toString());\r\n    }\r\n  }\r\n\r\n  getDataObservable(): Observable<any> {\r\n    return this.siteSubject.asObservable();\r\n  }\r\n\r\n  getStudyChangeObservable(): Observable<any> {\r\n    return this.studyChangeSubject.asObservable();\r\n  }\r\n\r\n  setSiteData(data: any): void {\r\n    this.data = data;\r\n    this.siteSubject.next(data);\r\n  }\r\n  setStudyChangeData(data: any): void {\r\n    this.studyChangeSubject.next(data);\r\n  }\r\n\r\n  getReportingPeriod(studyKey: number): any {\r\n    const reportingPriodFreq = this.studyListService.getStudyInfoByKey(\r\n      studyKey\r\n    );\r\n    let reportingFreq: any = {};\r\n    if (reportingPriodFreq) {\r\n      reportingFreq = this.appDataService.getReportingFreqDefByName(\r\n        reportingPriodFreq.reportingPeriod\r\n      );\r\n    }\r\n    return {reportingFreq: reportingFreq.Value, reportingFreqLabel: reportingPriodFreq.reportingPeriod};\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}