{"version":3,"sources":["D:/DecisionView/6.1Country/studyoptimizer/client/nworkspace/client-studyOptimizer-app/dist/common-library/fesm5/common-library.js","D:/DecisionView/6.1Country/studyoptimizer/client/nworkspace/client-studyOptimizer-app/dist/so-common-library/fesm5/so-common-library.js","D:/DecisionView/6.1Country/studyoptimizer/client/nworkspace/client-studyOptimizer-app/environments/environment.ts","D:/DecisionView/6.1Country/studyoptimizer/client/nworkspace/client-studyOptimizer-app/node_modules/moment/locale sync ^\\.\\/.*$","../common-library/src/lib/components/auth-main-header/auth-main-header.component.html","../common-library/src/lib/components/breadcrumb/breadcrumb.component.html","../common-library/src/lib/components/confirmation-dialog/confirmation-dialog.component.html","../common-library/src/lib/components/context-menu/context-menu.component.html","../common-library/src/lib/components/display-banner/display-banner.component.html","../common-library/src/lib/components/export/export.component.html","../common-library/src/lib/components/info/info.component.html","../common-library/src/lib/components/main-header/main-header.component.html","../common-library/src/lib/components/nested-dropdown/nested-dropdown.component.html","../common-library/src/lib/components/notes/notes.component.html","../common-library/src/lib/components/password/password.component.html","../common-library/src/lib/components/redirect/redirect.component.html","../common-library/src/lib/components/search-list/search-list.component.html","../common-library/src/lib/components/sub-header/sub-header.component.html","../common-library/src/lib/components/tab/tab.component.html","./src/app/app.component.html","D:/DecisionView/6.1Country/studyoptimizer/client/nworkspace/client-studyOptimizer-app/node_modules/tslib/tslib.es6.js","D:/DecisionView/6.1Country/studyoptimizer/client/nworkspace/client-studyOptimizer-app/product.constants.ts","../common-library/src/lib/common-angular-material/common-angular-material.module.ts","../common-library/src/lib/common-angular-material/ctos-date-adapter.ts","../common-library/src/lib/common-angular-material/scroll.ts","../common-library/src/lib/common-library.module.ts","../common-library/src/lib/components/auth-main-header/auth-main-header.component.ts","../common-library/src/lib/components/breadcrumb/breadcrumb.component.ts","../common-library/src/lib/components/breadcrumb/breadcrumb.service.ts","../common-library/src/lib/components/components.module.ts","../common-library/src/lib/components/confirmation-dialog/confirmation-dialog.component.ts","../common-library/src/lib/components/context-menu/context-menu.component.ts","../common-library/src/lib/components/display-banner/display-banner.component.ts","../common-library/src/lib/components/export/export.component.ts","../common-library/src/lib/components/info/info.component.ts","../common-library/src/lib/components/main-header/main-header.component.ts","../common-library/src/lib/components/nested-dropdown/nested-dropdown.component.scss","../common-library/src/lib/components/nested-dropdown/nested-dropdown.component.ts","../common-library/src/lib/components/notes/notes.component.ts","../common-library/src/lib/components/password/password.component.ts","../common-library/src/lib/components/redirect/redirect.component.ts","../common-library/src/lib/components/search-list/search-list.component.ts","../common-library/src/lib/components/sub-header/sub-header.component.ts","../common-library/src/lib/components/tab/tab.component.ts","../common-library/src/lib/directives/confirm-equal-validator.directive.ts","../common-library/src/lib/directives/label-control.directive.ts","../common-library/src/lib/directives/signed-decimal.directive.ts","../common-library/src/lib/directives/signed-integer.directive.ts","../common-library/src/lib/models/ApplicationError.ts","../common-library/src/lib/models/api-end-points.enum.ts","../common-library/src/lib/models/api-payload.ts","../common-library/src/lib/models/app-bootstrap.ts","../common-library/src/lib/models/appWindow.ts","../common-library/src/lib/models/cache/cache.factory.ts","../common-library/src/lib/models/cache/cryptoJS-encryption.ts","../common-library/src/lib/models/cache/session-store.ts","../common-library/src/lib/models/ctos-window.ts","../common-library/src/lib/models/http-verbs.ts","../common-library/src/lib/models/list-item.ts","../common-library/src/lib/models/payload.ts","../common-library/src/lib/models/user-idle.config.ts","../common-library/src/lib/models/user-profile.ts","../common-library/src/lib/services/base-connection.service.ts","../common-library/src/lib/services/base-payload-command.service.ts","../common-library/src/lib/services/base-terms.service.ts","../common-library/src/lib/services/cache/cache-store-manager.service.ts","../common-library/src/lib/services/cache/encryption.service.ts","../common-library/src/lib/services/cache/in-memory.service.ts","../common-library/src/lib/services/configuration.service.ts","../common-library/src/lib/services/data.service.ts","../common-library/src/lib/services/dependency-manager.service.ts","../common-library/src/lib/services/dialog.service.ts","../common-library/src/lib/services/error-terms-store.service.ts","../common-library/src/lib/services/error-terms.service.ts","../common-library/src/lib/services/help.service.ts","../common-library/src/lib/services/locale-app-resources.service.ts","../common-library/src/lib/services/login-terms.service.ts","../common-library/src/lib/services/logout.service.ts","../common-library/src/lib/services/payload-command.service.ts","../common-library/src/lib/services/pce.service.ts","../common-library/src/lib/services/reset-password.service.ts","../common-library/src/lib/services/rest-api.service.ts","../common-library/src/lib/services/server-status.service.ts","../common-library/src/lib/services/spinner.service.ts","../common-library/src/lib/services/user-idle.service.ts","../common-library/src/lib/utils/AppUtil.ts","../common-library/src/lib/utils/cache-key.enum.ts","../common-library/src/lib/utils/cache/cache-type.enum.ts","../common-library/src/lib/utils/cache/encryption-action.enum.ts","../common-library/src/lib/utils/cache/store-type.enum.ts","../common-library/src/lib/utils/common-routes.ts","../common-library/src/lib/utils/help-constants.ts","../common-library/src/lib/utils/http-action-type.enum.ts","../common-library/src/lib/utils/index.enum.ts","../common-library/src/lib/utils/service-constant.ts","../common-library/src/lib/utils/string-util.ts","../common-library/src/public_api.ts","./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.constant.ts","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/auth.interceptor.ts","./src/app/custom-preload-strategy.ts","./src/app/header/header.service.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappingstJ;AACyC;AAC0Z;AAC1b;AAC0B;AAChC;AACO;AACqB;AACZ;AACe;AACvC;AACT;AACsD;AAClD;AACG;AAC7B;AAC2B;AACQ;AACqC;AACnE;AACuI;AACjF;AAC1D;AACkB;AACjB;;AAErC;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS,OAAO,+DAAgB,gBAAgB,OAAO,sDAAQ,EAAE;AACjE,MAAM;AACN;AACA,2BAA2B,OAAO,mDAAK,EAAE;AACzC,wBAAwB,OAAO,yDAAW,0BAA0B;AACpE;AACA;AACA,CAAC;AACD,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,qCAAqC,IAAI;AACzC,WAAW,EAAE;AACb,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sCAAsC,EAAE;AACxC,mBAAmB,EAAE;AACrB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,0DAAY,kCAAkC;AAC1E,mBAAmB,OAAO,0DAAY,gCAAgC;AACtE,kBAAkB,OAAO,0DAAY,+BAA+B;AACpE,oBAAoB,OAAO,0DAAY,iCAAiC;AACxE;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sCAAsC,EAAE;AACxC,mBAAmB,EAAE;AACrB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,0DAAY,kCAAkC;AAC1E,mBAAmB,OAAO,0DAAY,gCAAgC;AACtE,kBAAkB,OAAO,0DAAY,+BAA+B;AACpE,oBAAoB,OAAO,0DAAY,iCAAiC;AACxE;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,aAAa,oCAAQ;AACrB,WAAW,EAAE;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI,wDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,4BAA4B,qBAAqB,EAAE;AACnD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,wBAAwB;AACxD,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,gIAAgI,EAAE;AAClI,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,kBAAkB;AACpD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,6DAA6D,EAAE,sCAAsC,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,oEAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,uDAAQ,yBAAyB,uDAAQ;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,qCAAqC,EAAE;AACvC,kEAAkE,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,iCAAiC,EAAE;AACnC;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB;AACtB,sBAAsB;AACtB,uBAAuB;AACvB,yBAAyB;AACzB,yBAAyB;AACzB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE;AAChC;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,8BAA8B,EAAE;AAChC;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,SAAS;AAC9C,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,SAAS;AAC9C,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6CAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,6DAAa;AAC1C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,6BAA6B,UAAU;AACvC,qCAAqC,kBAAkB;AACvD,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAQ,6CAA6C,oBAAoB;AAC3G;AACA;AACA,qCAAqC,8DAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,8DAAc;AAC9B,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2TAA2T,oBAAoB;AAC/U,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,mOAAmO,8PAA8P,+DAA+D,iBAAiB,8WAA8W,qHAAqH,uBAAuB,kCAAkC,iIAAiI,uTAAuT,kNAAkN,uHAAuH,uBAAuB,mCAAmC,oNAAoN,qBAAqB,gHAAgH,iBAAiB;AAClvE,iBAAiB;AACjB;AACA;AACA,8DAA8D;AAC9D,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI;AAClF,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,mqBAAmqB,aAAa;AAChrB,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,mBAAmB,OAAO,uDAAS,kBAAkB,eAAe,IAAI;AACxE,qBAAqB,OAAO,oDAAM,EAAE;AACpC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA;AACA,CAAC;AACD,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,kOAAkO,cAAc,sFAAsF;AACtU,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,gCAAgC,OAAO,oDAAM,SAAS,oEAAkB,IAAI,GAAG;AACxF,SAAS,OAAO,2EAAc;AAC9B,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,gDAAE;AACzB;AACA;AACA,uBAAuB,gDAAE;AACzB;AACA;AACA;AACA,4CAA4C,gDAAU;AACtD;AACA,iCAAiC,2DAAG;AACpC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,wDAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,4CAA4C,gDAAU;AACtD,iCAAiC,2DAAG;AACpC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,cAAc,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,6BAA6B,gBAAgB;AAC7C,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,6BAA6B,gBAAgB;AAC7C,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD,WAAW;AAC/D,2DAA2D,wEAAkB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;AACjN;AACA,CAAC;AACD,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS;AACT,MAAM;AACN,8DAA8D,wEAAkB,EAAE,mDAAmD,iCAAiC,8DAAQ,qBAAqB,EAAE,mDAAmD;AACxP;AACA,CAAC;AACD,WAAW,EA8CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sDAAsD,IAAI;AAC1D,+CAA+C,sBAAsB,EAAE;AACvE,SAAS;AACT;AACA;AACA;AACA,4CAA4C,gDAAU;AACtD;AACA,iCAAiC,2DAAG;AACpC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,wDAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,iDAAiD;AACjF,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,4CAA4C,gDAAU;AACtD,iCAAiC,2DAAG;AACpC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,cAAc,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD;AAClD,SAAS;AACT,MAAM;AACN,yDAAyD,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,wBAAwB,EAAE,8CAA8C;AACvO;AACA,CAAC;AACD,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,2DAA2D;AAC3D,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC,SAAS;AACT,MAAM;AACN,kEAAkE,wEAAkB,EAAE,uDAAuD,qCAAqC,8DAAQ,qBAAqB,8DAAQ,wBAAwB,8DAAQ,mBAAmB,EAAE,uDAAuD;AACnU;AACA,CAAC;AACD,WAAW,EAsBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,qEAAqE,uDAAQ,GAAG;AAChF,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE,IAAI,kEAAU;AAC1E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,4CAA4C,EAAE;AACxE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,+EAA+E,uDAAQ,GAAG;AAC1F,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE,IAAI,kEAAU;AAC1E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,6CAA6C,EAAE;AACzE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,8EAA8E,uDAAQ,GAAG;AACzF,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE,IAAI,kEAAU;AAC1E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,4CAA4C,EAAE;AACxE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mFAAmF,uDAAQ,GAAG;AAC9F,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE,IAAI,kEAAU;AAC1E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,+CAA+C,EAAE;AAC3E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,yBAAyB;AAC5D,mBAAmB,EAAE;AACrB;AACA,6BAA6B,uEAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,IAAI,wDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,qCAAqC,4BAA4B;AACjE,mBAAmB,EAAE;AACrB,0BAA0B,iEAAW,EAAE,sDAAsD;AAC7F,6FAA6F,EAAE,mCAAmC,0CAA0C,OAAO,kEAAU;AAC7L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,yBAAyB;AAC5D;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,mBAAmB,gDAAE,aAAa,EAAE;AACpC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA,2DAA2D,2DAAG;AAC9D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,mDAAmD,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA,iEAAiE,2DAAG;AACpE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B;AAC3B;AACA,0BAA0B,uDAAQ,GAAG,gBAAgB,wBAAwB;AAC7E;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,gEAAU,EAAE;AAC5B,SAAS;AACT,MAAM;AACN,qDAAqD,wEAAkB,EAAE,0CAA0C,wBAAwB,8DAAQ,CAAC,gEAAU,GAAG,8DAAQ,wBAAwB,EAAE,0CAA0C;AAC7O;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,2DAA2D;AAC3D,SAAS,iCAAiC;AAC1C,SAAS;AACT,MAAM;AACN,kEAAkE,wEAAkB,EAAE,uDAAuD,qCAAqC,8DAAQ,4BAA4B,8DAAQ,eAAe,EAAE,uDAAuD;AACtS;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2DAAG;AACpE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,iDAAiD,EAAE,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS;AACT,MAAM;AACN,+DAA+D,wEAAkB,EAAE,oDAAoD,kCAAkC,8DAAQ,4BAA4B,EAAE,oDAAoD;AACnQ;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD,iCAAiC,gBAAgB;AACjD,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iEAAW;AAC9B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,mBAAmB,gEAAU;AAC7B;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iCAAiC,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,iCAAiC,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,iCAAiC,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,gCAAgC,aAAa;AAC7C,8BAA8B,aAAa;AAC3C,qCAAqC,oBAAoB;AACzD,oCAAoC,mBAAmB;AACvD;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,aAAa;AAC7C,8BAA8B,aAAa;AAC3C,qCAAqC,oBAAoB;AACzD,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,4DAA4D,WAAW;AACvE,mEAAmE,wEAAkB,EAAE,wDAAwD,wCAAwC,EAAE,wDAAwD;AACjP;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,gCAAgC,eAAe;AAC/C,8BAA8B,aAAa;AAC3C,qCAAqC,oBAAoB;AACzD,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,qCAAqC,oBAAoB;AACzD,iCAAiC,gBAAgB;AACjD,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS;AACT,MAAM;AACN,+DAA+D,wEAAkB,EAAE,oDAAoD,kCAAkC,8DAAQ,6BAA6B,EAAE,oDAAoD;AACpQ;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,oCAAoC;AACpC;AACA;AACA,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,YAAY,EAAE,IAAI,gEAAQ;AAClD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAG;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,iDAAiD,EAAE,OAAO;AAC1D;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mFAAmF,2DAAG;AACtF,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0FAA0F,2DAAG;AAC7F,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD;AACnD,SAAS,8BAA8B;AACvC,SAAS;AACT,MAAM;AACN,0DAA0D,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,yBAAyB,8DAAQ,yBAAyB,EAAE,+CAA+C;AAC7Q;AACA,CAAC;AACD,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iDAAiD,EAAE,OAAO;AAC1D;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,kEAAkE,WAAW;AAC7E,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,4DAA4D;AAC5D,SAAS;AACT,MAAM;AACN,mEAAmE,wEAAkB,EAAE,wDAAwD,sCAAsC,8DAAQ,oBAAoB,EAAE,wDAAwD;AAC3Q;AACA,CAAC;AACD,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oCAAoC,oBAAoB;AACxD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,4HAA4H;AAC5H;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,8BAA8B,kBAAkB;AAChD,mBAAmB,EAAE;AACrB,wBAAwB,2CAAK;AAC7B;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,iBAAiB,2CAAK;AACtB,mBAAmB,EAAE;AACrB;AACA,QAAQ,2CAAK,kCAAkC,4BAA4B;AAC3E,QAAQ,2CAAK;AACb;AACA;AACA,SAAS;AACT,QAAQ,2CAAK;AACb,QAAQ,uDAAS;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2CAAK;AACpB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,gDAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,gDAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,gDAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,gDAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,0DAAM,0BAA0B;AACxC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sDAAsD;AACtD;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oEAAoE,yBAAyB,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,aAAa,KAAK;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oEAAoE,qBAAqB;AACzF,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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S,OAAO,8DAAc;AAC9B,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,iDAAiD,EAAE,2CAA2C,EAAE;AAChG,gCAAgC,EAAE,yDAAyD,EAAE;AAC7F;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uEAAuE,uBAAuB,OAAO,2DAAG;AACxG,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,8DAAc,EAAE;AAChC,SAAS,8BAA8B;AACvC,SAAS;AACT,MAAM;AACN,qDAAqD,wEAAkB,EAAE,0CAA0C,wBAAwB,8DAAQ,CAAC,8DAAc,GAAG,8DAAQ,yBAAyB,8DAAQ,yBAAyB,EAAE,0CAA0C;AACnR;AACA,CAAC;AACD,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,yDAAyD,WAAW;AACpE,gEAAgE,wEAAkB,EAAE,qDAAqD,qCAAqC,EAAE,qDAAqD;AACrO;AACA,CAAC;AACD,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,8CAA8C;AAC9C;AACA;AACA,qCAAqC;AACrC,0EAA0E,2DAAG;AAC7E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD;AAChD,SAAS,8BAA8B;AACvC,SAAS;AACT,MAAM;AACN,uDAAuD,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,yBAAyB,8DAAQ,yBAAyB,EAAE,4CAA4C;AACjQ;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,4EAA4E,2DAAG;AAC/E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,aAAa,EAAE;AACxC;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,8BAA8B;AACvC,SAAS;AACT,MAAM;AACN,8DAA8D,wEAAkB,EAAE,mDAAmD,iCAAiC,8DAAQ,yBAAyB,8DAAQ,yBAAyB,EAAE,mDAAmD;AAC7R;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,sDAAsD,iBAAiB,mTAAmT,iDAAiD,izBAAizB,6CAA6C,s1BAAs1B,iDAAiD,0mCAA0mC,qBAAqB,oLAAoL,mBAAmB,uBAAuB,sBAAsB,kFAAkF,OAAO,qNAAqN,qBAAqB,sEAAsE,6CAA6C,8HAA8H,iBAAiB;AACxkI,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI,GAAG;AACrF,SAAS,6BAA6B;AACtC,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACD,WAAW,EA+BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,4CAA4C,2DAAG;AAC/C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD;AAChD,SAAS,kCAAkC;AAC3C,SAAS,OAAO,2DAAS;AACzB,MAAM;AACN,uDAAuD,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,6BAA6B,8DAAQ,CAAC,kEAAW,GAAG,EAAE,4CAA4C;AAC3P;AACA,CAAC;AACD,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,0FAA0F,2DAAG;AAC7F,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iGAAiG,2DAAG;AACpG,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,8BAA8B;AACvC,SAAS;AACT,MAAM;AACN,6DAA6D,wEAAkB,EAAE,kDAAkD,gCAAgC,8DAAQ,yBAAyB,8DAAQ,yBAAyB,EAAE,kDAAkD;AACzR;AACA,CAAC;AACD,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE,0CAA0C,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,gDAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,8WAA8W,8BAA8B,07DAA07D,aAAa;AACn1E,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,sBAAsB;AAC/B,SAAS,6BAA6B;AACtC,SAAS,OAAO,sDAAM,EAAE;AACxB,SAAS,+BAA+B;AACxC,SAAS,kCAAkC;AAC3C,SAAS,OAAO,2DAAS,EAAE;AAC3B,SAAS,OAAO,6DAAW,EAAE;AAC7B,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B,SAAS;AACT,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,4BAA4B,OAAO,oDAAM,EAAE;AAC3C,mBAAmB,OAAO,uDAAS,kBAAkB,eAAe,IAAI;AACxE,yBAAyB,OAAO,uDAAS,qBAAqB,eAAe,IAAI;AACjF,wBAAwB,OAAO,uDAAS,0BAA0B,OAAO,wDAAU,gBAAgB,IAAI;AACvG;AACA;AACA,CAAC;AACD,WAAW,EAiHV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,8DAA8D,EAAE;AAChE,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,8DAAc;AAC9B,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,0CAA0C,6CAAO;AACjD,uCAAuC,6CAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,uCAAuC,iEAAS,sBAAsB,oEAAY,iBAAiB,2DAAG;AACtG,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB,IAAI,4EAAoB;AACzC,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB,IAAI,gEAAQ;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,eAAe,gDAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,gDAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,mRAAmR,sCAAsC,0hDAA0hD,aAAa,iHAAiH,kBAAkB,4iDAA4iD,aAAa,mJAAmJ,kBAAkB;AACjsH,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,0DAAW,EAAE;AAC7B,SAAS;AACT,MAAM;AACN;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,mCAAmC,OAAO,mDAAK,EAAE;AACjD,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,qBAAqB,OAAO,uDAAS,uBAAuB,gBAAgB,IAAI;AAChF;AACA;AACA,CAAC;AACD,WAAW,EA0CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,gDAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,wgBAAwgB,wPAAwP,wEAAwE,qCAAqC,KAAK,cAAc,gLAAgL,+BAA+B,0CAA0C;AACznC,iBAAiB;AACjB;AACA;AACA,qDAAqD;AACrD,SAAS,sBAAsB;AAC/B,SAAS,OAAO,sDAAM;AACtB,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,0BAA0B,OAAO,mDAAK,EAAE;AACxC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,4BAA4B,OAAO,oDAAM,EAAE;AAC3C,2BAA2B,OAAO,mDAAK,EAAE;AACzC,mCAAmC,OAAO,mDAAK,EAAE;AACjD;AACA;AACA,CAAC;AACD,WAAW,EA+BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iYAAiY,2CAA2C,qFAAqF,+BAA+B;AAChiB,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,+CAA+C;AAC/C,SAAS,OAAO,8DAAc;AAC9B,MAAM;AACN;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,oDAAM,EAAE;AACrC,2BAA2B,OAAO,mDAAK,EAAE;AACzC;AACA;AACA,CAAC;AACD,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,8BAA8B,yFAAyF;AACvH;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4BAA4B,uDAAQ,GAAG;AACvC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uDAAQ,GAAG;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,4DAA4D,oCAAoC,GAAG,+BAA+B,qCAAqC,8BAA8B,GAAG,8BAA8B,ufAAuf,kDAAkD,iiBAAiiB,yEAAyE,gbAAgb,4CAA4C,oDAAoD,wCAAwC,oDAAoD,sCAAsC,oLAAoL,kwBAAkwB,6CAA6C,4DAA4D,aAAa,wEAAwE,cAAc,6YAA6Y,qCAAqC,+JAA+J,mCAAmC,yPAAyP,iCAAiC;AAC3hI,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI;AAClF,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,8WAA8W,8BAA8B;AAC5Y,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,6MAA6M,+DAA+D,WAAW,6KAA6K,WAAW;AAC/c;AACA,iBAAiB;AACjB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,uBAAuB,OAAO,oDAAM,EAAE;AACtC,gBAAgB,OAAO,uDAAS,kBAAkB,eAAe,IAAI;AACrE,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,4DAAY;AACpC;AACA,wBAAwB,0DAAW;AACnC,wBAAwB,oEAAa;AACrC,wBAAwB,oEAAe;AACvC,wBAAwB,wEAAiB;AACzC,wBAAwB,wEAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAU;AAClC;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAO;AAChC;AACA;AACA,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,uBAAuB,EAAE,IAAI,4DAAI;AACzD,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,yCAAyC,EAAE;AACxE;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,oEAAe,CAAC,4DAAU;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,6DAAO;AACvB,MAAM;AACN,wDAAwD,wEAAkB,EAAE,6CAA6C,2BAA2B,8DAAQ,CAAC,6DAAO,GAAG,EAAE,6CAA6C;AACtN;AACA,CAAC;AACD,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE,OAAO;AAC1D;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAG;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uBAAuB,gDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAG;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uBAAuB,gDAAU;AACjC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,8BAA8B;AACvC,SAAS,8BAA8B;AACvC,SAAS;AACT,MAAM;AACN,2DAA2D,wEAAkB,EAAE,gDAAgD,8BAA8B,8DAAQ,yBAAyB,8DAAQ,yBAAyB,8DAAQ,0BAA0B,EAAE,gDAAgD;AACnT;AACA,CAAC;AACD,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,iDAAiD,EAAE,OAAO;AAC1D;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,wEAAwE,2DAAG;AAC3E,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT,oEAAoE,UAAU;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS;AACT,MAAM;AACN,2DAA2D,wEAAkB,EAAE,gDAAgD,8BAA8B,8DAAQ,oBAAoB,EAAE,gDAAgD;AAC3O;AACA,CAAC;AACD,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAAO;AACtC,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAK,CAAC,uDAAS,uBAAuB,uDAAS,oBAAoB,uDAAS,uBAAuB,uDAAS;AAC3I,qBAAqB,kDAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kEAAU;AAC5B,QAAQ,8DAAM;AACd,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gDAAgD,EAAE,IAAI,2DAAG;AACjF,oBAAoB;AACpB;AACA,qBAAqB,uCAAuC,EAAE,IAAI,iEAAS;AAC3E,oBAAoB;AACpB;AACA,qBAAqB,QAAQ,sDAAQ,YAAY,iEAAS,CAAC,mDAAK,wBAAwB,mDAAK,wBAAwB,2DAAG;AACxH,oBAAoB;AACpB;AACA,qBAAqB,qCAAqC,EAAE,OAAO,gEAAQ;AAC3E,oBAAoB;AACpB;AACA,qBAAqB,0CAA0C,EAAE,IAAI,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,4EAAoB,IAAI,iEAAS;AACtE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,gCAAgC,gDAAE,QAAQ,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kCAAkC,8DAAM;AACxC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,4BAA4B,kBAAkB,EAAE,IAAI,2DAAG;AACvD,oBAAoB;AACpB;AACA,qBAAqB,+BAA+B,EAAE,IAAI,2DAAG;AAC7D,oBAAoB;AACpB;AACA,qBAAqB,aAAa,EAAE;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,sBAAsB,sDAAQ,YAAY,4DAAI,WAAW,2DAAG;AAC5D,oBAAoB;AACpB;AACA,qBAAqB,UAAU,EAAE,IAAI,4DAAI;AACzC,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,gBAAgB,EAAE,IAAI,2DAAG;AACpD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,qBAAqB,sDAAQ,mBAAmB,8DAAM;AACtD,oBAAoB;AACpB;AACA,qBAAqB,yBAAyB,EAAE;AAChD;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD;AAClD,SAAS,qCAAqC,OAAO,sDAAQ,EAAE;AAC/D,MAAM;AACN,yDAAyD,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,qBAAqB,EAAE,8CAA8C;AACpO;AACA,CAAC;AACD,WAAW,EAmEV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,mBAAmB;AACnB,WAAW,EAmCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,8CAAG;AAC3B;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,8CAAG;AAC3B,mBAAmB,EAAE;AACrB,gDAAgD,8CAAG;AACnD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAE0rD;AAC1rsE;AACgM;AACsd;AACzoB;AACsB;AAC9C;AACA;AACE;AACE;AACD;AACP;AACkC;AACG;AACzD;AACI;AAC6C;AACjC;AACc;AAC+C;AACnE;AACwE;AAC3C;;AAE1E;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,SAAS,2DAAY;AACrB;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACbb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,aAAa,oCAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,sDAAO;AACnB,gBAAgB,sDAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,qCAAqC,oBAAoB;AACzD,mBAAmB,EAAE;AACrB;AACA,YAAY,sDAAO;AACnB,gBAAgB,sDAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB,iBAAiB,sDAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,sDAAO;AACnB,gBAAgB,sDAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB,iBAAiB,sDAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,sDAAO,8BAA8B,sDAAO;AACxD;AACA,iBAAiB,sDAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,sDAAO;AACnB;AACA,iBAAiB,sDAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oCAAoC,sDAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,oCAAoC,yBAAyB;AAC7D,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6CAAO;AACpC;AACA,iCAAiC,6CAAO;AACxC;AACA,+BAA+B,6CAAO;AACtC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B,EAAE;AACjC,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,sDAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,iDAAiD,EAAE,OAAO;AAC1D,+BAA+B,uDAAQ;AACvC,gCAAgC,wDAAS;AACzC,gCAAgC,wDAAS;AACzC,iCAAiC,+DAAgB;AACjD,iCAAiC;AACjC;AACA,0BAA0B,2DAAY;AACtC;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8BAA8B,2DAAY;AAC1C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8BAA8B,2DAAY;AAC1C;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,oCAAoC,qDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAgB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,oCAAoC,qDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAgB;AAC/C;AACA,aAAa;AACb;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,0CAA0C,uDAAQ;AAClD;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,gGAAgG,2DAAG;AACnG,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gCAAgC,qDAAM;AACtC;AACA;AACA;AACA,2BAA2B,+DAAgB;AAC3C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C,uDAAQ;AAClD;AACA,iDAAiD,EAAE,OAAO;AAC1D,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C,qCAAqC,wDAAS;AAC9C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,6FAA6F,2DAAG;AAChG,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,oCAAoC,qDAAM;AAC1C;AACA;AACA;AACA,+BAA+B,+DAAgB;AAC/C;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,oGAAoG,2DAAG;AACvG,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,oCAAoC,qDAAM;AAC1C;AACA;AACA;AACA,+BAA+B,+DAAgB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,UAAU,EAAE;AAClC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,2BAA2B,EAAE;AACnD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,mBAAmB;AAC9C,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAQ;AACjC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wCAAwC,sDAAQ,+DAA+D,0BAA0B;AACzI;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,4EAA4E,MAAM,kEAAmB,EAAE,OAAO,2DAAG;AACjH,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kEAAU,4BAA4B,8DAAM;AACjG,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oBAAoB,EAAE,IAAI,2DAAG;AACrD,oBAAoB;AACpB;AACA;AACA;AACA,SAAS,IAAI,gEAAQ;AACrB,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gCAAgC,qDAAM;AACtC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,wBAAwB,wDAAS;AACjC;AACA;AACA;AACA,oBAAoB,wDAAS;AAC7B;AACA;AACA,qCAAqC,qDAAM;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAO;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,uCAAuC,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,0CAA0C,uDAAQ;AAClD;AACA;AACA;AACA,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,uBAAuB,yDAAU;AACjC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,4DAAa,EAAE;AAC/B,SAAS,OAAO,mEAAsB,EAAE;AACxC,SAAS,OAAO,kEAAmB;AACnC,MAAM;AACN,yDAAyD,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,CAAC,oEAAqB,GAAG,8DAAQ,CAAC,oEAAqB,GAAG,8DAAQ,CAAC,4DAAa,GAAG,8DAAQ,CAAC,mEAAsB,GAAG,8DAAQ,CAAC,kEAAmB,GAAG,EAAE,8CAA8C;AACnW;AACA,CAAC;AACD,WAAW,EAiHV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD;AACjD;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,sDAAsD;AACtD;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB,YAAY;AACZ,eAAe,gDAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,2DAAY;AAC1C,qCAAqC,wDAAS;AAC9C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kBAAkB,sDAAO,iBAAiB,wDAAS;AACnD,QAAQ,wDAAS;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,uDAAM,EAAE;AACxB,SAAS;AACT,MAAM;AACN,uDAAuD,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,CAAC,uDAAM,GAAG,8DAAQ,mBAAmB,EAAE,4CAA4C;AAC5O;AACA,CAAC,CAAC,yDAAU;AACZ,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD;AAClD,SAAS;AACT,MAAM;AACN;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,0BAA0B,OAAO,mDAAK,EAAE;AACxC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,2BAA2B,OAAO,mDAAK,EAAE;AACzC,mCAAmC,OAAO,mDAAK,EAAE;AACjD,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA,CAAC;AACD,WAAW,EAkCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,cAAc;AACd,2BAA2B,OAAO;AAClC,cAAc;AACd;AACA,kCAAkC;AAClC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sBAAsB,qDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,2CAA2C,MAAM,2CAA2C,24BAA24B,qBAAqB,2jBAA2jB,qBAAqB,wjBAAwjB,qBAAqB,iVAAiV,qBAAqB,kWAAkW,qBAAqB,qnBAAqnB,qBAAqB;AAChgH,mCAAmC,+DAAiB;AACpD;AACA,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,cAAc,OAAO,mDAAK,EAAE;AAC5B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;AACD,WAAW,EA4DV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6CAAO;AAC1C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY;AACZ,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY;AACZ,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY;AACZ,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8BAA8B,2DAAY,iBAAiB;AAC3D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,iCAAiC,+DAA+D,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,iCAAiC,+DAA+D,EAAE;AAClG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,qDAAM;AACtC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+DAAgB;AACvC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iDAAiD;AACjD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8BAA8B,2DAAY,YAAY;AACtD;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,iCAAiC,2CAA2C,EAAE;AAC9E;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wEAAwE,2DAAG;AAC3E,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,qDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,+CAA+C,EAAE;AAC9E;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS;AACT,MAAM;AACN,0DAA0D,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oEAAqB,GAAG,8DAAQ,CAAC,oEAAqB,GAAG,8DAAQ,mBAAmB,EAAE,+CAA+C;AACxS;AACA,CAAC;AACD,WAAW,EA4BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,gDAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,4DAA4D;AAC5D,SAAS,OAAO,wEAAyB,EAAE;AAC3C,SAAS,yBAAyB;AAClC,SAAS,OAAO,4DAAa;AAC7B,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,2BAA2B,OAAO,mDAAK,EAAE;AACzC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA,CAAC;AACD,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,eAAe;AAC7C;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,wEAAyB;AACzC,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,4HAA4H,sBAAsB,kIAAkI,8RAA8R,wHAAwH,mBAAmB,sBAAsB,6GAA6G,yDAAyD,KAAK,yDAAyD,uIAAuI,uDAAuD;AACrnC;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD;AACnD,SAAS,uBAAuB;AAChC,SAAS,OAAO,wEAAyB;AACzC,MAAM;AACN;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;AACD,WAAW,EAyBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,yBAAyB,0DAAW;AACpC;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,4DAA4D,6CAA6C,ukBAAukB,wCAAwC,gEAAgE,8PAA8P,yBAAyB;AAC/iC,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C;AACA;AACA,CAAC;AACD,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iDAAiD,EAAE,OAAO;AAC1D,+BAA+B,uDAAQ;AACvC,gCAAgC,wDAAS;AACzC,gCAAgC,wDAAS;AACzC,iCAAiC,+DAAgB;AACjD,iCAAiC;AACjC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,oCAAoC,qDAAM;AAC1C;AACA;AACA;AACA,yCAAyC,qDAAM;AAC/C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB,2DAAG;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,oCAAoC,qDAAM;AAC1C;AACA;AACA;AACA,yCAAyC,qDAAM;AAC/C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,wEAAyB;AACzC,MAAM;AACN,wDAAwD,wEAAkB,EAAE,6CAA6C,2BAA2B,8DAAQ,CAAC,oEAAqB,GAAG,8DAAQ,CAAC,oEAAqB,GAAG,8DAAQ,CAAC,wEAAyB,GAAG,EAAE,6CAA6C;AAC1S;AACA,CAAC;AACD,WAAW,EAsBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iCAAiC,uDAAQ;AACzC;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oCAAoC,qDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,QAAQ,wBAAwB;AAChC,QAAQ,wBAAwB;AAChC,QAAQ,wBAAwB;AAChC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,QAAQ,wBAAwB;AAChC,QAAQ,wBAAwB;AAChC,QAAQ,wBAAwB;AAChC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,yCAAyC,sDAAO;AAChD,qEAAqE,iEAAiE;AACtI;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sDAAO;AAChD,qEAAqE,qDAAqD;AAC1H;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,gBAAgB,EAAE;AAC3C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,sCAAsC,EAAE;AACxE;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,mCAAmC,EAAE;AAClE;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,oEAAqB;AACrC,MAAM;AACN,2DAA2D,wEAAkB,EAAE,gDAAgD,8BAA8B,8DAAQ,CAAC,oEAAqB,GAAG,8DAAQ,CAAC,oEAAqB,GAAG,EAAE,gDAAgD;AACjR;AACA,CAAC;AACD,WAAW,EA+BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yDAAU;AAC5C;AACA,mCAAmC,yDAAU;AAC7C,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kCAAkC,6EAA6E;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,4JAA4J,2BAA2B,4DAA4D,oCAAoC,gCAAgC,iBAAiB,wFAAwF,gCAAgC,+tBAA+tB,iCAAiC,wQAAwQ,oCAAoC,m0BAAm0B,kCAAkC,uHAAuH,8BAA8B;AACt+E,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI,GAAG;AACrF,SAAS,OAAO,0DAAW;AAC3B,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yDAAU;AAC9B,oBAAoB,yDAAU;AAC9B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kCAAkC,uEAAuE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yDAAU;AACvC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yKAAyK,wBAAwB,qFAAqF,8BAA8B,6dAA6d,6BAA6B,+qBAA+qB,8BAA8B,6WAA6W,+BAA+B,qGAAqG,4CAA4C,yFAAyF,2BAA2B;AAC5oE,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI,GAAG;AACrF,SAAS,OAAO,0DAAW;AAC3B,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW,EAiBV;AACD;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAiBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6CAAO;AACjD,gCAAgC,6CAAO;AACvC;AACA,gCAAgC,6CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,uDAAuD,0EAA2B;AAClF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,yBAAyB,0EAA2B;AACpD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,YAAY,uDAAQ;AACpB,YAAY,uDAAQ;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAQ;AACpB,YAAY,uDAAQ;AACpB;AACA;AACA;AACA;AACA,sBAAsB,4DAAI;AAC1B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,sBAAsB,4DAAI;AAC1B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gFAAgF;AAC9G;AACA;AACA;AACA;AACA,8BAA8B,gFAAgF;AAC9G;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,gFAAgF;AAC9G;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,YAAY,uDAAQ;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wCAAwC,sDAAQ,+DAA+D,0BAA0B;AACzI;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wCAAwC,qEAAsB;AAC9D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,iBAAiB,EAAE;AAChD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,+CAA+C,0EAA2B;AAC1E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,uDAAM,EAAE;AACxB,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,wEAAyB,EAAE;AAC3C,SAAS,OAAO,qEAAsB,EAAE;AACxC,SAAS,OAAO,2DAAS,EAAE;AAC3B,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,OAAO,6DAAW,EAAE;AAC7B,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,OAAO,6DAAc,EAAE;AAChC,SAAS,OAAO,4DAAa;AAC7B,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAkFV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,8JAA8J,yBAAyB,6bAA6b,aAAa,2ZAA2Z,WAAW;AACviC,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,2BAA2B;AACpC,SAAS,OAAO,wDAAQ;AACxB,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,mCAAmC,OAAO,uDAAS,qCAAqC,eAAe,IAAI;AAC3G,6BAA6B,OAAO,oDAAM,EAAE;AAC5C;AACA;AACA,CAAC;AACD,WAAW,EA4BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qDAAe;AACjD;AACA,8BAA8B,qDAAe;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,6DAA6D,WAAW;AACxE,oEAAoE,wEAAkB,EAAE,yDAAyD,yCAAyC,EAAE,yDAAyD;AACrP;AACA,CAAC;AACD,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,8BAA8B,0DAAY;AAC1C;AACA;AACA,qBAAqB,qDAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB,6FAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,iCAAiC,UAAU;AAC7E;AACA;AACA,iDAAiD,sDAAQ,gCAAgC,UAAU;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,sCAAsC,UAAU;AAClF;AACA;AACA,iDAAiD,sDAAQ,gCAAgC,UAAU;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,gCAAgC,sDAAQ,2BAA2B,cAAc;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,iCAAiC,UAAU;AAC7E;AACA;AACA,iDAAiD,sDAAQ,gCAAgC,UAAU;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,gCAAgC,sDAAQ,2BAA2B,cAAc;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC,sDAAQ;AAC/C,mBAAmB,EAAE;AACrB,uCAAuC,sDAAQ;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,sCAAsC,UAAU;AAClF;AACA;AACA,kDAAkD,sDAAQ,gCAAgC,UAAU;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS,iBAAiB;AAC1D;AACA;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA,mBAAmB,EAAE;AACrB,uCAAuC,sDAAQ;AAC/C,mBAAmB,EAAE;AACrB,uCAAuC,sDAAQ;AAC/C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB,2DAAW;AAC/B;AACA;AACA;AACA;AACA,oBAAoB,6DAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,6DAAW;AAC/B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,6DAAW;AAC/B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gCAAgC,sDAAQ,uCAAuC,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS,iBAAiB;AAClD;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,0BAA0B,yEAAW;AACrC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,eAAe,EAAE;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,sDAAQ;AACrC;AACA,0BAA0B,sDAAQ,qCAAqC,UAAU;AACjF;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA,wBAAwB,SAAS,iBAAiB;AAClD;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6BAA6B,sDAAQ;AACrC,4BAA4B,2CAA2C;AACvE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,6BAA6B,sDAAQ;AACrC,8BAA8B,2CAA2C;AACzE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,yFAAyF,EAAE;AACrH,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,yFAAyF,EAAE;AACrH,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sDAAQ;AACvD;AACA;AACA;AACA,0CAA0C,sDAAQ;AAClD;AACA,8CAA8C,sDAAQ;AACtD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,gCAAgC,uCAAuC,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,sDAAQ;AACnC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,qGAAqG,EAAE;AACjI,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,kCAAkC,gCAAgC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B;AAC1B,yDAAyD,EAAE;AAC3D,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mCAAmC,sDAAQ;AAC3C;AACA;AACA,mCAAmC,sDAAQ;AAC3C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,0HAA0H,EAAE;AACtJ,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,mGAAmG,EAAE;AAC/H,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,2CAA2C;AAC3C;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,sDAAQ;AACrC;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,0BAA0B,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,6BAA6B,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,qEAAqE,EAAE;AAC7F,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,wnHAAwnH,ysBAAysB,eAAe,KAAK,uBAAuB,4XAA4X,mPAAmP,KAAK,uBAAuB,IAAI,gBAAgB,yEAAyE,uBAAuB,IAAI,gBAAgB,sYAAsY,u2BAAu2B,eAAe,KAAK,wBAAwB,ktBAAktB,KAAK,iBAAiB,IAAI,kBAAkB,qEAAqE,wBAAwB,IAAI,kBAAkB,oqBAAoqB,KAAK,iBAAiB,IAAI,kBAAkB,qEAAqE,wBAAwB,IAAI,kBAAkB,8ZAA8Z,0BAA0B,6TAA6T,WAAW,mBAAmB;AAC/1R,mCAAmC,+DAAiB;AACpD,0CAA0C,YAAY,iBAAiB,sDAAsD,eAAe,yBAAyB,iBAAiB,eAAe,UAAU,uBAAuB,cAAc,gBAAgB,gMAAgM,WAAW,2CAA2C,mCAAmC,kHAAkH,UAAU,qCAAqC,iBAAiB,4GAA4G,2CAA2C,mCAAmC,WAAW,4BAA4B,aAAa,mCAAmC,cAAc,kBAAkB,WAAW,0BAA0B,eAAe,mBAAmB,eAAe,gBAAgB,4BAA4B,UAAU,2BAA2B,YAAY,eAAe,UAAU,6BAA6B,UAAU,iCAAiC,qBAAqB,oBAAoB,WAAW,MAAM,YAAY,qCAAqC,qBAAqB,eAAe,YAAY,MAAM,YAAY,UAAU,mBAAmB,YAAY,mBAAmB,UAAU,oBAAoB,UAAU,qBAAqB,oBAAoB,+BAA+B,yBAAyB,gCAAgC,qBAAqB,sBAAsB,mBAAmB,oBAAoB,sCAAsC,kBAAkB,mBAAmB,WAAW;AAC90D,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,mCAAmC;AAC5C,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,uBAAuB,OAAO,0DAAY,yBAAyB;AACnE;AACA;AACA,CAAC;AACD,WAAW,EA0KV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAAO;AACzC,iCAAiC,6CAAO;AACxC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,sIAAsI,iDAAiD;AACvL;AACA,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,+DAA+D;AAC/D,SAAS;AACT,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;AACD,WAAW,EAkCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,yCAAyC,EAAE;AAC3C;AACA,uBAAuB,EAAE;AACzB,2BAA2B,wDAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,6BAA6B;AAC3D;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,wCAAwC;AAC/G;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX,sCAAsC,2CAA2C;AACjF;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uQAAuQ,SAAS,UAAU,eAAe,iZAAiZ,cAAc;AACxsB,mCAAmC,+DAAiB;AACpD,2CAA2C,gBAAgB,yBAAyB,UAAU;AAC9F,iBAAiB;AACjB;AACA;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,cAAc,OAAO,mDAAK,EAAE;AAC5B,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,yBAAyB,OAAO,mDAAK,EAAE;AACvC,oBAAoB,OAAO,uDAAS,wBAAwB,eAAe,IAAI;AAC/E,mBAAmB,OAAO,uDAAS,eAAe,eAAe,IAAI;AACrE;AACA;AACA,CAAC;AACD,WAAW,EA6BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6CAAO;AAClC,2BAA2B,2CAAK;AAChC,gCAAgC,0DAAY;AAC5C,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,qBAAqB,EAAE,KAAK,6CAAO;AACnC;AACA,uBAAuB,iDAAW;AAClC,2BAA2B,6CAAO;AAClC,+CAA+C,0CAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oDAAoD,0CAAI;AACxD,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB;AACtB,0CAA0C,EAAE,GAAG;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,0CAAI,GAAG,6CAA6C,eAAe,2CAAK,GAAG,kBAAkB,MAAM,6CAAO;AAC3J,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,wBAAwB,EAAE;AAChD;AACA;AACA,cAAc,2CAA2C;AACzD,YAAY,6CAAO;AACnB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,0CAAI;AACzC;AACA,aAAa,+BAA+B;AAC5C,YAAY,6CAAO,oBAAoB,2CAAK,mBAAmB,2CAAK,0BAA0B,2CAAK;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0CAAI;AAC1B;AACA,oBAAoB,0CAAI;AACxB,SAAS,MAAM,6CAAO,iCAAiC,+CAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0CAAI;AACnC;AACA,SAAS,MAAM,6CAAO,0CAA0C,6CAAO,0CAA0C,6CAAO;AACxH;AACA,2BAA2B,0CAAI;AAC/B,SAAS,MAAM,6CAAO;AACtB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,sBAAsB,EAAE;AAC9C,mBAAmB,EAAE;AACrB,yCAAyC,0CAAI;AAC7C,YAAY,+BAA+B;AAC3C,YAAY,6CAAO,oBAAoB,2CAAK,mBAAmB,2CAAK,0BAA0B,6CAAO,GAAG,kEAAkE;AAC1K;AACA;AACA;AACA,SAAS,gBAAgB,+CAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,6CAAO,iCAAiC,6CAAO;AAC9D,mBAAmB,EAAE;AACrB,2BAA2B,yCAAG;AAC9B;AACA;AACA;AACA,kCAAkC,6CAAO;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,sBAAsB,OAAO,uDAAS,wBAAwB,eAAe,IAAI;AACjF,wBAAwB,OAAO,mDAAK,EAAE;AACtC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,wBAAwB,OAAO,oDAAM,EAAE;AACvC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;AACD,WAAW,EAgCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,sBAAsB;AAC7C;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0FAA0F;AAC1F;AACA;AACA,+BAA+B,OAAO;AACtC,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,EAAE;AACzB;AACA,2BAA2B,sBAAsB;AACjD,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,yBAAyB;AACnD;AACA,oCAAoC,qBAAqB;AACzD,+BAA+B,EAAE;AACjC;AACA,wCAAwC,4BAA4B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oXAAoX,SAAS,gfAAgf,WAAW,yCAAyC,SAAS,0LAA0L,cAAc,2PAA2P,eAAe;AAC53C,yCAAyC,cAAc,kBAAkB,kBAAkB,cAAc,eAAe,eAAe,yBAAyB,sBAAsB,qBAAqB,iBAAiB,WAAW,iBAAiB,kBAAkB,UAAU,eAAe,SAAS,QAAQ,yCAAyC,kBAAkB,SAAS,WAAW,YAAY,WAAW,6BAA6B,kBAAkB,QAAQ,SAAS,YAAY,WAAW,8FAA8F,aAAa,kBAAkB,aAAa,kMAAkM,cAAc,8DAA8D,SAAS,MAAM,UAAU,YAAY,kBAAkB,6BAA6B,gCAAgC,wBAAwB,4EAA4E,SAAS,MAAM,UAAU,YAAY,qBAAqB,6BAA6B,gCAAgC,wBAAwB,SAAS,sBAAsB,cAAc,iBAAiB,YAAY,gBAAgB,UAAU,0BAA0B,eAAe,WAAW,WAAW,UAAU,kBAAkB,qBAAqB,cAAc,mBAAmB,OAAO,kBAAkB,aAAa,kBAAkB,sBAAsB,gBAAgB,uCAAuC,UAAU,wBAAwB,WAAW,qBAAqB,iCAAiC,WAAW,qBAAqB,sBAAsB,8BAA8B,sBAAsB,MAAM,cAAc;AAC30D,iBAAiB;AACjB;AACA;AACA,iEAAiE;AACjE,SAAS;AACT,MAAM;AACN;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA;AACA,CAAC;AACD,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAM;AAClB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,QAAQ,kDAAM;AACd,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA;AACA;AACA,QAAQ,kDAAM;AACd,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAM;AACd;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,uDAAuD,EAAE;AAClF;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,mBAAmB,EAAE;AAC3C;AACA;AACA,QAAQ,kDAAM;AACd;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,mDAAmD,EAAE;AAC9E;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,8CAA8C,EAAE;AACzE;AACA;AACA,QAAQ,kDAAM;AACd;AACA,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,YAAY,kDAAM;AAClB,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,mDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,6CAA6C,UAAU;AACzF;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,gBAAgB,kDAAM;AACtB,4BAA4B;AAC5B;AACA,6BAA6B,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA,gBAAgB,kDAAM;AACtB,4BAA4B;AAC5B;AACA,6BAA6B,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAM;AACtB;AACA;AACA,4BAA4B;AAC5B;AACA,6BAA6B,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,iCAAiC,uDAAuD,EAAE;AAC1F;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,mBAAmB,EAAE;AACnD;AACA;AACA,gBAAgB,kDAAM;AACtB;AACA;AACA,4BAA4B;AAC5B;AACA,6BAA6B,6BAA6B,EAAE;AAC5D;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,iCAAiC,mDAAmD,EAAE;AACtF;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,iCAAiC,8CAA8C,EAAE;AACjF;AACA;AACA,gBAAgB,kDAAM;AACtB;AACA,4BAA4B;AAC5B;AACA,6BAA6B,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,kDAAM;AACd;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,4QAA4Q,gBAAgB,0hBAA0hB,6BAA6B,0CAA0C,oBAAoB;AACj5B,qCAAqC,qEAAuB;AAC5D;AACA,wBAAwB,oEAAO;AAC/B,4BAA4B,uEAAU;AACtC,gCAAgC,kEAAK;AACrC;AACA,iCAAiC;AACjC,gCAAgC,oEAAO,MAAM,kEAAK,EAAE,eAAe;AACnE;AACA,4BAA4B,uEAAU;AACtC,gCAAgC,kEAAK;AACrC;AACA,iCAAiC;AACjC,gCAAgC,oEAAO,MAAM,kEAAK,EAAE,aAAa;AACjE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,wBAAwB,OAAO,uDAAS,0BAA0B,eAAe,IAAI;AACrF;AACA;AACA,CAAC,CAAC,iEAAW;AACb,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA,IAAI,uDAAS;AACb;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAM;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAM;AACd,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAM;AACd,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA;AACA;AACA;AACA,QAAQ,kDAAM;AACd;AACA,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA;AACA,QAAQ,kDAAM;AACd;AACA,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,YAAY,kDAAM;AAClB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,gBAAgB,kDAAM;AACtB,4BAA4B;AAC5B;AACA,6BAA6B,iCAAiC,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAM;AACtB,4BAA4B;AAC5B;AACA,6BAA6B,iCAAiC,EAAE;AAChE;AACA;AACA;AACA;AACA,gBAAgB,kDAAM;AACtB;AACA,4BAA4B;AAC5B;AACA,6BAA6B,iCAAiC,EAAE;AAChE;AACA;AACA,gBAAgB,kDAAM;AACtB;AACA,4BAA4B;AAC5B;AACA,6BAA6B,iCAAiC,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,+zBAA+zB,wBAAwB;AACv1B,qCAAqC,qEAAuB;AAC5D;AACA,wBAAwB,oEAAO;AAC/B,4BAA4B,uEAAU;AACtC,gCAAgC,kEAAK;AACrC;AACA,iCAAiC;AACjC,gCAAgC,oEAAO,MAAM,kEAAK,EAAE,aAAa;AACjE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,yBAAyB,OAAO,uDAAS,6BAA6B,eAAe,IAAI;AACzF;AACA;AACA,CAAC,CAAC,2EAAqB;AACvB,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAM;AAClB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,gBAAgB,EAAE;AAC5C,uBAAuB,EAAE;AACzB,2CAA2C,sDAAQ;AACnD,uBAAuB,EAAE;AACzB,2CAA2C,sDAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,sDAAI;AACnB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,8BAA8B,EAAE;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAM;AACd;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,8BAA8B,EAAE;AACzD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,+BAA+B,EAAE;AACvD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,sDAAI;AACnB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,kEAAkE,EAAE;AAC1F;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,kEAAkE,EAAE;AAC1F;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT,eAAe,sDAAI;AACnB;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,gCAAgC,EAAE;AACvD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,8BAA8B,EAAE;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,qCAAqC,qEAAuB;AAC5D,iBAAiB;AACjB;AACA;AACA,wBAAwB,OAAO,uDAAS,0BAA0B,eAAe,IAAI;AACrF;AACA;AACA,CAAC,CAAC,yEAAmB;AACrB,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,2DAAa;AACzC;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,yBAAyB,oDAAM;AAC/B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,mPAAmP,mOAAmO,eAAe,oCAAoC,sBAAsB;AAC/hB,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,mDAAmD;AACnD,SAAS;AACT,MAAM;AACN;AACA,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,sBAAsB,OAAO,mDAAK,EAAE;AACpC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;AACD,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;AACD,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gFAAgF,oEAAY;AAC5F,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;AACD,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,2DAAY;AACtC;AACA,+BAA+B,uDAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oCAAoC,qDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,4CAA4C,EAAE;AACzE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,mBAAmB,EAAE;AAChD,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,2CAA2C,EAAE;AACxE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,mBAAmB,EAAE;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,0BAA0B;AAC5D,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,mLAAmL,oBAAoB;AACvM,iBAAiB;AACjB;AACA;AACA,6DAA6D;AAC7D,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,oEAAqB;AACrC,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,uDAAS,oBAAoB,eAAe,IAAI;AACzE;AACA;AACA,CAAC;AACD,WAAW,EAyBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yZAAyZ,YAAY,uJAAuJ,kBAAkB;AAC9kB,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,yBAAyB,OAAO,oDAAM,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,+DAAa;AACrC,wBAAwB,wEAAe;AACvC,wBAAwB,wEAAe;AACvC,wBAAwB,0EAAgB;AACxC,wBAAwB,0DAAW;AACnC,wBAAwB,kEAAmB;AAC3C,wBAAwB,0EAA2B;AACnD,wBAAwB,2DAAe;AACvC,wBAAwB,qEAAe;AACvC,wBAAwB,4EAAiB;AACzC,wBAAwB,6DAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,gEAAiB;AACjC,MAAM;AACN,8DAA8D,wEAAkB,EAAE,mDAAmD,iCAAiC,8DAAQ,CAAC,gEAAiB,GAAG,EAAE,mDAAmD;AACxP;AACA,CAAC;AACD,WAAW,EA8CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,gCAAgC,gEAAiB;AACjD,mBAAmB,EAAE;AACrB,sCAAsC,sEAAuB;AAC7D,mBAAmB,EAAE;AACrB,qCAAqC,2DAAc;AACnD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ;AAClC;AACA;AACA,0BAA0B,sDAAQ;AAClC,oDAAoD,iBAAiB;AACrE;AACA,eAAe,sDAAQ;AACvB;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,gEAAiB,EAAE;AACnC,SAAS,OAAO,kEAAmB,EAAE;AACrC,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,OAAO,wEAAyB,EAAE;AAC3C,SAAS,OAAO,+DAAgB,EAAE;AAClC,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAC/B,SAAS,OAAO,mEAAsB,EAAE;AACxC,SAAS,OAAO,gEAAiB,EAAE;AACnC,SAAS;AACT,MAAM;AACN;AACA,CAAC,CAAC,2DAAY;AACd,WAAW,EAwDV;AACD;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD;AACxD;AACA,wCAAwC,cAAc;AACtD;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,4CAA4C;AAC5C,SAAS,OAAO,uDAAM,EAAE;AACxB,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,2CAA2C,gDAAU;AACrD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,sCAAsC,qDAAe;AACrD;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,cAAc;AAC/C,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;AACD,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kCAAkC,+DAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,kBAAkB;AAClB;AACA;AACA,4CAA4C,+DAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,qEAAsB,EAAE;AACxC,SAAS;AACT,MAAM;AACN;AACA,CAAC,CAAC,0DAAY;AACd,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,+DAA+D,UAAU,aAAa;AAC1G;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,wBAAwB,yDAAU;AAClC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wEAAyB,EAAE;AAC3C,SAAS,OAAO,kEAAmB,EAAE;AACrC,SAAS,OAAO,qEAAsB;AACtC,MAAM;AACN,yDAAyD,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,CAAC,wEAAyB,GAAG,8DAAQ,CAAC,kEAAmB,GAAG,8DAAQ,CAAC,qEAAsB,GAAG,EAAE,8CAA8C;AAC7S;AACA,CAAC;AACD,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mCAAmC,4EAA4E,EAAE;AACjH;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,uDAAQ;AACzC,SAAS;AACT;AACA,iCAAiC,uDAAQ;AACzC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oCAAoC,uDAAQ;AAC5C,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kCAAkC,uDAAQ;AAC1C,SAAS;AACT,+BAA+B,0DAAW;AAC1C;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,uBAAuB;AAChC,SAAS,OAAO,wEAAyB,EAAE;AAC3C,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS;AACT,MAAM;AACN,6DAA6D,wEAAkB,EAAE,kDAAkD,gCAAgC,8DAAQ,kBAAkB,8DAAQ,CAAC,wEAAyB,GAAG,8DAAQ,mBAAmB,8DAAQ,mBAAmB,8DAAQ,oBAAoB,EAAE,kDAAkD;AACxW;AACA,CAAC;AACD,WAAW,EAkEV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,mCAAmC,qDAAe;AAClD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,mBAAmB,EAAE;AACrB;AACA,kBAAkB,4DAAI;AACtB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB,mBAAmB,EAAE;AACrB;AACA,iBAAiB,oEAAY;AAC7B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS;AACT,MAAM;AACN,iEAAiE,wEAAkB,EAAE,sDAAsD,oCAAoC,8DAAQ,mBAAmB,EAAE,sDAAsD;AAClQ;AACA,CAAC;AACD,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,gDAAgD,kEAAmB,EAAE,0EAA2B;AAChG;AACA;AACA;AACA;AACA,wBAAwB,2DAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,qEAAqE,2DAAG;AACxE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,wBAAwB,2DAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,oEAAqB;AACrC,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,sBAAsB,uDAAQ;AAC9B,SAAS,OAAO,2DAAG;AACnB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,sBAAsB,uDAAQ;AAC9B,SAAS,OAAO,2DAAG;AACnB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,sBAAsB,uDAAQ;AAC9B;AACA,SAAS,OAAO,2DAAG;AACnB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qHAAqH;AACrH;AACA,sBAAsB,uDAAQ;AAC9B;AACA;AACA,SAAS,OAAO,2DAAG;AACnB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,oEAAqB,EAAE;AACvC,SAAS,OAAO,oEAAqB;AACrC,MAAM;AACN,qDAAqD,wEAAkB,EAAE,0CAA0C,wBAAwB,8DAAQ,CAAC,oEAAqB,GAAG,8DAAQ,CAAC,oEAAqB,GAAG,EAAE,0CAA0C;AACzP;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,qBAAqB;AACrB,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,iCAAiC;AACjC,WAAW,EA6BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAyBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EA2BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,kCAAkC;AAClC,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,sBAAsB;AACtB,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,gCAAgC,mBAAmB;AACnD,gCAAgC,mBAAmB;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,oBAAoB,sDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,kEAAkE,sDAAO;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,2FAA2F,sDAAO;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,sDAAO;AACf;AACA,YAAY,sDAAO;AACnB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,6CAA6C,gCAAgC;AAC7E,yCAAyC,4BAA4B;AACrE,oCAAoC,uBAAuB;AAC3D,iCAAiC,oBAAoB;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,sCAAsC,EAAE;AACxC;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,oBAAoB,sDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,gCAAgC,sDAAO;AACvC,yEAAyE,iEAAkB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,gCAAgC,sDAAO;AACvC,mEAAmE,iEAAkB;AACrF;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,sDAAO;AACf,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO,uBAAuB,sDAAO;AACjD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB,OAAO,gBAAgB;AACvC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,gDAAgD,mCAAmC;AACnF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,qCAAqC,wBAAwB;AAC7D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,gCAAgC,sDAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,gCAAgC,sDAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,yBAAyB,sDAAO;AAChC,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,sDAAO;AACf;AACA,YAAY,sDAAO;AACnB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oBAAoB,sDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,kEAAkE,sDAAO;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,sDAAO;AACf;AACA,YAAY,sDAAO;AACnB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sDAAO;AAC3B;AACA;AACA,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iDAAiD;AACjD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,sDAAO;AACf,WAAW,sDAAO;AAClB,WAAW,sDAAO;AAClB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,gCAAgC,mBAAmB;AACnD,gCAAgC,mBAAmB;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,sDAAO;AACf,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,oBAAoB,OAAO,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB,OAAO,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,oBAAoB,sDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,sDAAO;AACf,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB,OAAO,gBAAgB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oBAAoB,sDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,6CAA6C,sDAAO;AACpD;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,sDAAO;AACf,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO,wBAAwB,sDAAO;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB,OAAO,gBAAgB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oBAAoB,sDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,mEAAmE,sDAAO;AAC1E;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,sDAAO;AACf,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO,wBAAwB,sDAAO;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB,OAAO,gBAAgB;AACvC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB,OAAO,gBAAgB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB;AACA;AACA;AACA,yCAAyC;AACzC,WAAW,EAmBV;AACD;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC,iDAAiD,sDAAO;AACxD,4BAA4B,sDAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wBAAwB,EAAE;AAC1B,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,mCAAmC,sDAAO;AAC1C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8BAA8B,iDAAiD,EAAE;AACjF;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+BAA+B,oBAAoB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB,EAAE;AACnB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,iBAAiB,EAAE;AACnB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,uCAAuC;AACvC,WAAW,EAWV;AACD;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,+IAA+I;AAC/I;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,wEAAwE,EAAE,kBAAkB,EAAE;AAC9F;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,sEAAsE,EAAE,kBAAkB,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,gDAAgD,EAAE,kBAAkB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,8CAA8C,EAAE,kBAAkB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,8CAA8C,EAAE,kBAAkB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,eAAe,EAAE;AACjB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,oCAAQ;AACvB,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA,gCAAgC,sDAAO;AACvC,gCAAgC,sDAAO;AACvC,gCAAgC,sDAAO;AACvC;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,mDAAmD,EAAE;AACrD;AACA,mDAAmD,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,mDAAmD,EAAE;AACrD;AACA,mDAAmD,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,QAAQ,sDAAO;AACf;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,yBAAyB,sDAAO;AAChC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,6BAA6B,sDAAO;AACpC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,EAAE;AACjB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC,wDAAwD,EAAE;AAC1D,+BAA+B,EAAE;AACjC,yDAAyD,EAAE;AAC3D,+BAA+B,EAAE;AACjC,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,QAAQ,sDAAO;AACf;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,sCAAsC,yDAAU;AAChD;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;A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","file":"main.js","sourcesContent":["import { Directive, Optional, Input, HostBinding, ElementRef, HostListener, NgModule, Injectable, Component, Inject, EventEmitter, ViewEncapsulation, ViewChild, Output, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { CommonModule, formatNumber, DatePipe } from '@angular/common';\nimport { ControlContainer, FormsModule, ReactiveFormsModule, NG_VALIDATORS, FormBuilder } from '@angular/forms';\nimport { MatIconModule, MatTreeModule, MatNativeDateModule, MatTableModule, MatDialogModule, MatSelectModule, MatTabsModule, MatCheckboxModule, MatRadioModule, MatDatepickerModule, MatButtonModule, MatButtonToggleModule, MatProgressSpinnerModule, MatPaginatorModule, DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_SELECT_SCROLL_STRATEGY, MAT_DIALOG_DEFAULT_OPTIONS, MatDialogRef, MAT_DIALOG_DATA, MAT_SNACK_BAR_DATA, MatDialog, MatSnackBar, MatSpinner } from '@angular/material';\nimport { MatButtonModule as MatButtonModule$1 } from '@angular/material/button';\nimport { MatDialog as MatDialog$1, MatDialogModule as MatDialogModule$1 } from '@angular/material/dialog';\nimport { MatIconModule as MatIconModule$1 } from '@angular/material/icon';\nimport { MatMenuModule, MAT_MENU_SCROLL_STRATEGY } from '@angular/material/menu';\nimport { NavigationEnd, PRIMARY_OUTLET, ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { MomentDateAdapter, MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { MatAutocompleteModule, MAT_AUTOCOMPLETE_SCROLL_STRATEGY } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { __extends, __spread, __values, __assign } from 'tslib';\nimport * as momentNS from 'moment';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { Subject, of, Observable, throwError, EMPTY, merge, fromEvent, from, interval, timer } from 'rxjs';\nimport { utils, writeFile } from 'xlsx';\nimport { tap, map, catchError, mergeMap, startWith, debounceTime, distinctUntilChanged, scan, bufferTime, filter, switchMap, takeUntil, finalize, take } from 'rxjs/operators';\nimport { HttpErrorResponse, HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { saveAs } from 'file-saver';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { AES, enc } from 'crypto-js';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/label-control.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LabelControlDirective = /** @class */ (function () {\r\n    function LabelControlDirective(parent) {\r\n        this.parent = parent;\r\n    }\r\n    Object.defineProperty(LabelControlDirective.prototype, \"controlValue\", {\r\n        /**\r\n         * Gets host binding\r\n         */\r\n        get: /**\r\n         * Gets host binding\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.parent ? this.parent.control.get(this.ctosControlName).value : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LabelControlDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'label[ctosControlName]',\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    LabelControlDirective.ctorParameters = function () { return [\r\n        { type: ControlContainer, decorators: [{ type: Optional }] }\r\n    ]; };\r\n    LabelControlDirective.propDecorators = {\r\n        ctosControlName: [{ type: Input }],\r\n        controlValue: [{ type: HostBinding, args: ['textContent',] }]\r\n    };\r\n    return LabelControlDirective;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    LabelControlDirective.prototype.ctosControlName;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    LabelControlDirective.prototype.parent;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/signed-decimal.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar signedDecimalRegex = '^-?\\\\d*\\\\.{0,1}\\\\d+$';\r\n/** @type {?} */\r\nvar unsignedDecimalRegex = '^\\\\d*\\\\.{0,1}\\\\d+$';\r\nvar SignedDecimalDirective = /** @class */ (function () {\r\n    function SignedDecimalDirective(el) {\r\n        this.el = el;\r\n        this.isSigned = false;\r\n        this.inputElement = el.nativeElement;\r\n    }\r\n    /**\r\n     * Hosts listener\r\n     * @param e\r\n     * @returns\r\n     */\r\n    /**\r\n     * Params signed decimal directive\r\n     * @param e\r\n     * @returns\r\n     */\r\n    /**\r\n         * Hosts listener\r\n         * @param e\r\n         * @returns\r\n         */\r\n    /**\r\n     * Params signed decimal directive\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    SignedDecimalDirective.prototype.onKeyDown = /**\r\n         * Hosts listener\r\n         * @param e\r\n         * @returns\r\n         */\r\n    /**\r\n     * Params signed decimal directive\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        if ([46, 8, 9, 27, 13, 190, 110].indexOf(e.keyCode) !== -1 || // Allow: Delete, Backspace, Tab, Escape, Enter, Decimal Point\r\n            (e.keyCode === 65 && e.ctrlKey === true) || // Allow: Ctrl+A\r\n            (e.keyCode === 67 && e.ctrlKey === true) || // Allow: Ctrl+C\r\n            (e.keyCode === 86 && e.ctrlKey === true) || // Allow: Ctrl+V\r\n            (e.keyCode === 88 && e.ctrlKey === true) || // Allow: Ctrl+X\r\n            (e.keyCode === 65 && e.metaKey === true) || // Allow: Cmd+A (Mac)\r\n            (e.keyCode === 67 && e.metaKey === true) || // Allow: Cmd+C (Mac)\r\n            (e.keyCode === 86 && e.metaKey === true) || // Allow: Cmd+V (Mac)\r\n            (e.keyCode === 88 && e.metaKey === true) || // Allow: Cmd+X (Mac)\r\n            (e.keyCode >= 35 && e.keyCode <= 39) // Allow: Home, End, Left, Right\r\n        ) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        if (this.isSigned && [189, 109].indexOf(e.keyCode) !== -1) {\r\n            return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\r\n            (e.keyCode < 96 || e.keyCode > 105)) {\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    SignedDecimalDirective.prototype.onPaste = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        event.preventDefault();\r\n        /** @type {?} */\r\n        var decimalRegex = unsignedDecimalRegex;\r\n        if (this.isSigned) {\r\n            decimalRegex = signedDecimalRegex;\r\n        }\r\n        /** @type {?} */\r\n        var pastedInput = event.clipboardData\r\n            .getData('text/plain');\r\n        /** @type {?} */\r\n        var valid = (new RegExp(decimalRegex)).test(pastedInput);\r\n        /** @type {?} */\r\n        var value = '';\r\n        if (valid) {\r\n            value = pastedInput;\r\n        }\r\n        document.execCommand('insertText', false, value);\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    SignedDecimalDirective.prototype.onDrop = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        event.preventDefault();\r\n        /** @type {?} */\r\n        var decimalRegex = unsignedDecimalRegex;\r\n        if (this.isSigned) {\r\n            decimalRegex = signedDecimalRegex;\r\n        }\r\n        /** @type {?} */\r\n        var textData = event.dataTransfer.getData('text');\r\n        /** @type {?} */\r\n        var valid = (new RegExp(decimalRegex)).test(textData);\r\n        /** @type {?} */\r\n        var value = '';\r\n        if (valid) {\r\n            value = textData;\r\n        }\r\n        this.inputElement.focus();\r\n        document.execCommand('insertText', false, value);\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    SignedDecimalDirective.prototype.onChange = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        /** @type {?} */\r\n        var decimalRegex = unsignedDecimalRegex;\r\n        if (this.isSigned) {\r\n            decimalRegex = signedDecimalRegex;\r\n        }\r\n        /** @type {?} */\r\n        var inputValue = ((/** @type {?} */ (e.target))).value;\r\n        /** @type {?} */\r\n        var valid = (new RegExp(decimalRegex)).test(inputValue);\r\n        if (!valid) {\r\n            ((/** @type {?} */ (this.inputElement))).value = '';\r\n        }\r\n    };\r\n    SignedDecimalDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'input[ctosSignedDecimal]'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    SignedDecimalDirective.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    SignedDecimalDirective.propDecorators = {\r\n        isSigned: [{ type: Input }],\r\n        onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\r\n        onPaste: [{ type: HostListener, args: ['paste', ['$event'],] }],\r\n        onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\r\n        onChange: [{ type: HostListener, args: ['change', ['$event'],] }]\r\n    };\r\n    return SignedDecimalDirective;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    SignedDecimalDirective.prototype.inputElement;\r\n    /** @type {?} */\r\n    SignedDecimalDirective.prototype.isSigned;\r\n    /** @type {?} */\r\n    SignedDecimalDirective.prototype.el;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/signed-integer.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar signedIntegerRegex = '^[+-]?[0-9]+$';\r\n/** @type {?} */\r\nvar unsignedIntegerRegex = '^[0-9]+$';\r\nvar SignedIntegerDirective = /** @class */ (function () {\r\n    function SignedIntegerDirective(el) {\r\n        this.el = el;\r\n        this.isSigned = false;\r\n        this.inputElement = el.nativeElement;\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    SignedIntegerDirective.prototype.onKeyDown = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        if ([46, 8, 9, 27, 13].indexOf(e.keyCode) !== -1 || // Allow: Delete, Backspace, Tab, Escape, Enter\r\n            (e.keyCode === 65 && e.ctrlKey === true) || // Allow: Ctrl+A\r\n            (e.keyCode === 67 && e.ctrlKey === true) || // Allow: Ctrl+C\r\n            (e.keyCode === 86 && e.ctrlKey === true) || // Allow: Ctrl+V\r\n            (e.keyCode === 88 && e.ctrlKey === true) || // Allow: Ctrl+X\r\n            (e.keyCode === 65 && e.metaKey === true) || // Allow: Cmd+A (Mac)\r\n            (e.keyCode === 67 && e.metaKey === true) || // Allow: Cmd+C (Mac)\r\n            (e.keyCode === 86 && e.metaKey === true) || // Allow: Cmd+V (Mac)\r\n            (e.keyCode === 88 && e.metaKey === true) || // Allow: Cmd+X (Mac)\r\n            (e.keyCode >= 35 && e.keyCode <= 39) // Allow: Home, End, Left, Right\r\n        ) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        if (this.isSigned && [189, 109].indexOf(e.keyCode) !== -1) {\r\n            return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\r\n            (e.keyCode < 96 || e.keyCode > 105)) {\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    SignedIntegerDirective.prototype.onPaste = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        event.preventDefault();\r\n        /** @type {?} */\r\n        var integerRegex = unsignedIntegerRegex;\r\n        if (this.isSigned) {\r\n            integerRegex = signedIntegerRegex;\r\n        }\r\n        /** @type {?} */\r\n        var pastedInput = event.clipboardData\r\n            .getData('text/plain');\r\n        /** @type {?} */\r\n        var valid = (new RegExp(integerRegex)).test(pastedInput);\r\n        /** @type {?} */\r\n        var value = '';\r\n        if (valid) {\r\n            value = pastedInput;\r\n        }\r\n        document.execCommand('insertText', false, value);\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    SignedIntegerDirective.prototype.onDrop = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        event.preventDefault();\r\n        /** @type {?} */\r\n        var integerRegex = unsignedIntegerRegex;\r\n        if (this.isSigned) {\r\n            integerRegex = signedIntegerRegex;\r\n        }\r\n        /** @type {?} */\r\n        var textData = event.dataTransfer.getData('text');\r\n        /** @type {?} */\r\n        var valid = (new RegExp(integerRegex)).test(textData);\r\n        /** @type {?} */\r\n        var value = '';\r\n        if (valid) {\r\n            value = textData;\r\n        }\r\n        this.inputElement.focus();\r\n        document.execCommand('insertText', false, value);\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    SignedIntegerDirective.prototype.onChange = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        /** @type {?} */\r\n        var integerRegex = unsignedIntegerRegex;\r\n        if (this.isSigned) {\r\n            integerRegex = signedIntegerRegex;\r\n        }\r\n        /** @type {?} */\r\n        var inputValue = ((/** @type {?} */ (e.target))).value;\r\n        /** @type {?} */\r\n        var valid = (new RegExp(integerRegex)).test(inputValue);\r\n        if (!valid) {\r\n            ((/** @type {?} */ (this.inputElement))).value = '';\r\n        }\r\n    };\r\n    SignedIntegerDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'input[ctosSignedInteger]'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    SignedIntegerDirective.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    SignedIntegerDirective.propDecorators = {\r\n        isSigned: [{ type: Input }],\r\n        onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\r\n        onPaste: [{ type: HostListener, args: ['paste', ['$event'],] }],\r\n        onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\r\n        onChange: [{ type: HostListener, args: ['change', ['$event'],] }]\r\n    };\r\n    return SignedIntegerDirective;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    SignedIntegerDirective.prototype.inputElement;\r\n    /** @type {?} */\r\n    SignedIntegerDirective.prototype.isSigned;\r\n    /** @type {?} */\r\n    SignedIntegerDirective.prototype.el;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/service-constant.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar COMMON = {\r\n    RESULT_OK: 'OK',\r\n    RESULT_ERROR: 'ERROR'\r\n};\r\n/** @type {?} */\r\nvar BASE_TERMS_PARAMS = {\r\n    commandName: 'GetTerms',\r\n    category: {\r\n        category: 'terms'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar LOCALE_APP_TERMS_PARAMS = {\r\n    commandName: 'GetTerms',\r\n    category: {\r\n        category: 'application'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar LOGOUT_PARAMS = {\r\n    commandName: 'Logout'\r\n};\r\n/** @type {?} */\r\nvar LOGIN_PARAMS = {\r\n    commandName: 'GetTerms',\r\n    category: {\r\n        category: 'login'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar REPORTING_PERIOD_CONST = {\r\n    MONTH: 'MONTH',\r\n    WEEK: 'WEEK',\r\n    YEAR: 'YEAR',\r\n    QUARTER: 'QUARTER',\r\n    DAILY: 'DAY'\r\n};\r\n/** @type {?} */\r\nvar BASE_HREF = 'dv/StudyOptimizer';\r\n/** @type {?} */\r\nvar DEBOUNCE_TIME = 750;\r\n/** @type {?} */\r\nvar DISPATCH_URL = window.location.origin + \"/dv/StudyOptimizer/dispatch\";\r\n/** @type {?} */\r\nvar LOGGING_SERVLET_URL = window.location.origin + \"/dv/StudyOptimizer/loggingServlet\";\r\n/** @type {?} */\r\nvar VALID_DATE_FORMATS = [\r\n    'MM-DD-YYYY',\r\n    'MM/DD/YYYY',\r\n    'YYYY-MM-DD',\r\n    'YYYY/MM/DD',\r\n    'DD-MMM-YYYY',\r\n    'DD/MMM/YYYY',\r\n    'DDMMMYYYY',\r\n    'YYYY-MMM-DD',\r\n    'YYYY/MMM/DD',\r\n    'MMM-DD-YYYY',\r\n    'MMM/DD/YYYY'\r\n];\r\n/** @type {?} */\r\nvar DIALOG_CONFIG = {\r\n    LOGOUT: {\r\n        ID: 'LogoutDialog',\r\n        WIDTH: '25%',\r\n        PANEL_CLASS: 'logout-dialog'\r\n    },\r\n    ABOUT: {\r\n        ID: 'AboutDialog',\r\n        WIDTH: '50%',\r\n        PANEL_CLASS: 'about-dialog'\r\n    },\r\n    PASSWORD: {\r\n        ID: 'PasswordDialog',\r\n        WIDTH: '50%',\r\n        PANEL_CLASS: 'password-dialog'\r\n    },\r\n    CONFIRM_UNSAVED_DATA: {\r\n        WIDTH: '310px',\r\n        HEIGHT: '190',\r\n        PANEL_CLASS: 'unsaved-data-confirmation-dialog'\r\n    },\r\n    DELETE_PLAN: {\r\n        ID: 'DeletePlanDialog',\r\n        WIDTH: '310px',\r\n        HEIGHT: '180px',\r\n        PANEL_CLASS: 'delete-plan-confirmation-dialog'\r\n    },\r\n};\r\n/** @type {?} */\r\nvar ALERT_TYPE = {\r\n    CancelLabel: 'CancelLabel',\r\n    OkLabel: 'OkLabel',\r\n    OK: 'OK',\r\n    YesLabel: 'YesLabel',\r\n    NoLabel: 'NoLabel'\r\n};\r\n/** @type {?} */\r\nvar CUSTOM_ERROR_CODES = {\r\n    FSI_REQUIRED_FOR_FSS: {\r\n        error: 'FSIRequiredForFSS',\r\n        message: 'NonEmptyField'\r\n    },\r\n    REQUIRED: {\r\n        error: 'required',\r\n        message: 'NonEmptyField'\r\n    },\r\n    MIN: {\r\n        error: 'min',\r\n        message: 'minNumExceedError'\r\n    },\r\n    MAX: {\r\n        error: 'max',\r\n        message: 'maxNumExceedError'\r\n    },\r\n    MAT_DATEPICKER_PARSE: {\r\n        error: 'matDatepickerParse',\r\n        message: 'DateFormatIncorrect'\r\n    },\r\n    DAYS_TO_SI_AFTER_ARTB: {\r\n        error: 'daysToSIAfterARTB',\r\n        message: 'SIDateError'\r\n    },\r\n    ARTB_LT_EQ_FSI: {\r\n        error: 'ARTB_LT_EQ_FSI',\r\n        message: 'ARTblteqFSI'\r\n    },\r\n    ARTB__LT_EQ_FSS: {\r\n        error: 'ARTB__LT_EQ_FSS',\r\n        message: 'ARTblteqFSS'\r\n    },\r\n    FSI_GT_TLSS: {\r\n        error: 'FSI_GT_TLSS',\r\n        message: 'FSIgtTLSS'\r\n    },\r\n    FSILT_ERROR: {\r\n        error: 'FSILT_ERROR',\r\n        message: 'FSILTError'\r\n    },\r\n    DEPENDENCY_ERROR: {\r\n        error: 'DEPENDENCY_ERROR',\r\n        message: 'dependencyError'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar INDICATOR = {\r\n    INSERT: 'I',\r\n    UPDATE: 'U',\r\n    DELETE: 'D'\r\n};\r\n/** @type {?} */\r\nvar DATE_FORMAT = {\r\n    NOTE_API_DATE_FORMAT: 'MMM-DD-YYYY HH:MM:SS',\r\n    NOTE_API_DATE_FORMAT_SMALL: 'MMM-DD-YYYY HH:mm:ss',\r\n    SERVER_DATE_FORMAT: 'YYYY-MM-DD',\r\n    MONTH_DATE_FORMAT: 'DD-MMM-YYYY'\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/common-angular-material/ctos-date-adapter.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment = momentNS;\r\n/** @type {?} */\r\nvar CTOS_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: VALID_DATE_FORMATS\r\n    },\r\n    display: {\r\n        dateInput: 'DD-MMM-YYYY',\r\n        monthYearLabel: 'MMM-YYYY',\r\n        dateA11yLabel: 'DD-MMM-YYYY',\r\n        monthYearA11yLabel: 'MMM-YYYY',\r\n    },\r\n};\r\nvar CTOSDateAdapter = /** @class */ (function (_super) {\r\n    __extends(CTOSDateAdapter, _super);\r\n    function CTOSDateAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} parseFormat\r\n     * @return {?}\r\n     */\r\n    CTOSDateAdapter.prototype.parse = /**\r\n     * @param {?} value\r\n     * @param {?} parseFormat\r\n     * @return {?}\r\n     */\r\n    function (value, parseFormat) {\r\n        if (value && typeof value === 'string') {\r\n            return moment(value, parseFormat, true);\r\n        }\r\n        return value ? moment(value) : null;\r\n    };\r\n    /**\r\n     * This is needed to override the default behaviour as invalid values are also considered as null\r\n     * and empty values are also considered as null, so to verify if both are null that is previous value\r\n     * and current value then the value change should be triggered.\r\n     *\r\n     * param first\r\n     * param second\r\n     * returns\r\n     * memberof CTOSDateAdapter\r\n     */\r\n    /**\r\n     * This is needed to override the default behaviour as invalid values are also considered as null\r\n     * and empty values are also considered as null, so to verify if both are null that is previous value\r\n     * and current value then the value change should be triggered.\r\n     *\r\n     * param first\r\n     * param second\r\n     * returns\r\n     * memberof CTOSDateAdapter\r\n     * @param {?} first\r\n     * @param {?} second\r\n     * @return {?}\r\n     */\r\n    CTOSDateAdapter.prototype.sameDate = /**\r\n     * This is needed to override the default behaviour as invalid values are also considered as null\r\n     * and empty values are also considered as null, so to verify if both are null that is previous value\r\n     * and current value then the value change should be triggered.\r\n     *\r\n     * param first\r\n     * param second\r\n     * returns\r\n     * memberof CTOSDateAdapter\r\n     * @param {?} first\r\n     * @param {?} second\r\n     * @return {?}\r\n     */\r\n    function (first, second) {\r\n        if (first && second) {\r\n            /** @type {?} */\r\n            var firstValid = this.isValid(first);\r\n            /** @type {?} */\r\n            var secondValid = this.isValid(second);\r\n            if (firstValid && secondValid) {\r\n                return !this.compareDate(first, second);\r\n            }\r\n            return firstValid === secondValid;\r\n        }\r\n        else {\r\n            return first !== null && second !== null && first === second;\r\n        }\r\n    };\r\n    return CTOSDateAdapter;\r\n}(MomentDateAdapter));\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/common-angular-material/scroll.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} overlay\r\n * @return {?}\r\n */\r\nfunction MAT_SCROLL_STRATEGY_FACTORY(overlay) {\r\n    return (/**\r\n     * @return {?}\r\n     */\r\n    function () { return overlay.scrollStrategies.close(); });\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/common-angular-material/common-angular-material.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ɵ0 = { duration: 2000, verticalPosition: 'top' }, ɵ1 = CTOS_DATE_FORMATS, ɵ2 = { _forceAnimations: true, diameter: 100, strokeWidth: 6 }, ɵ3 = MAT_SCROLL_STRATEGY_FACTORY, ɵ4 = MAT_SCROLL_STRATEGY_FACTORY, ɵ5 = MAT_SCROLL_STRATEGY_FACTORY, ɵ6 = {\r\n    hasBackdrop: true,\r\n    disableClose: true,\r\n    backdropClass: 'backdrop'\r\n};\r\nvar CommonAngularMaterialModule = /** @class */ (function () {\r\n    function CommonAngularMaterialModule() {\r\n    }\r\n    CommonAngularMaterialModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        MatAutocompleteModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatTreeModule,\r\n                        MatNativeDateModule,\r\n                        MatTableModule,\r\n                        MatTooltipModule,\r\n                        MatDialogModule,\r\n                        MatMenuModule,\r\n                        MatSelectModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        MatCheckboxModule,\r\n                        MatRadioModule,\r\n                        MatDatepickerModule,\r\n                        MatMomentDateModule,\r\n                        MatButtonModule,\r\n                        MatButtonToggleModule,\r\n                        OverlayModule,\r\n                        MatProgressSpinnerModule,\r\n                        MatPaginatorModule,\r\n                        MatSlideToggleModule\r\n                    ],\r\n                    providers: [\r\n                        {\r\n                            provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\r\n                            useValue: ɵ0\r\n                        },\r\n                        {\r\n                            provide: DateAdapter,\r\n                            useClass: CTOSDateAdapter,\r\n                            deps: [MAT_DATE_LOCALE]\r\n                        },\r\n                        { provide: MAT_DATE_FORMATS, useValue: ɵ1 },\r\n                        {\r\n                            provide: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,\r\n                            useValue: ɵ2\r\n                        },\r\n                        {\r\n                            provide: MAT_SELECT_SCROLL_STRATEGY,\r\n                            useFactory: ɵ3,\r\n                            deps: [Overlay]\r\n                        },\r\n                        {\r\n                            provide: MAT_MENU_SCROLL_STRATEGY,\r\n                            useFactory: ɵ4,\r\n                            deps: [Overlay]\r\n                        },\r\n                        {\r\n                            provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\r\n                            useFactory: ɵ5,\r\n                            deps: [Overlay]\r\n                        },\r\n                        {\r\n                            provide: MAT_DIALOG_DEFAULT_OPTIONS,\r\n                            useValue: ɵ6\r\n                        }\r\n                    ],\r\n                    declarations: [],\r\n                    exports: [\r\n                        MatAutocompleteModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatTreeModule,\r\n                        MatNativeDateModule,\r\n                        MatTableModule,\r\n                        MatTooltipModule,\r\n                        MatDialogModule,\r\n                        MatMenuModule,\r\n                        MatSelectModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        MatCheckboxModule,\r\n                        MatRadioModule,\r\n                        MatDatepickerModule,\r\n                        MatMomentDateModule,\r\n                        MatButtonModule,\r\n                        MatButtonToggleModule,\r\n                        OverlayModule,\r\n                        MatProgressSpinnerModule,\r\n                        MatPaginatorModule,\r\n                        MatSlideToggleModule\r\n                    ]\r\n                },] }\r\n    ];\r\n    return CommonAngularMaterialModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/confirm-equal-validator.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ConfirmEqualValidatorDirective = /** @class */ (function () {\r\n    function ConfirmEqualValidatorDirective() {\r\n    }\r\n    /**\r\n     * Validates confirm equal validator directive\r\n     * @param control\r\n     * @returns validate\r\n     */\r\n    /**\r\n     * Validates confirm equal validator directive\r\n     * @param {?} control\r\n     * @return {?} validate\r\n     */\r\n    ConfirmEqualValidatorDirective.prototype.validate = /**\r\n     * Validates confirm equal validator directive\r\n     * @param {?} control\r\n     * @return {?} validate\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var controlToCompare = control.parent.get(this.ctosConfirmEqualValidator);\r\n        if (controlToCompare && controlToCompare.value !== control.value) {\r\n            return { 'notEqual': true };\r\n        }\r\n        return null;\r\n    };\r\n    ConfirmEqualValidatorDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    // tslint:disable-next-line:directive-selector\r\n                    selector: '[ctosConfirmEqualValidator]',\r\n                    providers: [{\r\n                            provide: NG_VALIDATORS,\r\n                            useExisting: ConfirmEqualValidatorDirective,\r\n                            multi: true\r\n                        }]\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ConfirmEqualValidatorDirective.ctorParameters = function () { return []; };\r\n    ConfirmEqualValidatorDirective.propDecorators = {\r\n        ctosConfirmEqualValidator: [{ type: Input }]\r\n    };\r\n    return ConfirmEqualValidatorDirective;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    ConfirmEqualValidatorDirective.prototype.ctosConfirmEqualValidator;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/AppUtil.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$1 = momentNS;\r\n/**\r\n * App util\r\n */\r\nvar  /**\r\n * App util\r\n */\r\nAppUtil = /** @class */ (function () {\r\n    function AppUtil() {\r\n    }\r\n    /**\r\n     * Checks if the element exists in the given array\r\n     *\r\n     * @param arr\r\n     * @param element\r\n     * @returns\r\n     * @memberof AppUtil\r\n     */\r\n    /**\r\n     * Checks if the element exists in the given array\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} arr\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    AppUtil.checkElementExistsInArray = /**\r\n     * Checks if the element exists in the given array\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} arr\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    function (arr, element) {\r\n        if (arr === undefined || arr === null) {\r\n            throw new Error('arr should be defined');\r\n        }\r\n        if (!(arr instanceof Array)) {\r\n            throw new Error('arr should be an array');\r\n        }\r\n        if (element === undefined || element === null) {\r\n            throw new Error('element should be defined');\r\n        }\r\n        /** @type {?} */\r\n        var result = arr.some((/**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        function (el) {\r\n            return el.key === element.key;\r\n        }));\r\n        return result;\r\n    };\r\n    /**\r\n     * extracts and concatenates the path from URL segments\r\n     *\r\n     * @param url\r\n     * @returns\r\n     * @memberof AppUtil\r\n     */\r\n    /**\r\n     * extracts and concatenates the path from URL segments\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    AppUtil.extractPathFromUrl = /**\r\n     * extracts and concatenates the path from URL segments\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    function (url) {\r\n        if (url === undefined || url === null) {\r\n            throw new Error('url must be defined');\r\n        }\r\n        if (!(url instanceof Array)) {\r\n            throw new Error('url must be of type UrlSegment');\r\n        }\r\n        /** @type {?} */\r\n        var paths = url.map((/**\r\n         * @param {?} segment\r\n         * @return {?}\r\n         */\r\n        function (segment) { return segment.path; }));\r\n        /** @type {?} */\r\n        var path = paths.join('/');\r\n        return path;\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @param {?} separator\r\n     * @return {?}\r\n     */\r\n    AppUtil.getInitials = /**\r\n     * @param {?} text\r\n     * @param {?} separator\r\n     * @return {?}\r\n     */\r\n    function (text, separator) {\r\n        if (text === undefined || text === null) {\r\n            throw new Error('text should be defined');\r\n        }\r\n        if (typeof text !== 'string') {\r\n            throw new Error('text should be string');\r\n        }\r\n        /** @type {?} */\r\n        var arr = text.split(separator);\r\n        /** @type {?} */\r\n        var initials = arr.map((/**\r\n         * @param {?} t\r\n         * @return {?}\r\n         */\r\n        function (t) {\r\n            return t\r\n                .trim()\r\n                .charAt(0)\r\n                .toUpperCase();\r\n        }));\r\n        return initials.join('');\r\n    };\r\n    /**\r\n     * @param {?} name\r\n     * @param {?} separator\r\n     * @return {?}\r\n     */\r\n    AppUtil.getNameInitials = /**\r\n     * @param {?} name\r\n     * @param {?} separator\r\n     * @return {?}\r\n     */\r\n    function (name, separator) {\r\n        if (name === undefined || name === null) {\r\n            throw new Error('name should be defined');\r\n        }\r\n        if (typeof name !== 'string') {\r\n            throw new Error('name should be string');\r\n        }\r\n        /** @type {?} */\r\n        var arr = name.split(separator);\r\n        /** @type {?} */\r\n        var initials = [];\r\n        if (arr.length > 0) {\r\n            initials.push(arr[0]\r\n                .trim()\r\n                .charAt(0)\r\n                .toUpperCase());\r\n        }\r\n        if (arr.length > 1) {\r\n            initials.push(arr[arr.length - 1]\r\n                .trim()\r\n                .charAt(0)\r\n                .toUpperCase());\r\n        }\r\n        return initials.join('');\r\n    };\r\n    /**\r\n     * @param {?} baseHref\r\n     * @param {?} fragment\r\n     * @return {?}\r\n     */\r\n    AppUtil.generateUrl = /**\r\n     * @param {?} baseHref\r\n     * @param {?} fragment\r\n     * @return {?}\r\n     */\r\n    function (baseHref, fragment) {\r\n        /** @type {?} */\r\n        var url = window.location.protocol +\r\n            '//' +\r\n            window.location.hostname +\r\n            ':' +\r\n            window.location.port +\r\n            '/';\r\n        if (baseHref) {\r\n            url += baseHref + '/';\r\n        }\r\n        if (fragment) {\r\n            url += fragment + '/';\r\n        }\r\n        url += 'index.html';\r\n        return url;\r\n    };\r\n    /**\r\n     * @param {?} baseHref\r\n     * @return {?}\r\n     */\r\n    AppUtil.generateFlexUrl = /**\r\n     * @param {?} baseHref\r\n     * @return {?}\r\n     */\r\n    function (baseHref) {\r\n        /** @type {?} */\r\n        var url = '';\r\n        url +=\r\n            window.location.protocol +\r\n                '//' +\r\n                window.location.hostname +\r\n                ':' +\r\n                window.location.port +\r\n                '/';\r\n        if (baseHref) {\r\n            url += baseHref + '/';\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * @param {?} fromdt\r\n     * @param {?} todt\r\n     * @return {?}\r\n     */\r\n    AppUtil.dayDiff = /**\r\n     * @param {?} fromdt\r\n     * @param {?} todt\r\n     * @return {?}\r\n     */\r\n    function (fromdt, todt) {\r\n        /** @type {?} */\r\n        var fromDate = moment$1(fromdt);\r\n        /** @type {?} */\r\n        var toDate = moment$1(todt);\r\n        /** @type {?} */\r\n        var daysDifference = toDate.diff(fromDate, 'days');\r\n        return daysDifference;\r\n        // const weekDiffernce = daysDifference / 7;\r\n        // return weekDiffernce.toFixed(1) + ` ` + `Weeks`;\r\n    };\r\n    /**\r\n     * @param {?} dt1\r\n     * @param {?} dt2\r\n     * @param {?=} by\r\n     * @param {?=} num\r\n     * @return {?}\r\n     */\r\n    AppUtil.dateDiff = /**\r\n     * @param {?} dt1\r\n     * @param {?} dt2\r\n     * @param {?=} by\r\n     * @param {?=} num\r\n     * @return {?}\r\n     */\r\n    function (dt1, dt2, by, num) {\r\n        /** @type {?} */\r\n        var fromDate = moment$1(dt1);\r\n        /** @type {?} */\r\n        var toDate = moment$1(dt2);\r\n        /** @type {?} */\r\n        var dayDiff = toDate.diff(fromDate, 'd');\r\n        if (by === 'd') {\r\n            return dayDiff;\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var weekDiff = (dayDiff + 1) / 7;\r\n            return weekDiff.toFixed(num);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} num\r\n     * @return {?}\r\n     */\r\n    AppUtil.dateAdd = /**\r\n     * @param {?} date\r\n     * @param {?} num\r\n     * @return {?}\r\n     */\r\n    function (date, num) {\r\n        return moment$1(date).add(num, 'days');\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} num\r\n     * @return {?}\r\n     */\r\n    AppUtil.dateSubstract = /**\r\n     * @param {?} date\r\n     * @param {?} num\r\n     * @return {?}\r\n     */\r\n    function (date, num) {\r\n        return moment$1(date).subtract(num, 'days');\r\n    };\r\n    /**\r\n     * @param {?=} date\r\n     * @return {?}\r\n     */\r\n    AppUtil.dateFormatter = /**\r\n     * @param {?=} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return moment$1(date).format('YYYY-MM-DD');\r\n    };\r\n    /**\r\n     * @param {?=} date\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    AppUtil.formatDate = /**\r\n     * @param {?=} date\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (date, format) {\r\n        if (format === void 0) { format = 'YYYY-MM-DD'; }\r\n        return moment$1(date).format(format);\r\n    };\r\n    /**\r\n     * @param {?=} date\r\n     * @param {?=} format\r\n     * @param {?=} emptyValue\r\n     * @return {?}\r\n     */\r\n    AppUtil.formatDateStrict = /**\r\n     * @param {?=} date\r\n     * @param {?=} format\r\n     * @param {?=} emptyValue\r\n     * @return {?}\r\n     */\r\n    function (date, format, emptyValue) {\r\n        if (format === void 0) { format = 'DD-MMM-YYYY'; }\r\n        if (emptyValue === void 0) { emptyValue = ''; }\r\n        if (this.isDefined(date)) {\r\n            return moment$1(date).format(format);\r\n        }\r\n        else {\r\n            return emptyValue;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} dt1\r\n     * @param {?} dt2\r\n     * @return {?}\r\n     */\r\n    AppUtil.dateCompare = /**\r\n     * @param {?} dt1\r\n     * @param {?} dt2\r\n     * @return {?}\r\n     */\r\n    function (dt1, dt2) {\r\n        /** @type {?} */\r\n        var date1 = dt1;\r\n        /** @type {?} */\r\n        var date2 = dt2;\r\n        /** @type {?} */\r\n        var days = moment$1(date2).diff(moment$1(date1), 'days');\r\n        if (days >= 0) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /********************************************************************\r\n    * Function : isValidDate\r\n    * Purpose: Utility method to validate date formate & the value.\r\n    * Valid formate: DD-MMM-YYYY (For e.g. 05-Dec-2016). If user enters something which is not in this format\r\n    * then it will return false. For e.g. 05..Dec.2016 will return false\r\n    *********************************************************************/\r\n    /**\r\n     * *****************************************************************\r\n     * Function : isValidDate\r\n     * Purpose: Utility method to validate date formate & the value.\r\n     * Valid formate: DD-MMM-YYYY (For e.g. 05-Dec-2016). If user enters something which is not in this format\r\n     * then it will return false. For e.g. 05..Dec.2016 will return false\r\n     * *******************************************************************\r\n     * @param {?} dateStr\r\n     * @return {?}\r\n     */\r\n    AppUtil.isValidDate = /**\r\n     * *****************************************************************\r\n     * Function : isValidDate\r\n     * Purpose: Utility method to validate date formate & the value.\r\n     * Valid formate: DD-MMM-YYYY (For e.g. 05-Dec-2016). If user enters something which is not in this format\r\n     * then it will return false. For e.g. 05..Dec.2016 will return false\r\n     * *******************************************************************\r\n     * @param {?} dateStr\r\n     * @return {?}\r\n     */\r\n    function (dateStr) {\r\n        /** @type {?} */\r\n        var currVal = dateStr;\r\n        /** @type {?} */\r\n        var months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\r\n        if (currVal === '' && currVal) {\r\n            return false;\r\n        }\r\n        /** @type {?} */\r\n        var dtPattern = /^(([1-9]|0[1-9]|1[0-9]|2[0-9]|3[0-1])(-)(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(-)((19|20)\\d{2}))$/i;\r\n        /** @type {?} */\r\n        var dtArray = currVal.match(dtPattern);\r\n        if (dtArray === null || dtArray === undefined) {\r\n            return false;\r\n        }\r\n        /** @type {?} */\r\n        var dtDay = parseInt(dtArray[1], 10);\r\n        /** @type {?} */\r\n        var dtMonth = months.indexOf(dtArray[4].toUpperCase()) + 1;\r\n        /** @type {?} */\r\n        var dtYear = parseInt(dtArray[6], 10);\r\n        if (isNaN(dtMonth)) {\r\n            for (var i = 4; i <= 15; i++) {\r\n                if ((dtArray[i])) {\r\n                    dtMonth = i - 3;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (dtMonth < 1 || dtMonth > 12) {\r\n            return false;\r\n        }\r\n        else if (dtDay < 1 || dtDay > 31) {\r\n            return false;\r\n        }\r\n        else if ((dtMonth === 4 || dtMonth === 6 || dtMonth === 9 || dtMonth === 11) && dtDay === 31) {\r\n            return false;\r\n        }\r\n        else if (dtMonth === 2) {\r\n            /** @type {?} */\r\n            var isleap = (dtYear % 4 === 0 && (dtYear % 100 !== 0 || dtYear % 400 === 0));\r\n            if (dtDay > 29 || (dtDay === 29 && !isleap)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @param {?=} isNumber\r\n     * @return {?}\r\n     */\r\n    AppUtil.isDefined = /**\r\n     * @param {?} value\r\n     * @param {?=} isNumber\r\n     * @return {?}\r\n     */\r\n    function (value, isNumber) {\r\n        if (isNumber === void 0) { isNumber = false; }\r\n        /** @type {?} */\r\n        var isDefined = false;\r\n        if (value !== undefined && value !== null) {\r\n            isDefined = true;\r\n            if (isNumber) {\r\n                value = parseFloat(value.toString().split(',').join(''));\r\n                isDefined = (isDefined && !isNaN((/** @type {?} */ (value))) && isFinite((/** @type {?} */ (value))));\r\n            }\r\n            else {\r\n                isDefined = (isDefined && value.toString().trim() !== '');\r\n            }\r\n        }\r\n        return isDefined;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    AppUtil.formatDecimal = /**\r\n     * @param {?} value\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (value, format) {\r\n        /** @type {?} */\r\n        var formattedValue = formatNumber(value, 'en-US', format);\r\n        value = Number(formattedValue.split(',').join(''));\r\n        if (isNaN(value)) {\r\n            value = null;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    AppUtil.stripNonnumbers = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var regEx = /[^0-9]/g;\r\n        return value ? value.replace(regEx, '') : value;\r\n    };\r\n    /**\r\n     * @param {?} inputNumber\r\n     * @return {?}\r\n     */\r\n    AppUtil.isValidNumber = /**\r\n     * @param {?} inputNumber\r\n     * @return {?}\r\n     */\r\n    function (inputNumber) {\r\n        if (inputNumber && (typeof inputNumber === 'string')) {\r\n            inputNumber = inputNumber.toString().trim();\r\n        }\r\n        if (inputNumber || inputNumber === 0) {\r\n            return !isNaN(inputNumber);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Checks if the given arrays are equal. If yes returns true and false otherwise.\r\n     *\r\n     * @param a\r\n     * @param b\r\n     * @memberof AppUtil\r\n     */\r\n    /**\r\n     * Checks if the given arrays are equal. If yes returns true and false otherwise.\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} a\r\n     * @param {?} b\r\n     * @return {?}\r\n     */\r\n    AppUtil.areArraysEqual = /**\r\n     * Checks if the given arrays are equal. If yes returns true and false otherwise.\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} a\r\n     * @param {?} b\r\n     * @return {?}\r\n     */\r\n    function (a, b) {\r\n        /** @type {?} */\r\n        var arraysEqual = false;\r\n        if (a && b) {\r\n            arraysEqual = __spread(a).sort().join(',') === __spread(b).sort().join(',');\r\n        }\r\n        return arraysEqual;\r\n    };\r\n    /**\r\n     * Clears the validators applied on the formgroup as well as all its descendants\r\n     * and updates their validity\r\n     *\r\n     * @param formGroup\r\n     * @memberof AppUtil\r\n     */\r\n    /**\r\n     * Clears the validators applied on the formgroup as well as all its descendants\r\n     * and updates their validity\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} formGroup\r\n     * @return {?}\r\n     */\r\n    AppUtil.clearFormGroupValidators = /**\r\n     * Clears the validators applied on the formgroup as well as all its descendants\r\n     * and updates their validity\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} formGroup\r\n     * @return {?}\r\n     */\r\n    function (formGroup) {\r\n        if (formGroup) {\r\n            for (var field in formGroup.controls) {\r\n                if (formGroup.get(field)) {\r\n                    /** @type {?} */\r\n                    var fg = formGroup.get(field);\r\n                    fg.clearValidators();\r\n                    fg.updateValueAndValidity();\r\n                    if (((/** @type {?} */ (fg))).controls) {\r\n                        this.clearFormGroupValidators((/** @type {?} */ (fg)));\r\n                    }\r\n                }\r\n            }\r\n            formGroup.clearValidators();\r\n            formGroup.updateValueAndValidity();\r\n        }\r\n    };\r\n    /**\r\n     * Resets the error if any set on the form group as well as all its descendants\r\n     *\r\n     * @param form\r\n     * @memberof AppUtil\r\n     */\r\n    /**\r\n     * Resets the error if any set on the form group as well as all its descendants\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    AppUtil.resetFormErrors = /**\r\n     * Resets the error if any set on the form group as well as all its descendants\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    function (form) {\r\n        if (form) {\r\n            form.setErrors(null);\r\n            /** @type {?} */\r\n            var fg = (/** @type {?} */ (form));\r\n            if (fg && fg.controls && Object.keys(fg.controls).length > 0) {\r\n                for (var field in fg.controls) {\r\n                    if (fg.get(field)) {\r\n                        /** @type {?} */\r\n                        var fgEntry = fg.get(field);\r\n                        this.resetFormErrors(fgEntry);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n      * Calcuaters rate per frequency\r\n      * @param rate\r\n      * @param reportingPeriodVal\r\n      * @returns rate per frequency\r\n      */\r\n    /**\r\n     * Calcuaters rate per frequency\r\n     * @param {?} rate\r\n     * @param {?} reportingPeriodVal\r\n     * @param {?=} isModify\r\n     * @return {?} rate per frequency\r\n     */\r\n    AppUtil.calcuaterRatePerFrequency = /**\r\n     * Calcuaters rate per frequency\r\n     * @param {?} rate\r\n     * @param {?} reportingPeriodVal\r\n     * @param {?=} isModify\r\n     * @return {?} rate per frequency\r\n     */\r\n    function (rate, reportingPeriodVal, isModify) {\r\n        /** @type {?} */\r\n        var ZERO = 0;\r\n        if (this.isDefined(rate)) {\r\n            if (rate !== ZERO) {\r\n                /** @type {?} */\r\n                var freq = reportingPeriodVal;\r\n                // if (isModify && isModify === true) {\r\n                //   return rate * freq;\r\n                // } else {\r\n                //   return (rate / freq);\r\n                // }\r\n                return rate;\r\n            }\r\n            else {\r\n                return ZERO;\r\n            }\r\n        }\r\n        else {\r\n            return ZERO;\r\n        }\r\n    };\r\n    /**\r\n      * Checks not empty\r\n      * @param [param]\r\n      * @returns true if not empty\r\n      */\r\n    /**\r\n     * Checks not empty\r\n     * @param {?=} param\r\n     * @return {?} true if not empty\r\n     */\r\n    AppUtil.checkNotEmpty = /**\r\n     * Checks not empty\r\n     * @param {?=} param\r\n     * @return {?} true if not empty\r\n     */\r\n    function (param) {\r\n        /** @type {?} */\r\n        var EMPTY = '';\r\n        if (param !== null && param !== undefined) {\r\n            if (param !== EMPTY) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n  * Dates formatters\r\n  * @param [date]\r\n  * @returns\r\n  */\r\n    /**\r\n     * Dates formatters\r\n     * @param {?=} date\r\n     * @return {?}\r\n     */\r\n    AppUtil.dateFormatters = /**\r\n     * Dates formatters\r\n     * @param {?=} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        /** @type {?} */\r\n        var EMPTY = '';\r\n        if (this.isDefined(date)) {\r\n            return moment$1(date).format('YYYY-MM-DD');\r\n        }\r\n        return EMPTY;\r\n    };\r\n    return AppUtil;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/string-util.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * String util\r\n */\r\nvar  /**\r\n * String util\r\n */\r\nStringUtil = /** @class */ (function () {\r\n    function StringUtil() {\r\n    }\r\n    /**\r\n     * Escapes html\r\n     * @param text\r\n     * @returns html\r\n     */\r\n    /**\r\n     * Escapes html\r\n     * @param {?} text\r\n     * @return {?} html\r\n     */\r\n    StringUtil.escapeHTML = /**\r\n     * Escapes html\r\n     * @param {?} text\r\n     * @return {?} html\r\n     */\r\n    function (text) {\r\n        if (undefined === text || null === text) {\r\n            throw new Error('text should be defined');\r\n        }\r\n        if (typeof text !== 'string') {\r\n            throw new Error('text should be a string');\r\n        }\r\n        /** @type {?} */\r\n        var replacements = {\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '&': '&amp;',\r\n            '\\\"': '&quot;',\r\n            '\\'': '&apos;'\r\n        };\r\n        /** @type {?} */\r\n        var result = text.replace(/[<>&\"']/g, (/**\r\n         * @param {?} character\r\n         * @return {?}\r\n         */\r\n        function (character) {\r\n            return replacements[character];\r\n        }));\r\n        return result;\r\n    };\r\n    /**\r\n     * Interpolates arguments into string\r\n     * for e.g. if str = test{0} and args=['abc']\r\n     * the method will return string 'testabc'\r\n     * @param str\r\n     * @param args\r\n     * @returns interpolate\r\n     */\r\n    /**\r\n     * Interpolates arguments into string\r\n     * for e.g. if str = test{0} and args=['abc']\r\n     * the method will return string 'testabc'\r\n     * @param {?} str\r\n     * @param {?} args\r\n     * @return {?} interpolate\r\n     */\r\n    StringUtil.interpolate = /**\r\n     * Interpolates arguments into string\r\n     * for e.g. if str = test{0} and args=['abc']\r\n     * the method will return string 'testabc'\r\n     * @param {?} str\r\n     * @param {?} args\r\n     * @return {?} interpolate\r\n     */\r\n    function (str, args) {\r\n        if (undefined === str || null === str) {\r\n            throw new Error('str should be defined');\r\n        }\r\n        if (typeof str !== 'string') {\r\n            throw new Error('str should be a string');\r\n        }\r\n        if (undefined === args || null === args) {\r\n            throw new Error('args should be defined');\r\n        }\r\n        if (!(args instanceof Array)) {\r\n            throw new Error('args should be an array');\r\n        }\r\n        if (args.length === 0) {\r\n            return str;\r\n        }\r\n        /** @type {?} */\r\n        var result = str.replace(/(\\{([0-9])\\})/g, (/**\r\n         * @param {?} match\r\n         * @param {?} p1\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        function (match, p1, idx) {\r\n            return args[idx];\r\n        }));\r\n        return result;\r\n    };\r\n    /**\r\n     * Converts a string into CamelCase\r\n     *\r\n     * @param s\r\n     * @returns string\r\n     * @memberof AppUtil\r\n     */\r\n    /**\r\n     * Converts a string into CamelCase\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} s\r\n     * @return {?} string\r\n     */\r\n    StringUtil.camelize = /**\r\n     * Converts a string into CamelCase\r\n     *\r\n     * \\@memberof AppUtil\r\n     * @param {?} s\r\n     * @return {?} string\r\n     */\r\n    function (s) {\r\n        if (undefined === s || null === s) {\r\n            throw new Error('s should be defined');\r\n        }\r\n        /** @type {?} */\r\n        var ret = '';\r\n        s = s.toLowerCase();\r\n        /** @type {?} */\r\n        var arr = s.split(' ');\r\n        arr = arr.map((/**\r\n         * @param {?} a\r\n         * @return {?}\r\n         */\r\n        function (a) {\r\n            /** @type {?} */\r\n            var regex = /(?:^|[-_])(\\w)/g;\r\n            return a.replace(regex, (/**\r\n             * @param {?} stripped\r\n             * @param {?} letter\r\n             * @return {?}\r\n             */\r\n            function (stripped, letter) {\r\n                return letter ? letter.toUpperCase() : '';\r\n            }));\r\n        }));\r\n        ret = arr.join(' ');\r\n        return ret;\r\n    };\r\n    /**\r\n     * @param {?} str\r\n     * @param {?} args\r\n     * @return {?}\r\n     */\r\n    StringUtil.substitute = /**\r\n     * @param {?} str\r\n     * @param {?} args\r\n     * @return {?}\r\n     */\r\n    function (str, args) {\r\n        /** @type {?} */\r\n        var result = str.replace(/(\\{([0-9])\\})/g, (/**\r\n         * @param {?} match\r\n         * @param {?} p1\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        function (match, p1, idx) {\r\n            return args[idx];\r\n        }));\r\n        return result;\r\n    };\r\n    return StringUtil;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/breadcrumb/breadcrumb.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar BreadcrumbService = /** @class */ (function () {\r\n    /**\r\n     *Creates an instance of BreadcrumbService.\r\n     * @param activatedRoute\r\n     * @memberof BreadcrumbService\r\n     */\r\n    function BreadcrumbService(activatedRoute) {\r\n        this.activatedRoute = activatedRoute;\r\n        this.breadcrumbsSubject = new Subject();\r\n        this.breadcrumbs$ = this.breadcrumbsSubject.asObservable();\r\n    }\r\n    /**\r\n     * Updates the breadcrumb observable with new breadcrumb values\r\n     *\r\n     * @param event\r\n     * @memberof BreadcrumbService\r\n     */\r\n    /**\r\n     * Updates the breadcrumb observable with new breadcrumb values\r\n     *\r\n     * \\@memberof BreadcrumbService\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    BreadcrumbService.prototype.setBreadCrumb = /**\r\n     * Updates the breadcrumb observable with new breadcrumb values\r\n     *\r\n     * \\@memberof BreadcrumbService\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        // check if navigation has ended\r\n        if (event instanceof NavigationEnd) {\r\n            /** @type {?} */\r\n            var root = this.activatedRoute.root;\r\n            /** @type {?} */\r\n            var breadcrumbs = void 0;\r\n            // extract the breadcrumbs from the route object\r\n            breadcrumbs = this.getBreadcrumbs(root);\r\n            // update the observable with new breadcrumbs\r\n            this.breadcrumbsSubject.next(breadcrumbs);\r\n        }\r\n    };\r\n    /**\r\n     * Extracts breadcrumbs from the route object using\r\n     * the data if passed in the route or the path segment in absence of data\r\n     *\r\n     * @param route\r\n     * @param [url='']\r\n     * @param [breadcrumbs=[]]\r\n     * @returns Breadcrumb[]\r\n     * @memberof BreadcrumbService\r\n     */\r\n    /**\r\n     * Extracts breadcrumbs from the route object using\r\n     * the data if passed in the route or the path segment in absence of data\r\n     *\r\n     * \\@memberof BreadcrumbService\r\n     * @private\r\n     * @param {?} route\r\n     * @param {?=} url\r\n     * @param {?=} breadcrumbs\r\n     * @return {?} Breadcrumb[]\r\n     */\r\n    BreadcrumbService.prototype.getBreadcrumbs = /**\r\n     * Extracts breadcrumbs from the route object using\r\n     * the data if passed in the route or the path segment in absence of data\r\n     *\r\n     * \\@memberof BreadcrumbService\r\n     * @private\r\n     * @param {?} route\r\n     * @param {?=} url\r\n     * @param {?=} breadcrumbs\r\n     * @return {?} Breadcrumb[]\r\n     */\r\n    function (route, url, breadcrumbs) {\r\n        var e_1, _a;\r\n        if (url === void 0) { url = ''; }\r\n        if (breadcrumbs === void 0) { breadcrumbs = []; }\r\n        /** @type {?} */\r\n        var ROUTE_DATA_BREADCRUMB = 'breadcrumb';\r\n        // get the child routes\r\n        /** @type {?} */\r\n        var children = route.children;\r\n        // return if there are no more children\r\n        if (children.length === 0) {\r\n            return breadcrumbs;\r\n        }\r\n        try {\r\n            // iterate over each children\r\n            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\r\n                var child = children_1_1.value;\r\n                // verify primary route\r\n                if (child.outlet !== PRIMARY_OUTLET) {\r\n                    continue;\r\n                }\r\n                // verify the custom data property \"breadcrumb\" is specified on the route\r\n                // if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\r\n                //   return this.getBreadcrumbs(child, url, breadcrumbs);\r\n                // }\r\n                // get the route's URL segment\r\n                /** @type {?} */\r\n                var routeURL = AppUtil.extractPathFromUrl(child.snapshot.url);\r\n                // append route URL to URL\r\n                url += \"/\" + routeURL;\r\n                // extract the label for the breadcrumb from data if provided else set it as the url segment path\r\n                /** @type {?} */\r\n                var breadcrumbLabel = void 0;\r\n                if (child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\r\n                    breadcrumbLabel = child.snapshot.data[ROUTE_DATA_BREADCRUMB];\r\n                }\r\n                else {\r\n                    breadcrumbLabel = StringUtil.camelize(routeURL);\r\n                }\r\n                // add breadcrumb\r\n                /** @type {?} */\r\n                var breadcrumb = {\r\n                    label: breadcrumbLabel,\r\n                    params: child.snapshot.params,\r\n                    url: url\r\n                };\r\n                breadcrumbs.push(breadcrumb);\r\n                // recursive\r\n                return this.getBreadcrumbs(child, url, breadcrumbs);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    BreadcrumbService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    BreadcrumbService.ctorParameters = function () { return [\r\n        { type: ActivatedRoute }\r\n    ]; };\r\n    return BreadcrumbService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    BreadcrumbService.prototype.breadcrumbsSubject;\r\n    /** @type {?} */\r\n    BreadcrumbService.prototype.breadcrumbs$;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BreadcrumbService.prototype.activatedRoute;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/breadcrumb/breadcrumb.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar BreadcrumbComponent = /** @class */ (function () {\r\n    /**\r\n     *Creates an instance of BreadcrumbComponent.\r\n     * @param breadcrumbsService\r\n     * @memberof BreadcrumbComponent\r\n     * subscribes to the breadcrumb observable of breadcrumb service for changes in breadcrumbs\r\n     */\r\n    function BreadcrumbComponent(breadcrumbsService) {\r\n        var _this = this;\r\n        this.breadcrumbsService = breadcrumbsService;\r\n        // subscribe to the breadcrumb observable in service to update the view on change of subject\r\n        this.breadcrumbsService.breadcrumbs$.subscribe((/**\r\n         * @param {?} breadcrumbs\r\n         * @return {?}\r\n         */\r\n        function (breadcrumbs) {\r\n            _this.breadcrumbs = breadcrumbs;\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BreadcrumbComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    BreadcrumbComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-breadcrumb',\r\n                    template: \"<div class=\\\"col-12\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <nav aria-label=\\\"breadcrumb\\\">\\r\\n      <ol class=\\\"breadcrumb\\\">        \\r\\n        <li class=\\\"breadcrumb-item\\\" *ngFor=\\\"let breadcrumb of breadcrumbs\\\">\\r\\n          <a [routerLink]=\\\"[breadcrumb.url, breadcrumb.params]\\\">{{ breadcrumb.label }}</a>\\r\\n        </li>\\r\\n      </ol>\\r\\n    </nav>\\r\\n  </div>\\r\\n</div>\\r\\n\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    BreadcrumbComponent.ctorParameters = function () { return [\r\n        { type: BreadcrumbService }\r\n    ]; };\r\n    return BreadcrumbComponent;\r\n}());\r\nif (false) {\r\n    /**\r\n     * Stores the breadcrumb values to render\r\n     *\r\n     * \\@memberof BreadcrumbComponent\r\n     * @type {?}\r\n     */\r\n    BreadcrumbComponent.prototype.breadcrumbs;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BreadcrumbComponent.prototype.breadcrumbsService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/confirmation-dialog/confirmation-dialog.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ConfirmationDialogComponent = /** @class */ (function () {\r\n    function ConfirmationDialogComponent(dialogRef, data) {\r\n        this.dialogRef = dialogRef;\r\n        this.data = data;\r\n        if (!data.okLabel) {\r\n            data.okLabel = 'Ok';\r\n        }\r\n        if (!data.cancelLabel) {\r\n            data.cancelLabel = 'Cancel';\r\n        }\r\n    }\r\n    /**\r\n     * Cancels confirmation dialog component\r\n     * @param btnLabel\r\n     */\r\n    /**\r\n     * Cancels confirmation dialog component\r\n     * @param {?} btnLabel\r\n     * @return {?}\r\n     */\r\n    ConfirmationDialogComponent.prototype.cancel = /**\r\n     * Cancels confirmation dialog component\r\n     * @param {?} btnLabel\r\n     * @return {?}\r\n     */\r\n    function (btnLabel) {\r\n        this.dialogRef.close({ action: btnLabel });\r\n    };\r\n    /**\r\n     * confirmation dialog component\r\n     * @param btnLabel\r\n     */\r\n    /**\r\n     * confirmation dialog component\r\n     * @param {?} btnLabel\r\n     * @return {?}\r\n     */\r\n    ConfirmationDialogComponent.prototype.ok = /**\r\n     * confirmation dialog component\r\n     * @param {?} btnLabel\r\n     * @return {?}\r\n     */\r\n    function (btnLabel) {\r\n        this.dialogRef.close({ action: btnLabel });\r\n    };\r\n    /**\r\n     * Shows cancel\r\n     * @returns true if cancel\r\n     */\r\n    /**\r\n     * Shows cancel\r\n     * @return {?} true if cancel\r\n     */\r\n    ConfirmationDialogComponent.prototype.showCancel = /**\r\n     * Shows cancel\r\n     * @return {?} true if cancel\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var data = this.data;\r\n        if (data && data.hasOwnProperty('showCancel')) {\r\n            return data.showCancel;\r\n        }\r\n        return true;\r\n    };\r\n    ConfirmationDialogComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line:component-selector\r\n                    selector: 'ctos-confirmation-dialog',\r\n                    template: \"<div class=\\\"dialog-heading\\\">\\r\\n  <div *ngIf=\\\"data && data.prefixImageUrl\\\" class=\\\"col-sm-3\\\">\\r\\n    <img [src]=\\\"data?.prefixImageUrl\\\" alt=\\\"\\\" />\\r\\n  </div>\\r\\n  <div\\r\\n    [ngClass]=\\\"{\\r\\n      'col-sm-6': data.prefixImageUrl && data.postfixImageUrl ? true : false,\\r\\n      'col-sm-9': data.prefixImageUrl || data.postfixImageUrl ? true : false,\\r\\n      'col-sm-12': !data.prefixImageUrl && !data.postfixImageUrl ? true : false\\r\\n    }\\\"\\r\\n  >\\r\\n    <h1 mat-dialog-title *ngIf=\\\"data.heading\\\">{{ data?.heading }}</h1>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"data && data.postfixImageUrl\\\" class=\\\"col-sm-3\\\">\\r\\n    <img [src]=\\\"data?.postfixImageUrl\\\" alt=\\\"\\\" />\\r\\n  </div>\\r\\n</div>\\r\\n<div mat-dialog-content class=\\\"dialog-content-container\\\">\\r\\n  <div class=\\\"col-sm-3\\\" *ngIf=\\\"data && data.prefixMaterialIcon\\\">\\r\\n    <i\\r\\n      class=\\\"material-icons\\\"\\r\\n      [ngStyle]=\\\"{\\r\\n        color: data?.prefixMaterialIcon?.color,\\r\\n        'font-size': data?.prefixMaterialIcon?.size\\r\\n      }\\\"\\r\\n    >\\r\\n      {{ data?.prefixMaterialIcon?.name }}\\r\\n    </i>\\r\\n  </div>\\r\\n  <div\\r\\n    class=\\\"html-data-container\\\"\\r\\n    [class]=\\\"data.contentClass\\\"\\r\\n    [ngClass]=\\\"{\\r\\n      'col-sm-6':\\r\\n        data.postfixMaterialIcon && data.prefixMaterialIcon ? true : false,\\r\\n      'col-sm-9':\\r\\n        data.prefixMaterialIcon || data.postfixMaterialIcon ? true : false,\\r\\n      'col-sm-12':\\r\\n        !data.prefixMaterialIcon && !data.postfixMaterialIcon ? true : false\\r\\n    }\\\"\\r\\n  >\\r\\n    <div [innerHtml]=\\\"data?.message\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngIf=\\\"data && data.postfixMaterialIcon\\\">\\r\\n    <i\\r\\n      class=\\\"material-icons\\\"\\r\\n      [ngStyle]=\\\"{\\r\\n        color: data?.postfixMaterialIcon?.color,\\r\\n        'font-size': data?.postfixMaterialIcon?.size\\r\\n      }\\\"\\r\\n    >\\r\\n      {{ data?.postfixMaterialIcon?.name }}\\r\\n    </i>\\r\\n  </div>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button\\r\\n    mat-button\\r\\n    class=\\\"cancel-btn\\\"\\r\\n    *ngIf=\\\"showCancel()\\\"\\r\\n    (click)=\\\"cancel(data.cancelLabel)\\\"\\r\\n  >\\r\\n    {{ data?.cancelLabel }}\\r\\n  </button>\\r\\n  <button mat-button class=\\\"ok-btn\\\" (click)=\\\"ok(data.okLabel)\\\" cdkFocusInitial>\\r\\n    {{ data?.okLabel }}\\r\\n  </button>\\r\\n</div>\\r\\n\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ConfirmationDialogComponent.ctorParameters = function () { return [\r\n        { type: MatDialogRef },\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\r\n    ]; };\r\n    return ConfirmationDialogComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    ConfirmationDialogComponent.prototype.dialogRef;\r\n    /** @type {?} */\r\n    ConfirmationDialogComponent.prototype.data;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/context-menu/context-menu.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ContextMenuComponent = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of context menu component.\r\n     */\r\n    function ContextMenuComponent() {\r\n        this.fireEvent = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ContextMenuComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    Object.defineProperty(ContextMenuComponent.prototype, \"options\", {\r\n        /**\r\n         * Gets options\r\n         */\r\n        get: /**\r\n         * Gets options\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._options;\r\n        },\r\n        set: /**\r\n         * @param {?} optionList\r\n         * @return {?}\r\n         */\r\n        function (optionList) {\r\n            this._options = optionList;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Menus click\r\n     * @param name\r\n     */\r\n    /**\r\n     * Menus click\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    ContextMenuComponent.prototype.menuClick = /**\r\n     * Menus click\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        this.fireEvent.emit(name);\r\n    };\r\n    ContextMenuComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line:component-selector\r\n                    selector: 'ctos-context-menu',\r\n                    template: \"<ng-content></ng-content>\\r\\n<mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" [class]=\\\"'context-menu ' + contextMenuClass\\\" [xPosition]=\\\"xPosition\\\"\\r\\n  [yPosition]=\\\"yPosition\\\">\\r\\n  <h5 class=\\\"heading\\\" *ngIf=\\\"heading\\\" [matTooltipClass]=\\\"'ctos-tooltip'\\\" [matTooltip]=\\\"heading\\\"\\r\\n    matTooltipPosition=\\\"above\\\" [innerHTML]=\\\"heading\\\"></h5>\\r\\n  <div *ngFor=\\\"let item of options\\\" [matTooltip]=\\\"item.tooltipMsg\\\" matTooltipPosition=\\\"right\\\"\\r\\n    [matTooltipDisabled]=\\\"item.isEnabled || !item.tooltipMsg\\\">\\r\\n    <button mat-menu-item [disabled]=\\\"!item.isEnabled\\\" (click)=\\\"menuClick(item.name)\\\">\\r\\n      <span>{{ item.name }}</span>\\r\\n      <hr />\\r\\n    </button>\\r\\n  </div>\\r\\n</mat-menu>\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ContextMenuComponent.ctorParameters = function () { return []; };\r\n    ContextMenuComponent.propDecorators = {\r\n        matMenu: [{ type: ViewChild, args: ['menu', { static: true },] }],\r\n        fireEvent: [{ type: Output }],\r\n        contextMenuClass: [{ type: Input }],\r\n        xPosition: [{ type: Input }],\r\n        yPosition: [{ type: Input }],\r\n        heading: [{ type: Input }],\r\n        options: [{ type: Input }]\r\n    };\r\n    return ContextMenuComponent;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ContextMenuComponent.prototype._options;\r\n    /** @type {?} */\r\n    ContextMenuComponent.prototype.matMenu;\r\n    /** @type {?} */\r\n    ContextMenuComponent.prototype.fireEvent;\r\n    /** @type {?} */\r\n    ContextMenuComponent.prototype.contextMenuClass;\r\n    /** @type {?} */\r\n    ContextMenuComponent.prototype.xPosition;\r\n    /** @type {?} */\r\n    ContextMenuComponent.prototype.yPosition;\r\n    /** @type {?} */\r\n    ContextMenuComponent.prototype.heading;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/display-banner/display-banner.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DisplayBannerComponent = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of display banner component.\r\n     * @param data\r\n     * @param snackBarRef\r\n     */\r\n    function DisplayBannerComponent(data, snackBarRef) {\r\n        this.data = data;\r\n        this.snackBarRef = snackBarRef;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DisplayBannerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * Closes display banner component\r\n     */\r\n    /**\r\n     * Closes display banner component\r\n     * @return {?}\r\n     */\r\n    DisplayBannerComponent.prototype.close = /**\r\n     * Closes display banner component\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.snackBarRef.dismiss();\r\n    };\r\n    DisplayBannerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-display-banner',\r\n                    template: \"  <div  [ngClass]='data.messageType'>\\r\\n    <p class=\\\"position-text\\\">\\r\\n      <img [src]='data.icon'>\\r\\n      <!-- <span  class=\\\"positive-icon\\\"></span> -->\\r\\n      <span class=\\\"data\\\">{{data.message}}</span> \\r\\n    </p>\\r\\n    \\r\\n    <a (click)='close()' class=\\\"closeBanner\\\">&times;</a>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    DisplayBannerComponent.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] },\r\n        { type: MatSnackBarRef }\r\n    ]; };\r\n    return DisplayBannerComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    DisplayBannerComponent.prototype.data;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    DisplayBannerComponent.prototype.snackBarRef;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/cache/encryption-action.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar EncryptionAction = {\r\n    encrypt: \"true\",\r\n    noencrypt: \"false\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/cache-key.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar CacheKey = {\r\n    TermErrorKey: \"TermErrorKey\",\r\n    TermLoginKey: \"TermLoginKey\",\r\n    TermApplicationKey: \"TermApplicationKey\",\r\n    TermKey: \"TermKey\",\r\n    ServerKey: \"ServerKey\",\r\n    UserDataKey: \"UserDataKey\",\r\n    StudyDataKey: \"StudyDataKey\",\r\n    StudyTagkey: \"StudyTagKey\",\r\n    FilterDataKey: \"FilterDataKey\",\r\n    GetAppDataKey: \"GetAppDataKey\",\r\n    GetPlanListKey: \"GetPlanListKey\",\r\n    GetStudyPlanKey: \"GetStudyPlanKey\",\r\n    GetStudySummary: \"GetStudySummaryKey\",\r\n    GetPlanList: \"GetPlanListKey\",\r\n    updatePlantList: \"updatePlanListKey\",\r\n    getSourceCohortList: \"getSourceCohortList\",\r\n    getAllCohortList: \"getAllCohortList\",\r\n    GetBriefPlanList: \"GetBriefPlanList\",\r\n    GetPlanDetails: \"getPlanDetails\",\r\n    GetFilterCountryData: \"GetFilterCountryData\",\r\n    GetInterimAnalysisList: \"GetInterimAnalysisList\",\r\n    GetStudyDetails: \"getStudyDetails\",\r\n    GetStudyTags: \"GetStudyTags\",\r\n    GetStudySettings: \"getStudySettings\",\r\n    GetCohortDetails: \"GetCohortDetails\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/cache/cache-type.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar CacheType = {\r\n    sticky: \"Yes\",\r\n    nonsticky: \"No\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/cache/store-type.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar StoreType = {\r\n    InMemory: \"In-Memory\",\r\n    Session: \"Session\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/cache/session-store.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SessionStore = /** @class */ (function () {\r\n    function SessionStore(encryptionService, config) {\r\n        this.encryptionService = encryptionService;\r\n        this.config = config;\r\n        this.maxAge = config.cacheMaxAge;\r\n    }\r\n    // constructor() {\r\n    //  }\r\n    /**\r\n     * Gets session store\r\n     *\r\n     * This method will check if cache key is available in cache\r\n     * then it will check the encryption flag if it is false then\r\n     * return the value in observable form. If it is true then decrypt the value\r\n     * and return in observable form\r\n     * If key not present in cache then execute the this.post method\r\n     * after the successful exection of  this.post observable method (which return the observable)\r\n     * set the key and value in cache\r\n     * @param key\r\n     * @param [callback]\r\n     * @returns\r\n     */\r\n    // constructor() {\r\n    //  }\r\n    /**\r\n     * Gets session store\r\n     *\r\n     * This method will check if cache key is available in cache\r\n     * then it will check the encryption flag if it is false then\r\n     * return the value in observable form. If it is true then decrypt the value\r\n     * and return in observable form\r\n     * If key not present in cache then execute the this.post method\r\n     * after the successful exection of  this.post observable method (which return the observable)\r\n     * set the key and value in cache\r\n     * @param {?} key\r\n     * @param {?=} callback\r\n     * @return {?}\r\n     */\r\n    SessionStore.prototype.get = \r\n    // constructor() {\r\n    //  }\r\n    /**\r\n     * Gets session store\r\n     *\r\n     * This method will check if cache key is available in cache\r\n     * then it will check the encryption flag if it is false then\r\n     * return the value in observable form. If it is true then decrypt the value\r\n     * and return in observable form\r\n     * If key not present in cache then execute the this.post method\r\n     * after the successful exection of  this.post observable method (which return the observable)\r\n     * set the key and value in cache\r\n     * @param {?} key\r\n     * @param {?=} callback\r\n     * @return {?}\r\n     */\r\n    function (key, callback) {\r\n        var _this = this;\r\n        if (this.hasValidCachedValue(key)) {\r\n            if (this.isEncrypt) {\r\n                return of(this.encryptionService.decrypt(sessionStorage.getItem(key)));\r\n            }\r\n            else {\r\n                return of(JSON.parse(sessionStorage.getItem(key)));\r\n            }\r\n            //  return of(JSON.parse(sessionStorage.getItem(key)));\r\n        }\r\n        if (callback && callback instanceof Observable) {\r\n            console.log(\"%c Calling api for \" + key, 'color: purple');\r\n            return callback.pipe(tap((/**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                _this.set(key, value);\r\n            })));\r\n        }\r\n        else {\r\n            return throwError('Requested key is not available in Cache');\r\n        }\r\n    };\r\n    /**\r\n     * Sets session store\r\n     * Check the encryption flag if it true then store the value in encrypted format\r\n     * other wise store the value in JSON.stringify format.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    /**\r\n     * Sets session store\r\n     * Check the encryption flag if it true then store the value in encrypted format\r\n     * other wise store the value in JSON.stringify format.\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    SessionStore.prototype.set = /**\r\n     * Sets session store\r\n     * Check the encryption flag if it true then store the value in encrypted format\r\n     * other wise store the value in JSON.stringify format.\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (key, value) {\r\n        // const encryptedValue = this.encryptionService.encrypt(value);\r\n        // sessionStorage.setItem(key, JSON.stringify(value));\r\n        // sessionStorage.setItem(key, encryptedValue);\r\n        if (this.isEncrypt) {\r\n            /** @type {?} */\r\n            var encryptedValue = this.encryptionService.encrypt(value);\r\n            sessionStorage.setItem(key, encryptedValue);\r\n        }\r\n        else {\r\n            sessionStorage.setItem(key, JSON.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * Calls session store\r\n     * @param [fallback]\r\n     * @param [maxAge]\r\n     * @returns call\r\n     */\r\n    /**\r\n     * Calls session store\r\n     * @param {?=} fallback\r\n     * @param {?=} maxAge\r\n     * @return {?} call\r\n     */\r\n    SessionStore.prototype.call = /**\r\n     * Calls session store\r\n     * @param {?=} fallback\r\n     * @param {?=} maxAge\r\n     * @return {?} call\r\n     */\r\n    function (fallback, maxAge) {\r\n        if (fallback && fallback instanceof Observable) {\r\n            return fallback.pipe(tap((/**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) { return value; })));\r\n        }\r\n    };\r\n    /**\r\n     * Removes session store\r\n     * @param key\r\n     */\r\n    /**\r\n     * Removes session store\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    SessionStore.prototype.remove = /**\r\n     * Removes session store\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        if (this.hasValidCachedValue(key)) {\r\n            sessionStorage.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Determines whether valid cached value has\r\n     * @param key\r\n     * @returns true if valid cached value\r\n     */\r\n    /**\r\n     * Determines whether valid cached value has\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?} true if valid cached value\r\n     */\r\n    SessionStore.prototype.hasValidCachedValue = /**\r\n     * Determines whether valid cached value has\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?} true if valid cached value\r\n     */\r\n    function (key) {\r\n        /** @type {?} */\r\n        var returnVal = false;\r\n        if (sessionStorage.getItem(key) === null) {\r\n            returnVal = false;\r\n        }\r\n        else {\r\n            returnVal = true;\r\n        }\r\n        return returnVal;\r\n    };\r\n    /**\r\n     * Keys exist\r\n     * @param key\r\n     * @returns\r\n     */\r\n    /**\r\n     * Keys exist\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    SessionStore.prototype.keyExist = /**\r\n     * Keys exist\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        return of(this.hasValidCachedValue(key));\r\n    };\r\n    /**\r\n     * Sets cache age\r\n     * @param [age]\r\n     */\r\n    /**\r\n     * Sets cache age\r\n     * @param {?=} age\r\n     * @return {?}\r\n     */\r\n    SessionStore.prototype.setCacheAge = /**\r\n     * Sets cache age\r\n     * @param {?=} age\r\n     * @return {?}\r\n     */\r\n    function (age) {\r\n        if (age === void 0) { age = 0; }\r\n        this.maxAge = age;\r\n    };\r\n    /**\r\n     * Sets encryption\r\n     * set the encryption flag\r\n     * @param [encrypt]\r\n     */\r\n    /**\r\n     * Sets encryption\r\n     * set the encryption flag\r\n     * @param {?=} encrypt\r\n     * @return {?}\r\n     */\r\n    SessionStore.prototype.setEncryption = /**\r\n     * Sets encryption\r\n     * set the encryption flag\r\n     * @param {?=} encrypt\r\n     * @return {?}\r\n     */\r\n    function (encrypt) {\r\n        this.isEncrypt = (encrypt === EncryptionAction.encrypt) ? true : false;\r\n    };\r\n    return SessionStore;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    SessionStore.prototype.maxAge;\r\n    /** @type {?} */\r\n    SessionStore.prototype.isEncrypt;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    SessionStore.prototype.encryptionService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    SessionStore.prototype.config;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/cache/cache.factory.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Cache factory\r\n */\r\nvar /**\r\n * Cache factory\r\n */\r\nCacheFactory = /** @class */ (function () {\r\n    function CacheFactory() {\r\n    }\r\n    /**\r\n     * @param {?} storeType\r\n     * @param {?=} encryptionService\r\n     * @param {?=} config\r\n     * @param {?=} inMemory\r\n     * @return {?}\r\n     */\r\n    CacheFactory.prototype.createStore = /**\r\n     * @param {?} storeType\r\n     * @param {?=} encryptionService\r\n     * @param {?=} config\r\n     * @param {?=} inMemory\r\n     * @return {?}\r\n     */\r\n    function (storeType, encryptionService, config, inMemory) {\r\n        switch (storeType) {\r\n            case StoreType.InMemory:\r\n                return inMemory;\r\n            case StoreType.Session:\r\n                return new SessionStore(encryptionService, config);\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n    return CacheFactory;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/cache/encryption.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar EncryptionService = /** @class */ (function () {\r\n    function EncryptionService() {\r\n    }\r\n    /**\r\n     * Sets encryption\r\n     * @param encryption\r\n     */\r\n    /**\r\n     * Sets encryption\r\n     * @param {?} encryption\r\n     * @return {?}\r\n     */\r\n    EncryptionService.prototype.setEncryption = /**\r\n     * Sets encryption\r\n     * @param {?} encryption\r\n     * @return {?}\r\n     */\r\n    function (encryption) {\r\n        this.encryption = encryption;\r\n    };\r\n    /**\r\n     * Sets key\r\n     * @param key\r\n     */\r\n    /**\r\n     * Sets key\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    EncryptionService.prototype.setKey = /**\r\n     * Sets key\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        this.key = key;\r\n    };\r\n    /**\r\n     * Encrypts encryption service\r\n     * @param obj\r\n     * @param [key]\r\n     * @returns encrypt\r\n     */\r\n    /**\r\n     * Encrypts encryption service\r\n     * @param {?} obj\r\n     * @param {?=} key\r\n     * @return {?} encrypt\r\n     */\r\n    EncryptionService.prototype.encrypt = /**\r\n     * Encrypts encryption service\r\n     * @param {?} obj\r\n     * @param {?=} key\r\n     * @return {?} encrypt\r\n     */\r\n    function (obj, key) {\r\n        if (key === void 0) { key = this.key; }\r\n        /** @type {?} */\r\n        var ret = null;\r\n        if (this.encryption !== undefined && key !== undefined) {\r\n            ret = this.encryption.encrypt(obj, key);\r\n        }\r\n        else {\r\n            throw new Error('Encryption object or key not set');\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * Decrypts encryption service\r\n     * @param text\r\n     * @param [key]\r\n     * @returns decrypt\r\n     */\r\n    /**\r\n     * Decrypts encryption service\r\n     * @param {?} text\r\n     * @param {?=} key\r\n     * @return {?} decrypt\r\n     */\r\n    EncryptionService.prototype.decrypt = /**\r\n     * Decrypts encryption service\r\n     * @param {?} text\r\n     * @param {?=} key\r\n     * @return {?} decrypt\r\n     */\r\n    function (text, key) {\r\n        if (key === void 0) { key = this.key; }\r\n        /** @type {?} */\r\n        var ret = null;\r\n        if (this.encryption !== undefined && key !== undefined) {\r\n            ret = this.encryption.decrypt(text, key);\r\n        }\r\n        else {\r\n            throw new Error('Encryption object or key not set');\r\n        }\r\n        return ret;\r\n    };\r\n    EncryptionService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    EncryptionService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ EncryptionService.ngInjectableDef = ɵɵdefineInjectable({ factory: function EncryptionService_Factory() { return new EncryptionService(); }, token: EncryptionService, providedIn: \"root\" });\r\n    return EncryptionService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    EncryptionService.prototype.key;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    EncryptionService.prototype.encryption;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    EncryptionService.prototype.encryptionUndefinedErrorMessage;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/configuration.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ConfigurationService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of configuration service.\r\n     * @param encryptionService\r\n     */\r\n    function ConfigurationService(encryptionService) {\r\n        this.encryptionService = encryptionService;\r\n    }\r\n    Object.defineProperty(ConfigurationService.prototype, \"encryptKey\", {\r\n        /**\r\n         * Gets encrypt key\r\n         */\r\n        get: /**\r\n         * Gets encrypt key\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.encryptionKey;\r\n        },\r\n        /**\r\n         * Sets encrypt key\r\n         */\r\n        set: /**\r\n         * Sets encrypt key\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.encryptionKey = v;\r\n            this.encryptionService.setKey(this.encryptionKey);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"cacheMaxAge\", {\r\n        /**\r\n         * Gets cache max age\r\n         */\r\n        get: /**\r\n         * Gets cache max age\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.cacheAge;\r\n        },\r\n        /**\r\n         * Sets cache max age\r\n         */\r\n        set: /**\r\n         * Sets cache max age\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.cacheAge = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"encryptType\", {\r\n        /**\r\n         * Gets encrypt type\r\n         */\r\n        get: /**\r\n         * Gets encrypt type\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.encryptionType;\r\n        },\r\n        /**\r\n         * Sets encrypt type\r\n         */\r\n        set: /**\r\n         * Sets encrypt type\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.encryptionType = v;\r\n            this.encryptionService.setEncryption(this.encryptionType);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"dispatchUrl\", {\r\n        /**\r\n         * Gets dispatch url\r\n         */\r\n        get: /**\r\n         * Gets dispatch url\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.dispatchedUrl;\r\n        },\r\n        /**\r\n         * Sets dispatch url\r\n         */\r\n        set: /**\r\n         * Sets dispatch url\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.dispatchedUrl = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"appUrl\", {\r\n        /**\r\n         * Gets app url\r\n         */\r\n        get: /**\r\n         * Gets app url\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.applicationUrl;\r\n        },\r\n        /**\r\n         * Sets app url\r\n         */\r\n        set: /**\r\n         * Sets app url\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.applicationUrl = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"$loginUrl\", {\r\n        /**\r\n           * Getter $loginUrl\r\n           * @return string\r\n           */\r\n        get: /**\r\n         * Getter $loginUrl\r\n         * @return {?} string\r\n         */\r\n        function () {\r\n            return this.loginUrl;\r\n        },\r\n        /**\r\n         * Setter $loginUrl\r\n         * @param string value\r\n         */\r\n        set: /**\r\n         * Setter $loginUrl\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.loginUrl = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"authUrl\", {\r\n        /**\r\n         * Gets app url\r\n         */\r\n        get: /**\r\n         * Gets app url\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._authUrl;\r\n        },\r\n        /**\r\n         * Sets app url\r\n         */\r\n        set: /**\r\n         * Sets app url\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._authUrl = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"soApiUrl\", {\r\n        /**\r\n         * Gets app url\r\n         */\r\n        get: /**\r\n         * Gets app url\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._soApiUrl;\r\n        },\r\n        /**\r\n         * Sets app url\r\n         */\r\n        set: /**\r\n         * Sets app url\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._soApiUrl = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets config\r\n     *\r\n     * Set the application configuration\r\n     * encryptionKey\r\n     * cacheAge\r\n     * encryptionType\r\n     * applicationUrl\r\n     * @param environment\r\n     */\r\n    /**\r\n     * Sets config\r\n     *\r\n     * Set the application configuration\r\n     * encryptionKey\r\n     * cacheAge\r\n     * encryptionType\r\n     * applicationUrl\r\n     * @param {?=} environment\r\n     * @return {?}\r\n     */\r\n    ConfigurationService.prototype.setConfig = /**\r\n     * Sets config\r\n     *\r\n     * Set the application configuration\r\n     * encryptionKey\r\n     * cacheAge\r\n     * encryptionType\r\n     * applicationUrl\r\n     * @param {?=} environment\r\n     * @return {?}\r\n     */\r\n    function (environment) {\r\n        if (environment) {\r\n            if (!this.typeCheck(environment)) {\r\n                throw new Error(\"Invalid environment object\");\r\n            }\r\n            this.encryptKey = environment.clientEncryptionKey;\r\n            this.cacheMaxAge = environment.cacheAge;\r\n            this.encryptType = environment.cryptoJS;\r\n            this.appUrl = environment.app_url;\r\n            this.$loginUrl = environment.login_url;\r\n            this.authUrl = environment.authUrl;\r\n            this.soApiUrl = environment.soApiUrl;\r\n        }\r\n        else {\r\n            throw new Error(\"Environment object is empty\");\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    ConfigurationService.prototype.typeCheck = /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        return (obj.clientEncryptionKey !== undefined && obj.cacheAge !== undefined\r\n            && obj.cryptoJS !== undefined && obj.app_url !== undefined && obj.login_url !== undefined);\r\n    };\r\n    ConfigurationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ConfigurationService.ctorParameters = function () { return [\r\n        { type: EncryptionService }\r\n    ]; };\r\n    /** @nocollapse */ ConfigurationService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ConfigurationService_Factory() { return new ConfigurationService(ɵɵinject(EncryptionService)); }, token: ConfigurationService, providedIn: \"root\" });\r\n    return ConfigurationService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.encryptionKey;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.cacheAge;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.encryptionType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.dispatchedUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.applicationUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.loginUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype._authUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype._soApiUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.encryptionService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/cache/in-memory.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar InMemoryService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of in memory service.\r\n     * @param config\r\n     */\r\n    function InMemoryService(config) {\r\n        this.config = config;\r\n        this.cache = new Map();\r\n        this.inFlightObservables = new Map();\r\n        this.maxAge = config.cacheMaxAge;\r\n    }\r\n    /**\r\n     * Gets in memory service\r\n     *\r\n     * This method will check if cache key is available in cache\r\n     * then it will return the value in observable form.\r\n     * If key not present in cache then execute the this.post method\r\n     * after the successful exection of  this.post observable method (which return the observable)\r\n     * set the key and value in cache\r\n     *\r\n     * @param key\r\n     * @param [callback]\r\n     * @returns get\r\n     */\r\n    /**\r\n     * Gets in memory service\r\n     *\r\n     * This method will check if cache key is available in cache\r\n     * then it will return the value in observable form.\r\n     * If key not present in cache then execute the this.post method\r\n     * after the successful exection of  this.post observable method (which return the observable)\r\n     * set the key and value in cache\r\n     *\r\n     * @param {?} key\r\n     * @param {?=} callback\r\n     * @return {?} get\r\n     */\r\n    InMemoryService.prototype.get = /**\r\n     * Gets in memory service\r\n     *\r\n     * This method will check if cache key is available in cache\r\n     * then it will return the value in observable form.\r\n     * If key not present in cache then execute the this.post method\r\n     * after the successful exection of  this.post observable method (which return the observable)\r\n     * set the key and value in cache\r\n     *\r\n     * @param {?} key\r\n     * @param {?=} callback\r\n     * @return {?} get\r\n     */\r\n    function (key, callback) {\r\n        var _this = this;\r\n        if (this.hasValidCachedValue(key)) {\r\n            return of(this.cache.get(key).value);\r\n        }\r\n        /*\r\n        if (this.inFlightObservables.has(key)) {\r\n          return this.inFlightObservables.get(key);\r\n        } else if (callback && callback instanceof Observable) {\r\n          this.inFlightObservables.set(key, new Subject());\r\n          console.log(`%c Calling api in memory for ${key}`, 'color: purple');\r\n          return callback.pipe(tap((value) => { this.set(key, value); }));\r\n        } else {\r\n          return throwError('Requested key is not available in Cache');\r\n        }\r\n       */\r\n        if (callback && callback instanceof Observable) {\r\n            console.log(\"%c Calling api for \" + key, 'color: purple');\r\n            return callback.pipe(tap((/**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                _this.set(key, value);\r\n            })));\r\n        }\r\n        else {\r\n            return throwError('Requested key is not available in Cache');\r\n        }\r\n    };\r\n    /**\r\n     * Sets in memory service\r\n     * @param key\r\n     * @param value\r\n     */\r\n    /**\r\n     * Sets in memory service\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    InMemoryService.prototype.set = /**\r\n     * Sets in memory service\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (key, value) {\r\n        // this.cache.set(key, { value: value, expiry: Date.now() + this.maxAge });\r\n        this.cache.set(key, { value: value, expiry: 0 });\r\n        // this.notifyInFlightObservers(key, value);\r\n        /**Testing */\r\n        console.log(\"%c In Memory data\", \"color: green\");\r\n        console.log(this.cache);\r\n    };\r\n    /**\r\n     * Has in memory service\r\n     * @param key\r\n     * @returns true if has\r\n     */\r\n    /**\r\n     * Has in memory service\r\n     * @param {?} key\r\n     * @return {?} true if has\r\n     */\r\n    InMemoryService.prototype.has = /**\r\n     * Has in memory service\r\n     * @param {?} key\r\n     * @return {?} true if has\r\n     */\r\n    function (key) {\r\n        return this.cache.has(key);\r\n    };\r\n    /**\r\n     * Calls in memory service\r\n     * @param [fallback]\r\n     * @returns call\r\n     */\r\n    /**\r\n     * Calls in memory service\r\n     * @param {?=} fallback\r\n     * @return {?} call\r\n     */\r\n    InMemoryService.prototype.call = /**\r\n     * Calls in memory service\r\n     * @param {?=} fallback\r\n     * @return {?} call\r\n     */\r\n    function (fallback) {\r\n        if (fallback && fallback instanceof Observable) {\r\n            return fallback.pipe(tap((/**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) { return value; })));\r\n        }\r\n    };\r\n    /**\r\n     * Determines whether valid cached value has\r\n     * @param key\r\n     * @returns true if valid cached value\r\n     */\r\n    /**\r\n     * Determines whether valid cached value has\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?} true if valid cached value\r\n     */\r\n    InMemoryService.prototype.hasValidCachedValue = /**\r\n     * Determines whether valid cached value has\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?} true if valid cached value\r\n     */\r\n    function (key) {\r\n        /*\r\n            if (this.cache.has(key)) {\r\n              if (this.cache.get(key).expiry < Date.now()) {\r\n                this.cache.delete(key);\r\n                return false;\r\n              }\r\n              return true;\r\n            } else {\r\n              return false;\r\n            }*/\r\n        /** @type {?} */\r\n        var returnVal = false;\r\n        if (this.cache.get(key)) {\r\n            returnVal = true;\r\n        }\r\n        else {\r\n            returnVal = false;\r\n        }\r\n        return returnVal;\r\n    };\r\n    /**\r\n     * Notifys in flight observers\r\n     * @param key\r\n     * @param value\r\n     */\r\n    /**\r\n     * Notifys in flight observers\r\n     * @private\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    InMemoryService.prototype.notifyInFlightObservers = /**\r\n     * Notifys in flight observers\r\n     * @private\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (key, value) {\r\n        if (this.inFlightObservables.has(key)) {\r\n            /** @type {?} */\r\n            var inFlight = this.inFlightObservables.get(key);\r\n            /** @type {?} */\r\n            var observersCount = inFlight.observers.length;\r\n            if (observersCount) {\r\n                console.log(\"%cNotifying \" + inFlight.observers.length + \" flight subscribers for \" + key, 'color: Swap');\r\n                inFlight.next(value);\r\n            }\r\n            inFlight.complete();\r\n            this.inFlightObservables.delete(key);\r\n        }\r\n    };\r\n    /**\r\n     * Removes in memory service\r\n     * @param key\r\n     */\r\n    /**\r\n     * Removes in memory service\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    InMemoryService.prototype.remove = /**\r\n     * Removes in memory service\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        var _this = this;\r\n        //  this.cache.clear();\r\n        //  this.inFlightObservables.clear();\r\n        if (this.cache.has(key)) {\r\n            this.cache.delete(key);\r\n        }\r\n        else {\r\n            this.cache.forEach((/**\r\n             * @param {?} value\r\n             * @param {?} actualKey\r\n             * @return {?}\r\n             */\r\n            function (value, actualKey) {\r\n                if (actualKey.search(key)) {\r\n                    _this.cache.delete(actualKey);\r\n                }\r\n            }));\r\n        }\r\n        console.log(\"%c In memory remove key \" + key, \"color:purple\");\r\n        console.log(\"%c Current In Memory data\", \"color: green\");\r\n        console.log(this.cache);\r\n    };\r\n    /**\r\n     * Sets cache age\r\n     * @param [age]\r\n     */\r\n    /**\r\n     * Sets cache age\r\n     * @param {?=} age\r\n     * @return {?}\r\n     */\r\n    InMemoryService.prototype.setCacheAge = /**\r\n     * Sets cache age\r\n     * @param {?=} age\r\n     * @return {?}\r\n     */\r\n    function (age) {\r\n        if (age === void 0) { age = 0; }\r\n        this.maxAge = age;\r\n    };\r\n    InMemoryService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    InMemoryService.ctorParameters = function () { return [\r\n        { type: ConfigurationService }\r\n    ]; };\r\n    /** @nocollapse */ InMemoryService.ngInjectableDef = ɵɵdefineInjectable({ factory: function InMemoryService_Factory() { return new InMemoryService(ɵɵinject(ConfigurationService)); }, token: InMemoryService, providedIn: \"root\" });\r\n    return InMemoryService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    InMemoryService.prototype.cache;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    InMemoryService.prototype.inFlightObservables;\r\n    /** @type {?} */\r\n    InMemoryService.prototype.maxAge;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    InMemoryService.prototype.config;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/cache/cache-store-manager.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CacheStoreManagerService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of cache store manager service.\r\n     * @param encryptionService\r\n     * @param config\r\n     * @param inMemory\r\n     */\r\n    function CacheStoreManagerService(encryptionService, config, inMemory) {\r\n        this.encryptionService = encryptionService;\r\n        this.config = config;\r\n        this.inMemory = inMemory;\r\n        this.factory = null;\r\n        this.factory = new CacheFactory();\r\n    }\r\n    /**\r\n     * Gets cache store manager service\r\n     *\r\n     * This method will call the get method of cache classes (session, inmemory etc.)\r\n     * @param key\r\n     * @param [callback]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets cache store manager service\r\n     *\r\n     * This method will call the get method of cache classes (session, inmemory etc.)\r\n     * @param {?} key\r\n     * @param {?=} callback\r\n     * @return {?}\r\n     */\r\n    CacheStoreManagerService.prototype.get = /**\r\n     * Gets cache store manager service\r\n     *\r\n     * This method will call the get method of cache classes (session, inmemory etc.)\r\n     * @param {?} key\r\n     * @param {?=} callback\r\n     * @return {?}\r\n     */\r\n    function (key, callback) {\r\n        return this.cachingStore.get(key, callback);\r\n    };\r\n    /**\r\n     * Sets cache store manager service\r\n     *\r\n     * This method will set the value on cache classes (session, inmemory etc.)\r\n     * @param key\r\n     * @param value\r\n     */\r\n    /**\r\n     * Sets cache store manager service\r\n     *\r\n     * This method will set the value on cache classes (session, inmemory etc.)\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    CacheStoreManagerService.prototype.set = /**\r\n     * Sets cache store manager service\r\n     *\r\n     * This method will set the value on cache classes (session, inmemory etc.)\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (key, value) {\r\n        this.cachingStore.set(key, value);\r\n    };\r\n    /**\r\n     * Removes cache store manager service\r\n     *\r\n     * This method will remove the key and value from cache (session, inmemory etc.)\r\n     * @param [key]\r\n     */\r\n    /**\r\n     * Removes cache store manager service\r\n     *\r\n     * This method will remove the key and value from cache (session, inmemory etc.)\r\n     * @param {?=} key\r\n     * @return {?}\r\n     */\r\n    CacheStoreManagerService.prototype.remove = /**\r\n     * Removes cache store manager service\r\n     *\r\n     * This method will remove the key and value from cache (session, inmemory etc.)\r\n     * @param {?=} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        this.cachingStore.remove(key);\r\n    };\r\n    /**\r\n     * Calls cache store manager service\r\n     * @param [callback]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Calls cache store manager service\r\n     * @param {?=} callback\r\n     * @return {?}\r\n     */\r\n    CacheStoreManagerService.prototype.call = /**\r\n     * Calls cache store manager service\r\n     * @param {?=} callback\r\n     * @return {?}\r\n     */\r\n    function (callback) {\r\n        return this.cachingStore.call(callback);\r\n    };\r\n    /**\r\n     * Keys exist\r\n     *\r\n     * It will check the key exist in cache.\r\n     *\r\n     * @param [key]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Keys exist\r\n     *\r\n     * It will check the key exist in cache.\r\n     *\r\n     * @param {?=} key\r\n     * @return {?}\r\n     */\r\n    CacheStoreManagerService.prototype.keyExist = /**\r\n     * Keys exist\r\n     *\r\n     * It will check the key exist in cache.\r\n     *\r\n     * @param {?=} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        return this.cachingStore.keyExist(key);\r\n    };\r\n    /**\r\n     * Sets caching store\r\n     *\r\n     * This method will call the factory method and set the instance\r\n     * of cache classes (session, localstorage etc) in\r\n     * cachingStore variable.\r\n     * If the storeType is in memory then the factory method will return the\r\n     * singleton instance of inMemoryService to cachingStore variable.\r\n     * Set the caching age.\r\n     * If the storeType is not in memory then the cachingStore will call the setEncryption mehtod\r\n     * to set the encryption.\r\n     * @param storeType\r\n     * @param [encryptionAction]\r\n     * @param [age]\r\n     */\r\n    /**\r\n     * Sets caching store\r\n     *\r\n     * This method will call the factory method and set the instance\r\n     * of cache classes (session, localstorage etc) in\r\n     * cachingStore variable.\r\n     * If the storeType is in memory then the factory method will return the\r\n     * singleton instance of inMemoryService to cachingStore variable.\r\n     * Set the caching age.\r\n     * If the storeType is not in memory then the cachingStore will call the setEncryption mehtod\r\n     * to set the encryption.\r\n     * @param {?} storeType\r\n     * @param {?=} encryptionAction\r\n     * @param {?=} age\r\n     * @return {?}\r\n     */\r\n    CacheStoreManagerService.prototype.setCachingStore = /**\r\n     * Sets caching store\r\n     *\r\n     * This method will call the factory method and set the instance\r\n     * of cache classes (session, localstorage etc) in\r\n     * cachingStore variable.\r\n     * If the storeType is in memory then the factory method will return the\r\n     * singleton instance of inMemoryService to cachingStore variable.\r\n     * Set the caching age.\r\n     * If the storeType is not in memory then the cachingStore will call the setEncryption mehtod\r\n     * to set the encryption.\r\n     * @param {?} storeType\r\n     * @param {?=} encryptionAction\r\n     * @param {?=} age\r\n     * @return {?}\r\n     */\r\n    function (storeType, encryptionAction, age) {\r\n        this.cachingStore = this.factory.createStore(storeType, this.encryptionService, this.config, this.inMemory);\r\n        this.cachingStore.setCacheAge(age);\r\n        if (storeType !== StoreType.InMemory) {\r\n            this.cachingStore.setEncryption(encryptionAction);\r\n        }\r\n    };\r\n    CacheStoreManagerService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    CacheStoreManagerService.ctorParameters = function () { return [\r\n        { type: EncryptionService },\r\n        { type: ConfigurationService },\r\n        { type: InMemoryService }\r\n    ]; };\r\n    /** @nocollapse */ CacheStoreManagerService.ngInjectableDef = ɵɵdefineInjectable({ factory: function CacheStoreManagerService_Factory() { return new CacheStoreManagerService(ɵɵinject(EncryptionService), ɵɵinject(ConfigurationService), ɵɵinject(InMemoryService)); }, token: CacheStoreManagerService, providedIn: \"root\" });\r\n    return CacheStoreManagerService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CacheStoreManagerService.prototype.factory;\r\n    /** @type {?} */\r\n    CacheStoreManagerService.prototype.cachingStore;\r\n    /** @type {?} */\r\n    CacheStoreManagerService.prototype.maxAge;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CacheStoreManagerService.prototype.encryptionService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CacheStoreManagerService.prototype.config;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CacheStoreManagerService.prototype.inMemory;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/http-verbs.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar HttpVerbs = {\r\n    get: \"get\",\r\n    post: \"post\",\r\n    put: \"put\",\r\n    delete: \"delete\",\r\n    patch: \"patch\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/rest-api.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar RestApiService = /** @class */ (function () {\r\n    function RestApiService(httpClient) {\r\n        this.httpClient = httpClient;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {?} endPointUrl\r\n     * @param {?} baseParam\r\n     * @param {?} httpOptions\r\n     * @return {?}\r\n     */\r\n    RestApiService.prototype.getMethod = /**\r\n     * @protected\r\n     * @param {?} endPointUrl\r\n     * @param {?} baseParam\r\n     * @param {?} httpOptions\r\n     * @return {?}\r\n     */\r\n    function (endPointUrl, baseParam, httpOptions) {\r\n        var _this = this;\r\n        return this.httpClient.get(\"\" + endPointUrl + baseParam.url, __assign({}, httpOptions))\r\n            .pipe(map((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) { return _this.handleResponse(res); })), catchError((/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        function (error) { return _this.handleHttpError('get', error); })));\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} endPointUrl\r\n     * @param {?} baseParam\r\n     * @param {?} httpOptions\r\n     * @param {?} reqData\r\n     * @return {?}\r\n     */\r\n    RestApiService.prototype.postMethod = /**\r\n     * @protected\r\n     * @param {?} endPointUrl\r\n     * @param {?} baseParam\r\n     * @param {?} httpOptions\r\n     * @param {?} reqData\r\n     * @return {?}\r\n     */\r\n    function (endPointUrl, baseParam, httpOptions, reqData) {\r\n        var _this = this;\r\n        return this.httpClient.post(\"\" + endPointUrl + baseParam.url, reqData, __assign({}, httpOptions))\r\n            .pipe(map((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) { return _this.handleResponse(res); })), catchError((/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        function (error) { return _this.handleHttpError('post', error); })));\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} endPointUrl\r\n     * @param {?} baseParam\r\n     * @param {?} httpOptions\r\n     * @param {?} reqData\r\n     * @return {?}\r\n     */\r\n    RestApiService.prototype.put = /**\r\n     * @protected\r\n     * @param {?} endPointUrl\r\n     * @param {?} baseParam\r\n     * @param {?} httpOptions\r\n     * @param {?} reqData\r\n     * @return {?}\r\n     */\r\n    function (endPointUrl, baseParam, httpOptions, reqData) {\r\n        var _this = this;\r\n        return this.httpClient.put(\"\" + endPointUrl + baseParam.url, reqData, __assign({}, httpOptions))\r\n            .pipe(map((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) { return _this.handleResponse(res); })), catchError((/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        function (error) { return _this.handleHttpError('put', error); })));\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} endPointUrl\r\n     * @param {?} baseParam\r\n     * @param {?} httpOptions\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    RestApiService.prototype.delete = /**\r\n     * @protected\r\n     * @param {?} endPointUrl\r\n     * @param {?} baseParam\r\n     * @param {?} httpOptions\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (endPointUrl, baseParam, httpOptions, id) {\r\n        var _this = this;\r\n        return this.httpClient.delete(\"\" + endPointUrl + baseParam.url + \"/\" + id, __assign({}, httpOptions))\r\n            .pipe(map((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) { return _this.handleResponse(res); })), catchError((/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        function (error) { return _this.handleHttpError('delete', error); })));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} res\r\n     * @return {?}\r\n     */\r\n    RestApiService.prototype.handleResponse = /**\r\n     * @private\r\n     * @param {?} res\r\n     * @return {?}\r\n     */\r\n    function (res) {\r\n        return res.body ? res.body : res || {};\r\n    };\r\n    /**\r\n     * Handles error\r\n     * @param [operation]\r\n     * @param [result]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Handles error\r\n     * @private\r\n     * @template T\r\n     * @param {?=} operation\r\n     * @param {?=} error\r\n     * @return {?}\r\n     */\r\n    RestApiService.prototype.handleHttpError = /**\r\n     * Handles error\r\n     * @private\r\n     * @template T\r\n     * @param {?=} operation\r\n     * @param {?=} error\r\n     * @return {?}\r\n     */\r\n    function (operation, error) {\r\n        if (operation === void 0) { operation = 'operation'; }\r\n        /** @type {?} */\r\n        var errMsg;\r\n        if (error instanceof HttpErrorResponse) {\r\n            if (!navigator.onLine) {\r\n                // No Internet connection\r\n                console.log('No Internet Connection');\r\n            }\r\n            // TODO\r\n            /* if (environment.production) {\r\n                if (error.status === 401 || error.status === 0) {\r\n                    // redirect to any where\r\n                }\r\n            } */\r\n            errMsg = error.status + \" - \" + (error.message || '');\r\n        }\r\n        else {\r\n            // server(api) side error\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.log(operation + \" failed: \" + error.message);\r\n        return Promise.reject(error);\r\n    };\r\n    return RestApiService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    RestApiService.prototype.httpClient;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/data.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DataService = /** @class */ (function (_super) {\r\n    __extends(DataService, _super);\r\n    /**\r\n     * Creates an instance of data service.\r\n     * @param httpClient\r\n     */\r\n    function DataService(httpClient, configService) {\r\n        var _this = _super.call(this, httpClient) || this;\r\n        _this.httpClient = httpClient;\r\n        _this.configService = configService;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Posts data service\r\n     * It call the server api using httpClient\r\n     * @param payload\r\n     * @returns Data\r\n     */\r\n    /**\r\n     * Posts data service\r\n     * It call the server api using httpClient\r\n     * @private\r\n     * @param {?} payload\r\n     * @param {?=} redirectUrl\r\n     * @return {?} Data\r\n     */\r\n    DataService.prototype.postData = /**\r\n     * Posts data service\r\n     * It call the server api using httpClient\r\n     * @private\r\n     * @param {?} payload\r\n     * @param {?=} redirectUrl\r\n     * @return {?} Data\r\n     */\r\n    function (payload, redirectUrl) {\r\n        if (redirectUrl === void 0) { redirectUrl = DISPATCH_URL; }\r\n        /** @type {?} */\r\n        var headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n        return this.httpClient.post(redirectUrl, 'payload=' + encodeURIComponent((/** @type {?} */ (payload))) + '&output=json', { headers: headers, withCredentials: true }).pipe(catchError(this.handleError('post', [])));\r\n    };\r\n    /**\r\n     * Handles error\r\n     * @param [operation]\r\n     * @param [result]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Handles error\r\n     * @protected\r\n     * @template T\r\n     * @param {?=} operation\r\n     * @param {?=} result\r\n     * @return {?}\r\n     */\r\n    DataService.prototype.handleError = /**\r\n     * Handles error\r\n     * @protected\r\n     * @template T\r\n     * @param {?=} operation\r\n     * @param {?=} result\r\n     * @return {?}\r\n     */\r\n    function (operation, result) {\r\n        if (operation === void 0) { operation = 'operation'; }\r\n        return (/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        function (error) {\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(operation + \" failed: \" + error.message);\r\n            // Let the app keep running by returning an empty result.\r\n            return of((/** @type {?} */ (result)));\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * It call the dataService.postData method which return the data in form of observable\r\n     * @param cmdName\r\n     * @param [xmlRequest]\r\n     * @param [reportError]\r\n     * @returns of(data)\r\n     */\r\n    /**\r\n     *\r\n     * It call the dataService.postData method which return the data in form of observable\r\n     * @param {?} cmdName\r\n     * @param {?=} xmlRequest\r\n     * @param {?=} reportError\r\n     * @param {?=} redirectUrl\r\n     * @return {?} of(data)\r\n     */\r\n    DataService.prototype.post = /**\r\n     *\r\n     * It call the dataService.postData method which return the data in form of observable\r\n     * @param {?} cmdName\r\n     * @param {?=} xmlRequest\r\n     * @param {?=} reportError\r\n     * @param {?=} redirectUrl\r\n     * @return {?} of(data)\r\n     */\r\n    function (cmdName, xmlRequest, reportError, redirectUrl) {\r\n        if (reportError === void 0) { reportError = true; }\r\n        if (!cmdName) {\r\n            throw new Error(\"Command name can not be empty\");\r\n        }\r\n        return this.postData(xmlRequest, redirectUrl).pipe(map((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (!data.serviceResponse) {\r\n                console.log('Could not find serviceResponse object.' +\r\n                    'Trying to parse response as XML string for xml request :: XMLRequest: %s', xmlRequest);\r\n                /** @type {?} */\r\n                var xmlParsed = false;\r\n                /** @type {?} */\r\n                var errStr = '';\r\n                try {\r\n                    /** @type {?} */\r\n                    var dom = (new DOMParser()).parseFromString(data, 'text/xml');\r\n                    data = JSON.parse(((/** @type {?} */ (window))).xml2json(dom, '', ''));\r\n                    xmlParsed = true;\r\n                    console.log('Parse XML String', data);\r\n                }\r\n                catch (error) {\r\n                    console.error('Response XML data parsing error ', error);\r\n                    errStr = 'Failed to parse response data!' + error;\r\n                    throw Error(\"Failed to parse response data!\");\r\n                }\r\n                if (!xmlParsed) {\r\n                    console.log(errStr);\r\n                    return errStr;\r\n                }\r\n            }\r\n            //\r\n            if (data.serviceResponse.result === COMMON.RESULT_OK || !data.serviceResponse.result) {\r\n                // TODO:: Implement add to cache mechanism here\r\n            }\r\n            else if (data.serviceResponse.result.toUpperCase() === COMMON.RESULT_ERROR) {\r\n                if (reportError) {\r\n                    /** @type {?} */\r\n                    var error = {\r\n                        desc: data.serviceResponse.error.errorCode + ' : ' + data.serviceResponse.error.message,\r\n                        text: '----------------------------------------------' +\r\n                            '--------------------------\\nError Stack for command **' + cmdName + '**\\n------' +\r\n                            '------------------------------------------------------------------\\n' + data.serviceResponse.error.stack\r\n                    };\r\n                    error = Object.assign({}, error, data.serviceResponse.error);\r\n                    console.error('BaseConnection -> error', data.serviceResponse);\r\n                    // TODO:: Implement raising exception or error here\r\n                }\r\n            }\r\n            else {\r\n                console.error('BaseConnection -> error2', data.serviceResponse);\r\n            }\r\n            return data.serviceResponse;\r\n        })));\r\n    };\r\n    /**\r\n    *This method is used to give an http get call\r\n    *\r\n    * @param url\r\n    * @param headers\r\n    * @returns Observable<any>\r\n    * @memberof DataService\r\n    */\r\n    /**\r\n     * This method is used to give an http get call\r\n     *\r\n     * \\@memberof DataService\r\n     * @param {?} url\r\n     * @param {?} headers\r\n     * @return {?} Observable<any>\r\n     */\r\n    DataService.prototype.get = /**\r\n     * This method is used to give an http get call\r\n     *\r\n     * \\@memberof DataService\r\n     * @param {?} url\r\n     * @param {?} headers\r\n     * @return {?} Observable<any>\r\n     */\r\n    function (url, headers) {\r\n        return this.httpClient.get(url, headers);\r\n    };\r\n    /**\r\n     * Rest Api End point Integration\r\n     */\r\n    /**\r\n     *\r\n     * It call the dataService.postData method which return the data in form of observable\r\n     * @param cmdName\r\n     * @param [payload]\r\n     * @param [reportError]\r\n     * @returns of(data)\r\n     */\r\n    /**\r\n         * Rest Api End point Integration\r\n         */\r\n    /**\r\n     *\r\n     * It call the dataService.postData method which return the data in form of observable\r\n     * @param {?} cmdName\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @param {?=} reportError\r\n     * @return {?} of(data)\r\n     */\r\n    DataService.prototype.sendData = /**\r\n         * Rest Api End point Integration\r\n         */\r\n    /**\r\n     *\r\n     * It call the dataService.postData method which return the data in form of observable\r\n     * @param {?} cmdName\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @param {?=} reportError\r\n     * @return {?} of(data)\r\n     */\r\n    function (cmdName, payload, baseParam, reportError) {\r\n        if (reportError === void 0) { reportError = true; }\r\n        if (!cmdName) {\r\n            throw new Error(\"Command name can not be empty\");\r\n        }\r\n        return this.sendRequestToServer(payload, baseParam).pipe(map((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            console.log(data);\r\n            if (!data.serviceResponse) {\r\n                /** @type {?} */\r\n                var error = {\r\n                    status: 200,\r\n                    message: 'No content found or No records found'\r\n                };\r\n                console.error(error.message);\r\n                throw error;\r\n            }\r\n            if (data.serviceResponse.result === COMMON.RESULT_OK || !data.serviceResponse.result) {\r\n                // TODO:: Implement add to cache mechanism here\r\n            }\r\n            else if (data.serviceResponse.result.toUpperCase() === COMMON.RESULT_ERROR) {\r\n                if (reportError) {\r\n                    /** @type {?} */\r\n                    var error = {\r\n                        desc: data.serviceResponse.error.errorCode + ' : ' + data.serviceResponse.error.message,\r\n                        text: '----------------------------------------------' +\r\n                            '--------------------------\\nError Stack for command **' + cmdName + '**\\n------' +\r\n                            '------------------------------------------------------------------\\n' + data.serviceResponse.error.stack\r\n                    };\r\n                    error = Object.assign({}, error, data.serviceResponse.error);\r\n                    console.error('BaseConnection -> error', data.serviceResponse);\r\n                    // TODO:: Implement raising exception or error here\r\n                }\r\n            }\r\n            else {\r\n                console.error('BaseConnection -> error2', data.serviceResponse);\r\n            }\r\n            return data.serviceResponse;\r\n        })));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @return {?}\r\n     */\r\n    DataService.prototype.getHttpOptions = /**\r\n     * @private\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @return {?}\r\n     */\r\n    function (payload, baseParam) {\r\n        /** @type {?} */\r\n        var httpOptions = { headers: payload.headers, params: payload.queryParams, withCredentials: false };\r\n        if (!baseParam.prelogin) {\r\n            httpOptions = __assign({}, httpOptions, { withCredentials: true });\r\n        }\r\n        return httpOptions;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} baseParam\r\n     * @return {?}\r\n     */\r\n    DataService.prototype.getEndPointUrl = /**\r\n     * @private\r\n     * @param {?} baseParam\r\n     * @return {?}\r\n     */\r\n    function (baseParam) {\r\n        /** @type {?} */\r\n        var endPointUrl = '';\r\n        if (baseParam.isSSOEndPoint) {\r\n            endPointUrl = this.configService.authUrl;\r\n        }\r\n        else {\r\n            endPointUrl = this.configService.soApiUrl;\r\n        }\r\n        return endPointUrl;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @return {?}\r\n     */\r\n    DataService.prototype.sendRequestToServer = /**\r\n     * @private\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @return {?}\r\n     */\r\n    function (payload, baseParam) {\r\n        if (!baseParam.httpMethod) {\r\n            baseParam.httpMethod = HttpVerbs.get;\r\n        }\r\n        if (!baseParam.url) {\r\n            throw new Error('Rest end point url can not be empty, please set Action Url.');\r\n        }\r\n        /** @type {?} */\r\n        var httpOptions = this.getHttpOptions(payload, baseParam);\r\n        /** @type {?} */\r\n        var endPointUrl = this.getEndPointUrl(baseParam);\r\n        if (!endPointUrl) {\r\n            throw new Error('Rest end point url can not be empty.');\r\n        }\r\n        switch (baseParam.httpMethod) {\r\n            case HttpVerbs.get:\r\n                return this.getMethod(endPointUrl, baseParam, httpOptions); // will rename - affects on app1\r\n            case HttpVerbs.post:\r\n                return this.postMethod(endPointUrl, baseParam, httpOptions, payload.jsonRequest); // will rename - affects on app1\r\n            case HttpVerbs.put:\r\n                return this.put(endPointUrl, baseParam, httpOptions, payload.jsonRequest);\r\n            case HttpVerbs.delete:\r\n                return this.delete(endPointUrl, baseParam, httpOptions, payload.id);\r\n            default:\r\n                // return of([]);\r\n                throw new Error('Http method not found!');\r\n        }\r\n    };\r\n    DataService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    DataService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: ConfigurationService }\r\n    ]; };\r\n    /** @nocollapse */ DataService.ngInjectableDef = ɵɵdefineInjectable({ factory: function DataService_Factory() { return new DataService(ɵɵinject(HttpClient), ɵɵinject(ConfigurationService)); }, token: DataService, providedIn: \"root\" });\r\n    return DataService;\r\n}(RestApiService));\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    DataService.prototype.httpClient;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    DataService.prototype.configService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/dependency-manager.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// const dependencyList: any = <any>require('../assets/data/getDependencyList.json');\r\nvar DependencyManagerService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of dependency manager service.\r\n     * @param cacheStoreManagerService\r\n     * @param dataService\r\n     */\r\n    function DependencyManagerService(cacheStoreManagerService, dataService) {\r\n        this.cacheStoreManagerService = cacheStoreManagerService;\r\n        this.dataService = dataService;\r\n    }\r\n    /**\r\n     * Gets dependency manager service\r\n     *\r\n     * Check the cacheKey in action parameter\r\n     * if it is undefined then call the post method. On success of the call, clear if any dependencies specified.\r\n     * If it is not null or defined then check cacheType, if cacheType is non sticky then\r\n     * set the storeType is in-memory. If no storeType information pass in parameter\r\n     * then the default value of storeType is in-memory.\r\n     * If no encryption information pass in parameter then the default value of encryption is false.\r\n     * Set the reference of cache classes (session, in-memory etc) by calling the cacheStoreManagerService.SetCachingStore() function.\r\n     * Call the cacheStoreManager get method, It will check if cache key available in cache\r\n     * then it will return the value in observable form. If not then\r\n     * execute the this.post method and set the response in cache and return the value in observable form\r\n     * if there are dependency list then purge the dependency list means remove the key from cache.\r\n     * @param baseParam\r\n     * @returns get\r\n     */\r\n    /**\r\n     * Gets dependency manager service\r\n     *\r\n     * Check the cacheKey in action parameter\r\n     * if it is undefined then call the post method. On success of the call, clear if any dependencies specified.\r\n     * If it is not null or defined then check cacheType, if cacheType is non sticky then\r\n     * set the storeType is in-memory. If no storeType information pass in parameter\r\n     * then the default value of storeType is in-memory.\r\n     * If no encryption information pass in parameter then the default value of encryption is false.\r\n     * Set the reference of cache classes (session, in-memory etc) by calling the cacheStoreManagerService.SetCachingStore() function.\r\n     * Call the cacheStoreManager get method, It will check if cache key available in cache\r\n     * then it will return the value in observable form. If not then\r\n     * execute the this.post method and set the response in cache and return the value in observable form\r\n     * if there are dependency list then purge the dependency list means remove the key from cache.\r\n     * @param {?} baseParam\r\n     * @return {?} get\r\n     */\r\n    DependencyManagerService.prototype.get = /**\r\n     * Gets dependency manager service\r\n     *\r\n     * Check the cacheKey in action parameter\r\n     * if it is undefined then call the post method. On success of the call, clear if any dependencies specified.\r\n     * If it is not null or defined then check cacheType, if cacheType is non sticky then\r\n     * set the storeType is in-memory. If no storeType information pass in parameter\r\n     * then the default value of storeType is in-memory.\r\n     * If no encryption information pass in parameter then the default value of encryption is false.\r\n     * Set the reference of cache classes (session, in-memory etc) by calling the cacheStoreManagerService.SetCachingStore() function.\r\n     * Call the cacheStoreManager get method, It will check if cache key available in cache\r\n     * then it will return the value in observable form. If not then\r\n     * execute the this.post method and set the response in cache and return the value in observable form\r\n     * if there are dependency list then purge the dependency list means remove the key from cache.\r\n     * @param {?} baseParam\r\n     * @return {?} get\r\n     */\r\n    function (baseParam) {\r\n        var _this = this;\r\n        if (!baseParam.cacheKey) {\r\n            return this.dataService.post(baseParam.cmdName, baseParam.xmlRequest, baseParam.reportError, baseParam.url)\r\n                .pipe(tap((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                _this.cacheStoreManagerService.setCachingStore(baseParam.storeType);\r\n                _this.clearDependencies(baseParam.dependencyList);\r\n            })));\r\n        }\r\n        else {\r\n            baseParam.storeType = (baseParam.cacheType === CacheType.nonsticky) ? StoreType.InMemory : baseParam.storeType;\r\n            this.cacheStoreManagerService.setCachingStore(baseParam.storeType, baseParam.encryption);\r\n            if (baseParam.isSelf === true) {\r\n                this.clearDependencies(baseParam.dependencyList);\r\n            }\r\n            return this.cacheStoreManagerService.get(baseParam.cacheKey, this.dataService.post(baseParam.cmdName, baseParam.xmlRequest, baseParam.reportError, baseParam.url))\r\n                .pipe(tap((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                if (baseParam.isSelf === false) {\r\n                    _this.clearDependencies(baseParam.dependencyList);\r\n                }\r\n            })));\r\n        }\r\n    };\r\n    /**\r\n     * Gets dependency manager service\r\n     *\r\n     * Check the cacheKey in action parameter\r\n     * if it is undefined then call the post method. On success of the call, clear if any dependencies specified.\r\n     * If it is not null or defined then check cacheType, if cacheType is non sticky then\r\n     * set the storeType is in-memory. If no storeType information pass in parameter\r\n     * then the default value of storeType is in-memory.\r\n     * If no encryption information pass in parameter then the default value of encryption is false.\r\n     * Set the reference of cache classes (session, in-memory etc) by calling the cacheStoreManagerService.SetCachingStore() function.\r\n     * Call the cacheStoreManager get method, It will check if cache key available in cache\r\n     * then it will return the value in observable form. If not then\r\n     * execute the this.post method and set the response in cache and return the value in observable form\r\n     * if there are dependency list then purge the dependency list means remove the key from cache.\r\n     * @param baseParam\r\n     * @returns get\r\n     */\r\n    /**\r\n     * Gets dependency manager service\r\n     *\r\n     * Check the cacheKey in action parameter\r\n     * if it is undefined then call the post method. On success of the call, clear if any dependencies specified.\r\n     * If it is not null or defined then check cacheType, if cacheType is non sticky then\r\n     * set the storeType is in-memory. If no storeType information pass in parameter\r\n     * then the default value of storeType is in-memory.\r\n     * If no encryption information pass in parameter then the default value of encryption is false.\r\n     * Set the reference of cache classes (session, in-memory etc) by calling the cacheStoreManagerService.SetCachingStore() function.\r\n     * Call the cacheStoreManager get method, It will check if cache key available in cache\r\n     * then it will return the value in observable form. If not then\r\n     * execute the this.post method and set the response in cache and return the value in observable form\r\n     * if there are dependency list then purge the dependency list means remove the key from cache.\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @return {?} get\r\n     */\r\n    DependencyManagerService.prototype.setDependencies = /**\r\n     * Gets dependency manager service\r\n     *\r\n     * Check the cacheKey in action parameter\r\n     * if it is undefined then call the post method. On success of the call, clear if any dependencies specified.\r\n     * If it is not null or defined then check cacheType, if cacheType is non sticky then\r\n     * set the storeType is in-memory. If no storeType information pass in parameter\r\n     * then the default value of storeType is in-memory.\r\n     * If no encryption information pass in parameter then the default value of encryption is false.\r\n     * Set the reference of cache classes (session, in-memory etc) by calling the cacheStoreManagerService.SetCachingStore() function.\r\n     * Call the cacheStoreManager get method, It will check if cache key available in cache\r\n     * then it will return the value in observable form. If not then\r\n     * execute the this.post method and set the response in cache and return the value in observable form\r\n     * if there are dependency list then purge the dependency list means remove the key from cache.\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @return {?} get\r\n     */\r\n    function (payload, baseParam) {\r\n        var _this = this;\r\n        if (!baseParam.cacheKey) {\r\n            return this.dataService.sendData(baseParam.cmdName, payload, baseParam, baseParam.reportError)\r\n                .pipe(tap((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                _this.cacheStoreManagerService.setCachingStore(baseParam.storeType);\r\n                _this.clearDependencies(baseParam.dependencyList);\r\n            })));\r\n        }\r\n        else {\r\n            baseParam.storeType = (baseParam.cacheType === CacheType.nonsticky) ? StoreType.InMemory : baseParam.storeType;\r\n            this.cacheStoreManagerService.setCachingStore(baseParam.storeType, baseParam.encryption);\r\n            if (baseParam.isSelf === true) {\r\n                this.clearDependencies(baseParam.dependencyList);\r\n            }\r\n            return this.cacheStoreManagerService.get(baseParam.cacheKey, this.dataService.sendData(baseParam.cmdName, payload, baseParam, baseParam.reportError))\r\n                .pipe(tap((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                if (baseParam.isSelf === false) {\r\n                    _this.clearDependencies(baseParam.dependencyList);\r\n                }\r\n            })));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} dependencies\r\n     * @return {?}\r\n     */\r\n    DependencyManagerService.prototype.clearDependencies = /**\r\n     * @param {?} dependencies\r\n     * @return {?}\r\n     */\r\n    function (dependencies) {\r\n        var _this = this;\r\n        if (dependencies && dependencies.length > 0) {\r\n            dependencies.map((/**\r\n             * @param {?} key\r\n             * @return {?}\r\n             */\r\n            function (key) {\r\n                _this.cacheStoreManagerService.remove(key);\r\n            }));\r\n        }\r\n    };\r\n    DependencyManagerService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    DependencyManagerService.ctorParameters = function () { return [\r\n        { type: CacheStoreManagerService },\r\n        { type: DataService }\r\n    ]; };\r\n    /** @nocollapse */ DependencyManagerService.ngInjectableDef = ɵɵdefineInjectable({ factory: function DependencyManagerService_Factory() { return new DependencyManagerService(ɵɵinject(CacheStoreManagerService), ɵɵinject(DataService)); }, token: DependencyManagerService, providedIn: \"root\" });\r\n    return DependencyManagerService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    DependencyManagerService.prototype.cacheStoreManagerService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    DependencyManagerService.prototype.dataService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/base-connection.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar BaseConnectionService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of base connection service.\r\n     * @param dependencyManagerService\r\n     */\r\n    function BaseConnectionService(dependencyManagerService) {\r\n        this.dependencyManagerService = dependencyManagerService;\r\n    }\r\n    /**\r\n     * Sends request\r\n     *\r\n     * It call the dependencyManagerService get method which return the api result.\r\n     * It contains the payloadObj (xmlRequest which pass in api call)\r\n     * and action interface parameter.\r\n     * It call the setDefault method and setting the default values.\r\n     *\r\n     * @param payloadObj\r\n     * @param [baseParam]\r\n     * @returns data\r\n     */\r\n    /**\r\n     * Sends request\r\n     *\r\n     * It call the dependencyManagerService get method which return the api result.\r\n     * It contains the payloadObj (xmlRequest which pass in api call)\r\n     * and action interface parameter.\r\n     * It call the setDefault method and setting the default values.\r\n     *\r\n     * @param {?} payloadObj\r\n     * @param {?=} baseParam\r\n     * @return {?} data\r\n     */\r\n    BaseConnectionService.prototype.sendRequest = /**\r\n     * Sends request\r\n     *\r\n     * It call the dependencyManagerService get method which return the api result.\r\n     * It contains the payloadObj (xmlRequest which pass in api call)\r\n     * and action interface parameter.\r\n     * It call the setDefault method and setting the default values.\r\n     *\r\n     * @param {?} payloadObj\r\n     * @param {?=} baseParam\r\n     * @return {?} data\r\n     */\r\n    function (payloadObj, baseParam) {\r\n        if (!payloadObj) {\r\n            throw new Error('PayloadObj can not be undefined or empty');\r\n        }\r\n        /** @type {?} */\r\n        var xmlRequest;\r\n        if (typeof payloadObj === 'string') {\r\n            xmlRequest = payloadObj;\r\n        }\r\n        else {\r\n            xmlRequest = payloadObj.xmlRequest;\r\n        }\r\n        console.warn('BaseConnection ->sendRequest [DEPRECATED]:' +\r\n            ' Directly passing XMLRequest as string is no longer supported!  XMLRequest :: ', xmlRequest);\r\n        /** @type {?} */\r\n        var cmdName = xmlRequest.match(/<command name=\\\"(\\w+)\\\"/i)[1];\r\n        /** @type {?} */\r\n        var actionParam = {};\r\n        if (!baseParam) {\r\n            baseParam = actionParam;\r\n        }\r\n        baseParam = this.setDefault(baseParam);\r\n        if (!baseParam.xmlRequest) {\r\n            baseParam.xmlRequest = xmlRequest;\r\n        }\r\n        if (!baseParam.cmdName) {\r\n            baseParam.cmdName = cmdName;\r\n        }\r\n        return this.dependencyManagerService.get(baseParam).pipe(map((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            return data;\r\n        })));\r\n    };\r\n    /**\r\n     * Sends request\r\n     *\r\n     * It call the dependencyManagerService get method which return the api result.\r\n     * It contains the payloadObj (jsonRequest which pass in api call)\r\n     * and action interface parameter.\r\n     * It call the setDefault method and setting the default values.\r\n     *\r\n     * @param payloadObj\r\n     * @param [actionParam]\r\n     * @returns res\r\n     */\r\n    /**\r\n     * Sends request\r\n     *\r\n     * It call the dependencyManagerService get method which return the api result.\r\n     * It contains the payloadObj (jsonRequest which pass in api call)\r\n     * and action interface parameter.\r\n     * It call the setDefault method and setting the default values.\r\n     *\r\n     * @param {?} payloadObj\r\n     * @param {?=} actionParam\r\n     * @return {?} res\r\n     */\r\n    BaseConnectionService.prototype.send = /**\r\n     * Sends request\r\n     *\r\n     * It call the dependencyManagerService get method which return the api result.\r\n     * It contains the payloadObj (jsonRequest which pass in api call)\r\n     * and action interface parameter.\r\n     * It call the setDefault method and setting the default values.\r\n     *\r\n     * @param {?} payloadObj\r\n     * @param {?=} actionParam\r\n     * @return {?} res\r\n     */\r\n    function (payloadObj, actionParam) {\r\n        if (!payloadObj) {\r\n            throw new Error('PayloadObj can not be undefined or empty');\r\n        }\r\n        console.warn('BaseConnection ->sendRequest:', payloadObj.jsonRequest);\r\n        /** @type {?} */\r\n        var cmdName = payloadObj.command;\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        actionParam = this.setDefault(actionParam);\r\n        if (!actionParam.cmdName) {\r\n            actionParam.cmdName = cmdName;\r\n        }\r\n        return this.dependencyManagerService.setDependencies(payloadObj, actionParam)\r\n            .pipe(map((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) {\r\n            return res;\r\n        })));\r\n    };\r\n    /**\r\n     * Sets default\r\n     * sendRequest function is caller of setDefault method.\r\n     *\r\n     * Default value\r\n     * reportError=true\r\n     * storeType=InMemory\r\n     * cacheType=nonSticky\r\n     * encryption=false\r\n     * isSelf= false\r\n     *\r\n     * @param [baseParam]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Sets default\r\n     * sendRequest function is caller of setDefault method.\r\n     *\r\n     * Default value\r\n     * reportError=true\r\n     * storeType=InMemory\r\n     * cacheType=nonSticky\r\n     * encryption=false\r\n     * isSelf= false\r\n     *\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    BaseConnectionService.prototype.setDefault = /**\r\n     * Sets default\r\n     * sendRequest function is caller of setDefault method.\r\n     *\r\n     * Default value\r\n     * reportError=true\r\n     * storeType=InMemory\r\n     * cacheType=nonSticky\r\n     * encryption=false\r\n     * isSelf= false\r\n     *\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    function (baseParam) {\r\n        if (!baseParam.url) {\r\n            baseParam.url = DISPATCH_URL;\r\n        }\r\n        if (baseParam.reportError === undefined || baseParam.reportError === null) {\r\n            baseParam.reportError = true;\r\n        }\r\n        if (!baseParam.cacheType) {\r\n            baseParam.cacheType = CacheType.nonsticky;\r\n        }\r\n        if (!baseParam.storeType) {\r\n            baseParam.storeType = StoreType.InMemory;\r\n        }\r\n        if (!baseParam.encryption) {\r\n            baseParam.encryption = EncryptionAction.noencrypt;\r\n        }\r\n        if (baseParam.isSelf === undefined || baseParam.isSelf === null) {\r\n            baseParam.isSelf = false;\r\n        }\r\n        // to call studyoptimizer app by default(after login)\r\n        if (!baseParam.isSSOEndPoint) {\r\n            baseParam.isSSOEndPoint = false;\r\n        }\r\n        /* if (!baseParam.endPoint) {\r\n            baseParam.endPoint = true;\r\n        } */\r\n        if (!baseParam.prelogin) {\r\n            baseParam.prelogin = false;\r\n        }\r\n        return baseParam;\r\n    };\r\n    BaseConnectionService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    BaseConnectionService.ctorParameters = function () { return [\r\n        { type: DependencyManagerService }\r\n    ]; };\r\n    /** @nocollapse */ BaseConnectionService.ngInjectableDef = ɵɵdefineInjectable({ factory: function BaseConnectionService_Factory() { return new BaseConnectionService(ɵɵinject(DependencyManagerService)); }, token: BaseConnectionService, providedIn: \"root\" });\r\n    return BaseConnectionService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BaseConnectionService.prototype.dependencyManagerService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/payload.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Payload\r\n */\r\nvar /**\r\n * Payload\r\n */\r\nPayload = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of payload.\r\n     * @param command\r\n     * @param params\r\n     * @param xmlRequest\r\n     */\r\n    function Payload(command, params, xmlRequest) {\r\n        this.command = command;\r\n        this.params = params;\r\n        this.xmlRequest = xmlRequest;\r\n    }\r\n    return Payload;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    Payload.prototype.command;\r\n    /** @type {?} */\r\n    Payload.prototype.params;\r\n    /** @type {?} */\r\n    Payload.prototype.xmlRequest;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/api-payload.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * API Payload\r\n */\r\nvar /**\r\n * API Payload\r\n */\r\nAPIPayload = /** @class */ (function () {\r\n    function APIPayload(command, queryParams, headers, moduleInfo, jsonRequest) {\r\n        if (queryParams === void 0) { queryParams = null; }\r\n        if (headers === void 0) { headers = null; }\r\n        if (moduleInfo === void 0) { moduleInfo = null; }\r\n        this.command = command;\r\n        this.queryParams = queryParams;\r\n        this.headers = headers;\r\n        this.moduleInfo = moduleInfo;\r\n        this.jsonRequest = jsonRequest;\r\n        this.command = command;\r\n        this.queryParams = this.getQueryParams(queryParams);\r\n        this.headers = this.getHeaders(headers);\r\n        this.moduleInfo = moduleInfo;\r\n        this.jsonRequest = this.getJSONReq(jsonRequest);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} headers\r\n     * @return {?}\r\n     */\r\n    APIPayload.prototype.getHeaders = /**\r\n     * @private\r\n     * @param {?} headers\r\n     * @return {?}\r\n     */\r\n    function (headers) {\r\n        /** @type {?} */\r\n        var httpHeaders = {};\r\n        for (var key in headers) {\r\n            if (headers.hasOwnProperty(key)) {\r\n                /** @type {?} */\r\n                var element = headers[key];\r\n                httpHeaders[key] = element;\r\n            }\r\n        }\r\n        httpHeaders['Content-Type'] = 'application/json; charset=utf-8';\r\n        // local time header\r\n        httpHeaders['localTime'] = new Date().toString();\r\n        // tenant id\r\n        httpHeaders['tenantID'] = 'tenant1';\r\n        // command header\r\n        if (this.command) {\r\n            httpHeaders['command'] = this.command;\r\n        }\r\n        if (this.moduleInfo) {\r\n            // module header\r\n            if (this.moduleInfo.moduleName) {\r\n                httpHeaders['module'] = this.moduleInfo.moduleName;\r\n            }\r\n            // page name\r\n            if (this.moduleInfo.pageName) {\r\n                httpHeaders['page'] = this.moduleInfo.pageName;\r\n            }\r\n            // study key\r\n            if (this.moduleInfo.studykey) {\r\n                httpHeaders['studykey'] = this.moduleInfo.studykey.toString();\r\n            }\r\n            if (this.moduleInfo.plankey) {\r\n                httpHeaders['plankey'] = this.moduleInfo.plankey.toString();\r\n            }\r\n        }\r\n        return new HttpHeaders(httpHeaders);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    APIPayload.prototype.getQueryParams = /**\r\n     * @private\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    function (params) {\r\n        /** @type {?} */\r\n        var queryParams = {};\r\n        for (var key in params) {\r\n            if (params.hasOwnProperty(key)) {\r\n                /** @type {?} */\r\n                var element = params[key];\r\n                queryParams[key] = element;\r\n            }\r\n        }\r\n        return new HttpParams({\r\n            fromObject: queryParams\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} jsonRequest\r\n     * @return {?}\r\n     */\r\n    APIPayload.prototype.getJSONReq = /**\r\n     * @private\r\n     * @param {?} jsonRequest\r\n     * @return {?}\r\n     */\r\n    function (jsonRequest) {\r\n        try {\r\n            return jsonRequest ? JSON.stringify(jsonRequest) : null;\r\n        }\r\n        catch (error) {\r\n            console.error('JSON stringify error', error);\r\n            throw new Error('APIPayload: Error passing request object to JSON string');\r\n        }\r\n    };\r\n    return APIPayload;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    APIPayload.prototype.command;\r\n    /** @type {?} */\r\n    APIPayload.prototype.queryParams;\r\n    /** @type {?} */\r\n    APIPayload.prototype.headers;\r\n    /** @type {?} */\r\n    APIPayload.prototype.moduleInfo;\r\n    /** @type {?} */\r\n    APIPayload.prototype.jsonRequest;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/base-payload-command.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar BasePayloadCommandService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of base payload command service.\r\n     */\r\n    function BasePayloadCommandService() {\r\n    }\r\n    /**\r\n     * Gets xmltag\r\n     * @param tags\r\n     * @returns the xml elements\r\n     */\r\n    /**\r\n     * Gets xmltag\r\n     * @private\r\n     * @param {?} tags\r\n     * @return {?} the xml elements\r\n     */\r\n    BasePayloadCommandService.prototype.getXMLTag = /**\r\n     * Gets xmltag\r\n     * @private\r\n     * @param {?} tags\r\n     * @return {?} the xml elements\r\n     */\r\n    function (tags) {\r\n        // If the content is not an Object or an Array return the value\r\n        if (typeof tags !== 'object') {\r\n            if (typeof tags === 'string') {\r\n                tags = StringUtil.escapeHTML(tags);\r\n            }\r\n            return tags;\r\n        }\r\n        /** @type {?} */\r\n        var req = '';\r\n        // For each Value that you have in the object or an Array process it for a new tag\r\n        for (var key in tags) {\r\n            if (!tags.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            // If The Data is not in the form of an Array parse the OBject for parameters and tags\r\n            if (Object.prototype.toString.call(tags) !== '[object Array]') {\r\n                if (key !== 'params' && key !== 'value') {\r\n                    req += \"<\" + key;\r\n                    if (tags[key] && tags[key].params !== undefined) {\r\n                        // console.log('Params:', tags[key].params);\r\n                        for (var value in tags[key].params) {\r\n                            // req += ' ' + value + '=\\'' + tags[key].params[value] + '\\'';\r\n                            if (value) {\r\n                                req += \" \" + value + \"=\\\"\" + tags[key].params[value] + \"\\\"\";\r\n                            }\r\n                        }\r\n                    }\r\n                    req += \">\";\r\n                }\r\n            }\r\n            if (key !== 'params') {\r\n                req += this.getXMLTag(tags[key]);\r\n            }\r\n            if (Object.prototype.toString.call(tags) !== '[object Array]') {\r\n                if (key !== 'params' && key !== 'value') {\r\n                    req += \"</\" + key + \">\";\r\n                }\r\n            }\r\n        }\r\n        return req;\r\n    };\r\n    /**\r\n     * Builds request\r\n     *\r\n     * It will generate the xmlRequest\r\n     * Create the serviceRequest xml root tag\r\n     * Based on command parameter value, create the command xml tag\r\n     * If params parameter value is not null then iterate it and\r\n     * create the parameter tag under the command xml tag\r\n     * check the commandTags parameter if it is not null then call the getXMLTag method and set\r\n     * the output in request variable.\r\n     * create the UserAction xml tag and add module, page and localtime xml tag.\r\n     * e.g.\r\n     * const params = categories: {\r\n          category: 'login'\r\n      }\r\n     * buildRequest('GetTerms',params.categories);\r\n     * Output\r\n     *  <serviceRequest xmlns=\"http://www.coprindm.com\">\r\n        <command name=\"GetTerms\">\r\n          <parameter name=\"category\">login</parameter>\r\n        </command>\r\n        <userAction>\r\n        <module>STDLST</module>\r\n        <page>MNGHILST</page>\r\n          <localTime>Thu Jun 21 10:21:46 GMT+0530 2018</localTime>\r\n        </userAction>\r\n      </serviceRequest>\r\n     * If the commandTags paramter is not null then call the getXMLTag method\r\n     * e.g. const tempObject = {\r\n        criteriaList: {\r\n          value: [ {\r\n            criterionVal: {\r\n            params: {\r\n              criterionId: 'THERAPY'\r\n            },\r\n            value: 'All1'\r\n          }},\r\n          {\r\n            criterionVal: {\r\n            params: {\r\n              criterionId: 'ASSET'\r\n            },\r\n            value: 'All2'\r\n          }}\r\n          ]\r\n        }\r\n      };\r\n     * buildRequest('GetTerms',{},{},tempObject);\r\n     * Output\r\n     *<serviceRequest xmlns=\"http://www.coprindm.com\">\r\n        <command name=\"GetStudyList\">\r\n          <criteriaList>\r\n            <criterionVal criterionId=\"THERAPY\">All1</criterionVal>\r\n               <criterionVal criterionId=\"ASSET\">All2</criterionVal>\r\n          </criteriaList>\r\n        </command>\r\n        <userAction>\r\n          <localTime>Thu Jun 21 12:25:23 GMT+0530 2018</localTime>\r\n        </userAction>\r\n      </serviceRequest>\r\n     * @param command\r\n     * @param [params]\r\n     * @param [tags]\r\n     * @param [commandTags]\r\n     * @param [moduleInfo]\r\n     * @returns xmlRequest\r\n     */\r\n    /**\r\n     * Builds request\r\n     *\r\n     * It will generate the xmlRequest\r\n     * Create the serviceRequest xml root tag\r\n     * Based on command parameter value, create the command xml tag\r\n     * If params parameter value is not null then iterate it and\r\n     * create the parameter tag under the command xml tag\r\n     * check the commandTags parameter if it is not null then call the getXMLTag method and set\r\n     * the output in request variable.\r\n     * create the UserAction xml tag and add module, page and localtime xml tag.\r\n     * e.g.\r\n     * const params = categories: {\r\n     * category: 'login'\r\n     * }\r\n     * buildRequest('GetTerms',params.categories);\r\n     * Output\r\n     *  <serviceRequest xmlns=\"http://www.coprindm.com\">\r\n     * <command name=\"GetTerms\">\r\n     * <parameter name=\"category\">login</parameter>\r\n     * </command>\r\n     * <userAction>\r\n     * <module>STDLST</module>\r\n     * <page>MNGHILST</page>\r\n     * <localTime>Thu Jun 21 10:21:46 GMT+0530 2018</localTime>\r\n     * </userAction>\r\n     * </serviceRequest>\r\n     * If the commandTags paramter is not null then call the getXMLTag method\r\n     * e.g. const tempObject = {\r\n     * criteriaList: {\r\n     * value: [ {\r\n     * criterionVal: {\r\n     * params: {\r\n     * criterionId: 'THERAPY'\r\n     * },\r\n     * value: 'All1'\r\n     * }},\r\n     * {\r\n     * criterionVal: {\r\n     * params: {\r\n     * criterionId: 'ASSET'\r\n     * },\r\n     * value: 'All2'\r\n     * }}\r\n     * ]\r\n     * }\r\n     * };\r\n     * buildRequest('GetTerms',{},{},tempObject);\r\n     * Output\r\n     * <serviceRequest xmlns=\"http://www.coprindm.com\">\r\n     * <command name=\"GetStudyList\">\r\n     * <criteriaList>\r\n     * <criterionVal criterionId=\"THERAPY\">All1</criterionVal>\r\n     * <criterionVal criterionId=\"ASSET\">All2</criterionVal>\r\n     * </criteriaList>\r\n     * </command>\r\n     * <userAction>\r\n     * <localTime>Thu Jun 21 12:25:23 GMT+0530 2018</localTime>\r\n     * </userAction>\r\n     * </serviceRequest>\r\n     * @param {?} command\r\n     * @param {?=} params\r\n     * @param {?=} tags\r\n     * @param {?=} commandTags\r\n     * @param {?=} moduleInfo\r\n     * @return {?} xmlRequest\r\n     */\r\n    BasePayloadCommandService.prototype.buildRequest = /**\r\n     * Builds request\r\n     *\r\n     * It will generate the xmlRequest\r\n     * Create the serviceRequest xml root tag\r\n     * Based on command parameter value, create the command xml tag\r\n     * If params parameter value is not null then iterate it and\r\n     * create the parameter tag under the command xml tag\r\n     * check the commandTags parameter if it is not null then call the getXMLTag method and set\r\n     * the output in request variable.\r\n     * create the UserAction xml tag and add module, page and localtime xml tag.\r\n     * e.g.\r\n     * const params = categories: {\r\n     * category: 'login'\r\n     * }\r\n     * buildRequest('GetTerms',params.categories);\r\n     * Output\r\n     *  <serviceRequest xmlns=\"http://www.coprindm.com\">\r\n     * <command name=\"GetTerms\">\r\n     * <parameter name=\"category\">login</parameter>\r\n     * </command>\r\n     * <userAction>\r\n     * <module>STDLST</module>\r\n     * <page>MNGHILST</page>\r\n     * <localTime>Thu Jun 21 10:21:46 GMT+0530 2018</localTime>\r\n     * </userAction>\r\n     * </serviceRequest>\r\n     * If the commandTags paramter is not null then call the getXMLTag method\r\n     * e.g. const tempObject = {\r\n     * criteriaList: {\r\n     * value: [ {\r\n     * criterionVal: {\r\n     * params: {\r\n     * criterionId: 'THERAPY'\r\n     * },\r\n     * value: 'All1'\r\n     * }},\r\n     * {\r\n     * criterionVal: {\r\n     * params: {\r\n     * criterionId: 'ASSET'\r\n     * },\r\n     * value: 'All2'\r\n     * }}\r\n     * ]\r\n     * }\r\n     * };\r\n     * buildRequest('GetTerms',{},{},tempObject);\r\n     * Output\r\n     * <serviceRequest xmlns=\"http://www.coprindm.com\">\r\n     * <command name=\"GetStudyList\">\r\n     * <criteriaList>\r\n     * <criterionVal criterionId=\"THERAPY\">All1</criterionVal>\r\n     * <criterionVal criterionId=\"ASSET\">All2</criterionVal>\r\n     * </criteriaList>\r\n     * </command>\r\n     * <userAction>\r\n     * <localTime>Thu Jun 21 12:25:23 GMT+0530 2018</localTime>\r\n     * </userAction>\r\n     * </serviceRequest>\r\n     * @param {?} command\r\n     * @param {?=} params\r\n     * @param {?=} tags\r\n     * @param {?=} commandTags\r\n     * @param {?=} moduleInfo\r\n     * @return {?} xmlRequest\r\n     */\r\n    function (command, params, tags, commandTags, moduleInfo) {\r\n        if (params === void 0) { params = {}; }\r\n        if (tags === void 0) { tags = null; }\r\n        if (commandTags === void 0) { commandTags = null; }\r\n        if (moduleInfo === void 0) { moduleInfo = null; }\r\n        // let cacheResponse = (!!params && !!params.cacheResponse),\r\n        // cacheId = command;\r\n        /** @type {?} */\r\n        var req = \"<serviceRequest xmlns=\\\"http://www.coprindm.com\\\">\";\r\n        /** @type {?} */\r\n        var key;\r\n        req += \"<command name=\\\"\" + command + \"\\\">\";\r\n        if (params !== null) {\r\n            // if (cacheResponse) {\r\n            // delete cacheResponse prop from params as it's used flagging BaseConnection.sendRequest to cache response or not.\r\n            // delete params.cacheResponse;\r\n            // }\r\n            for (key in params) {\r\n                if (key) {\r\n                    /** @type {?} */\r\n                    var paramsVal = '';\r\n                    if (typeof params[key] === 'string') {\r\n                        paramsVal = StringUtil.escapeHTML(params[key]);\r\n                    }\r\n                    else {\r\n                        paramsVal = params[key];\r\n                    }\r\n                    req += \"<parameter name=\\\"\" + key + \"\\\">\" + paramsVal + \"</parameter>\";\r\n                    // cacheId += '_' + key + '-' + params[key];\r\n                }\r\n                // @NOTE should we consider truncating cache id as it might get really long for long list of parameters!\r\n            }\r\n        }\r\n        if (null !== commandTags && undefined !== commandTags) {\r\n            req += this.getXMLTag(commandTags);\r\n        }\r\n        req += \"</command>\";\r\n        req += \"<userAction>\";\r\n        // To add module and page detail parameters\r\n        if (moduleInfo) {\r\n            if (moduleInfo.moduleName) {\r\n                req += \"<module>\" + moduleInfo.moduleName + \"</module>\";\r\n            }\r\n            if (moduleInfo.pageName) {\r\n                req += \"<page>\" + moduleInfo.pageName + \"</page>\";\r\n            }\r\n            if (moduleInfo.studykey) {\r\n                req += \"<studykey>\" + moduleInfo.studykey + \"</studykey>\";\r\n            }\r\n        }\r\n        req += \"<localTime>\" + (new Date()).toString() + \"</localTime>\";\r\n        req += \"</userAction>\";\r\n        if (null !== tags) {\r\n            for (key in tags) {\r\n                if (key) {\r\n                    req += \"<\" + key + \">\" + tags[key] + \"</\" + key + \">\";\r\n                }\r\n            }\r\n        }\r\n        req += \"</serviceRequest>\";\r\n        return new Payload(command, params, req);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?=} params\r\n     * @param {?=} tags\r\n     * @param {?=} commandTags\r\n     * @param {?=} moduleInfo\r\n     * @return {?}\r\n     */\r\n    BasePayloadCommandService.prototype.buildAPIRequest = /**\r\n     * @param {?} command\r\n     * @param {?=} params\r\n     * @param {?=} tags\r\n     * @param {?=} commandTags\r\n     * @param {?=} moduleInfo\r\n     * @return {?}\r\n     */\r\n    function (command, params, tags, commandTags, moduleInfo) {\r\n        if (params === void 0) { params = {}; }\r\n        if (tags === void 0) { tags = null; }\r\n        if (commandTags === void 0) { commandTags = null; }\r\n        if (moduleInfo === void 0) { moduleInfo = null; }\r\n        return new APIPayload(command, params, moduleInfo);\r\n    };\r\n    BasePayloadCommandService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    BasePayloadCommandService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ BasePayloadCommandService.ngInjectableDef = ɵɵdefineInjectable({ factory: function BasePayloadCommandService_Factory() { return new BasePayloadCommandService(); }, token: BasePayloadCommandService, providedIn: \"root\" });\r\n    return BasePayloadCommandService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/payload-command.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PayloadCommandService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of payload command service.\r\n     * @param basePayloadCommand\r\n     */\r\n    function PayloadCommandService(basePayloadCommand) {\r\n        this.basePayloadCommand = basePayloadCommand;\r\n    }\r\n    /**\r\n     * Gets command details\r\n     * It called the basePayloadCommand.buildRequest method which returns the xmlRequest\r\n     * @param [command]\r\n     * @param [params]\r\n     * @param [tags]\r\n     * @param [commandtags]\r\n     * @param [moduleInfo]\r\n     * @returns xmlRequest\r\n     */\r\n    /**\r\n     * Gets command details\r\n     * It called the basePayloadCommand.buildRequest method which returns the xmlRequest\r\n     * @param {?} command\r\n     * @param {?=} params\r\n     * @param {?=} tags\r\n     * @param {?=} commandtags\r\n     * @param {?=} moduleInfo\r\n     * @return {?} xmlRequest\r\n     */\r\n    PayloadCommandService.prototype.getCommandDetails = /**\r\n     * Gets command details\r\n     * It called the basePayloadCommand.buildRequest method which returns the xmlRequest\r\n     * @param {?} command\r\n     * @param {?=} params\r\n     * @param {?=} tags\r\n     * @param {?=} commandtags\r\n     * @param {?=} moduleInfo\r\n     * @return {?} xmlRequest\r\n     */\r\n    function (command, params, tags, commandtags, moduleInfo) {\r\n        if (params === void 0) { params = null; }\r\n        if (tags === void 0) { tags = null; }\r\n        if (commandtags === void 0) { commandtags = null; }\r\n        if (moduleInfo === void 0) { moduleInfo = null; }\r\n        if (!command) {\r\n            throw new Error(\"Command name can not be empty\");\r\n        }\r\n        return this.basePayloadCommand.buildRequest(command, params, tags, commandtags, moduleInfo);\r\n    };\r\n    /**\r\n     * Gets command details\r\n     * It called the basePayloadCommand.buildRequest method which returns the xmlRequest\r\n     * @param [command]\r\n     * @param [queryParams]\r\n     * @param [headers]\r\n     * @param [moduleInfo]\r\n     * @param [req]\r\n     */\r\n    /**\r\n     * Gets command details\r\n     * It called the basePayloadCommand.buildRequest method which returns the xmlRequest\r\n     * @param {?} command\r\n     * @param {?=} queryParams\r\n     * @param {?=} headers\r\n     * @param {?=} moduleInfo\r\n     * @param {?=} req\r\n     * @return {?}\r\n     */\r\n    PayloadCommandService.prototype.getApiRequest = /**\r\n     * Gets command details\r\n     * It called the basePayloadCommand.buildRequest method which returns the xmlRequest\r\n     * @param {?} command\r\n     * @param {?=} queryParams\r\n     * @param {?=} headers\r\n     * @param {?=} moduleInfo\r\n     * @param {?=} req\r\n     * @return {?}\r\n     */\r\n    function (command, queryParams, headers, moduleInfo, req) {\r\n        if (queryParams === void 0) { queryParams = null; }\r\n        if (headers === void 0) { headers = null; }\r\n        if (moduleInfo === void 0) { moduleInfo = null; }\r\n        if (!command) {\r\n            throw new Error(\"Command name can not be empty\");\r\n        }\r\n        return new APIPayload(command, queryParams, headers, moduleInfo, req);\r\n    };\r\n    PayloadCommandService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    PayloadCommandService.ctorParameters = function () { return [\r\n        { type: BasePayloadCommandService }\r\n    ]; };\r\n    /** @nocollapse */ PayloadCommandService.ngInjectableDef = ɵɵdefineInjectable({ factory: function PayloadCommandService_Factory() { return new PayloadCommandService(ɵɵinject(BasePayloadCommandService)); }, token: PayloadCommandService, providedIn: \"root\" });\r\n    return PayloadCommandService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PayloadCommandService.prototype.basePayloadCommand;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/api-end-points.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar APIEndPoints = {\r\n    LOGIN: \"login\",\r\n    LOGOUT: \"logout\",\r\n    USER_DATA: \"user/data\",\r\n    STUDY_TAGS: \"study/tags\",\r\n    STUDY_TAGS_LIST: \"study/tagsList\",\r\n    BASE_TERMS: \"prelogin/terms\",\r\n    APP_DATA: \"prelogin/appdata\",\r\n    SERVER_STATUS: \"prelogin/serverstatus\",\r\n    USER_PREFERENCE: \"user/preference\",\r\n    STUDY_DETAILS: \"study/details\",\r\n    STUDY_SETTINGS: \"study/settings\",\r\n    COHORT_DETAILS: \"cohorts/details\",\r\n    STUDY_SUMMARY: \"study/summary\",\r\n    FILTER_COUNTRY_DATA: \"filter/countrydata\",\r\n    UPDATE_COUNTRY_NOTES: \"study/country/notes\",\r\n    GETALLCURVES: \"study/all-curves\",\r\n    GETALLMILESTONES: \"getAllMileStones\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/base-terms.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar BaseTermsService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of base terms service.\r\n     * @param baseConnectionService\r\n     * @param payloadCommandService\r\n     */\r\n    function BaseTermsService(baseConnectionService, payloadCommandService) {\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.appResources = null;\r\n        this.appPropertyList = {};\r\n        /**\r\n         * Common terms of base terms service\r\n         */\r\n        this._commonTerms = null;\r\n    }\r\n    /**\r\n     * Load Term Service\r\n     *\r\n     * The first api call will load the GetTerms data of terms category.\r\n     * Based on parameter the second api call will load the Getterms data of login or error category.\r\n     * e.g.\r\n     *\r\n       ProductName available in  terms api call\r\n        {\r\n          \"name\": \"ProductName\",\r\n          \"value\": \"IQVIA StudyOptimizer\"\r\n        }\r\n     *  login api call\r\n     *  {\r\n          \"name\": \"LoginWelcome\",\r\n          \"value\": \"<font color='#333333'>Welcome to !ProductName!<\\/font>\"\r\n        }\r\n     * Since productname is available in terms api hence first call the terms api and set the information in\r\n     * _commonTerms variable and then call the login api.\r\n     *\r\n     * @param params\r\n     * @param [actionParam]\r\n     * @returns login or error terminology information\r\n     */\r\n    /**\r\n     * Load Term Service\r\n     *\r\n     * The first api call will load the GetTerms data of terms category.\r\n     * Based on parameter the second api call will load the Getterms data of login or error category.\r\n     * e.g.\r\n     *\r\n     * ProductName available in  terms api call\r\n     * {\r\n     * \"name\": \"ProductName\",\r\n     * \"value\": \"IQVIA StudyOptimizer\"\r\n     * }\r\n     *  login api call\r\n     *  {\r\n     * \"name\": \"LoginWelcome\",\r\n     * \"value\": \"<font color='#333333'>Welcome to !ProductName!<\\/font>\"\r\n     * }\r\n     * Since productname is available in terms api hence first call the terms api and set the information in\r\n     * _commonTerms variable and then call the login api.\r\n     *\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?} login or error terminology information\r\n     */\r\n    BaseTermsService.prototype.loadData = /**\r\n     * Load Term Service\r\n     *\r\n     * The first api call will load the GetTerms data of terms category.\r\n     * Based on parameter the second api call will load the Getterms data of login or error category.\r\n     * e.g.\r\n     *\r\n     * ProductName available in  terms api call\r\n     * {\r\n     * \"name\": \"ProductName\",\r\n     * \"value\": \"IQVIA StudyOptimizer\"\r\n     * }\r\n     *  login api call\r\n     *  {\r\n     * \"name\": \"LoginWelcome\",\r\n     * \"value\": \"<font color='#333333'>Welcome to !ProductName!<\\/font>\"\r\n     * }\r\n     * Since productname is available in terms api hence first call the terms api and set the information in\r\n     * _commonTerms variable and then call the login api.\r\n     *\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?} login or error terminology information\r\n     */\r\n    function (params, actionParam) {\r\n        if (!params) {\r\n            throw new Error(\"Params can not be empty or undefined in base term servie\");\r\n        }\r\n        if (!this.typeCheck(params)) {\r\n            throw new Error(\"Invalid params object\");\r\n        }\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var termsPayload = this.payloadCommandService.getCommandDetails(params.commandName, params.category);\r\n        /** @type {?} */\r\n        var baseParam = {};\r\n        baseParam = Object.assign({}, actionParam);\r\n        baseParam.cacheKey = CacheKey.TermKey;\r\n        return that.baseConnectionService.sendRequest(termsPayload, baseParam)\r\n            .pipe(map((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) { return res; })), mergeMap((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (data.terminologies.term) {\r\n                that._commonTerms = [];\r\n                Object.assign(that._commonTerms, data.terminologies);\r\n                termsPayload = that.payloadCommandService.getCommandDetails(params.commandName, params.category);\r\n                /** @type {?} */\r\n                var param = {};\r\n                if (!actionParam) {\r\n                    actionParam = param;\r\n                }\r\n                return that.baseConnectionService.sendRequest(termsPayload, actionParam)\r\n                    .pipe(map((/**\r\n                 * @param {?} response\r\n                 * @return {?}\r\n                 */\r\n                function (response) {\r\n                    if (response.terminologies) {\r\n                        /** @type {?} */\r\n                        var rTerms = response.terminologies;\r\n                        return rTerms;\r\n                    }\r\n                })));\r\n            }\r\n        })));\r\n    };\r\n    /**\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    BaseTermsService.prototype.load = /**\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (params, actionParam) {\r\n        if (!params) {\r\n            throw new Error(\"Params can not be empty or undefined in base term servie\");\r\n        }\r\n        if (!this.typeCheck(params)) {\r\n            throw new Error(\"Invalid params object\");\r\n        }\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var baseParam = {};\r\n        if (!actionParam) {\r\n            actionParam = baseParam;\r\n        }\r\n        /** @type {?} */\r\n        var termsPayload;\r\n        if (actionParam.endPoint) {\r\n            termsPayload = that.payloadCommandService.getApiRequest(params.commandName, params.category);\r\n            return that.baseConnectionService.send(termsPayload, actionParam)\r\n                .pipe(map((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) {\r\n                if (response.terminologies) {\r\n                    /** @type {?} */\r\n                    var rTerms = response.terminologies;\r\n                    return rTerms;\r\n                }\r\n            })));\r\n        }\r\n        else {\r\n            termsPayload = that.payloadCommandService.getCommandDetails(params.commandName, params.category);\r\n            return that.baseConnectionService.sendRequest(termsPayload, actionParam)\r\n                .pipe(map((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) {\r\n                if (response.terminologies) {\r\n                    /** @type {?} */\r\n                    var rTerms = response.terminologies;\r\n                    return rTerms;\r\n                }\r\n            })));\r\n        }\r\n    };\r\n    /**\r\n     * Resolves value\r\n     *\r\n     * It returns the value from Terms.\r\n     * e.g. Pass the 'ProductName' as input for the resolveValue method.\r\n     * It search the information in terms and return the value like 'IQVIA StudyOptimizer'\r\n     * _commonTerms.term - Terms data.\r\n     *\r\n     * @param str\r\n     * @returns\r\n     */\r\n    /**\r\n     * Resolves value\r\n     *\r\n     * It returns the value from Terms.\r\n     * e.g. Pass the 'ProductName' as input for the resolveValue method.\r\n     * It search the information in terms and return the value like 'IQVIA StudyOptimizer'\r\n     * _commonTerms.term - Terms data.\r\n     *\r\n     * @param {?} str\r\n     * @return {?}\r\n     */\r\n    BaseTermsService.prototype.resolveValue = /**\r\n     * Resolves value\r\n     *\r\n     * It returns the value from Terms.\r\n     * e.g. Pass the 'ProductName' as input for the resolveValue method.\r\n     * It search the information in terms and return the value like 'IQVIA StudyOptimizer'\r\n     * _commonTerms.term - Terms data.\r\n     *\r\n     * @param {?} str\r\n     * @return {?}\r\n     */\r\n    function (str) {\r\n        if (!str) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var terms = this._commonTerms.term;\r\n        str = str.toString().replace(/!(.*?)!/g, (/**\r\n         * @param {?} match\r\n         * @param {?} token\r\n         * @return {?}\r\n         */\r\n        function (match, token) {\r\n            /** @type {?} */\r\n            var term = terms.find((/**\r\n             * @param {?} x\r\n             * @return {?}\r\n             */\r\n            function (x) {\r\n                return x.name === token;\r\n            }));\r\n            return term ? term.value : match;\r\n        }));\r\n        return str;\r\n    };\r\n    /**\r\n     * Gets term\r\n     * @param termParam\r\n     * @param [actionParam]\r\n     * @returns term\r\n     * get the term information.\r\n     */\r\n    /**\r\n     * Gets term\r\n     * @param {?} termParam\r\n     * @param {?=} actionParam\r\n     * @return {?} term\r\n     * get the term information.\r\n     */\r\n    BaseTermsService.prototype.getTerm = /**\r\n     * Gets term\r\n     * @param {?} termParam\r\n     * @param {?=} actionParam\r\n     * @return {?} term\r\n     * get the term information.\r\n     */\r\n    function (termParam, actionParam) {\r\n        if (!termParam) {\r\n            throw Error(\"term param can not be empty or undefined in base term servie\");\r\n        }\r\n        if (!this.typeCheck(termParam)) {\r\n            throw Error(\"Invalid params object\");\r\n        }\r\n        /** @type {?} */\r\n        var that = this;\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n        actionParam.cacheKey = CacheKey.TermKey;\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.BASE_TERMS;\r\n        }\r\n        /** @type {?} */\r\n        var termsPayload;\r\n        if (actionParam.endPoint) {\r\n            termsPayload = this.payloadCommandService.getApiRequest(termParam.commandName, termParam.category);\r\n            return that.baseConnectionService.send(termsPayload, actionParam).pipe(map((/**\r\n             * @param {?} data\r\n             * @return {?}\r\n             */\r\n            function (data) {\r\n                /** @type {?} */\r\n                var result = null;\r\n                if (data.terminologies && data.terminologies.term) {\r\n                    that._commonTerms = [];\r\n                    Object.assign(that._commonTerms, data.terminologies);\r\n                    result = data.terminologies;\r\n                }\r\n                return result;\r\n            })));\r\n        }\r\n        else {\r\n            termsPayload = this.payloadCommandService.getCommandDetails(termParam.commandName, termParam.category);\r\n            return that.baseConnectionService.sendRequest(termsPayload, actionParam).pipe(map((/**\r\n             * @param {?} data\r\n             * @return {?}\r\n             */\r\n            function (data) {\r\n                /** @type {?} */\r\n                var result = null;\r\n                if (data.terminologies && data.terminologies.term) {\r\n                    that._commonTerms = [];\r\n                    Object.assign(that._commonTerms, data.terminologies);\r\n                    result = data.terminologies;\r\n                }\r\n                return result;\r\n            })));\r\n        }\r\n    };\r\n    /**\r\n     * Sets property base list\r\n     * Creating appPropertyList map for application properties to avoid loop\r\n     */\r\n    /**\r\n     * Sets property base list\r\n     * Creating appPropertyList map for application properties to avoid loop\r\n     * @return {?}\r\n     */\r\n    BaseTermsService.prototype.setPropertyBaseList = /**\r\n     * Sets property base list\r\n     * Creating appPropertyList map for application properties to avoid loop\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.appResources) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var iLen = this.appResources.term.length;\r\n        for (var i = 0; i < iLen; i++) {\r\n            this.appPropertyList[this.appResources.term[i].name] = this.appResources.term[i].value;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    BaseTermsService.prototype.typeCheck = /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        return (obj.category !== undefined && obj.commandName !== undefined);\r\n    };\r\n    BaseTermsService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    BaseTermsService.ctorParameters = function () { return [\r\n        { type: BaseConnectionService },\r\n        { type: PayloadCommandService }\r\n    ]; };\r\n    /** @nocollapse */ BaseTermsService.ngInjectableDef = ɵɵdefineInjectable({ factory: function BaseTermsService_Factory() { return new BaseTermsService(ɵɵinject(BaseConnectionService), ɵɵinject(PayloadCommandService)); }, token: BaseTermsService, providedIn: \"root\" });\r\n    return BaseTermsService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BaseTermsService.prototype.appResources;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BaseTermsService.prototype.appPropertyList;\r\n    /**\r\n     * Common terms of base terms service\r\n     * @type {?}\r\n     */\r\n    BaseTermsService.prototype._commonTerms;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BaseTermsService.prototype.baseConnectionService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BaseTermsService.prototype.payloadCommandService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/locale-app-resources.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LocaleAppResourcesService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of locale app resources service.\r\n     * @param baseTermsService\r\n     */\r\n    function LocaleAppResourcesService(baseTermsService) {\r\n        this.baseTermsService = baseTermsService;\r\n        this.appResources = null;\r\n        this.appPropertyList = {};\r\n    }\r\n    /**\r\n     * Gets app resources\r\n     *\r\n     * Get the application resource information\r\n     *\r\n     * @param [cacheType]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets app resources\r\n     *\r\n     * Get the application resource information\r\n     *\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    LocaleAppResourcesService.prototype.getAppResources = /**\r\n     * Gets app resources\r\n     *\r\n     * Get the application resource information\r\n     *\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (params, actionParam) {\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        actionParam.cacheKey = CacheKey.TermApplicationKey;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.BASE_TERMS;\r\n        }\r\n        /** @type {?} */\r\n        var that = this;\r\n        if (that.appResources === null) {\r\n            return this.baseTermsService.load(params, actionParam)\r\n                .pipe(map((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) {\r\n                that.appResources = response;\r\n                that.setPropertyBaseList();\r\n                return response;\r\n            })));\r\n        }\r\n        else {\r\n            return of(that.appResources);\r\n        }\r\n    };\r\n    /**\r\n     * Sets property base list\r\n     * Creating appPropertyList map for application properties to avoid loop\r\n     */\r\n    /**\r\n     * Sets property base list\r\n     * Creating appPropertyList map for application properties to avoid loop\r\n     * @return {?}\r\n     */\r\n    LocaleAppResourcesService.prototype.setPropertyBaseList = /**\r\n     * Sets property base list\r\n     * Creating appPropertyList map for application properties to avoid loop\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.appResources) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var iLen = this.appResources.term.length;\r\n        for (var i = 0; i < iLen; i++) {\r\n            this.appPropertyList[this.appResources.term[i].name] = this.appResources.term[i].value;\r\n        }\r\n    };\r\n    /**\r\n     * Gets resource\r\n     * To get application property value by passing name\r\n     *\r\n     * @param name\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets resource\r\n     * To get application property value by passing name\r\n     *\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    LocaleAppResourcesService.prototype.getResource = /**\r\n     * Gets resource\r\n     * To get application property value by passing name\r\n     *\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var resourcesValue = '';\r\n        if (this.appPropertyList) {\r\n            resourcesValue = this.baseTermsService.resolveValue(this.appPropertyList[name]);\r\n        }\r\n        return resourcesValue;\r\n    };\r\n    /**\r\n     * Gets res\r\n     * @param arrRes\r\n     * @returns res\r\n     */\r\n    /**\r\n     * Gets res\r\n     * @param {?} arrRes\r\n     * @return {?} res\r\n     */\r\n    LocaleAppResourcesService.prototype.getRes = /**\r\n     * Gets res\r\n     * @param {?} arrRes\r\n     * @return {?} res\r\n     */\r\n    function (arrRes) {\r\n        /** @type {?} */\r\n        var obj = {};\r\n        if (this.appResources) {\r\n            for (var i = 0, total = this.appResources.term.length; i < total; i++) {\r\n                for (var j = 0; j < arrRes.length; j++) {\r\n                    if (this.appResources.term[i].name === arrRes[j]) {\r\n                        obj['' + this.appResources.term[i].name + ''] = this.baseTermsService.resolveValue(this.appResources.term[i].value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    };\r\n    LocaleAppResourcesService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    LocaleAppResourcesService.ctorParameters = function () { return [\r\n        { type: BaseTermsService }\r\n    ]; };\r\n    /** @nocollapse */ LocaleAppResourcesService.ngInjectableDef = ɵɵdefineInjectable({ factory: function LocaleAppResourcesService_Factory() { return new LocaleAppResourcesService(ɵɵinject(BaseTermsService)); }, token: LocaleAppResourcesService, providedIn: \"root\" });\r\n    return LocaleAppResourcesService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    LocaleAppResourcesService.prototype.appResources;\r\n    /** @type {?} */\r\n    LocaleAppResourcesService.prototype.appPropertyList;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    LocaleAppResourcesService.prototype.baseTermsService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/index.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {number} */\r\nvar Index = {\r\n    FIRST: 0,\r\n    SECOND: 1,\r\n    THIRD: 2,\r\n    FOURTH: 3,\r\n};\r\nIndex[Index.FIRST] = 'FIRST';\r\nIndex[Index.SECOND] = 'SECOND';\r\nIndex[Index.THIRD] = 'THIRD';\r\nIndex[Index.FOURTH] = 'FOURTH';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/pce.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PCEService = /** @class */ (function () {\r\n    function PCEService(datePipe, localAppResource) {\r\n        this.datePipe = datePipe;\r\n        this.localAppResource = localAppResource;\r\n        this.exportObj = {};\r\n    }\r\n    // copy\r\n    // copy\r\n    /**\r\n     * @param {?} dataArray\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.setDataForCopy = \r\n    // copy\r\n    /**\r\n     * @param {?} dataArray\r\n     * @return {?}\r\n     */\r\n    function (dataArray) {\r\n        /** @type {?} */\r\n        var headerData = this.jsonfyPlanCardHeaderData(this.header);\r\n        /** @type {?} */\r\n        var copyString = this.convertArrayToString(headerData, true);\r\n        copyString += this.convertArrayToString(dataArray);\r\n        copyString += this.appendFooter(copyString);\r\n        this.setTextToCopy(copyString);\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.jsonfyPlanCardHeaderData = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var result = [];\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                result.push({\r\n                    A: key,\r\n                    B: data[key]\r\n                });\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param {?=} header\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.planCardHeaderData = /**\r\n     * @param {?=} header\r\n     * @return {?}\r\n     */\r\n    function (header) {\r\n        if (header) {\r\n            this.header = header;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @param {?=} hideTopRow\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.convertArrayToString = /**\r\n     * @param {?} data\r\n     * @param {?=} hideTopRow\r\n     * @return {?}\r\n     */\r\n    function (data, hideTopRow) {\r\n        if (hideTopRow === void 0) { hideTopRow = false; }\r\n        /** @type {?} */\r\n        var copystring = '';\r\n        if (!hideTopRow) {\r\n            copystring += this.setRowHeader(data[0]);\r\n        }\r\n        for (var j = 0; j < data.length; j++) {\r\n            for (var key in data[j]) {\r\n                if (data[j].hasOwnProperty(key)) {\r\n                    copystring += '\"' + data[j][key] + '\"\\t';\r\n                }\r\n            }\r\n            copystring += '\\r\\n';\r\n        }\r\n        copystring += '\\r\\n';\r\n        return copystring;\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.setRowHeader = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var str = '';\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                str += '\"' + key + '\"\\t';\r\n            }\r\n        }\r\n        str += '\\n';\r\n        return str;\r\n    };\r\n    /**\r\n     * @param {?} copystring\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.appendFooter = /**\r\n     * @param {?} copystring\r\n     * @return {?}\r\n     */\r\n    function (copystring) {\r\n        return '\\r\\n' + this.getFooter();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.getFooter = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var FOOTER = this.localAppResource.getResource('FooterForReports');\r\n        return FOOTER;\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.setTextToCopy = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var success = false;\r\n        /** @type {?} */\r\n        var tmpElem = document.createElement('textarea');\r\n        tmpElem.style.position = 'fixed';\r\n        tmpElem.style.top = '0px';\r\n        tmpElem.style.left = '-99999px';\r\n        tmpElem.setAttribute('readonly', '');\r\n        tmpElem.value = data;\r\n        document.body.appendChild(tmpElem);\r\n        tmpElem.select();\r\n        tmpElem.focus();\r\n        tmpElem.setSelectionRange(0, tmpElem.value.length);\r\n        /** @type {?} */\r\n        var succeeded;\r\n        try {\r\n            succeeded = window.document.execCommand('copy');\r\n            success = true;\r\n            console.warn('copy success status:', succeeded);\r\n            if (!succeeded) {\r\n                throw succeeded;\r\n            }\r\n        }\r\n        catch (err) {\r\n            success = false;\r\n        }\r\n        document.body.removeChild(tmpElem);\r\n        tmpElem = null;\r\n        return success;\r\n    };\r\n    // export\r\n    // export\r\n    /**\r\n     * @param {?=} components\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.exportData = \r\n    // export\r\n    /**\r\n     * @param {?=} components\r\n     * @return {?}\r\n     */\r\n    function (components) {\r\n        if (components.length > 0) {\r\n            Promise.all([\r\n                components[Index.FIRST].workbookOptions(),\r\n                components[Index.SECOND].workbookOptions(),\r\n                components[Index.THIRD].workbookOptions()\r\n            ]).then((/**\r\n             * @param {?} workbooks\r\n             * @return {?}\r\n             */\r\n            function (workbooks) {\r\n                workbooks[Index.FIRST].sheets[Index.FIRST].rows = workbooks[Index.FIRST].sheets[Index.FIRST].rows.concat([{}], workbooks[Index.SECOND].sheets[Index.FIRST].rows, workbooks[Index.THIRD].sheets[Index.FIRST].rows);\r\n                components[Index.FIRST].save(workbooks[Index.FIRST]);\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} data\r\n     * @param {?=} fileName\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.exportExcelData = /**\r\n     * @param {?=} data\r\n     * @param {?=} fileName\r\n     * @return {?}\r\n     */\r\n    function (data, fileName) {\r\n        /** @type {?} */\r\n        var header = this.header;\r\n        /** @type {?} */\r\n        var tempHeader = this.jsonfyPlanCardHeaderData(header);\r\n        /** @type {?} */\r\n        var tempFooterArray = [];\r\n        /** @type {?} */\r\n        var footerData = this.getFooter();\r\n        tempFooterArray.push({ ' ': footerData });\r\n        /** @type {?} */\r\n        var worksheet = utils.json_to_sheet(tempHeader, {\r\n            skipHeader: true\r\n        });\r\n        /** @type {?} */\r\n        var wb = utils.book_new();\r\n        /** @type {?} */\r\n        var headerCount = Object.keys(header).length + 2;\r\n        utils.sheet_add_json(worksheet, data, { origin: 'A' + headerCount });\r\n        utils.sheet_add_json(worksheet, tempFooterArray, {\r\n            skipHeader: true,\r\n            origin: -1\r\n        });\r\n        utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n        writeFile(wb, fileName);\r\n    };\r\n    // print\r\n    // print\r\n    /**\r\n     * @param {?} dataArray\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.setDataForPrint = \r\n    // print\r\n    /**\r\n     * @param {?} dataArray\r\n     * @return {?}\r\n     */\r\n    function (dataArray) {\r\n        /** @type {?} */\r\n        var dataHtml = this.createDataTableForPrint(dataArray);\r\n        /** @type {?} */\r\n        var fntz = '10px';\r\n        /** @type {?} */\r\n        var htmlstr = this.getPlanCardHeaderForPrint(fntz) +\r\n            dataHtml +\r\n            this.getPlanCardFooterForPrint(fntz);\r\n        this.doPrintFrame(htmlstr);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} eleW\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.execPCECommand = /**\r\n     * @param {?} command\r\n     * @param {?} eleW\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (command, eleW, name) {\r\n        switch (command.action) {\r\n            case 'ExportGraph':\r\n                return this.exportGraph(command, eleW, name);\r\n            case 'PrintGraph':\r\n                return this.printGraph(command);\r\n            case 'CopyGraph':\r\n                return this.copyGraph(command, name);\r\n            case 'copyCohortData':\r\n                return this.copyCohort(command);\r\n        }\r\n        return EMPTY;\r\n    };\r\n    /**\r\n     * @param {?} cmd\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.copyGraph = /**\r\n     * @param {?} cmd\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (cmd, name) {\r\n        var _this = this;\r\n        return new Observable((/**\r\n         * @param {?} observer\r\n         * @return {?}\r\n         */\r\n        function (observer) {\r\n            if (name === 'copy') {\r\n                /** @type {?} */\r\n                var headerData = _this.jsonfyPlanCardHeaderData(cmd.header);\r\n                /** @type {?} */\r\n                var copyString = _this.convertArrayToString(headerData, true);\r\n                copyString += 'Milestones\\t\\r\\n\\r\\n';\r\n                headerData = _this.jsonfyPlanCardHeaderData(cmd.metaData.milestone);\r\n                copyString += _this.convertArrayToString(headerData, true);\r\n                copyString += 'Chart Data:\\t\\r\\n\\r\\n';\r\n                copyString += _this.convertArrayToString(cmd.metaData.curve);\r\n                copyString += _this.appendFooter(copyString);\r\n                _this.setTextToCopy(copyString);\r\n                cmd.copyString = copyString;\r\n                observer.next(cmd);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} cmd\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.copyCohort = /**\r\n     * @param {?} cmd\r\n     * @return {?}\r\n     */\r\n    function (cmd) {\r\n        var _this = this;\r\n        return new Observable((/**\r\n         * @param {?} observer\r\n         * @return {?}\r\n         */\r\n        function (observer) {\r\n            /** @type {?} */\r\n            var headerData = _this.jsonfyPlanCardHeaderData(cmd.header);\r\n            /** @type {?} */\r\n            var copyString = _this.convertArrayToString(headerData, true);\r\n            if (cmd.metaData.cohortData.length > 0) {\r\n                copyString += 'Cohort\\t\\r\\n\\r\\n';\r\n                copyString += _this.convertArrayToString(cmd.metaData.cohortData);\r\n            }\r\n            if (cmd.metaData.dependencyData.length > 0) {\r\n                copyString += 'Dependency\\t\\r\\n\\r\\n';\r\n                copyString += _this.convertArrayToString(cmd.metaData.dependencyData);\r\n            }\r\n            copyString += _this.appendFooter(copyString);\r\n            _this.setTextToCopy(copyString);\r\n            observer.next(cmd);\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} cmd\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.printGraph = /**\r\n     * @param {?} cmd\r\n     * @return {?}\r\n     */\r\n    function (cmd) {\r\n        var _this = this;\r\n        return new Observable((/**\r\n         * @param {?} observer\r\n         * @return {?}\r\n         */\r\n        function (observer) {\r\n            html2canvas(cmd.domElement).then((/**\r\n             * @param {?} canvas\r\n             * @return {?}\r\n             */\r\n            function (canvas) {\r\n                /** @type {?} */\r\n                var dataHtml = '<img src=\"' + canvas.toDataURL() + '\">';\r\n                /** @type {?} */\r\n                var headerStr = _this.getHeaderAsHtmlStr(cmd.header);\r\n                /** @type {?} */\r\n                var fntz = '10px';\r\n                /** @type {?} */\r\n                var htmlstr = headerStr + dataHtml + _this.getPlanCardFooterForPrint(fntz);\r\n                _this.doPrintFrame(htmlstr);\r\n                observer.next(cmd);\r\n            }));\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} cmd\r\n     * @param {?} eleW\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.exportGraph = /**\r\n     * @param {?} cmd\r\n     * @param {?} eleW\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (cmd, eleW, name) {\r\n        var _this = this;\r\n        return new Observable((/**\r\n         * @param {?} observer\r\n         * @return {?}\r\n         */\r\n        function (observer) {\r\n            html2canvas(cmd.domElement).then((/**\r\n             * @param {?} canvas\r\n             * @return {?}\r\n             */\r\n            function (canvas) {\r\n                /** @type {?} */\r\n                var fntz = '10px';\r\n                /** @type {?} */\r\n                var imgsrc = _this.getHeaderAsHtmlStr(cmd.header);\r\n                /** @type {?} */\r\n                var windowContent = '<div >';\r\n                windowContent += imgsrc;\r\n                windowContent += '<div><img src=\"' + canvas.toDataURL() + '\"></div>';\r\n                windowContent += _this.getPlanCardFooterForPrint(fntz);\r\n                windowContent += '</div>';\r\n                /** @type {?} */\r\n                var tmpDiv = document.createElement('div');\r\n                tmpDiv.setAttribute('id', 'dummyexportDiv');\r\n                tmpDiv.innerHTML = windowContent;\r\n                // style the div so that html2canvas can find it...\r\n                console.log('html2canvas', windowContent);\r\n                tmpDiv.style.position = 'absolute';\r\n                tmpDiv.style.left = '0px';\r\n                tmpDiv.style.top = '0px';\r\n                tmpDiv.style.zIndex = '-1';\r\n                tmpDiv.style.backgroundColor = 'white';\r\n                tmpDiv.style.padding = '45px';\r\n                document.body.appendChild(tmpDiv);\r\n                html2canvas(tmpDiv).then((/**\r\n                 * @param {?} cnvs\r\n                 * @return {?}\r\n                 */\r\n                function (cnvs) {\r\n                    console.log(canvas.toDataURL());\r\n                    _this.downloadCanvas(cnvs, 'png', name, _this.save);\r\n                    observer.next(cmd);\r\n                }));\r\n            }));\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} canvas\r\n     * @param {?} format\r\n     * @param {?} name\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.downloadCanvas = /**\r\n     * @param {?} canvas\r\n     * @param {?} format\r\n     * @param {?} name\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (canvas, format, name, callback) {\r\n        canvas.toBlob((/**\r\n         * @param {?} blob\r\n         * @return {?}\r\n         */\r\n        function (blob) {\r\n            /** @type {?} */\r\n            var filesize = Math.round(blob[length] / 1024) + ' KB';\r\n            if (callback) {\r\n                callback(blob, filesize, name);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} dataBlob\r\n     * @param {?} filesize\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.save = /**\r\n     * @param {?} dataBlob\r\n     * @param {?} filesize\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (dataBlob, filesize, name) {\r\n        saveAs(dataBlob, name + '.png'); // FileSaver.js function\r\n        // FileSaver.js function\r\n        /** @type {?} */\r\n        var ref = document.getElementById('dummyexportDiv');\r\n        ref.parentNode.removeChild(ref);\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.createDataTableForPrint = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var tempstring = '<div style=\"margin-top:20px;\"><table>';\r\n        tempstring += this.createHeaderForPrint(data[0]);\r\n        tempstring += '<tbody>';\r\n        for (var j = 0; j < data.length; j++) {\r\n            tempstring += '<tr>';\r\n            for (var key in data[j]) {\r\n                if (data[j].hasOwnProperty(key)) {\r\n                    tempstring += '<td>' + data[j][key] + '</td>';\r\n                }\r\n            }\r\n            tempstring += '</tr>';\r\n        }\r\n        tempstring += '</tbody></table></div>';\r\n        return tempstring;\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.createHeaderForPrint = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var str = '<thead><tr>';\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                str += '<th>' + key + '</th>';\r\n            }\r\n        }\r\n        str += '</tr></thead>';\r\n        return str;\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.getHeaderAsHtmlStr = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var str = '<div class=\"header\" style=\"font: 11pt sans-serif;color:\"#000\" font-size:${fntz}\">' +\r\n            '<table>';\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                str +=\r\n                    '<tr>' +\r\n                        '  <td> ' +\r\n                        key +\r\n                        '</td>' +\r\n                        '<td>' +\r\n                        data[key] +\r\n                        '</td>' +\r\n                        '</tr>';\r\n            }\r\n        }\r\n        str += '</table></div>';\r\n        return str;\r\n    };\r\n    /**\r\n     * @param {?} fntz\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.getPlanCardHeaderForPrint = /**\r\n     * @param {?} fntz\r\n     * @return {?}\r\n     */\r\n    function (fntz) {\r\n        /** @type {?} */\r\n        var headerData = this.header;\r\n        console.log(headerData);\r\n        /** @type {?} */\r\n        var headerStr = '';\r\n        for (var key in headerData) {\r\n            if (headerData.hasOwnProperty(key)) {\r\n                headerStr +=\r\n                    '<tr>' + (\"<td>\" + key + \"</td>\") + (\" <td>\" + headerData[key] + \"</td>\") + '</tr>';\r\n            }\r\n        }\r\n        return ('<div class=\"header\" style=\"font: 11pt sans-serif; font-size:${fntz}\">' +\r\n            '<table>' +\r\n            headerStr +\r\n            '</table>' +\r\n            '</div>');\r\n    };\r\n    /**\r\n     * @param {?} fntz\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.getPlanCardFooterForPrint = /**\r\n     * @param {?} fntz\r\n     * @return {?}\r\n     */\r\n    function (fntz) {\r\n        /** @type {?} */\r\n        var footerData = this.getFooter();\r\n        footerData = footerData.replace('<Organization Name>', '&lt;Organization Name&gt;');\r\n        return \"<div style=\\\"text-align:center; font-size: 14px\\\"><p><strong> \" + footerData + \" </strong></p></div>\";\r\n    };\r\n    // doPrintFrame(htmlstr) {\r\n    //    htmlstr = htmlstr + this.appendStyleForTable();\r\n    //   const frame1 = document.createElement('iframe');\r\n    //   frame1.name = 'frame1';\r\n    //   frame1.style.position = 'absolute';\r\n    //   frame1.style.top = '-1000000px';\r\n    //   document.body.appendChild(frame1);\r\n    //   const frameDoc = frame1.contentWindow ? frame1.contentWindow :\r\n    //     frame1.contentDocument['document'] ? frame1.contentDocument['document'] : frame1.contentDocument;\r\n    //   frameDoc.document.open();\r\n    //   frameDoc.document.write(htmlstr);\r\n    //   frameDoc.document.close();\r\n    //   if (frameDoc.queryCommandSupported && frameDoc.queryCommandSupported('print')) {\r\n    //     frameDoc.execCommand('print', false, null);\r\n    //   } else {\r\n    //     // window.frames['frame1'].focus();\r\n    //     // window.frames['frame1'].print();\r\n    //     frame1.contentWindow.document.write(htmlstr);\r\n    //     frame1.contentWindow.print();\r\n    //   }\r\n    // }\r\n    // doPrintFrame(htmlstr) {\r\n    //    htmlstr = htmlstr + this.appendStyleForTable();\r\n    //   const frame1 = document.createElement('iframe');\r\n    //   frame1.name = 'frame1';\r\n    //   frame1.style.position = 'absolute';\r\n    //   frame1.style.top = '-1000000px';\r\n    //   document.body.appendChild(frame1);\r\n    //   const frameDoc = frame1.contentWindow ? frame1.contentWindow :\r\n    //     frame1.contentDocument['document'] ? frame1.contentDocument['document'] : frame1.contentDocument;\r\n    //   frameDoc.document.open();\r\n    //   frameDoc.document.write(htmlstr);\r\n    //   frameDoc.document.close();\r\n    //   if (frameDoc.queryCommandSupported && frameDoc.queryCommandSupported('print')) {\r\n    //     frameDoc.execCommand('print', false, null);\r\n    //   } else {\r\n    //     // window.frames['frame1'].focus();\r\n    //     // window.frames['frame1'].print();\r\n    //     frame1.contentWindow.document.write(htmlstr);\r\n    //     frame1.contentWindow.print();\r\n    //   }\r\n    // }\r\n    /**\r\n     * @param {?} htmlstr\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.doPrintFrame = \r\n    // doPrintFrame(htmlstr) {\r\n    //    htmlstr = htmlstr + this.appendStyleForTable();\r\n    //   const frame1 = document.createElement('iframe');\r\n    //   frame1.name = 'frame1';\r\n    //   frame1.style.position = 'absolute';\r\n    //   frame1.style.top = '-1000000px';\r\n    //   document.body.appendChild(frame1);\r\n    //   const frameDoc = frame1.contentWindow ? frame1.contentWindow :\r\n    //     frame1.contentDocument['document'] ? frame1.contentDocument['document'] : frame1.contentDocument;\r\n    //   frameDoc.document.open();\r\n    //   frameDoc.document.write(htmlstr);\r\n    //   frameDoc.document.close();\r\n    //   if (frameDoc.queryCommandSupported && frameDoc.queryCommandSupported('print')) {\r\n    //     frameDoc.execCommand('print', false, null);\r\n    //   } else {\r\n    //     // window.frames['frame1'].focus();\r\n    //     // window.frames['frame1'].print();\r\n    //     frame1.contentWindow.document.write(htmlstr);\r\n    //     frame1.contentWindow.print();\r\n    //   }\r\n    // }\r\n    /**\r\n     * @param {?} htmlstr\r\n     * @return {?}\r\n     */\r\n    function (htmlstr) {\r\n        /** @type {?} */\r\n        var ua = window.navigator.userAgent;\r\n        /** @type {?} */\r\n        var msie = ua.indexOf('MSIE');\r\n        if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\r\n            htmlstr = htmlstr + this.appendStyleForTable(true);\r\n        }\r\n        else {\r\n            htmlstr = htmlstr + this.appendStyleForTable(false);\r\n        }\r\n        htmlstr = htmlstr + this.appendStyleForTable();\r\n        /** @type {?} */\r\n        var frame1 = document.createElement('iframe');\r\n        frame1.name = 'frame1';\r\n        frame1.style.position = 'absolute';\r\n        frame1.style.top = '-1000000px';\r\n        document.body.appendChild(frame1);\r\n        /** @type {?} */\r\n        var frameDoc = frame1.contentWindow\r\n            ? frame1.contentWindow\r\n            : frame1.contentDocument['document']\r\n                ? frame1.contentDocument['document']\r\n                : frame1.contentDocument;\r\n        frameDoc.document.open();\r\n        frameDoc.document.write(htmlstr);\r\n        frameDoc.document.close();\r\n        window.setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\r\n                /** @type {?} */\r\n                var result = frame1.contentWindow.document.execCommand('print', false, null);\r\n                if (!result) {\r\n                    window.frames['frame1'].contentWindow.print();\r\n                }\r\n            }\r\n            else {\r\n                frame1.contentWindow.print();\r\n            }\r\n        }), 1000);\r\n    };\r\n    /**\r\n     * @param {?=} type\r\n     * @return {?}\r\n     */\r\n    PCEService.prototype.appendStyleForTable = /**\r\n     * @param {?=} type\r\n     * @return {?}\r\n     */\r\n    function (type) {\r\n        // tslint:disable-next-line:max-line-length\r\n        // return '<style> @media all { table,th,td{ border: 1px solid black; border-collapse: collapse  }  table{ page-break-after: auto; width:100%; margin-top:10px;font-size:0.3vw;counter-reset: page 1;}tr {page-break-inside: avoid;page-break-after: always}td:not(:first-child){padding:1px; white-space: nowrap; }table { page-break-inside: auto}tr { page-break-inside: auto;page-break-after: auto}thead {display: table-header-group}tfoot {display: table-footer-group}@media all and (-webkit-min-device-pixel-ratio:0) {<style> table,th,td{ border: 1px solid black; border-collapse: collapse  }  table{ page-break-after: auto; width:100%; margin-top:10px;font-size:0.8vw;} tr{page-break-inside: avoid;page-break-after: auto} td:not(:first-child){padding:1px; white-space: nowrap; } table{ page-break-inside: auto} tr{ page-break-inside: auto;page-break-after: auto} thead{display: table-header-group} tfoot{display: table-footer-group </style>';\r\n        if (type) {\r\n            // tslint:disable-next-line:max-line-length\r\n            return '<style> @page {margin:1.5cm 0.4cm;} @media all { table,th,td{ border: 1px solid black; border-collapse: collapse  } .header td{width:50%;}table{ page-break-after: auto; width:100%; margin-top:10px;font-size:0.386vw;counter-reset: page 1;}tr {page-break-inside: avoid;page-break-after: always}td {padding:1px; white-space:wrap; max-width:10px; width:10px;word-wrap:break-word; }td:first-child{max-width:30px; width:30px;} th{ width:10px; word-wrap: break-word;} table { page-break-inside: auto}tr { page-break-inside: auto;page-break-after: auto}thead {display: table-header-group}tfoot {display: table-footer-group} } </style>';\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:max-line-length\r\n            return '<style>@media all and (-webkit-min-device-pixel-ratio:0) { table,th,td{ border: 1px solid black; border-collapse: collapse  } .header td{width:50%;} table{ page-break-after: auto; width:100%; margin-top:10px;font-size:0.8vw;} tr{page-break-inside: avoid;page-break-after: auto} td:not(:first-child){padding:1px; white-space: nowrap; } table{ page-break-inside: auto} tr{ page-break-inside: auto;page-break-after: auto} thead{display: table-header-group} tfoot{display: table-footer-group} </style>';\r\n        }\r\n    };\r\n    PCEService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    PCEService.ctorParameters = function () { return [\r\n        { type: DatePipe },\r\n        { type: LocaleAppResourcesService }\r\n    ]; };\r\n    /** @nocollapse */ PCEService.ngInjectableDef = ɵɵdefineInjectable({ factory: function PCEService_Factory() { return new PCEService(ɵɵinject(DatePipe), ɵɵinject(LocaleAppResourcesService)); }, token: PCEService, providedIn: \"root\" });\r\n    return PCEService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PCEService.prototype.exportObj;\r\n    /** @type {?} */\r\n    PCEService.prototype.header;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PCEService.prototype.datePipe;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PCEService.prototype.localAppResource;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/export/export.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ExportComponent = /** @class */ (function () {\r\n    function ExportComponent(pceService) {\r\n        this.pceService = pceService;\r\n        this.headerCells = {\r\n            background: '#ffffff',\r\n            color: '#ffffff'\r\n        };\r\n        this.cellAlignment = {\r\n            textAlign: 'left'\r\n        };\r\n        this.count = 0;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ExportComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        this.count = this.count + 1;\r\n        if (this.startExport && this.count > 1) {\r\n            if (changes.exportToExcelObj.currentValue.data) {\r\n                this.excelexportdata.data = changes.exportToExcelObj.currentValue.data;\r\n            }\r\n            this.pceService.exportData([this.excelexportheader, this.excelexportdata, this.excelexportfooter]);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExportComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.startExport) {\r\n            this.pceService.exportData([this.excelexportheader, this.excelexportdata, this.excelexportfooter]);\r\n        }\r\n    };\r\n    ExportComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line:component-selector\r\n                    selector: 'ctos-export',\r\n                    template: \"\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ExportComponent.ctorParameters = function () { return [\r\n        { type: PCEService }\r\n    ]; };\r\n    ExportComponent.propDecorators = {\r\n        startExport: [{ type: Input }],\r\n        exportToExcelObj: [{ type: Input }],\r\n        excelexportdata: [{ type: ViewChild, args: ['excelexportdata', { static: true },] }],\r\n        excelexportheader: [{ type: ViewChild, args: ['excelexportheader', { static: true },] }],\r\n        excelexportfooter: [{ type: ViewChild, args: ['excelexportfooter', { static: true },] }]\r\n    };\r\n    return ExportComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    ExportComponent.prototype.startExport;\r\n    /** @type {?} */\r\n    ExportComponent.prototype.exportToExcelObj;\r\n    /** @type {?} */\r\n    ExportComponent.prototype.headerCells;\r\n    /** @type {?} */\r\n    ExportComponent.prototype.cellAlignment;\r\n    /** @type {?} */\r\n    ExportComponent.prototype.exportToExcelObj1;\r\n    /** @type {?} */\r\n    ExportComponent.prototype.excelexportdata;\r\n    /** @type {?} */\r\n    ExportComponent.prototype.excelexportheader;\r\n    /** @type {?} */\r\n    ExportComponent.prototype.excelexportfooter;\r\n    /** @type {?} */\r\n    ExportComponent.prototype.count;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ExportComponent.prototype.pceService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/info/info.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar InfoComponent = /** @class */ (function () {\r\n    function InfoComponent(route) {\r\n        this.route = route;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InfoComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.message = this.route.snapshot.data['info-message'];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InfoComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.message = null;\r\n    };\r\n    InfoComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-info',\r\n                    template: \"<h5>{{message}}</h5>\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    InfoComponent.ctorParameters = function () { return [\r\n        { type: ActivatedRoute }\r\n    ]; };\r\n    return InfoComponent;\r\n}());\r\nif (false) {\r\n    /**\r\n     * Message  of info component\r\n     * @type {?}\r\n     */\r\n    InfoComponent.prototype.message;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    InfoComponent.prototype.route;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/appWindow.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AppWindow = /** @class */ (function () {\r\n    function AppWindow() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AppWindow.getWindow = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return window;\r\n    };\r\n    return AppWindow;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/help-constants.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/*\r\n    HELP_MAP maps the helpId to its corresponding view path in online-help.\r\n    You need to connect with tech pubs team for getting the helpId and its path.\r\n */\r\n/** @type {?} */\r\nvar HELP_MAP = {\r\n    8007: 'New_Plans_Tab/Components_of_the_New_Plans_Tab.htm',\r\n    8008: 'New_Plans_Tab/About_the_Plan_Properties_View.htm',\r\n    8009: 'New_Plans_Tab/About_the_Plan_Design_View.htm',\r\n    8010: 'New_Plans_Tab/About_the_Countries_View.htm',\r\n    8011: 'New_Plans_Tab/About_the_Rate_Adjustments_View.htm',\r\n    8012: 'New_Plans_Tab/About_the_Reports_View.htm',\r\n    8014: 'New_Plans_Tab/Defining_Percent_Site_Initiation_Schedule.htm',\r\n    8015: 'New_Plans_Tab/Defining_Custom_Site_Initiation_Schedule.htm'\r\n};\r\n/*\r\n    HELP_ID_CONSTANTS maps the helpId constant to its corresponding helpId\r\n */\r\n/** @type {?} */\r\nvar HELP_ID_CONSTANTS = {\r\n    NEW_PLANS_TAB_VIEW: 8007,\r\n    PLAN_PROPERTIES_VIEW: 8008,\r\n    PLAN_DESIGN_VIEW: 8009,\r\n    COUNTRIES_VIEW: 8010,\r\n    RATE_ADJUSTMENTS_VIEW: 8011,\r\n    REPORTS_VIEW: 8012,\r\n    PERCENT_SI_VIEW: 8014,\r\n    CUSTOM_SI_VIEW: 8015,\r\n    STUDY_ENROLLMENT_OVERVIEW_VIEW: 8016,\r\n    STUDY_MILESTONES_VIEW: 8017,\r\n    STUDY_REPORTS_VIEW: 8018,\r\n    SITE_ENROLLMENT_DETAILS: 7000,\r\n    SITE_SCORECARD: 7002,\r\n    SITE_DATA_MANAGMENT: 7003,\r\n    // TODO : Country team will change the later after discussing with Tejas\r\n    COUNTRY_PERFORMANCE_VIEW: 6000,\r\n    COHORT_PERFORMANCE_VIEW: 6000,\r\n    COHORT_PERFORMANCE_CHART: 6000\r\n};\r\n/** @type {?} */\r\nvar DEFAULT_HELP_ID = 8007;\r\n/** @type {?} */\r\nvar HELP_INDEX_PAGE_PATH = 'online-help/index.htm#t=';\r\n/** @type {?} */\r\nvar HOSTED_HELP_COMMAND = 'HostedHelp';\r\n/** @type {?} */\r\nvar HOSTED_HELP_URL = window.location.origin + \"/dv/StudyOptimizer/hostedhelp\";\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/help.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar HelpService = /** @class */ (function () {\r\n    function HelpService(route, payloadCommandService, baseConnectionService) {\r\n        this.route = route;\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HelpService.prototype.openHelp = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var windowObj = AppWindow.getWindow();\r\n        // let url =\r\n        //     windowObj.location.protocol +\r\n        //     '//' +\r\n        //     windowObj.location.hostname +\r\n        //     ':' +\r\n        //     windowObj.location.port +\r\n        //     '/';\r\n        // if (BASE_HREF) {\r\n        //     url += BASE_HREF + '/';\r\n        // }\r\n        // url += HELP_INDEX_PAGE_PATH;\r\n        /** @type {?} */\r\n        var activeRoute = this.route;\r\n        if (activeRoute) {\r\n            while (activeRoute.firstChild) {\r\n                activeRoute = activeRoute.firstChild;\r\n            }\r\n            /** @type {?} */\r\n            var activeRouteHelpId = ((/** @type {?} */ (activeRoute.snapshot)) && (/** @type {?} */ (activeRoute.snapshot.data))\r\n                && ((/** @type {?} */ (activeRoute.snapshot.data))).helpId) ? ((/** @type {?} */ (activeRoute.snapshot.data))).helpId : DEFAULT_HELP_ID;\r\n            // url += HELP_MAP[activeRouteHelpId];\r\n            // windowObj.open(url, '_blank', 'width=1100,height=500');\r\n            /** @type {?} */\r\n            var params = {\r\n                pagecontext: activeRouteHelpId\r\n            };\r\n            /** @type {?} */\r\n            var moduleInfo = {\r\n                moduleName: 'NEWPLANTAB'\r\n            };\r\n            /** @type {?} */\r\n            var hostedHelpPayload = this.payloadCommandService.getCommandDetails(HOSTED_HELP_COMMAND, params, null, null, moduleInfo);\r\n            this.baseConnectionService.sendRequest(hostedHelpPayload, { url: HOSTED_HELP_URL }).pipe(map((/**\r\n             * @param {?} resp\r\n             * @return {?}\r\n             */\r\n            function (resp) {\r\n                if (resp.result === COMMON.RESULT_OK) {\r\n                    return resp.helpUrl;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }))).subscribe((/**\r\n             * @param {?} helpUrl\r\n             * @return {?}\r\n             */\r\n            function (helpUrl) {\r\n                if (helpUrl) {\r\n                    windowObj.open(helpUrl, '_blank', 'width=1100,height=500');\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    HelpService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    HelpService.ctorParameters = function () { return [\r\n        { type: ActivatedRoute },\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService }\r\n    ]; };\r\n    /** @nocollapse */ HelpService.ngInjectableDef = ɵɵdefineInjectable({ factory: function HelpService_Factory() { return new HelpService(ɵɵinject(ActivatedRoute), ɵɵinject(PayloadCommandService), ɵɵinject(BaseConnectionService)); }, token: HelpService, providedIn: \"root\" });\r\n    return HelpService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    HelpService.prototype.route;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    HelpService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    HelpService.prototype.baseConnectionService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/user-profile.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UserProfile = /** @class */ (function () {\r\n    function UserProfile($name, $items, $nameSeparator) {\r\n        this.name = $name;\r\n        this.items = $items;\r\n        this.nameSeparator = $nameSeparator;\r\n    }\r\n    Object.defineProperty(UserProfile.prototype, \"$name\", {\r\n        /**\r\n         * Getter $name\r\n         * @return string\r\n         */\r\n        get: /**\r\n         * Getter $name\r\n         * @return {?} string\r\n         */\r\n        function () {\r\n            return this.name;\r\n        },\r\n        /**\r\n         * Setter $name\r\n         * @param string value\r\n         */\r\n        set: /**\r\n         * Setter $name\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.name = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfile.prototype, \"$items\", {\r\n        /**\r\n         * Getter $items\r\n         * @return ListItem[]\r\n         */\r\n        get: /**\r\n         * Getter $items\r\n         * @return {?} ListItem[]\r\n         */\r\n        function () {\r\n            return this.items;\r\n        },\r\n        /**\r\n         * Setter $items\r\n         * @param ListItem[] value\r\n         */\r\n        set: /**\r\n         * Setter $items\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.items = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfile.prototype, \"$nameSeparator\", {\r\n        /**\r\n         * Getter $nameSeparator\r\n         * @return string\r\n         */\r\n        get: /**\r\n         * Getter $nameSeparator\r\n         * @return {?} string\r\n         */\r\n        function () {\r\n            return this.nameSeparator;\r\n        },\r\n        /**\r\n         * Setter $nameSeparator\r\n         * @param string value\r\n         */\r\n        set: /**\r\n         * Setter $nameSeparator\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.nameSeparator = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UserProfile;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserProfile.prototype.name;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserProfile.prototype.items;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserProfile.prototype.nameSeparator;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/error-terms-store.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ErrorTermsStoreService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of error terms store service.\r\n     */\r\n    function ErrorTermsStoreService() {\r\n        this.errorTerminologies = null;\r\n        this.errorCodeBase = {};\r\n    }\r\n    /**\r\n     * Creates error code base\r\n     * @param errorTerminologies\r\n     */\r\n    /**\r\n     * Creates error code base\r\n     * @param {?} errorTerminologies\r\n     * @return {?}\r\n     */\r\n    ErrorTermsStoreService.prototype.createErrorCodeBase = /**\r\n     * Creates error code base\r\n     * @param {?} errorTerminologies\r\n     * @return {?}\r\n     */\r\n    function (errorTerminologies) {\r\n        /** @type {?} */\r\n        var that = this;\r\n        that.errorTerminologies = errorTerminologies;\r\n        /** @type {?} */\r\n        var iLen = that.errorTerminologies.term.length;\r\n        for (var i = 0; i < iLen; i++) {\r\n            that.errorCodeBase[that.errorTerminologies.term[i].name] = that.errorTerminologies.term[i].value;\r\n        }\r\n    };\r\n    /**\r\n     * Gets error message\r\n     * @param name\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets error message\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    ErrorTermsStoreService.prototype.getErrorMessage = /**\r\n     * Gets error message\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var that = this;\r\n        if (!isNaN(name)) {\r\n            return that.errorCodeBase['E' + name];\r\n        }\r\n        else {\r\n            return that.errorCodeBase[name];\r\n        }\r\n    };\r\n    /**\r\n   * Method to extract the error messages from error store and concat all messages into one\r\n   * @param errors\r\n   * @returns consolidated error message\r\n   * @memberof ErrorTermsStoreService\r\n   */\r\n    /**\r\n     * Method to extract the error messages from error store and concat all messages into one\r\n     * \\@memberof ErrorTermsStoreService\r\n     * @param {?} errors\r\n     * @param {?=} fsiDate\r\n     * @param {?=} fssDate\r\n     * @return {?} consolidated error message\r\n     */\r\n    ErrorTermsStoreService.prototype.consolidateValidationErrors = /**\r\n     * Method to extract the error messages from error store and concat all messages into one\r\n     * \\@memberof ErrorTermsStoreService\r\n     * @param {?} errors\r\n     * @param {?=} fsiDate\r\n     * @param {?=} fssDate\r\n     * @return {?} consolidated error message\r\n     */\r\n    function (errors, fsiDate, fssDate) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var errorMessage = '';\r\n        if (errors) {\r\n            // tslint:disable-next-line:prefer-const\r\n            /** @type {?} */\r\n            var errorMessages_1 = [];\r\n            Object.keys(errors).forEach((/**\r\n             * @param {?} errorCode\r\n             * @return {?}\r\n             */\r\n            function (errorCode) {\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                /** @type {?} */\r\n                var errorMessage = _this.getErrorMessage(errorCode);\r\n                if (!errorMessage) {\r\n                    if (errorCode === CUSTOM_ERROR_CODES.MAX.error) {\r\n                        errorMessage =\r\n                            _this.getErrorMessage(CUSTOM_ERROR_CODES.MAX.message) +\r\n                                ' ' +\r\n                                errors.max.max + '.';\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.MIN.error) {\r\n                        errorMessage =\r\n                            _this.getErrorMessage(CUSTOM_ERROR_CODES.MIN.message) +\r\n                                ' ' +\r\n                                errors.min.min + '.';\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.MAT_DATEPICKER_PARSE.error) {\r\n                        errorMessage = _this.getErrorMessage(CUSTOM_ERROR_CODES.MAT_DATEPICKER_PARSE.message);\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.DAYS_TO_SI_AFTER_ARTB.error) {\r\n                        errorMessage = _this.getErrorMessage(CUSTOM_ERROR_CODES.DAYS_TO_SI_AFTER_ARTB.message);\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.FSI_REQUIRED_FOR_FSS.error) {\r\n                        errorMessage = _this.getErrorMessage(CUSTOM_ERROR_CODES.FSI_REQUIRED_FOR_FSS.message);\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.REQUIRED.error) {\r\n                        errorMessage = _this.getErrorMessage(CUSTOM_ERROR_CODES.REQUIRED.message);\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.ARTB_LT_EQ_FSI.error) {\r\n                        errorMessage = StringUtil.interpolate(_this.getErrorMessage(CUSTOM_ERROR_CODES.ARTB_LT_EQ_FSI.message), [AppUtil.formatDateStrict(errors.ARTB_LT_EQ_FSI.ARTB_LT_EQ_FSI)]);\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.ARTB__LT_EQ_FSS.error) {\r\n                        errorMessage = StringUtil.interpolate(_this.getErrorMessage(CUSTOM_ERROR_CODES.ARTB__LT_EQ_FSS.message), [AppUtil.formatDateStrict(errors.ARTB__LT_EQ_FSS.ARTB__LT_EQ_FSS)]);\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.FSI_GT_TLSS.error) {\r\n                        errorMessage = StringUtil.interpolate(_this.getErrorMessage(CUSTOM_ERROR_CODES.FSI_GT_TLSS.message), [AppUtil.formatDateStrict(errors.FSI_GT_TLSS.FSI_GT_TLSS)]);\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.FSILT_ERROR.error) {\r\n                        errorMessage = StringUtil.interpolate(_this.getErrorMessage(CUSTOM_ERROR_CODES.FSILT_ERROR.message), [AppUtil.formatDateStrict(errors.FSILT_ERROR.FSILT_ERROR)]);\r\n                    }\r\n                    else if (errorCode === CUSTOM_ERROR_CODES.DEPENDENCY_ERROR.error) {\r\n                        errorMessage = StringUtil.interpolate(_this.getErrorMessage(CUSTOM_ERROR_CODES.DEPENDENCY_ERROR.message), [AppUtil.formatDateStrict(errors.DEPENDENCY_ERROR.DEPENDENCY_ERROR)]);\r\n                    }\r\n                }\r\n                errorMessages_1.push(errorMessage);\r\n            }));\r\n            errorMessage = errorMessages_1.join('\\n');\r\n        }\r\n        return errorMessage;\r\n    };\r\n    ErrorTermsStoreService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ErrorTermsStoreService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ ErrorTermsStoreService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ErrorTermsStoreService_Factory() { return new ErrorTermsStoreService(); }, token: ErrorTermsStoreService, providedIn: \"root\" });\r\n    return ErrorTermsStoreService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    ErrorTermsStoreService.prototype.errorTerminologies;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ErrorTermsStoreService.prototype.errorCodeBase;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/logout.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LogoutService = /** @class */ (function () {\r\n    function LogoutService(payloadCommandService, baseConnectionService) {\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LogoutService.prototype.logout = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // const that = this;\r\n        // const moduleInfo = {\r\n        //     moduleName: 'NEWPLANTAB'\r\n        // };\r\n        // const logoutPayload = that.payloadCommandService.getCommandDetails(LOGOUT_PARAMS.commandName, null, null, null, moduleInfo);\r\n        // return that.baseConnectionService.sendRequest(logoutPayload).pipe(map((resp) => {\r\n        //     if (resp.result === COMMON.RESULT_OK) {\r\n        //         sessionStorage.clear();\r\n        //     }\r\n        //     return resp;\r\n        // }));\r\n        /** @type {?} */\r\n        var payload = this.payloadCommandService.getApiRequest(LOGOUT_PARAMS.commandName, null, null, null);\r\n        /** @type {?} */\r\n        var actionParam = {};\r\n        actionParam.url = APIEndPoints.LOGOUT; // compulsory\r\n        actionParam.isSSOEndPoint = true;\r\n        actionParam.httpMethod = HttpVerbs.get;\r\n        actionParam.prelogin = false; // passing withCredential true\r\n        return this.baseConnectionService.send(payload, actionParam).pipe(map((/**\r\n         * @param {?} resp\r\n         * @return {?}\r\n         */\r\n        function (resp) {\r\n            if (resp.result === COMMON.RESULT_OK) {\r\n                sessionStorage.clear();\r\n            }\r\n            return resp;\r\n        })));\r\n    };\r\n    LogoutService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    LogoutService.ctorParameters = function () { return [\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService }\r\n    ]; };\r\n    /** @nocollapse */ LogoutService.ngInjectableDef = ɵɵdefineInjectable({ factory: function LogoutService_Factory() { return new LogoutService(ɵɵinject(PayloadCommandService), ɵɵinject(BaseConnectionService)); }, token: LogoutService, providedIn: \"root\" });\r\n    return LogoutService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    LogoutService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    LogoutService.prototype.baseConnectionService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/reset-password.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ResetPasswordService = /** @class */ (function () {\r\n    function ResetPasswordService(payloadCommandService, baseConnectionService) {\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n    }\r\n    /**\r\n     * @param {?=} params\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    ResetPasswordService.prototype.changeCurrUserPassword = /**\r\n     * @param {?=} params\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (params, actionParam) {\r\n        /** @type {?} */\r\n        var moduleInfo = {\r\n            moduleName: 'NEWPLANTAB'\r\n        };\r\n        /** @type {?} */\r\n        var passwordPayLoad = this.payloadCommandService.getCommandDetails('changeCurrUserPassword', params, null, null, moduleInfo);\r\n        return this.baseConnectionService.sendRequest(passwordPayLoad).pipe(map((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) { return data; })));\r\n        // return of([]);\r\n    };\r\n    ResetPasswordService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ResetPasswordService.ctorParameters = function () { return [\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService }\r\n    ]; };\r\n    /** @nocollapse */ ResetPasswordService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ResetPasswordService_Factory() { return new ResetPasswordService(ɵɵinject(PayloadCommandService), ɵɵinject(BaseConnectionService)); }, token: ResetPasswordService, providedIn: \"root\" });\r\n    return ResetPasswordService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ResetPasswordService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ResetPasswordService.prototype.baseConnectionService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/password/password.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PasswordComponent = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of password component.\r\n     * @param dialogRef\r\n     * @param data\r\n     * @param resetPasswordService\r\n     * @param errorTermsStoreService\r\n     */\r\n    function PasswordComponent(dialogRef, data, resetPasswordService, errorTermsStoreService) {\r\n        this.dialogRef = dialogRef;\r\n        this.data = data;\r\n        this.resetPasswordService = resetPasswordService;\r\n        this.errorTermsStoreService = errorTermsStoreService;\r\n        // passWordPolicyList: Array<string> = ['LENGHTHRULE', 'MIXCHARRULE'];\r\n        // nonEmptyField: string;\r\n        // passwordMisMatchMessage: string;\r\n        this.validationMessage = '';\r\n        // rules: string[];\r\n        this.showSuccessMessage = false;\r\n        this.showError = false;\r\n        if (!data.okLabel) {\r\n            data.okLabel = 'Ok';\r\n        }\r\n        if (!data.cancelLabel) {\r\n            data.cancelLabel = 'Cancel';\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PasswordComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.getPasswordRulesList();\r\n    };\r\n    /**\r\n     * Cancels password component\r\n     * @param btnLabel\r\n     */\r\n    /**\r\n     * Cancels password component\r\n     * @param {?} btnLabel\r\n     * @return {?}\r\n     */\r\n    PasswordComponent.prototype.cancel = /**\r\n     * Cancels password component\r\n     * @param {?} btnLabel\r\n     * @return {?}\r\n     */\r\n    function (btnLabel) {\r\n        this.dialogRef.close();\r\n    };\r\n    /**\r\n     * password component\r\n     * @param btnLabel\r\n     * @param form\r\n     */\r\n    /**\r\n     * password component\r\n     * @param {?} btnLabel\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    PasswordComponent.prototype.ok = /**\r\n     * password component\r\n     * @param {?} btnLabel\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    function (btnLabel, form) {\r\n        if (form.valid) {\r\n            /** @type {?} */\r\n            var passowordInfo = {\r\n                currentPassword: form.value.currentPassword,\r\n                newPassword: form.value.newPassword\r\n            };\r\n            this.changePassword(passowordInfo);\r\n        }\r\n    };\r\n    /**\r\n     * Changes password\r\n     * @param payload\r\n     */\r\n    /**\r\n     * Changes password\r\n     * @param {?} payload\r\n     * @return {?}\r\n     */\r\n    PasswordComponent.prototype.changePassword = /**\r\n     * Changes password\r\n     * @param {?} payload\r\n     * @return {?}\r\n     */\r\n    function (payload) {\r\n        var _this = this;\r\n        this.resetPasswordService\r\n            .changeCurrUserPassword(payload)\r\n            .subscribe((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (data.result !== 'OK') {\r\n                _this.validationMessage = _this.errorTermsStoreService.getErrorMessage(data.error.errorCode);\r\n                // this.showBanner(\r\n                //   'positive',\r\n                //   'positive-snackbar',\r\n                //   'assets/images/manageplans/icon-positive.png',\r\n                //   'PasswordResetSuccessful'\r\n                // );\r\n            }\r\n            else {\r\n                _this.dialogRef.close({ data: data });\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * Hides success message\r\n     */\r\n    /**\r\n     * Hides success message\r\n     * @return {?}\r\n     */\r\n    PasswordComponent.prototype.hideSuccessMessage = /**\r\n     * Hides success message\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.showSuccessMessage = false;\r\n        this.validationMessage = '';\r\n    };\r\n    /**\r\n     * Gets password rules list\r\n     */\r\n    /**\r\n     * Gets password rules list\r\n     * @return {?}\r\n     */\r\n    PasswordComponent.prototype.getPasswordRulesList = /**\r\n     * Gets password rules list\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.data.lengthRule = this.data.lengthRule;\r\n        /** @type {?} */\r\n        var mixruleSplit = this.data.mixCharRule.split('\\n');\r\n        this.mixruleSplitHeader = mixruleSplit[0];\r\n        this.mixruleSplit = mixruleSplit.splice(1, (mixruleSplit.length - 1));\r\n    };\r\n    PasswordComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-password',\r\n                    template: \"<h1 mat-dialog-title>{{ data?.heading }}</h1>\\r\\n<div mat-dialog-content class=\\\"row password-dialog-container\\\">\\r\\n  <div class=\\\"col-6 left-side\\\">\\r\\n    <form class=\\\"form-horizontal\\\" #changePasswordForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"control-label col-4 no-padding\\\" for=\\\"currentPassword\\\">{{\\r\\n          data?.currentPassword\\r\\n        }}</label>\\r\\n        <div class=\\\"backGround col-8\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"currentPassword\\\" [(ngModel)]=\\\"currentPassword\\\"\\r\\n            #currentPasswordText=\\\"ngModel\\\" name=\\\"currentPassword\\\" (click)=\\\"hideSuccessMessage()\\\" required\\r\\n            [matTooltipClass]=\\\"'warn ctos-tooltip'\\\" [matTooltip]=\\\"data?.nonEmptyField\\\" matTooltipPosition=\\\"right\\\"\\r\\n            [matTooltipDisabled]=\\\"\\r\\n              !(currentPasswordText.touched && currentPasswordText.invalid)\\r\\n            \\\" [class.is-invalid]=\\\"\\r\\n              currentPasswordText.touched && currentPasswordText.invalid\\r\\n            \\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"control-label col-4 no-padding\\\" for=\\\"newPassword\\\">{{\\r\\n          data?.newPassword\\r\\n        }}</label>\\r\\n        <div class=\\\"backGround col-8\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"newPassword\\\" [(ngModel)]=\\\"newPassword\\\"\\r\\n            #newPasswordText=\\\"ngModel\\\" name=\\\"newPassword\\\" (input)=\\\"confirmPasswordText.control.updateValueAndValidity()\\\"\\r\\n            (click)=\\\"hideSuccessMessage()\\\" required [matTooltipClass]=\\\"'warn ctos-tooltip'\\\"\\r\\n            [matTooltip]=\\\"data?.nonEmptyField\\\" matTooltipPosition=\\\"right\\\" [matTooltipDisabled]=\\\"\\r\\n              !(newPasswordText.touched && newPasswordText.invalid)\\r\\n            \\\" [class.is-invalid]=\\\"\\r\\n              newPasswordText.touched && newPasswordText.invalid\\r\\n            \\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"control-label col-4 no-padding\\\" for=\\\"confirmPassword\\\">{{\\r\\n          data?.confirmPassword\\r\\n        }}</label>\\r\\n        <div class=\\\"backGround col-8\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" [(ngModel)]=\\\"confirmPassword\\\"\\r\\n            #confirmPasswordText=\\\"ngModel\\\" name=\\\"confirmPassword\\\" ctosConfirmEqualValidator=\\\"newPassword\\\"\\r\\n            (click)=\\\"hideSuccessMessage()\\\" required [matTooltipClass]=\\\"'warn ctos-tooltip'\\\" [matTooltip]=\\\"\\r\\n              (confirmPasswordText.touched || confirmPasswordText.dirty) &&\\r\\n              !confirmPasswordText.value\\r\\n                ? data?.nonEmptyField\\r\\n                : confirmPasswordText.errors?.notEqual &&\\r\\n                  confirmPasswordText.dirty\\r\\n                ? data?.passwordMisMatchMessage\\r\\n                : ''\\r\\n            \\\" matTooltipPosition=\\\"right\\\" [matTooltipDisabled]=\\\"\\r\\n              !(confirmPasswordText.touched && confirmPasswordText.invalid)\\r\\n            \\\" [class.is-invalid]=\\\"\\r\\n              confirmPasswordText.touched && confirmPasswordText.invalid\\r\\n            \\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <mat-error *ngIf=\\\"validationMessage\\\">{{ validationMessage }}</mat-error>\\r\\n  </div>\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div class=\\\"para\\\">\\r\\n      <span>The password must meet the following criteria:</span>\\r\\n      <ol>\\r\\n        <li>{{ data.lengthRule }}</li>\\r\\n        <li>{{ mixruleSplitHeader }}\\r\\n          <ul>\\r\\n            <li *ngFor=\\\"let point of this.mixruleSplit\\\">{{point}}</li>\\r\\n          </ul>\\r\\n        </li>\\r\\n      </ol>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button class=\\\"cancel-btn\\\" (click)=\\\"cancel(data.cancelLabel)\\\">\\r\\n    {{ data?.cancelLabel }}\\r\\n  </button>\\r\\n  <button mat-button class=\\\"ok-btn\\\" [ngClass]=\\\"{'disabled-button': !changePasswordForm.valid}\\\" [disabled]=\\\"!changePasswordForm.valid\\\"\\r\\n    (click)=\\\"ok(data.okLabel, changePasswordForm)\\\" cdkFocusInitial>\\r\\n    {{ data?.okLabel }}\\r\\n  </button>\\r\\n</div>\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    PasswordComponent.ctorParameters = function () { return [\r\n        { type: MatDialogRef },\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] },\r\n        { type: ResetPasswordService },\r\n        { type: ErrorTermsStoreService }\r\n    ]; };\r\n    return PasswordComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.currentPassword;\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.newPassword;\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.confirmPassword;\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.validationMessage;\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.mixruleSplit;\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.mixruleSplitHeader;\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.showSuccessMessage;\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.showError;\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.dialogRef;\r\n    /** @type {?} */\r\n    PasswordComponent.prototype.data;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PasswordComponent.prototype.resetPasswordService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PasswordComponent.prototype.errorTermsStoreService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/dialog.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction DialogsProp() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    DialogsProp.prototype.heading;\r\n    /** @type {?|undefined} */\r\n    DialogsProp.prototype.message;\r\n    /** @type {?|undefined} */\r\n    DialogsProp.prototype.okLabel;\r\n    /** @type {?|undefined} */\r\n    DialogsProp.prototype.cancelLabel;\r\n    /** @type {?|undefined} */\r\n    DialogsProp.prototype.showCancel;\r\n}\r\nvar DialogService = /** @class */ (function () {\r\n    function DialogService(localeAppResourcesService, dialog) {\r\n        this.localeAppResourcesService = localeAppResourcesService;\r\n        this.dialog = dialog;\r\n    }\r\n    Object.defineProperty(DialogService.prototype, \"isStatusChanged\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return (this._isStatusChanged === undefined ? false : this._isStatusChanged);\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._isStatusChanged = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DialogService.prototype, \"selectedStudyKey\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._selectedStudyKey;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._selectedStudyKey = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DialogService.prototype, \"isProceed\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._isProceed;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._isProceed = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DialogService.prototype.confirm = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var confirmation = false;\r\n        /** @type {?} */\r\n        var dialogRef = this.showUnsavedDataConfirmation();\r\n        return dialogRef.afterClosed().pipe(map((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) {\r\n            /** @type {?} */\r\n            var eventObject = res;\r\n            if (eventObject && eventObject.action === _this.getConfirmProp().okLabel) {\r\n                confirmation = true;\r\n            }\r\n            else if (eventObject && eventObject.action === _this.getConfirmProp().cancelLabel) {\r\n                confirmation = false;\r\n            }\r\n            return confirmation;\r\n        })));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    DialogService.prototype.showUnsavedDataConfirmation = /**\r\n     * @private\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        data = data || this.getConfirmProp();\r\n        /** @type {?} */\r\n        var dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: DIALOG_CONFIG.CONFIRM_UNSAVED_DATA.WIDTH,\r\n            data: data,\r\n            panelClass: DIALOG_CONFIG.DELETE_PLAN.PANEL_CLASS,\r\n            id: 'warnDataLossOnNavDialog'\r\n        });\r\n        return dialogRef;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    DialogService.prototype.getConfirmProp = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            heading: this.localeAppResourcesService.getResource('unsavedTitle'),\r\n            message: this.localeAppResourcesService.getResource('unsavedMessage'),\r\n            okLabel: this.localeAppResourcesService.getResource(ALERT_TYPE.OkLabel),\r\n            cancelLabel: this.localeAppResourcesService.getResource(ALERT_TYPE.CancelLabel)\r\n        };\r\n    };\r\n    DialogService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    DialogService.ctorParameters = function () { return [\r\n        { type: LocaleAppResourcesService },\r\n        { type: MatDialog }\r\n    ]; };\r\n    /** @nocollapse */ DialogService.ngInjectableDef = ɵɵdefineInjectable({ factory: function DialogService_Factory() { return new DialogService(ɵɵinject(LocaleAppResourcesService), ɵɵinject(MatDialog$1)); }, token: DialogService, providedIn: \"root\" });\r\n    return DialogService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    DialogService.prototype._isStatusChanged;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    DialogService.prototype._selectedStudyKey;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    DialogService.prototype._isProceed;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    DialogService.prototype.localeAppResourcesService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    DialogService.prototype.dialog;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/server-status.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ServerStatusService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of server status service.\r\n     * @param payloadCommandService\r\n     * @param baseConnectionService\r\n     */\r\n    function ServerStatusService(payloadCommandService, baseConnectionService) {\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.serverStatus = null;\r\n    }\r\n    /**\r\n     * Gets server status\r\n     * @param serverInfo\r\n     * @param [cacheType]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets server status\r\n     * @param {?} serverInfo\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    ServerStatusService.prototype.getServerStatus = /**\r\n     * Gets server status\r\n     * @param {?} serverInfo\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (serverInfo, actionParam) {\r\n        if (!serverInfo) {\r\n            throw new Error(\"server Info can not be empty or undefined\");\r\n        }\r\n        if (!this.typeCheck(serverInfo)) {\r\n            throw new Error(\"Invalid server Info object\");\r\n        }\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.cacheKey = CacheKey.ServerKey;\r\n        actionParam.reportError = false;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n        /** @type {?} */\r\n        var moduleInfo = {\r\n            moduleName: 'NEWPLANTAB'\r\n        };\r\n        /** @type {?} */\r\n        var headers = {\r\n            'jsonRequest': 'true'\r\n        };\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.SERVER_STATUS;\r\n        }\r\n        /** @type {?} */\r\n        var that = this;\r\n        // TODO Removed hard coded values\r\n        /** @type {?} */\r\n        var serverStatusPayload;\r\n        if (actionParam.endPoint) {\r\n            serverStatusPayload = that.payloadCommandService.getApiRequest('getServerStatus', serverInfo, headers, moduleInfo);\r\n            return that.baseConnectionService.send(serverStatusPayload, actionParam).pipe(map((/**\r\n             * @param {?} resp\r\n             * @return {?}\r\n             */\r\n            function (resp) {\r\n                that.serverStatus = resp;\r\n                return that.serverStatus;\r\n            })));\r\n        }\r\n        else {\r\n            serverStatusPayload = that.payloadCommandService.getCommandDetails('getServerStatus', serverInfo, null, null, moduleInfo);\r\n            return that.baseConnectionService.sendRequest(serverStatusPayload, actionParam).pipe(map((/**\r\n             * @param {?} resp\r\n             * @return {?}\r\n             */\r\n            function (resp) {\r\n                that.serverStatus = resp;\r\n                return that.serverStatus;\r\n            })));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    ServerStatusService.prototype.typeCheck = /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        return (obj.clientVersion !== undefined && obj.clientBuildID !== undefined && obj.clientBuildDate !== undefined);\r\n    };\r\n    ServerStatusService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ServerStatusService.ctorParameters = function () { return [\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService }\r\n    ]; };\r\n    /** @nocollapse */ ServerStatusService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ServerStatusService_Factory() { return new ServerStatusService(ɵɵinject(PayloadCommandService), ɵɵinject(BaseConnectionService)); }, token: ServerStatusService, providedIn: \"root\" });\r\n    return ServerStatusService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    ServerStatusService.prototype.serverStatus;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ServerStatusService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ServerStatusService.prototype.baseConnectionService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/main-header/main-header.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MainHeaderComponent = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of main header component.\r\n     * @param configurationService\r\n     * @param router\r\n     * @param errorTermsStoreService\r\n     * @param localeAppResourcesService\r\n     * @param dialog\r\n     * @param snackBar\r\n     * @param helpService\r\n     * @param logoutService\r\n     * @param dialogService\r\n     * @param serverStatusService\r\n     */\r\n    function MainHeaderComponent(logoutService, configurationService, router, errorTermsStoreService, localeAppResourcesService, dialog, snackBar, helpService, dialogService, serverStatusService) {\r\n        this.logoutService = logoutService;\r\n        this.configurationService = configurationService;\r\n        this.router = router;\r\n        this.errorTermsStoreService = errorTermsStoreService;\r\n        this.localeAppResourcesService = localeAppResourcesService;\r\n        this.dialog = dialog;\r\n        this.snackBar = snackBar;\r\n        this.helpService = helpService;\r\n        this.dialogService = dialogService;\r\n        this.serverStatusService = serverStatusService;\r\n        this.contextMenuClass = 'main-header-context-menu';\r\n        this.toShowOverlay = false;\r\n        this.hideCustomerLogo = false;\r\n        this.headerTabClicked = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subscriptions = [];\r\n        this.setUserProfile();\r\n        this.show = false;\r\n        this.toConfirmLogout = false;\r\n        this.toAbout = false;\r\n        this.successPasswordmessage = false;\r\n        this.LogoutMessage1 = this.errorTermsStoreService.getErrorMessage('LogoutMessage1');\r\n        this.LogoutMessage2 = this.errorTermsStoreService.getErrorMessage('LogoutMessage2');\r\n        this.passwordResetSuccessful = this.errorTermsStoreService.getErrorMessage('PasswordResetSuccessful');\r\n        this.OkLabel = this.localeAppResourcesService.getResource('OkLabel');\r\n        this.CancelLabel = this.localeAppResourcesService.getResource('CancelLabel');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var widget = ((/** @type {?} */ (window))).AppcuesWidget(((/** @type {?} */ (window))).Appcues.user());\r\n        widget.init('#my-widget', {\r\n            position: 'left'\r\n            // Optionally add a header and/or footer.\r\n            // header: '<h2>Study Optimizer</h2>',\r\n            // footer: '<p>Sample Footer</p>'\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes.userProfile) {\r\n            this.setUserProfile();\r\n        }\r\n    };\r\n    /**\r\n     * Sets user profile\r\n     */\r\n    /**\r\n     * Sets user profile\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.setUserProfile = /**\r\n     * Sets user profile\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.userProfile !== undefined) {\r\n            this.userInitials = AppUtil.getNameInitials(this.userProfile.$name, this.userProfile.$nameSeparator);\r\n            /**\r\n             * Add below code to implement requirement of SO-19533 *\r\n             * @type {?}\r\n             */\r\n            var UserArr = this.userProfile.$name.split(' ');\r\n            this.UserNameToolTip = UserArr.join('\\n');\r\n            if (UserArr.length > 1) {\r\n                this.firstName = UserArr[0];\r\n                delete UserArr[0];\r\n                this.lastName = UserArr.join(' ');\r\n            }\r\n            else {\r\n                this.firstName = UserArr.join(' ');\r\n            }\r\n            this.profileItems = this.userProfile.$items;\r\n        }\r\n        else {\r\n            this.userInitials = '';\r\n            this.UserNameToolTip = '';\r\n            this.profileItems = [];\r\n        }\r\n    };\r\n    // toggleProfile(value?: boolean) {\r\n    //   if (value !== undefined) {\r\n    //     this.show = value;\r\n    //   } else {\r\n    //     this.show = !this.show;\r\n    //   }\r\n    // }\r\n    /**\r\n     * Determines whether tab click on\r\n     * @param moduleName\r\n     */\r\n    // toggleProfile(value?: boolean) {\r\n    //   if (value !== undefined) {\r\n    //     this.show = value;\r\n    //   } else {\r\n    //     this.show = !this.show;\r\n    //   }\r\n    // }\r\n    /**\r\n     * Determines whether tab click on\r\n     * @param {?} moduleName\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.onTabClick = \r\n    // toggleProfile(value?: boolean) {\r\n    //   if (value !== undefined) {\r\n    //     this.show = value;\r\n    //   } else {\r\n    //     this.show = !this.show;\r\n    //   }\r\n    // }\r\n    /**\r\n     * Determines whether tab click on\r\n     * @param {?} moduleName\r\n     * @return {?}\r\n     */\r\n    function (moduleName) {\r\n        var _this = this;\r\n        this.canDeactivate().subscribe((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) {\r\n            if (res === true) {\r\n                _this.headerTabClicked.emit(moduleName);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * Determines whether deactivate can\r\n     * @param [isReset]\r\n     * @returns deactivate\r\n     */\r\n    /**\r\n     * Determines whether deactivate can\r\n     * @param {?=} isReset\r\n     * @return {?} deactivate\r\n     */\r\n    MainHeaderComponent.prototype.canDeactivate = /**\r\n     * Determines whether deactivate can\r\n     * @param {?=} isReset\r\n     * @return {?} deactivate\r\n     */\r\n    function (isReset) {\r\n        if (isReset === true) {\r\n            return of(true);\r\n        }\r\n        if (this.dialogService.isStatusChanged === true) {\r\n            return this.dialogService.confirm();\r\n        }\r\n        return of(true);\r\n    };\r\n    /**\r\n     * Gets resource\r\n     * @param key\r\n     * @returns resource\r\n     */\r\n    /**\r\n     * Gets resource\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?} resource\r\n     */\r\n    MainHeaderComponent.prototype.getResource = /**\r\n     * Gets resource\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?} resource\r\n     */\r\n    function (key) {\r\n        return this.localeAppResourcesService.getResource(key);\r\n    };\r\n    /**\r\n     * Gets action app resource\r\n     * @returns action app resource\r\n     */\r\n    /**\r\n     * Gets action app resource\r\n     * @private\r\n     * @return {?} action app resource\r\n     */\r\n    MainHeaderComponent.prototype.getActionAppResource = /**\r\n     * Gets action app resource\r\n     * @private\r\n     * @return {?} action app resource\r\n     */\r\n    function () {\r\n        return {\r\n            about: this.getResource('HeaderAboutStudyOptimizer'),\r\n            logout: this.getResource('HeaderLogout'),\r\n            help: this.getResource('HeaderProfileHelp'),\r\n            password: this.getResource('HeaderChangePassword')\r\n        };\r\n    };\r\n    /**\r\n     * Determines whether click action on\r\n     * @param item\r\n     */\r\n    /**\r\n     * Determines whether click action on\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.onClickAction = /**\r\n     * Determines whether click action on\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        if (item) {\r\n            // this.toggleProfile();\r\n            if (this.getActionAppResource().logout === item) {\r\n                this.openConfirmLogoutDialog();\r\n            }\r\n            else if (this.getActionAppResource().about === item) {\r\n                this.openAboutDialog();\r\n            }\r\n            else if (this.getActionAppResource().password === item) {\r\n                this.openPasswordDialog();\r\n            }\r\n            else if (this.getActionAppResource().help === item) {\r\n                this.helpService.openHelp();\r\n            }\r\n            else {\r\n                this.router.navigate([item.toLowerCase()]);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Opens confirm logout dialog\r\n     */\r\n    /**\r\n     * Opens confirm logout dialog\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.openConfirmLogoutDialog = /**\r\n     * Opens confirm logout dialog\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var logoutDialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: DIALOG_CONFIG.LOGOUT.WIDTH,\r\n            data: this.getLogoutDialogProp(),\r\n            panelClass: DIALOG_CONFIG.LOGOUT.PANEL_CLASS,\r\n            id: DIALOG_CONFIG.LOGOUT.ID\r\n        });\r\n        this.subscriptions.push(logoutDialogRef.afterClosed().subscribe((/**\r\n         * @param {?} eventObject\r\n         * @return {?}\r\n         */\r\n        function (eventObject) {\r\n            if (eventObject && eventObject.action === _this.getLogoutDialogProp().okLabel) {\r\n                _this.logout();\r\n            }\r\n        })));\r\n    };\r\n    /**\r\n     * Gets logout dialog prop\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets logout dialog prop\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.getLogoutDialogProp = /**\r\n     * Gets logout dialog prop\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var logoutMsg = this.errorTermsStoreService.getErrorMessage('LogoutMessage1') +\r\n            '<br>' +\r\n            this.errorTermsStoreService.getErrorMessage('LogoutMessage2') +\r\n            '<br>';\r\n        return {\r\n            heading: '',\r\n            message: logoutMsg,\r\n            prefixMaterialIcon: {\r\n                name: 'help',\r\n                color: '#0e6ca9',\r\n                size: '65px'\r\n            },\r\n            okLabel: this.localeAppResourcesService.getResource('OkLabel'),\r\n            cancelLabel: this.localeAppResourcesService.getResource('CancelLabel')\r\n        };\r\n    };\r\n    /**\r\n     * Logouts main header component\r\n     */\r\n    /**\r\n     * Logouts main header component\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.logout = /**\r\n     * Logouts main header component\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var actionParam = {};\r\n        // TODO\r\n        /** @type {?} */\r\n        var subscription = this.logoutService.logout().subscribe((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (data.result === COMMON.RESULT_OK) {\r\n                if (_this.serverStatusService.serverStatus) {\r\n                    if (_this.serverStatusService.serverStatus.loginRequired) {\r\n                        /** @type {?} */\r\n                        var loginUrl = _this.configurationService.$loginUrl;\r\n                        if (loginUrl) {\r\n                            AppWindow.getWindow().location.href = loginUrl;\r\n                        }\r\n                    }\r\n                    else {\r\n                        AppWindow.getWindow().location.href = _this.serverStatusService.serverStatus.ssoRedirectURL;\r\n                    }\r\n                }\r\n            }\r\n            else if (data.result === COMMON.RESULT_ERROR) {\r\n                console.log(data.error.message);\r\n                throw new Error(data.error.message);\r\n            }\r\n        }));\r\n        this.subscriptions.push(subscription);\r\n    };\r\n    /**\r\n     * Opens about dialog\r\n     */\r\n    /**\r\n     * Opens about dialog\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.openAboutDialog = /**\r\n     * Opens about dialog\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var logoutDialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: DIALOG_CONFIG.ABOUT.WIDTH,\r\n            data: this.getAboutDialogProp(),\r\n            panelClass: DIALOG_CONFIG.ABOUT.PANEL_CLASS,\r\n            id: DIALOG_CONFIG.ABOUT.ID\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.getAboutDialogProp = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            heading: this.aboutResource.aboutBoxTitle,\r\n            message: this.aboutResource.aboutBoxVersion +\r\n                '<br><br>' +\r\n                this.aboutResource.aboutBoxDisclaimer,\r\n            postfixImageUrl: this.aboutResource.logoUrl,\r\n            okLabel: this.localeAppResourcesService.getResource('OkLabel'),\r\n            showCancel: false\r\n        };\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.openPasswordDialog = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var passwordDialogRef = this.dialog.open(PasswordComponent, {\r\n            width: DIALOG_CONFIG.PASSWORD.WIDTH,\r\n            data: this.getPasswordDialogProp(),\r\n            panelClass: DIALOG_CONFIG.PASSWORD.PANEL_CLASS,\r\n            id: DIALOG_CONFIG.PASSWORD.ID\r\n        });\r\n        this.subscriptions.push(passwordDialogRef.afterClosed().subscribe((/**\r\n         * @param {?} eventObject\r\n         * @return {?}\r\n         */\r\n        function (eventObject) {\r\n            if (eventObject) {\r\n                console.log(eventObject.data);\r\n                _this.showBanner('positive', 'positive-snackbar', 'assets/images/manageplans/icon-positive.png', 'PasswordResetSuccessful');\r\n            }\r\n        })));\r\n    };\r\n    /**\r\n     * Gets password dialog prop\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets password dialog prop\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.getPasswordDialogProp = /**\r\n     * Gets password dialog prop\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            heading: this.passwordResource.changePassword,\r\n            currentPassword: this.passwordResource.currentPassword,\r\n            nonEmptyField: this.passwordResource.nonEmptyField,\r\n            newPassword: this.passwordResource.newPassword,\r\n            confirmPassword: this.passwordResource.confirmPassword,\r\n            passwordMisMatchMessage: this.passwordResource.passwordMisMatchMessage,\r\n            lengthRule: this.passwordResource.lengthRule,\r\n            mixCharRule: this.passwordResource.mixCharRule,\r\n            okLabel: this.localeAppResourcesService.getResource('OkLabel'),\r\n            cancelLabel: this.localeAppResourcesService.getResource('CancelLabel')\r\n        };\r\n    };\r\n    /**\r\n     * Shows banner\r\n     * @param messageType\r\n     * @param panelClass\r\n     * @param iconPath\r\n     * @param messageCode\r\n     */\r\n    /**\r\n     * Shows banner\r\n     * @param {?} messageType\r\n     * @param {?} panelClass\r\n     * @param {?} iconPath\r\n     * @param {?} messageCode\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.showBanner = /**\r\n     * Shows banner\r\n     * @param {?} messageType\r\n     * @param {?} panelClass\r\n     * @param {?} iconPath\r\n     * @param {?} messageCode\r\n     * @return {?}\r\n     */\r\n    function (messageType, panelClass, iconPath, messageCode) {\r\n        this.snackBar.openFromComponent(DisplayBannerComponent, {\r\n            data: {\r\n                message: this.errorTermsStoreService.getErrorMessage(messageCode),\r\n                icon: iconPath,\r\n                messageType: messageType\r\n            },\r\n            panelClass: [panelClass]\r\n        });\r\n    };\r\n    /**\r\n     * Onclicks window\r\n     */\r\n    /**\r\n     * Onclicks window\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.onclickWindow = /**\r\n     * Onclicks window\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log('clicked');\r\n    };\r\n    /**\r\n     * Hides image\r\n     * @param event\r\n     */\r\n    /**\r\n     * Hides image\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.hideImage = /**\r\n     * Hides image\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.hideCustomerLogo = true;\r\n    };\r\n    // @HostListener('keydown', ['$event'])\r\n    // public keydown(event: any): void {\r\n    //   if (event.keyCode === 27) {\r\n    //     this.toggleProfile(false);\r\n    //   }\r\n    // }\r\n    // @HostListener('document:click', ['$event'])\r\n    // public documentClick(event: any): void {\r\n    //   if (!this.contains(event.target)) {\r\n    //     this.toggleProfile(false);\r\n    //   }\r\n    // }\r\n    /**\r\n     * Contains main header component\r\n     * @param target\r\n     * @returns true if contains\r\n     */\r\n    // @HostListener('keydown', ['$event'])\r\n    // public keydown(event: any): void {\r\n    //   if (event.keyCode === 27) {\r\n    //     this.toggleProfile(false);\r\n    //   }\r\n    // }\r\n    // @HostListener('document:click', ['$event'])\r\n    // public documentClick(event: any): void {\r\n    //   if (!this.contains(event.target)) {\r\n    //     this.toggleProfile(false);\r\n    //   }\r\n    // }\r\n    /**\r\n     * Contains main header component\r\n     * @private\r\n     * @param {?} target\r\n     * @return {?} true if contains\r\n     */\r\n    MainHeaderComponent.prototype.contains = \r\n    // @HostListener('keydown', ['$event'])\r\n    // public keydown(event: any): void {\r\n    //   if (event.keyCode === 27) {\r\n    //     this.toggleProfile(false);\r\n    //   }\r\n    // }\r\n    // @HostListener('document:click', ['$event'])\r\n    // public documentClick(event: any): void {\r\n    //   if (!this.contains(event.target)) {\r\n    //     this.toggleProfile(false);\r\n    //   }\r\n    // }\r\n    /**\r\n     * Contains main header component\r\n     * @private\r\n     * @param {?} target\r\n     * @return {?} true if contains\r\n     */\r\n    function (target) {\r\n        return (this.profileAnchor.nativeElement.contains(target) ||\r\n            (this.profilePopup\r\n                ? this.profilePopup.nativeElement.contains(target)\r\n                : false));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MainHeaderComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.items = null;\r\n        this.userProfile = null;\r\n        this.passwordComponent = null;\r\n        this.profileItems = null;\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} subscription\r\n         * @return {?}\r\n         */\r\n        function (subscription) {\r\n            subscription.unsubscribe();\r\n        }));\r\n        this.subscriptions = null;\r\n    };\r\n    MainHeaderComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-main-header',\r\n                    template: \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\r\\n  <div class=\\\"navbar-brand d-flex align-items-center\\\">\\r\\n    <label class=\\\"study-o-text\\\">IQVIA <sup>TM</sup> StudyOptimizer</label>\\r\\n    <div class=\\\"v-divider\\\"></div>\\r\\n    <img class=\\\"logo\\\" [src]=\\\"logoUrl\\\" alt=\\\"\\\" (error)=\\\"hideImage($event)\\\" [ngClass]=\\\"{ hideImage: hideCustomerLogo }\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"collapse navbar-collapse d-flex justify-content-end full-height\\\" id=\\\"navbarSupportedContent\\\">\\r\\n\\r\\n    <ul class=\\\"navbar-nav full-height\\\">\\r\\n      <li class=\\\"nav-item text-truncate\\\" *ngFor=\\\"let item of items\\\" (click)=\\\"onTabClick(item.$moduleName)\\\">\\r\\n        <a class=\\\"nav-link text-truncate\\\" [innerHTML]=\\\"item.$name\\\"> </a>\\r\\n      </li>\\r\\n\\r\\n      <div id=\\\"my-widget\\\" class=\\\"nav-item\\\">\\r\\n        <div class=\\\"appcues-widget-icon\\\">\\r\\n          <img [src]=\\\"appInfoUrl\\\" width=\\\"30px\\\" height=\\\"30px\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <li class=\\\"nav-item divider-menu-item\\\">\\r\\n        <div class=\\\"v-divider\\\"></div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <div class=\\\"profile-wrapper\\\">\\r\\n          <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"menu\\\">\\r\\n            <div class=\\\"profile-config\\\">\\r\\n              <span [innerHTML]=\\\"userInitials\\\"></span>\\r\\n            </div>\\r\\n          </button>\\r\\n          <!-- Add below code to implement requirement of SO-19533 -->\\r\\n          <mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" [class]=\\\"'context-menu ' + contextMenuClass\\\"\\r\\n            [xPosition]=\\\"'before'\\\" [yPosition]=\\\"'below'\\\">\\r\\n            <h5 class=\\\"heading\\\" *ngIf=\\\"UserNameToolTip\\\" [matTooltipClass]=\\\"'ctos-tooltip'\\\" [matTooltip]=\\\"UserNameToolTip\\\"\\r\\n              matTooltipPosition=\\\"above\\\">\\r\\n              <div class=\\\"fullname_subheader\\\" [innerHTML]=\\\"firstName\\\"></div>\\r\\n              <div class=\\\"fullname_subheader\\\" [innerHTML]=\\\"lastName\\\"></div>\\r\\n            </h5>\\r\\n            <div *ngFor=\\\"let item of profileItems\\\" [matTooltip]=\\\"item.tooltipMsg\\\" matTooltipPosition=\\\"right\\\"\\r\\n              [matTooltipDisabled]=\\\"item.isEnabled || !item.tooltipMsg\\\">\\r\\n              <button mat-menu-item [disabled]=\\\"!item.isEnabled\\\" (click)=\\\"onClickAction(item.name)\\\">\\r\\n                <span>{{ item.name }}</span>\\r\\n                <hr />\\r\\n              </button>\\r\\n             </div> \\r\\n          </mat-menu>\\r\\n          </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    MainHeaderComponent.ctorParameters = function () { return [\r\n        { type: LogoutService },\r\n        { type: ConfigurationService },\r\n        { type: Router },\r\n        { type: ErrorTermsStoreService },\r\n        { type: LocaleAppResourcesService },\r\n        { type: MatDialog },\r\n        { type: MatSnackBar },\r\n        { type: HelpService },\r\n        { type: DialogService },\r\n        { type: ServerStatusService }\r\n    ]; };\r\n    MainHeaderComponent.propDecorators = {\r\n        items: [{ type: Input }],\r\n        userProfile: [{ type: Input }],\r\n        logoUrl: [{ type: Input }],\r\n        appInfoUrl: [{ type: Input }],\r\n        alertConfirmUrl: [{ type: Input }],\r\n        aboutResource: [{ type: Input }],\r\n        passwordResource: [{ type: Input }],\r\n        headerTabClicked: [{ type: Output }],\r\n        matMenu: [{ type: ViewChild, args: ['menu', { static: true },] }],\r\n        profileAnchor: [{ type: ViewChild, args: ['profile', { static: true },] }],\r\n        profilePopup: [{ type: ViewChild, args: ['profilePopup', { read: ElementRef, static: true },] }]\r\n    };\r\n    return MainHeaderComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.items;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.userProfile;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.logoUrl;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.appInfoUrl;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.alertConfirmUrl;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.aboutResource;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.passwordResource;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.headerTabClicked;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.contextMenuClass;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.toShowOverlay;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.passwordComponent;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.hideCustomerLogo;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.userInitials;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.show;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.firstName;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.lastName;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.UserNameToolTip;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.profileItems;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.LogoutMessage1;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.LogoutMessage2;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.OkLabel;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.CancelLabel;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.toConfirmLogout;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.toAbout;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.toConfirmPassowrd;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.successPasswordmessage;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.passwordResetSuccessful;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.matMenu;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.profileAnchor;\r\n    /** @type {?} */\r\n    MainHeaderComponent.prototype.profilePopup;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.logoutService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.configurationService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.router;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.errorTermsStoreService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.localeAppResourcesService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.dialog;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.snackBar;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.helpService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.dialogService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MainHeaderComponent.prototype.serverStatusService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/redirect/redirect.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar RedirectComponent = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of redirect component.\r\n     * @param route\r\n     */\r\n    function RedirectComponent(route) {\r\n        this.route = route;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RedirectComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var queryParams = this.route.snapshot.queryParams;\r\n        /** @type {?} */\r\n        var url = AppUtil.generateUrl(BASE_HREF, ((/** @type {?} */ (this.route.snapshot.data))).externalUrlFragment);\r\n        /** @type {?} */\r\n        var addque = true;\r\n        for (var i in queryParams) {\r\n            if (queryParams[i] !== undefined) {\r\n                if (addque) {\r\n                    url += '?';\r\n                    addque = false;\r\n                }\r\n                else {\r\n                    url += '&';\r\n                }\r\n                url += i + '=' + queryParams[i];\r\n            }\r\n        }\r\n        AppWindow.getWindow().location.href = url;\r\n    };\r\n    RedirectComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-redirect',\r\n                    template: \"\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    RedirectComponent.ctorParameters = function () { return [\r\n        { type: ActivatedRoute }\r\n    ]; };\r\n    return RedirectComponent;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    RedirectComponent.prototype.route;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/search-list/search-list.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SearchListComponent = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of search list component.\r\n     * @param searchListFB\r\n     * @param dialogService\r\n     */\r\n    function SearchListComponent(searchListFB, dialogService) {\r\n        this.searchListFB = searchListFB;\r\n        this.dialogService = dialogService;\r\n        this.labels = {};\r\n        this.toggleArrowFlag = false;\r\n        this.itemSelect = new EventEmitter();\r\n        this.selectionChange = new EventEmitter();\r\n    }\r\n    Object.defineProperty(SearchListComponent.prototype, \"searchListFormGroupName\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.searchListFormGroup;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.searchListFormGroup = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchListComponent.prototype, \"$searchGroups\", {\r\n        /**\r\n         * Getter $searchGroups\r\n         * @return Array<any>\r\n         */\r\n        get: /**\r\n         * Getter $searchGroups\r\n         * @return {?} Array<any>\r\n         */\r\n        function () {\r\n            return this.searchGroups;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subscriptions = new Map();\r\n        this.initializeSubjects();\r\n        this.setFilter();\r\n        this.setSearchGroups();\r\n    };\r\n    /**\r\n     * on changes\r\n     * @param changes\r\n     */\r\n    /**\r\n     * on changes\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.ngOnChanges = /**\r\n     * on changes\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes &&\r\n            changes.searchListFormGroupName &&\r\n            this.searchListFormGroupName.get('searchListControl') &&\r\n            this.searchListFormGroupName.get('searchListControl').value) {\r\n            this.removeSubscription();\r\n            this.subscriptions = new Map();\r\n            this.setFilter(this.searchListFormGroupName.get('searchListControl').value);\r\n        }\r\n    };\r\n    /**\r\n     * Gets selected item\r\n     * @param selectedItemkey\r\n     * @param list\r\n     * @returns selected item\r\n     */\r\n    /**\r\n     * Gets selected item\r\n     * @private\r\n     * @param {?} selectedItemkey\r\n     * @param {?} list\r\n     * @return {?} selected item\r\n     */\r\n    SearchListComponent.prototype.getSelectedItem = /**\r\n     * Gets selected item\r\n     * @private\r\n     * @param {?} selectedItemkey\r\n     * @param {?} list\r\n     * @return {?} selected item\r\n     */\r\n    function (selectedItemkey, list) {\r\n        /** @type {?} */\r\n        var selectedItem;\r\n        if (selectedItemkey !== undefined &&\r\n            selectedItemkey !== null &&\r\n            list !== undefined &&\r\n            list !== null) {\r\n            selectedItem =\r\n                list.find((/**\r\n                 * @param {?} item\r\n                 * @return {?}\r\n                 */\r\n                function (item) {\r\n                    if (typeof selectedItemkey === 'string') {\r\n                        return (item.id.toLowerCase() === (/** @type {?} */ (selectedItemkey.toLowerCase())));\r\n                    }\r\n                    else {\r\n                        return item.key === selectedItemkey;\r\n                    }\r\n                })) || '';\r\n        }\r\n        else {\r\n            selectedItem = '';\r\n        }\r\n        if (this.dialogService.selectedStudyKey === undefined ||\r\n            this.dialogService.selectedStudyKey === null ||\r\n            this.dialogService.selectedStudyKey === '') {\r\n            this.dialogService.selectedStudyKey = selectedItem;\r\n        }\r\n        return selectedItem;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.initializeSubjects = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.recentlistItemsSubject = new Subject();\r\n        this.allListItemsSubject = new Subject();\r\n    };\r\n    /**\r\n     * Setter setSearchGroups\r\n     */\r\n    /**\r\n     * Setter setSearchGroups\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.setSearchGroups = /**\r\n     * Setter setSearchGroups\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.recentlistItemsSubject === undefined ||\r\n            this.allListItemsSubject === undefined) {\r\n            this.initializeSubjects();\r\n        }\r\n        // tslint:disable-next-line:prefer-const\r\n        /** @type {?} */\r\n        var searchGroups = [];\r\n        // recentListItemsLabel condition is checked for not showing most recently list In copy plan\r\n        if (this.searchListInput.recentListItemsLabel) {\r\n            searchGroups.push({\r\n                name: this.searchListInput.recentListItemsLabel,\r\n                list: this.recentlistItemsSubject.asObservable()\r\n            });\r\n        }\r\n        searchGroups.push({\r\n            name: this.searchListInput.allListItemsLabel,\r\n            list: this.allListItemsSubject.asObservable()\r\n        });\r\n        this.searchGroups = searchGroups;\r\n    };\r\n    /**\r\n     * Sets filter\r\n     * @param [initialValue]\r\n     */\r\n    /**\r\n     * Sets filter\r\n     * @private\r\n     * @param {?=} initialValue\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.setFilter = /**\r\n     * Sets filter\r\n     * @private\r\n     * @param {?=} initialValue\r\n     * @return {?}\r\n     */\r\n    function (initialValue) {\r\n        var _this = this;\r\n        this.isFirstFilterCall = true;\r\n        if (!this.subscriptions.has('valueChangeSubscription')) {\r\n            /** @type {?} */\r\n            var listControl = this.isSearchListOn ? 'filterListControl' : 'searchListControl';\r\n            if (this.searchListFormGroupName\r\n                .get(listControl)) {\r\n                /** @type {?} */\r\n                var valueChangeSubscription = this.searchListFormGroupName\r\n                    .get(listControl)\r\n                    .valueChanges.pipe(startWith(initialValue || ''), debounceTime(DEBOUNCE_TIME), map((/**\r\n                 * @param {?} value\r\n                 * @return {?}\r\n                 */\r\n                function (value) {\r\n                    return typeof value === 'string' ? value : value.id;\r\n                })), distinctUntilChanged((/**\r\n                 * @param {?} oldValue\r\n                 * @param {?} newValue\r\n                 * @return {?}\r\n                 */\r\n                function (oldValue, newValue) {\r\n                    return oldValue === newValue;\r\n                })), mergeMap((/**\r\n                 * @param {?} item\r\n                 * @return {?}\r\n                 */\r\n                function (item) {\r\n                    return _this.filterItems(item, initialValue || _this.searchListInput.selectedItemKey);\r\n                })))\r\n                    .subscribe((/**\r\n                 * @param {?} data\r\n                 * @return {?}\r\n                 */\r\n                function (data) { }));\r\n                this.subscriptions.set('valueChangeSubscription', valueChangeSubscription);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Filters items\r\n     * @param value\r\n     * @param [selectedItemKey]\r\n     * @returns items\r\n     */\r\n    /**\r\n     * Filters items\r\n     * @private\r\n     * @param {?} value\r\n     * @param {?=} selectedItemKey\r\n     * @return {?} items\r\n     */\r\n    SearchListComponent.prototype.filterItems = /**\r\n     * Filters items\r\n     * @private\r\n     * @param {?} value\r\n     * @param {?=} selectedItemKey\r\n     * @return {?} items\r\n     */\r\n    function (value, selectedItemKey) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (self.searchListInput.searchApi !== undefined) {\r\n            /** @type {?} */\r\n            var searchApiSubscription = self.searchListInput\r\n                .searchApi(value)\r\n                .subscribe((/**\r\n             * @param {?} resp\r\n             * @return {?}\r\n             */\r\n            function (resp) {\r\n                if (resp.allListItems && resp.allListItems.length > 0) {\r\n                    self.recentlistItemsSubject.next(resp.recentListItems);\r\n                    self.allListItemsSubject.next(resp.allListItems);\r\n                }\r\n                else if (resp.allListItems && resp.allListItems.length <= 0) {\r\n                    self.recentlistItemsSubject.next([_this.searchListInput.recentListItemsLabel]);\r\n                    self.allListItemsSubject.next([_this.searchListInput.allListItemsLabel]);\r\n                }\r\n                /** @type {?} */\r\n                var selectedItem = self.getSelectedItem(selectedItemKey, resp.recentListItems);\r\n                if (_this.isFirstFilterCall) {\r\n                    self.searchListFormGroupName\r\n                        .get('searchListControl')\r\n                        .setValue(selectedItem);\r\n                    _this.isFirstFilterCall = false;\r\n                }\r\n                _this.selectionChange.emit(selectedItem);\r\n            }));\r\n            this.subscriptions.set('searchApiSubscription', searchApiSubscription);\r\n        }\r\n        return of(self.searchGroups);\r\n    };\r\n    /**\r\n     * Formats item\r\n     * @param [item]\r\n     * @returns item\r\n     */\r\n    /**\r\n     * Formats item\r\n     * @param {?=} item\r\n     * @return {?} item\r\n     */\r\n    SearchListComponent.prototype.formatItem = /**\r\n     * Formats item\r\n     * @param {?=} item\r\n     * @return {?} item\r\n     */\r\n    function (item) {\r\n        /** @type {?} */\r\n        var ret;\r\n        if (!item) {\r\n            return;\r\n        }\r\n        else if (typeof item === 'string') {\r\n            ret = item;\r\n        }\r\n        else {\r\n            ret = item.id;\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * Clicks search list component\r\n     */\r\n    /**\r\n     * Clicks search list component\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.click = /**\r\n     * Clicks search list component\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.searchListFormGroup.get('filterListControl').setValue('');\r\n    };\r\n    /**\r\n     * Determines whether blur on\r\n     */\r\n    /**\r\n     * Determines whether blur on\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.onBlur = /**\r\n     * Determines whether blur on\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var newValue = '';\r\n        if (this.searchListFormGroup.get('searchListControl') &&\r\n            this.searchListFormGroup.get('searchListControl').value) {\r\n            if (this.searchListFormGroup.get('searchListControl').value.hasOwnProperty('searchListControl')) {\r\n                newValue = this.searchListFormGroup.get('searchListControl').value.searchListControl;\r\n            }\r\n            else {\r\n                newValue = this.searchListFormGroup.get('searchListControl').value;\r\n            }\r\n        }\r\n        this.searchListFormGroup.get('searchListControl').setValue(newValue);\r\n    };\r\n    /**\r\n     * Opens search list component\r\n     */\r\n    /**\r\n     * Opens search list component\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.open = /**\r\n     * Opens search list component\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.toggleArrowFlag = true;\r\n        if (this.searchListFormGroup.get('filterListControl') &&\r\n            this.searchListFormGroup.get('filterListControl').value) {\r\n            this.searchListFormGroup.get('filterListControl').setValue('');\r\n        }\r\n    };\r\n    /**\r\n     * Closes search list component\r\n     */\r\n    /**\r\n     * Closes search list component\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.close = /**\r\n     * Closes search list component\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.searchListFormGroup.get('filterListControl') &&\r\n            this.searchListFormGroup.get('filterListControl').value) {\r\n            this.searchListFormGroup.get('filterListControl').setValue('');\r\n        }\r\n        this.toggleArrowFlag = false;\r\n    };\r\n    /**\r\n     * Items selected\r\n     * @param event\r\n     */\r\n    /**\r\n     * Items selected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.itemSelected = /**\r\n     * Items selected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var isReset = this.dialogService.isProceed !== undefined\r\n            ? this.dialogService.isProceed\r\n            : false;\r\n        this.canDeactivate(isReset).subscribe((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) {\r\n            if (res === true) {\r\n                _this.dialogService.isStatusChanged = false;\r\n                _this.selectionChange.emit(event.option.value);\r\n                _this.itemSelect.emit(event);\r\n                _this.searchbox.nativeElement.expanded = false;\r\n                _this.searchbox.nativeElement.blur();\r\n            }\r\n            else {\r\n                /** @type {?} */\r\n                var values = _this.dialogService.selectedStudyKey;\r\n                _this.searchListFormGroupName.get('searchListControl').setValue(values);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * Determines whether deactivate can\r\n     * @param [isReset]\r\n     * @returns deactivate\r\n     */\r\n    /**\r\n     * Determines whether deactivate can\r\n     * @param {?=} isReset\r\n     * @return {?} deactivate\r\n     */\r\n    SearchListComponent.prototype.canDeactivate = /**\r\n     * Determines whether deactivate can\r\n     * @param {?=} isReset\r\n     * @return {?} deactivate\r\n     */\r\n    function (isReset) {\r\n        if (isReset === true) {\r\n            return of(true);\r\n        }\r\n        if (this.dialogService.isStatusChanged === true) {\r\n            return this.dialogService.confirm();\r\n        }\r\n        return of(true);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.searchListInput = null;\r\n        this.itemSelect = null;\r\n        this.selectionChange = null;\r\n        this.searchListFormGroupName = null;\r\n        this.recentlistItemsSubject = null;\r\n        this.allListItemsSubject = null;\r\n        this.searchGroups = null;\r\n        this.removeSubscription();\r\n    };\r\n    /**\r\n     * Removes subscription\r\n     */\r\n    /**\r\n     * Removes subscription\r\n     * @return {?}\r\n     */\r\n    SearchListComponent.prototype.removeSubscription = /**\r\n     * Removes subscription\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} subscription\r\n         * @return {?}\r\n         */\r\n        function (subscription) {\r\n            subscription.unsubscribe();\r\n        }));\r\n        this.subscriptions = null;\r\n    };\r\n    SearchListComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-search-list',\r\n                    template: \"<!-- customized for So-Study dropdown -->\\r\\n\\r\\n<div *ngIf=\\\"isSearchListOn\\\" class=\\\"search-list-container\\\" [formGroup]=\\\"searchListFormGroupName\\\" matAutocompleteOrigin #origin=\\\"matAutocompleteOrigin\\\">\\r\\n  <label class=\\\"study-label\\\">{{searchListInput.studyListHeaderLabel}}</label>\\r\\n  <i class=\\\"material-icons arrow-mat-icon\\\" [ngClass]=\\\"toggleArrowFlag ? 'rotate-arrow-icon-ninty-degree' : 'rotate-arrow-icon-zero-degree'\\\">play_arrow</i>\\r\\n  <input \\r\\n  #searchbox \\r\\n  type=\\\"button\\\" \\r\\n  aria-label=\\\"Search\\\" \\r\\n  formControlName=\\\"searchListControl\\\" \\r\\n  class=\\\"dropdownArrow form-control study-and-study-name\\\" \\r\\n  [matAutocomplete]=\\\"searchList\\\" \\r\\n  [matAutocompleteConnectedTo]=\\\"origin\\\" \\r\\n  (click)='click()'\\r\\n  (blur)=\\\"onBlur()\\\" \\r\\n  />\\r\\n  <mat-autocomplete \\r\\n    #searchList=\\\"matAutocomplete\\\" \\r\\n    [displayWith]=\\\"formatItem\\\" \\r\\n    (optionSelected)=\\\"itemSelected($event)\\\" \\r\\n    showPanel=\\\"true\\\" \\r\\n    [class]=\\\"'search-list'\\\"\\r\\n    (opened)=\\\"open()\\\"\\r\\n    (closed)=\\\"close()\\\"\\r\\n  >\\r\\n  <i class=\\\"material-icons search-mat-icon\\\">search</i>\\r\\n  <input \\r\\n  type=\\\"text\\\" \\r\\n  [placeholder]=\\\"searchListInput.placeholder\\\" \\r\\n  aria-label=\\\"Search\\\" \\r\\n  formControlName=\\\"filterListControl\\\" \\r\\n  class=\\\"dropdownArrow form-control\\\" \\r\\n  #autoCompleteInput \\r\\n  (blur)=\\\"onBlur()\\\" \\r\\n  [matTooltip]=\\\"labels?.required\\\" \\r\\n  [matTooltipClass]=\\\"'warn ctos-tooltip'\\\"\\r\\n  matTooltipPosition=\\\"right\\\" \\r\\n  [matTooltipDisabled]=\\\"!(searchListFormGroupName.get('searchListControl').touched &&\\r\\n  searchListFormGroupName.get('searchListControl').hasError('required'))\\\" \\r\\n  />\\r\\n  <mat-optgroup *ngFor=\\\"let group of $searchGroups\\\" [label]=\\\"group.name\\\">\\r\\n      <mat-option *ngFor=\\\"let item of (group.list | async)\\\" [value]=\\\"item\\\" matTooltip=\\\"{{ item.name }}\\\">\\r\\n          <ng-template [ngTemplateOutlet]=\\\"searchListInput.optionTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: item }\\\">\\r\\n            </ng-template>\\r\\n          </mat-option>\\r\\n      </mat-optgroup>\\r\\n  </mat-autocomplete>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Orginial component  -->\\r\\n\\r\\n<div *ngIf=\\\"!isSearchListOn\\\" class=\\\"search-list-container\\\" [formGroup]=\\\"searchListFormGroupName\\\">\\r\\n  <input\\r\\n    type=\\\"text\\\"\\r\\n    [placeholder]=\\\"searchListInput.placeholder\\\"\\r\\n    aria-label=\\\"Search\\\"\\r\\n    formControlName=\\\"searchListControl\\\"\\r\\n    class=\\\"dropdownArrow form-control\\\"\\r\\n    [matAutocomplete]=\\\"searchList\\\"\\r\\n    #autoCompleteInput\\r\\n    (blur)=\\\"onBlur()\\\"\\r\\n    [required]=\\\"required\\\"\\r\\n    [matTooltipClass]=\\\"'warn ctos-tooltip'\\\"\\r\\n    [matTooltip]=\\\"labels?.required\\\"\\r\\n    matTooltipPosition=\\\"right\\\"\\r\\n    [matTooltipDisabled]=\\\"!(searchListFormGroupName.get('searchListControl').touched &&\\r\\n    searchListFormGroupName.get('searchListControl').hasError('required'))\\\"\\r\\n  />\\r\\n  <!-- <mat-error\\r\\n    *ngIf=\\\"\\r\\n    searchListFormGroupName?.get('searchListControl').touched &&\\r\\n    searchListFormGroupName?.get('searchListControl').hasError('required')\\r\\n    \\\"\\r\\n    >This field is mendatory.</mat-error\\r\\n  > -->\\r\\n  <mat-autocomplete\\r\\n    #searchList=\\\"matAutocomplete\\\"\\r\\n    [displayWith]=\\\"formatItem\\\"\\r\\n    (optionSelected)=\\\"itemSelected($event)\\\"\\r\\n    showPanel=\\\"true\\\"\\r\\n    [class]=\\\"'search-list'\\\"\\r\\n  >\\r\\n    <mat-optgroup *ngFor=\\\"let group of $searchGroups\\\" [label]=\\\"group.name\\\">\\r\\n      <mat-option\\r\\n        *ngFor=\\\"let item of (group.list | async)\\\"\\r\\n        [value]=\\\"item\\\"\\r\\n        matTooltip=\\\"{{ item.name }}\\\"\\r\\n      >\\r\\n        <ng-template\\r\\n          [ngTemplateOutlet]=\\\"searchListInput.optionTemplate\\\"\\r\\n          [ngTemplateOutletContext]=\\\"{ $implicit: item }\\\"\\r\\n        >\\r\\n        </ng-template>\\r\\n      </mat-option>\\r\\n    </mat-optgroup>\\r\\n  </mat-autocomplete>\\r\\n</div>\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    SearchListComponent.ctorParameters = function () { return [\r\n        { type: FormBuilder },\r\n        { type: DialogService }\r\n    ]; };\r\n    SearchListComponent.propDecorators = {\r\n        isSearchListOn: [{ type: Input }],\r\n        searchListInput: [{ type: Input }],\r\n        required: [{ type: Input }],\r\n        searchListFormGroupName: [{ type: Input }],\r\n        labels: [{ type: Input }],\r\n        itemSelect: [{ type: Output }],\r\n        selectionChange: [{ type: Output }],\r\n        searchbox: [{ type: ViewChild, args: ['searchbox', { static: false },] }]\r\n    };\r\n    return SearchListComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.isSearchListOn;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.searchListInput;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.required;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.searchListFormGroup;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.labels;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.itemSelect;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.selectionChange;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.searchbox;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.recentlistItemsSubject;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.allListItemsSubject;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.isFirstFilterCall;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    SearchListComponent.prototype.toggleArrowFlag;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    SearchListComponent.prototype.searchGroups;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    SearchListComponent.prototype.searchListFB;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    SearchListComponent.prototype.dialogService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/sub-header/sub-header.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SubHeaderComponent = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of sub header component.\r\n     * @param dialogService\r\n     */\r\n    function SubHeaderComponent(dialogService, router) {\r\n        this.dialogService = dialogService;\r\n        this.router = router;\r\n        this.isSearchListOn = true;\r\n        this.disableLink = false;\r\n        this.itemSelect = new EventEmitter();\r\n        this.headerTabClicked = new EventEmitter();\r\n    }\r\n    Object.defineProperty(SubHeaderComponent.prototype, \"searchListFormGroupName\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.searchListFormGroup;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.searchListFormGroup = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SubHeaderComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * Determines whether tab click on\r\n     * @param moduleName\r\n     * @param $event\r\n     */\r\n    /**\r\n     * Determines whether tab click on\r\n     * @param {?} moduleName\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    SubHeaderComponent.prototype.onTabClick = /**\r\n     * Determines whether tab click on\r\n     * @param {?} moduleName\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function (moduleName, $event) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var that = this;\r\n        that.canDeactivate().subscribe((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) {\r\n            if (that.disableLink === true && moduleName === 'MODULE_PLANNING') {\r\n                $event.stopPropagation();\r\n                $event.preventDefault();\r\n            }\r\n            else if (res === true) {\r\n                _this.headerTabClicked.emit(moduleName);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * Items selected\r\n     * @param event\r\n     */\r\n    /**\r\n     * Items selected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    SubHeaderComponent.prototype.itemSelected = /**\r\n     * Items selected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.itemSelect.emit(event);\r\n    };\r\n    /**\r\n     * Determines whether study change on\r\n     * @param studyTag\r\n     */\r\n    /**\r\n     * Determines whether study change on\r\n     * @param {?} studyTag\r\n     * @return {?}\r\n     */\r\n    SubHeaderComponent.prototype.onStudyChange = /**\r\n     * Determines whether study change on\r\n     * @param {?} studyTag\r\n     * @return {?}\r\n     */\r\n    function (studyTag) {\r\n        if (this.disablePlansTab === true && studyTag && studyTag.newPlanInd === true) {\r\n            this.disableLink = true;\r\n        }\r\n        else {\r\n            this.disableLink = false;\r\n        }\r\n    };\r\n    /**\r\n     * Determines whether deactivate can\r\n     * @param [isReset]\r\n     * @returns deactivate\r\n     */\r\n    /**\r\n     * Determines whether deactivate can\r\n     * @param {?=} isReset\r\n     * @return {?} deactivate\r\n     */\r\n    SubHeaderComponent.prototype.canDeactivate = /**\r\n     * Determines whether deactivate can\r\n     * @param {?=} isReset\r\n     * @return {?} deactivate\r\n     */\r\n    function (isReset) {\r\n        if (isReset === true) {\r\n            return of(true);\r\n        }\r\n        if (this.dialogService.isStatusChanged === true) {\r\n            return this.dialogService.confirm();\r\n        }\r\n        return of(true);\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    SubHeaderComponent.prototype.isTabActive = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        /** @type {?} */\r\n        var tabActive = false;\r\n        /** @type {?} */\r\n        var url = this.router.url.split('/');\r\n        if (url.length > 1) {\r\n            /** @type {?} */\r\n            var currentUrl = url[1];\r\n            tabActive = item.$name.toLowerCase() === currentUrl.toLowerCase();\r\n        }\r\n        return tabActive;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SubHeaderComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subHeaders = null;\r\n        this.studyListInput = null;\r\n        this.itemSelect = null;\r\n    };\r\n    SubHeaderComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-sub-header',\r\n                    template: \"<div class=\\\"subnav\\\">\\r\\n  <!-- <select>\\r\\n    <option>CCD984</option>\\r\\n    <option>BAD984</option>\\r\\n    <option>CPK284</option>\\r\\n  </select> -->\\r\\n  <ctos-search-list [required]=\\\"false\\\" [searchListFormGroupName]=\\\"searchListFormGroupName\\\"\\r\\n    [searchListInput]=\\\"studyListInput\\\" (itemSelect)=\\\"itemSelected($event)\\\" (selectionChange)=\\\"onStudyChange($event)\\\"\\r\\n    [isSearchListOn]=\\\"isSearchListOn\\\">\\r\\n  </ctos-search-list>\\r\\n  <div *ngFor=\\\"let item of subHeaders; let i = index\\\" (click)=\\\"onTabClick(item.$moduleName, $event)\\\">\\r\\n    <!-- The check for disabled link in below ngClass directive needs to be modified when new added tabs are also to be disabled based on the criteria -->\\r\\n    <a [ngClass]=\\\"{ 'active': isTabActive(item) === true, 'disabled': disableLink === true}\\\"\\r\\n      href=\\\"javascript:void();\\\">{{ item.$name }}\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"float-right study-refresh-date\\\" *ngIf=\\\"studyRefreshDate\\\">\\r\\n    <span [innerHTML]=\\\"studyRefreshDateLabel\\\"></span> <span>:&nbsp;</span>\\r\\n    <span><strong>{{ studyRefreshDate | date: 'dd-MMM-yyyy' }}</strong></span>\\r\\n  </div>\\r\\n</div>\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    SubHeaderComponent.ctorParameters = function () { return [\r\n        { type: DialogService },\r\n        { type: Router }\r\n    ]; };\r\n    SubHeaderComponent.propDecorators = {\r\n        subHeaders: [{ type: Input }],\r\n        studyRefreshDate: [{ type: Input }],\r\n        studyRefreshDateLabel: [{ type: Input }],\r\n        studyListInput: [{ type: Input }],\r\n        itemSelect: [{ type: Output }],\r\n        headerTabClicked: [{ type: Output }],\r\n        disablePlansTab: [{ type: Input }],\r\n        searchListFormGroupName: [{ type: Input }]\r\n    };\r\n    return SubHeaderComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.isSearchListOn;\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.subHeaders;\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.studyRefreshDate;\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.studyRefreshDateLabel;\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.studyListInput;\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.itemSelect;\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.headerTabClicked;\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.searchListFormGroup;\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.disableLink;\r\n    /** @type {?} */\r\n    SubHeaderComponent.prototype.disablePlansTab;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    SubHeaderComponent.prototype.dialogService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    SubHeaderComponent.prototype.router;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tab/tab.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar TabComponent = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of tab component.\r\n     * @param activatedRoute\r\n     */\r\n    function TabComponent(activatedRoute) {\r\n        this.activatedRoute = activatedRoute;\r\n        this.tabClicked = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TabComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var currentRoutePath = this.activatedRoute.snapshot.firstChild.url[0]\r\n            .path;\r\n        if (this.items) {\r\n            this.selectedTab = this.items.find((/**\r\n             * @param {?} i\r\n             * @return {?}\r\n             */\r\n            function (i) {\r\n                return i.routePath === currentRoutePath;\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * Selects tab\r\n     * @param item\r\n     * @returns\r\n     */\r\n    /**\r\n     * Selects tab\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    TabComponent.prototype.selectTab = /**\r\n     * Selects tab\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        if (!item.enable) {\r\n            return;\r\n        }\r\n        this.selectedTab = item;\r\n        this.tabClicked.emit(item);\r\n    };\r\n    /**\r\n     * Gets mouse event\r\n     * @param tabName\r\n     * @param enability\r\n     */\r\n    /**\r\n     * Gets mouse event\r\n     * @param {?} tabName\r\n     * @param {?} enability\r\n     * @return {?}\r\n     */\r\n    TabComponent.prototype.getMouseEvent = /**\r\n     * Gets mouse event\r\n     * @param {?} tabName\r\n     * @param {?} enability\r\n     * @return {?}\r\n     */\r\n    function (tabName, enability) {\r\n        this.showTooltip = false;\r\n        if (tabName === 'Countries' && !enability && this.isCohortPlan === 'Y') {\r\n            this.showTooltip = true;\r\n        }\r\n    };\r\n    /**\r\n     * on destroy\r\n     */\r\n    /**\r\n     * on destroy\r\n     * @return {?}\r\n     */\r\n    TabComponent.prototype.ngOnDestroy = /**\r\n     * on destroy\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.selectedTab = null;\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    TabComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes.items && changes.items.currentValue) {\r\n            this.items = changes.items.currentValue;\r\n        }\r\n        if (changes.selectedTabItem && changes.selectedTabItem.currentValue) {\r\n            this.selectedTab = changes.selectedTabItem.currentValue;\r\n        }\r\n    };\r\n    TabComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-tab',\r\n                    template: \"<ul>\\r\\n  <li *ngFor=\\\"let item of items\\\" [matTooltip]=\\\"'For a cohort plan, you must define one or more cohorts on the Cohort Design tab to enable the Countries tab.'\\\" matTooltipPosition=\\\"left\\\" [matTooltipClass]=\\\"'warn ctos-tooltip'\\\"\\r\\n    [matTooltipDisabled]=\\\"!showTooltip\\\" (mouseover)=\\\"getMouseEvent(item.label, item.enable)\\\" [ngClass]=\\\"{'active': selectedTab.label === item.label}\\\">\\r\\n    <span [innerHTML]=\\\"item.label\\\" (click)=\\\"selectTab(item)\\\" [ngClass]=\\\"{'disabled':item.enable===false}\\\"></span>\\r\\n  </li>\\r\\n</ul>\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    TabComponent.ctorParameters = function () { return [\r\n        { type: ActivatedRoute }\r\n    ]; };\r\n    TabComponent.propDecorators = {\r\n        isCohortPlan: [{ type: Input }],\r\n        items: [{ type: Input }],\r\n        tabClicked: [{ type: Output }],\r\n        selectedTabItem: [{ type: Input }]\r\n    };\r\n    return TabComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    TabComponent.prototype.showTooltip;\r\n    /** @type {?} */\r\n    TabComponent.prototype.isCohortPlan;\r\n    /** @type {?} */\r\n    TabComponent.prototype.items;\r\n    /** @type {?} */\r\n    TabComponent.prototype.tabClicked;\r\n    /** @type {?} */\r\n    TabComponent.prototype.selectedTabItem;\r\n    /** @type {?} */\r\n    TabComponent.prototype.selectedTab;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TabComponent.prototype.activatedRoute;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/notes/notes.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NotesComponent = /** @class */ (function () {\r\n    function NotesComponent(dialogRef, countryNotesProp) {\r\n        this.dialogRef = dialogRef;\r\n        this.countryNotesProp = countryNotesProp;\r\n        this.isEditMode = false;\r\n        this.selectionIndex = null;\r\n        this.isNoteContentEnabled = false;\r\n        this.isNoteEditAccess = false;\r\n        this.noteTemplate = {\r\n            'indicator': '',\r\n            'lastModifiedDate': '',\r\n            'userId': '',\r\n            'userName': '',\r\n            'content': ''\r\n        };\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.noteTemplate = this.getEmptyNote();\r\n        // this.isNoteContentEnabled = this.countryNotesProp.hasEditAccess && this.countryNotesProp.isEditablePlan;\r\n        // this.isNoteEditAccess = this.countryNotesProp.hasEditAccess && this.countryNotesProp.isEditablePlan;\r\n        // this.isNoteContentEnabled = false;\r\n        this.areNotesEditable = this.countryNotesProp.areNotesEditable;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.cancel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.dialogRef.close();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.ok = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.countryNotesProp.noteList.forEach((/**\r\n         * @param {?} note\r\n         * @return {?}\r\n         */\r\n        function (note) {\r\n            if (!note.indicator) {\r\n                note.indicator = INDICATOR.INSERT;\r\n            }\r\n        }));\r\n        this.dialogRef.close({ action: this.countryNotesProp.resources.SAVE, noteList: this.countryNotesProp.noteList });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.addComment = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.noteTemplate.userId = this.countryNotesProp.userId;\r\n        this.noteTemplate.userName = this.countryNotesProp.userName;\r\n        this.noteTemplate.lastModifiedDate = AppUtil.formatDate(new Date(), DATE_FORMAT.NOTE_API_DATE_FORMAT_SMALL);\r\n        if (!this.isEditMode) {\r\n            this.countryNotesProp.noteList.push(this.noteTemplate);\r\n        }\r\n        else {\r\n            this.noteTemplate.oldUserId = this.selectedNote.userId;\r\n            this.noteTemplate.isModified = true;\r\n            this.countryNotesProp.noteList[this.selectionIndex] = this.noteTemplate;\r\n            this.isEditMode = false;\r\n            this.selectionIndex = null;\r\n        }\r\n        this.isNoteContentEnabled = true;\r\n        this.noteTemplate = this.getEmptyNote();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.getEmptyNote = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            'indicator': '',\r\n            'lastModifiedDate': AppUtil.formatDate(new Date(), DATE_FORMAT.NOTE_API_DATE_FORMAT_SMALL),\r\n            // 'Dec-24-2018 10:01:52'\r\n            'userId': this.countryNotesProp.userId,\r\n            'userName': this.countryNotesProp.userName,\r\n            'content': ''\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.onContentChange = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (this.noteTemplate) {\r\n            if (this.noteTemplate.indicator) {\r\n                this.noteTemplate.indicator = INDICATOR.UPDATE;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.isEnabled = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.countryNotesProp.areNotesEditable) {\r\n            if (this.noteTemplate.content && this.noteTemplate.content.trim().length !== 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {?} selectedNote\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.onNoteSelected = /**\r\n     * @param {?} selectedNote\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (selectedNote, index) {\r\n        this.selectionIndex = index;\r\n        this.isEditMode = true;\r\n        this.selectedNote = __assign({}, selectedNote);\r\n        this.noteTemplate = JSON.parse(JSON.stringify(selectedNote));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.resetNote = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.isEditMode = false;\r\n        this.selectionIndex = null;\r\n        this.noteTemplate = this.getEmptyNote();\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.removeNote = /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        if (this.countryNotesProp && this.countryNotesProp.noteList) {\r\n            if (index > -1 && index < this.countryNotesProp.noteList.length) {\r\n                if (!this.countryNotesProp.noteList[index].indicator) {\r\n                    this.countryNotesProp.noteList.splice(index, 1);\r\n                }\r\n                else {\r\n                    this.selectedNote = __assign({}, this.countryNotesProp.noteList[index]);\r\n                    this.countryNotesProp.noteList[index].indicator = INDICATOR.DELETE;\r\n                    this.countryNotesProp.noteList[index].oldUserId = this.selectedNote.userId;\r\n                    this.countryNotesProp.noteList[index].isModified = true;\r\n                    this.isNoteContentEnabled = true;\r\n                }\r\n                if (index === this.selectionIndex) {\r\n                    this.resetNote();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} note\r\n     * @return {?}\r\n     */\r\n    NotesComponent.prototype.isDeletedNote = /**\r\n     * @param {?} note\r\n     * @return {?}\r\n     */\r\n    function (note) {\r\n        return note.indicator === INDICATOR.DELETE;\r\n    };\r\n    NotesComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-notes',\r\n                    template: \"<!-- <h3 mat-dialog-title> {{countryNotesProp?.resources?.TITLE}} {{countryNotesProp?.countryName}}</h3> -->\\r\\n<h3 mat-dialog-title> {{countryNotesProp?.titleLabel}} {{countryNotesProp?.titleValue}}</h3>\\r\\n<div mat-dialog-content class=\\\"country-notes-container\\\">\\r\\n    <!-- <ng-container *ngIf=\\\"!countryNotesProp?.isMCGrid\\\"> -->\\r\\n    <ng-container *ngIf=\\\"countryNotesProp?.areNotesEditable\\\">\\r\\n        <textarea rows=\\\"3\\\" cols=\\\"50\\\" class=\\\"form-control\\\" maxlength=\\\"1024\\\" (ngModelChange)=\\\"onContentChange($event)\\\"\\r\\n            [disabled]=\\\"!areNotesEditable\\\" [(ngModel)]=\\\"noteTemplate.content\\\" #content=\\\"ngModel\\\" id=\\\"content\\\"\\r\\n            name=\\\"content\\\" placeholder=\\\"{{countryNotesProp?.resources?.TYPE_TO_ADD_COMMENT}}\\\"></textarea>\\r\\n        <div class=\\\"row action-btn-container\\\">\\r\\n            <button mat-button class=\\\"btn-add-comment\\\" *ngIf=\\\"isEditMode\\\" [disableRipple]=\\\"true\\\" (click)=\\\"resetNote()\\\">\\r\\n                Cancel\\r\\n            </button>\\r\\n            <button mat-button class=\\\"btn-add-comment\\\" [disabled]=\\\"!isEnabled()\\\" [disableRipple]=\\\"true\\\"\\r\\n                (click)=\\\"addComment()\\\">\\r\\n                <i *ngIf=\\\"!isEditMode\\\" class=\\\"material-icons\\\">\\r\\n                    add_circle_outline\\r\\n                </i> {{ isEditMode ? 'Save Comment' : countryNotesProp?.resources?.ADD_COMMENT}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <div class=\\\"note-list-container\\\">\\r\\n        <div class=\\\"row note-list-header\\\">\\r\\n            <!-- <div *ngIf=\\\"!countryNotesProp?.isMCGrid\\\" class=\\\"col-sm-1\\\"></div> -->\\r\\n            <div *ngIf=\\\"countryNotesProp?.areNotesEditable\\\" class=\\\"col-sm-1\\\"></div>\\r\\n            <div class=\\\"col-sm-11 row\\\">\\r\\n                <div class=\\\"col-sm-3\\\">{{countryNotesProp?.resources?.MODIFIED_DATE}}</div>\\r\\n                <div class=\\\"col-sm-3\\\">{{countryNotesProp?.resources?.USER_NAME}}</div>\\r\\n                <div class=\\\"col-sm-6\\\">{{countryNotesProp?.resources?.CONTENT}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"note-list-data\\\">\\r\\n            <div class=\\\"row  note-row\\\" *ngFor=\\\"let note of countryNotesProp.noteList; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"!isDeletedNote(note)\\\">\\r\\n                    <!-- <ng-container *ngIf=\\\"!countryNotesProp?.isMCGrid\\\"> -->\\r\\n                    <ng-container *ngIf=\\\"countryNotesProp?.areNotesEditable\\\">\\r\\n                        <div class=\\\"col-sm-1 btn-remove-note\\\"\\r\\n                            [ngClass]=\\\"(countryNotesProp.areNotesEditable === false) ? 'disable' : ''\\\"\\r\\n                            (click)=\\\"removeNote(i)\\\">\\r\\n                            <i class=\\\"material-icons\\\"> clear </i>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <div class=\\\"col-sm-11 row\\\" (click)=\\\"onNoteSelected(note, i)\\\">\\r\\n                        <div class=\\\"col-sm-3\\\">{{note.lastModifiedDate | date: 'dd-MMM-yyyy'}}</div>\\r\\n                        <div class=\\\"col-sm-3\\\">{{note.userId}}</div>\\r\\n                        <div class=\\\"col-sm-6 txt-content\\\">{{note.content}}</div>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <!-- <ng-container *ngIf=\\\"!countryNotesProp?.isMCGrid\\\"> -->\\r\\n    <ng-container *ngIf=\\\"countryNotesProp?.areNotesEditable\\\">\\r\\n        <button mat-button class=\\\"ctos-btn-secondary\\\"\\r\\n            (click)=\\\"cancel()\\\">{{countryNotesProp?.resources?.CANCEL}}</button>\\r\\n        <button mat-button class=\\\"ctos-btn-primary offset-2\\\" [disabled]=\\\"!areNotesEditable\\\" (click)=\\\"ok()\\\"\\r\\n            cdkFocusInitial>{{countryNotesProp?.resources?.SAVE}}</button>\\r\\n    </ng-container>\\r\\n    <!-- <ng-container *ngIf=\\\"countryNotesProp?.isMCGrid\\\"> -->\\r\\n    <ng-container *ngIf=\\\"!countryNotesProp?.areNotesEditable\\\">\\r\\n        <button mat-button class=\\\"ctos-btn-primary\\\" (click)=\\\"cancel()\\\">{{countryNotesProp?.resources?.OK}}</button>\\r\\n    </ng-container>\\r\\n</div>\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    NotesComponent.ctorParameters = function () { return [\r\n        { type: MatDialogRef },\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\r\n    ]; };\r\n    return NotesComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    NotesComponent.prototype.isEditMode;\r\n    /** @type {?} */\r\n    NotesComponent.prototype.selectionIndex;\r\n    /** @type {?} */\r\n    NotesComponent.prototype.isNoteContentEnabled;\r\n    /** @type {?} */\r\n    NotesComponent.prototype.isNoteEditAccess;\r\n    /** @type {?} */\r\n    NotesComponent.prototype.selectedNote;\r\n    /** @type {?} */\r\n    NotesComponent.prototype.areNotesEditable;\r\n    /** @type {?} */\r\n    NotesComponent.prototype.noteTemplate;\r\n    /** @type {?} */\r\n    NotesComponent.prototype.dialogRef;\r\n    /** @type {?} */\r\n    NotesComponent.prototype.countryNotesProp;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/auth-main-header/auth-main-header.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AuthMainHeaderComponent = /** @class */ (function () {\r\n    function AuthMainHeaderComponent() {\r\n        this.hideCustomerLogo = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AuthMainHeaderComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * Hides image\r\n     * @param event\r\n     */\r\n    /**\r\n     * Hides image\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    AuthMainHeaderComponent.prototype.hideImage = /**\r\n     * Hides image\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.hideCustomerLogo = true;\r\n    };\r\n    AuthMainHeaderComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-auth-main-header',\r\n                    template: \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\r\\n  <div class=\\\"navbar-brand d-flex align-items-center\\\">\\r\\n    <label class=\\\"study-o-text\\\">IQVIA <sup>TM</sup> StudyOptimizer</label>\\r\\n    <div class=\\\"v-divider\\\"></div>\\r\\n    <img class=\\\"logo\\\" [src]=\\\"logoUrl\\\" alt=\\\"\\\" (error)=\\\"hideImage($event)\\\" [ngClass]=\\\"{ hideImage: hideCustomerLogo }\\\" />\\r\\n  </div>\\r\\n  <!-- <div class=\\\"collapse navbar-collapse d-flex justify-content-end full-height\\\" id=\\\"navbarSupportedContent\\\">\\r\\n\\r\\n    <ul class=\\\"navbar-nav full-height\\\">\\r\\n    </ul>\\r\\n  </div> -->\\r\\n</nav>\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    AuthMainHeaderComponent.ctorParameters = function () { return []; };\r\n    AuthMainHeaderComponent.propDecorators = {\r\n        logoUrl: [{ type: Input }],\r\n        appInfoUrl: [{ type: Input }]\r\n    };\r\n    return AuthMainHeaderComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    AuthMainHeaderComponent.prototype.logoUrl;\r\n    /** @type {?} */\r\n    AuthMainHeaderComponent.prototype.appInfoUrl;\r\n    /** @type {?} */\r\n    AuthMainHeaderComponent.prototype.hideCustomerLogo;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/nested-dropdown/nested-dropdown.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NestedDropdownComponent = /** @class */ (function () {\r\n    function NestedDropdownComponent() {\r\n        this.optionClick = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NestedDropdownComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    NestedDropdownComponent.prototype.optionClicked = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        this.optionClick.emit(item);\r\n    };\r\n    NestedDropdownComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-nested-dropdown',\r\n                    template: \"<mat-menu #menu class=\\\"nested-dropdown-menu world-wide-nested-dropdown-panel\\\">\\r\\n    <ng-container *ngFor=\\\"let item of items\\\">\\r\\n        <button *ngIf=\\\"!item.children; else branch\\\" mat-menu-item (click)=\\\"optionClicked(item)\\\">{{item.name}}</button>\\r\\n        <ng-template #branch>\\r\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"innerPanel.menu\\\"\\r\\n                (click)=\\\"optionClicked(item)\\\">{{item.name}}</button>\\r\\n            <ctos-nested-dropdown #innerPanel [items]=\\\"item.children\\\" (optionClick)=\\\"optionClicked($event)\\\">\\r\\n            </ctos-nested-dropdown>\\r\\n        </ng-template>\\r\\n    </ng-container>\\r\\n</mat-menu>\",\r\n                    styles: [\"\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    NestedDropdownComponent.ctorParameters = function () { return []; };\r\n    NestedDropdownComponent.propDecorators = {\r\n        optionClick: [{ type: Output }],\r\n        menu: [{ type: ViewChild, args: ['menu', { static: true },] }],\r\n        items: [{ type: Input }]\r\n    };\r\n    return NestedDropdownComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    NestedDropdownComponent.prototype.optionClick;\r\n    /** @type {?} */\r\n    NestedDropdownComponent.prototype.menu;\r\n    /** @type {?} */\r\n    NestedDropdownComponent.prototype.items;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/components.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ComponentsModule = /** @class */ (function () {\r\n    function ComponentsModule() {\r\n    }\r\n    ComponentsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        RouterModule,\r\n                        CommonModule,\r\n                        CommonAngularMaterialModule,\r\n                        FormsModule,\r\n                        MatMenuModule,\r\n                        MatIconModule$1,\r\n                        MatButtonModule$1,\r\n                        MatDialogModule$1\r\n                    ],\r\n                    declarations: [\r\n                        BreadcrumbComponent,\r\n                        MainHeaderComponent,\r\n                        SubHeaderComponent,\r\n                        SearchListComponent,\r\n                        PasswordComponent,\r\n                        ConfirmEqualValidatorDirective,\r\n                        ConfirmationDialogComponent,\r\n                        ExportComponent,\r\n                        RedirectComponent,\r\n                        DisplayBannerComponent,\r\n                        ContextMenuComponent,\r\n                        TabComponent,\r\n                        InfoComponent,\r\n                        AuthMainHeaderComponent,\r\n                        SignedIntegerDirective,\r\n                        SignedDecimalDirective,\r\n                        LabelControlDirective,\r\n                        NotesComponent,\r\n                        NestedDropdownComponent\r\n                    ],\r\n                    providers: [BreadcrumbService],\r\n                    exports: [\r\n                        BreadcrumbComponent,\r\n                        MainHeaderComponent,\r\n                        SubHeaderComponent,\r\n                        SearchListComponent,\r\n                        ConfirmEqualValidatorDirective,\r\n                        ConfirmationDialogComponent,\r\n                        ExportComponent,\r\n                        DisplayBannerComponent,\r\n                        ContextMenuComponent,\r\n                        TabComponent,\r\n                        InfoComponent,\r\n                        AuthMainHeaderComponent,\r\n                        SignedIntegerDirective,\r\n                        SignedDecimalDirective,\r\n                        LabelControlDirective,\r\n                        NotesComponent,\r\n                        NestedDropdownComponent\r\n                    ],\r\n                    entryComponents: [\r\n                        PasswordComponent,\r\n                        RedirectComponent,\r\n                        DisplayBannerComponent,\r\n                        ConfirmationDialogComponent,\r\n                        MatSpinner,\r\n                        NotesComponent\r\n                    ]\r\n                },] }\r\n    ];\r\n    return ComponentsModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/spinner.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SpinnerService = /** @class */ (function () {\r\n    function SpinnerService(overlay) {\r\n        var _this = this;\r\n        this.overlay = overlay;\r\n        this.spinnerRef = this.cdkSpinnerCreate();\r\n        this.spin$ = new Subject();\r\n        this.spin$\r\n            .asObservable()\r\n            .pipe(map((/**\r\n         * @param {?} val\r\n         * @return {?}\r\n         */\r\n        function (val) { return (val ? 1 : -1); })), scan((/**\r\n         * @param {?} acc\r\n         * @param {?} one\r\n         * @return {?}\r\n         */\r\n        function (acc, one) { return (acc + one >= 0 ? acc + one : 0); }), 0))\r\n            .subscribe((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) {\r\n            if (res === 1) {\r\n                _this.showSpinner();\r\n            }\r\n            else if (res === 0) {\r\n                if (_this.spinnerRef.hasAttached()) {\r\n                    _this.stopSpinner();\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    SpinnerService.prototype.cdkSpinnerCreate = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.overlay.create({\r\n            hasBackdrop: true,\r\n            backdropClass: 'dark-backdrop',\r\n            positionStrategy: this.overlay\r\n                .position()\r\n                .global()\r\n                .centerHorizontally()\r\n                .centerVertically(),\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SpinnerService.prototype.showSpinner = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.spinnerRef.attach(new ComponentPortal(MatSpinner));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SpinnerService.prototype.stopSpinner = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.spinnerRef.detach();\r\n    };\r\n    SpinnerService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    SpinnerService.ctorParameters = function () { return [\r\n        { type: Overlay }\r\n    ]; };\r\n    /** @nocollapse */ SpinnerService.ngInjectableDef = ɵɵdefineInjectable({ factory: function SpinnerService_Factory() { return new SpinnerService(ɵɵinject(Overlay)); }, token: SpinnerService, providedIn: \"root\" });\r\n    return SpinnerService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    SpinnerService.prototype.spinnerRef;\r\n    /** @type {?} */\r\n    SpinnerService.prototype.spin$;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    SpinnerService.prototype.overlay;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/common-library.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CommonLibraryModule = /** @class */ (function () {\r\n    function CommonLibraryModule() {\r\n    }\r\n    CommonLibraryModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [ComponentsModule],\r\n                    exports: [ComponentsModule],\r\n                    declarations: [],\r\n                    providers: [\r\n                        PCEService,\r\n                        SpinnerService\r\n                    ],\r\n                    entryComponents: []\r\n                },] }\r\n    ];\r\n    return CommonLibraryModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/error-terms.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction TermsErrorParam() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    TermsErrorParam.prototype.commandName;\r\n    /** @type {?} */\r\n    TermsErrorParam.prototype.categoriesTerms;\r\n    /** @type {?} */\r\n    TermsErrorParam.prototype.categoriesError;\r\n}\r\nvar ErrorTermsService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of error terms service.\r\n     * @param baseConnectionService\r\n     * @param payloadCommandService\r\n     * @param errorTermsStoreService\r\n     */\r\n    function ErrorTermsService(baseConnectionService, payloadCommandService, errorTermsStoreService) {\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.errorTermsStoreService = errorTermsStoreService;\r\n    }\r\n    /**\r\n     * Gets error terminologies\r\n     * @param params\r\n     * @param [cacheType]\r\n     * @returns error terminologies\r\n     */\r\n    /**\r\n     * Gets error terminologies\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?} error terminologies\r\n     */\r\n    ErrorTermsService.prototype.getErrorTerminologies = /**\r\n     * Gets error terminologies\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?} error terminologies\r\n     */\r\n    function (params, actionParam) {\r\n        if (!params) {\r\n            throw new Error(\"params can not be empty or undefined\");\r\n        }\r\n        if (!this.typeCheck(params)) {\r\n            throw new Error(\"Invalid params object\");\r\n        }\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        actionParam.cacheKey = CacheKey.TermErrorKey;\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n        /** @type {?} */\r\n        var moduleInfo = {\r\n            moduleName: 'NEWPLANTAB'\r\n        };\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.BASE_TERMS;\r\n        }\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var errorTermsPayload;\r\n        if (actionParam.endPoint) {\r\n            errorTermsPayload = that.payloadCommandService.getApiRequest(params.commandName, params.categoriesError, null, moduleInfo);\r\n            if (!that.errorTermsStoreService.errorTerminologies) {\r\n                return that.baseConnectionService.send(errorTermsPayload, actionParam)\r\n                    .pipe(map((/**\r\n                 * @param {?} response\r\n                 * @return {?}\r\n                 */\r\n                function (response) {\r\n                    if (response.result === COMMON.RESULT_OK) {\r\n                        that.errorTermsStoreService.createErrorCodeBase(response.terminologies);\r\n                        return 'ok';\r\n                    }\r\n                    else {\r\n                        return 'failed';\r\n                    }\r\n                })));\r\n            }\r\n            else {\r\n                return Observable.create('ok');\r\n            }\r\n        }\r\n        else {\r\n            errorTermsPayload = that.payloadCommandService.getCommandDetails(params.commandName, params.categoriesError, null, null, moduleInfo);\r\n            if (!that.errorTermsStoreService.errorTerminologies) {\r\n                return that.baseConnectionService.sendRequest(errorTermsPayload, actionParam)\r\n                    .pipe(map((/**\r\n                 * @param {?} response\r\n                 * @return {?}\r\n                 */\r\n                function (response) {\r\n                    if (response.result === COMMON.RESULT_OK) {\r\n                        that.errorTermsStoreService.createErrorCodeBase(response.terminologies);\r\n                        return 'ok';\r\n                    }\r\n                    else {\r\n                        return 'failed';\r\n                    }\r\n                })));\r\n            }\r\n            else {\r\n                return Observable.create('ok');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    ErrorTermsService.prototype.typeCheck = /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        return (obj.categoriesError !== undefined && obj.commandName !== undefined);\r\n    };\r\n    ErrorTermsService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ErrorTermsService.ctorParameters = function () { return [\r\n        { type: BaseConnectionService },\r\n        { type: PayloadCommandService },\r\n        { type: ErrorTermsStoreService }\r\n    ]; };\r\n    /** @nocollapse */ ErrorTermsService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ErrorTermsService_Factory() { return new ErrorTermsService(ɵɵinject(BaseConnectionService), ɵɵinject(PayloadCommandService), ɵɵinject(ErrorTermsStoreService)); }, token: ErrorTermsService, providedIn: \"root\" });\r\n    return ErrorTermsService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ErrorTermsService.prototype.baseConnectionService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ErrorTermsService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ErrorTermsService.prototype.errorTermsStoreService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/login-terms.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LoginTermsService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of login terms service.\r\n     * @param baseTermsService\r\n     */\r\n    function LoginTermsService(baseTermsService) {\r\n        this.baseTermsService = baseTermsService;\r\n        /**\r\n         * Login terminologies of login terms service\r\n         */\r\n        this._loginTerminologies = null;\r\n        this.terms = null;\r\n    }\r\n    /**\r\n     * Gets login terminologies\r\n     * @param params\r\n     * @param [cacheType]\r\n     * @returns login terminology information\r\n     */\r\n    /**\r\n     * Gets login terminologies\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?} login terminology information\r\n     */\r\n    LoginTermsService.prototype.getLoginTerminologies = /**\r\n     * Gets login terminologies\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?} login terminology information\r\n     */\r\n    function (params, actionParam) {\r\n        if (!params) {\r\n            throw new Error(\"Params can not be empty or undefined\");\r\n        }\r\n        if (!this.typeCheck(params)) {\r\n            throw new Error(\"Invalid params object\");\r\n        }\r\n        /** @type {?} */\r\n        var that = this;\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cacheKey = CacheKey.TermLoginKey;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.BASE_TERMS;\r\n        }\r\n        if (that._loginTerminologies === null) {\r\n            return that.baseTermsService.load(params, actionParam).pipe(map((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) {\r\n                that._loginTerminologies = response;\r\n                return response;\r\n            })));\r\n        }\r\n        else {\r\n            return of([]);\r\n        }\r\n    };\r\n    /**\r\n     * Gets term\r\n     * get the login term value according to input\r\n     * e.g.\r\n     * getTerm(LoginWelcome);\r\n     * Ouptput\r\n     * <font color='#333333'>Welcome to IQVIA<\\/font>\r\n     * @param name\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets term\r\n     * get the login term value according to input\r\n     * e.g.\r\n     * getTerm(LoginWelcome);\r\n     * Ouptput\r\n     * <font color='#333333'>Welcome to IQVIA<\\/font>\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    LoginTermsService.prototype.getTerm = /**\r\n     * Gets term\r\n     * get the login term value according to input\r\n     * e.g.\r\n     * getTerm(LoginWelcome);\r\n     * Ouptput\r\n     * <font color='#333333'>Welcome to IQVIA<\\/font>\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var termValue = '';\r\n        /* if (!this._loginTerminologies) {\r\n            return termValue;\r\n        } */\r\n        for (var i = 0, iLen = this._loginTerminologies.term.length; i < iLen; i++) {\r\n            if (this._loginTerminologies.term[i].name === name) {\r\n                termValue = this.baseTermsService.resolveValue(this._loginTerminologies.term[i].value);\r\n                break;\r\n            }\r\n        }\r\n        return termValue;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    LoginTermsService.prototype.typeCheck = /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        return (obj.category !== undefined && obj.commandName !== undefined);\r\n    };\r\n    LoginTermsService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    LoginTermsService.ctorParameters = function () { return [\r\n        { type: BaseTermsService }\r\n    ]; };\r\n    /** @nocollapse */ LoginTermsService.ngInjectableDef = ɵɵdefineInjectable({ factory: function LoginTermsService_Factory() { return new LoginTermsService(ɵɵinject(BaseTermsService)); }, token: LoginTermsService, providedIn: \"root\" });\r\n    return LoginTermsService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * Login terminologies of login terms service\r\n     * @type {?}\r\n     */\r\n    LoginTermsService.prototype._loginTerminologies;\r\n    /** @type {?} */\r\n    LoginTermsService.prototype.terms;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    LoginTermsService.prototype.baseTermsService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/user-idle.config.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UserIdleConfig = /** @class */ (function () {\r\n    function UserIdleConfig() {\r\n    }\r\n    return UserIdleConfig;\r\n}());\r\nif (false) {\r\n    /**\r\n     * Idle value in seconds.\r\n     * @type {?}\r\n     */\r\n    UserIdleConfig.prototype.idle;\r\n    /**\r\n     * Timeout value in seconds.\r\n     * @type {?}\r\n     */\r\n    UserIdleConfig.prototype.timeout;\r\n    /**\r\n     * Ping value in seconds.\r\n     * @type {?}\r\n     */\r\n    UserIdleConfig.prototype.ping;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/user-idle.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * User's idle service.\r\n */\r\nvar UserIdleService = /** @class */ (function () {\r\n    function UserIdleService(config) {\r\n        this.timerStart$ = new Subject();\r\n        this.timeout$ = new Subject();\r\n        /**\r\n         * Idle value in seconds.\r\n         * Default equals to 10 minutes.\r\n         */\r\n        this.idle = 600;\r\n        /*   protected idle = 600; */\r\n        /**\r\n         * Timeout value in seconds.\r\n         * Default equals to 5 minutes.\r\n         */\r\n        this.timeout = 300;\r\n        /*   protected timeout = 3; */\r\n        /**\r\n         * Ping value in seconds.\r\n         * * Default equals to 2 minutes.\r\n         */\r\n        /*   protected ping = 1; */\r\n        this.ping = 120;\r\n        if (config) {\r\n            this.idle = config.idle;\r\n            this.timeout = config.timeout;\r\n            this.ping = config.ping;\r\n        }\r\n        this.activityEvents$ = merge(fromEvent(window, 'mousemove'), fromEvent(window, 'resize'), fromEvent(document, 'keydown'), fromEvent(document, 'keyup'));\r\n        this.idle$ = from(this.activityEvents$);\r\n    }\r\n    /**\r\n     * Start watching for user idle and setup timer and ping.\r\n     */\r\n    /**\r\n     * Start watching for user idle and setup timer and ping.\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.startWatching = /**\r\n     * Start watching for user idle and setup timer and ping.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this.idleSubscription) {\r\n            this.idleSubscription.unsubscribe();\r\n        }\r\n        // If any of user events is not active for idle-seconds when start timer.\r\n        this.idleSubscription = this.idle$\r\n            .pipe(bufferTime(5000), // Starting point of detecting of user's inactivity\r\n        filter((/**\r\n         * @param {?} arr\r\n         * @return {?}\r\n         */\r\n        function (arr) { return !arr.length && !_this.isInactivityTimer; })), tap((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.isInactivityTimer = true; })), switchMap((/**\r\n         * @return {?}\r\n         */\r\n        function () { return interval(1000).pipe(takeUntil(merge(_this.activityEvents$, timer(_this.idle * 500).pipe(tap((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.timerStart$.next(true); }))))), finalize((/**\r\n         * @return {?}\r\n         */\r\n        function () { return (_this.isInactivityTimer = false); }))); })))\r\n            .subscribe();\r\n        this.setupTimer(this.timeout);\r\n        this.setupPing(this.ping);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.stopWatching = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.stopTimer();\r\n        if (this.idleSubscription) {\r\n            this.idleSubscription.unsubscribe();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.stopTimer = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.timerStart$.next(false);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.resetTimer = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.stopTimer();\r\n        this.isTimeout = false;\r\n    };\r\n    /**\r\n     * Return observable for timer's countdown number that emits after idle.\r\n     */\r\n    /**\r\n     * Return observable for timer's countdown number that emits after idle.\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.onTimerStart = /**\r\n     * Return observable for timer's countdown number that emits after idle.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return this.timerStart$.pipe(distinctUntilChanged(), switchMap((/**\r\n         * @param {?} start\r\n         * @return {?}\r\n         */\r\n        function (start) { return (start ? _this.timer$ : of(null)); })));\r\n    };\r\n    /**\r\n     * Return observable for timeout is fired.\r\n     */\r\n    /**\r\n     * Return observable for timeout is fired.\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.onTimeout = /**\r\n     * Return observable for timeout is fired.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return this.timeout$.pipe(filter((/**\r\n         * @param {?} timeout\r\n         * @return {?}\r\n         */\r\n        function (timeout) { return !!timeout; })), tap((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.isTimeout = true; })), map((/**\r\n         * @return {?}\r\n         */\r\n        function () { return true; })));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.getConfigValue = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            idle: this.idle,\r\n            timeout: this.timeout,\r\n            ping: this.ping\r\n        };\r\n    };\r\n    /**\r\n     * Set config values.\r\n     * @param config\r\n     */\r\n    /**\r\n     * Set config values.\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.setConfigValues = /**\r\n     * Set config values.\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        if (this.idleSubscription && !this.idleSubscription.closed) {\r\n            console.error('Call stopWatching() before set config values');\r\n            return;\r\n        }\r\n        if (config.idle) {\r\n            this.idle = config.idle;\r\n        }\r\n        if (config.ping) {\r\n            this.ping = config.ping;\r\n        }\r\n        if (config.timeout) {\r\n            this.timeout = config.timeout;\r\n        }\r\n    };\r\n    /**\r\n     * Setup timer.\r\n     *\r\n     * Counts every seconds and return n+1 and fire timeout for last count.\r\n     * @param timeout Timeout in seconds.\r\n     */\r\n    /**\r\n     * Setup timer.\r\n     *\r\n     * Counts every seconds and return n+1 and fire timeout for last count.\r\n     * @protected\r\n     * @param {?} timeout Timeout in seconds.\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.setupTimer = /**\r\n     * Setup timer.\r\n     *\r\n     * Counts every seconds and return n+1 and fire timeout for last count.\r\n     * @protected\r\n     * @param {?} timeout Timeout in seconds.\r\n     * @return {?}\r\n     */\r\n    function (timeout) {\r\n        var _this = this;\r\n        this.timer$ = interval(1000).pipe(take(timeout), map((/**\r\n         * @return {?}\r\n         */\r\n        function () { return 1; })), scan((/**\r\n         * @param {?} acc\r\n         * @param {?} n\r\n         * @return {?}\r\n         */\r\n        function (acc, n) { return acc + n; })), tap((/**\r\n         * @param {?} count\r\n         * @return {?}\r\n         */\r\n        function (count) {\r\n            if (count === timeout) {\r\n                _this.timeout$.next(true);\r\n            }\r\n        })));\r\n    };\r\n    /**\r\n     * Setup ping.\r\n     *\r\n     * Pings every ping-seconds only if is not timeout.\r\n     * @param ping\r\n     */\r\n    /**\r\n     * Setup ping.\r\n     *\r\n     * Pings every ping-seconds only if is not timeout.\r\n     * @protected\r\n     * @param {?} ping\r\n     * @return {?}\r\n     */\r\n    UserIdleService.prototype.setupPing = /**\r\n     * Setup ping.\r\n     *\r\n     * Pings every ping-seconds only if is not timeout.\r\n     * @protected\r\n     * @param {?} ping\r\n     * @return {?}\r\n     */\r\n    function (ping) {\r\n        var _this = this;\r\n        this.ping$ = interval(ping * 1000).pipe(filter((/**\r\n         * @return {?}\r\n         */\r\n        function () { return !_this.isTimeout; })));\r\n    };\r\n    UserIdleService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    UserIdleService.ctorParameters = function () { return [\r\n        { type: UserIdleConfig, decorators: [{ type: Optional }] }\r\n    ]; };\r\n    /** @nocollapse */ UserIdleService.ngInjectableDef = ɵɵdefineInjectable({ factory: function UserIdleService_Factory() { return new UserIdleService(ɵɵinject(UserIdleConfig, 8)); }, token: UserIdleService, providedIn: \"root\" });\r\n    return UserIdleService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    UserIdleService.prototype.ping$;\r\n    /**\r\n     * Events that can interrupts user's inactivity timer.\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.activityEvents$;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.timerStart$;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.timeout$;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.idle$;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.timer$;\r\n    /**\r\n     * Idle value in seconds.\r\n     * Default equals to 10 minutes.\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.idle;\r\n    /**\r\n     * Timeout value in seconds.\r\n     * Default equals to 5 minutes.\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.timeout;\r\n    /**\r\n     * Ping value in seconds.\r\n     * * Default equals to 2 minutes.\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.ping;\r\n    /**\r\n     * Timeout status.\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.isTimeout;\r\n    /**\r\n     * Timer of user's inactivity is in progress.\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.isInactivityTimer;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserIdleService.prototype.idleSubscription;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/ApplicationError.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Application error\r\n */\r\nvar  /**\r\n * Application error\r\n */\r\nApplicationError = /** @class */ (function (_super) {\r\n    __extends(ApplicationError, _super);\r\n    /**\r\n     * Creates an instance of application error.\r\n     * @param message\r\n     * @param errorCode\r\n     */\r\n    function ApplicationError(message, errorCode) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.message = message;\r\n        _this.errorCode = errorCode;\r\n        _this.name = ApplicationError.name;\r\n        Object.setPrototypeOf(_this, ApplicationError.prototype);\r\n        return _this;\r\n    }\r\n    return ApplicationError;\r\n}(Error));\r\nif (false) {\r\n    /** @type {?} */\r\n    ApplicationError.prototype.errorCode;\r\n    /** @type {?} */\r\n    ApplicationError.prototype.message;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/terms-param.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction TermsParam() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    TermsParam.prototype.commandName;\r\n    /** @type {?} */\r\n    TermsParam.prototype.category;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/server-param.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction ServerParam() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ServerParam.prototype.clientVersion;\r\n    /** @type {?} */\r\n    ServerParam.prototype.clientBuildID;\r\n    /** @type {?} */\r\n    ServerParam.prototype.clientBuildDate;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/environment-param.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction EnvironmentParam() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.clientEncryptionKey;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.cacheAge;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.cryptoJS;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.app_url;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.login_url;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.authUrl;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.soApiUrl;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/action.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction Action() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    Action.prototype.encryption;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.storeType;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.cacheType;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.cacheKey;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.actiontype;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.url;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.reportError;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.xmlRequest;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.cmdName;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.cmdParam;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.dependencyList;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.dependencyKey;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.isSelf;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.endPoint;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.httpMethod;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.prelogin;\r\n    /** @type {?|undefined} */\r\n    Action.prototype.isSSOEndPoint;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/list-item.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ListItem = /** @class */ (function () {\r\n    function ListItem($name, $url, $moduleName, $isEnabled, $isVisible) {\r\n        this.name = $name;\r\n        this.url = $url;\r\n        this.moduleName = $moduleName;\r\n        this.isEnabled = $isEnabled;\r\n        this.isVisible = $isVisible;\r\n    }\r\n    Object.defineProperty(ListItem.prototype, \"$name\", {\r\n        /**\r\n         * Getter $name\r\n         * @return string\r\n         */\r\n        get: /**\r\n         * Getter $name\r\n         * @return {?} string\r\n         */\r\n        function () {\r\n            return this.name;\r\n        },\r\n        /**\r\n         * Setter $name\r\n         * @param string value\r\n         */\r\n        set: /**\r\n         * Setter $name\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.name = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListItem.prototype, \"$url\", {\r\n        /**\r\n         * Getter $url\r\n         * @return string\r\n         */\r\n        get: /**\r\n         * Getter $url\r\n         * @return {?} string\r\n         */\r\n        function () {\r\n            return this.url;\r\n        },\r\n        /**\r\n         * Setter $url\r\n         * @param string value\r\n         */\r\n        set: /**\r\n         * Setter $url\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.url = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListItem.prototype, \"$moduleName\", {\r\n        /**\r\n        * Getter $moduleName\r\n        * @return string\r\n        */\r\n        get: /**\r\n         * Getter $moduleName\r\n         * @return {?} string\r\n         */\r\n        function () {\r\n            return this.moduleName;\r\n        },\r\n        /**\r\n         * Setter $moduleName\r\n         * @param string value\r\n         */\r\n        set: /**\r\n         * Setter $moduleName\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.moduleName = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListItem.prototype, \"$isEnabled\", {\r\n        /**\r\n         * Getter $isEnabled\r\n         * @return string\r\n         */\r\n        get: /**\r\n         * Getter $isEnabled\r\n         * @return {?} string\r\n         */\r\n        function () {\r\n            return this.isEnabled;\r\n        },\r\n        /**\r\n         * Setter $isEnabled\r\n         * @param string value\r\n         */\r\n        set: /**\r\n         * Setter $isEnabled\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.isEnabled = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListItem.prototype, \"$isVisible\", {\r\n        /**\r\n         * Getter $isVisible\r\n         * @return string\r\n         */\r\n        get: /**\r\n         * Getter $isVisible\r\n         * @return {?} string\r\n         */\r\n        function () {\r\n            return this.isVisible;\r\n        },\r\n        /**\r\n         * Setter $isVisible\r\n         * @param string value\r\n         */\r\n        set: /**\r\n         * Setter $isVisible\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.isVisible = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ListItem;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ListItem.prototype.name;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ListItem.prototype.url;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ListItem.prototype.moduleName;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ListItem.prototype.isEnabled;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ListItem.prototype.isVisible;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/reset-password.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction ResetPassword() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    ResetPassword.prototype.currentPassword;\r\n    /** @type {?|undefined} */\r\n    ResetPassword.prototype.newPassword;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/search-list-input.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction SearchListInput() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    SearchListInput.prototype.placeholder;\r\n    /** @type {?} */\r\n    SearchListInput.prototype.recentListItemsLabel;\r\n    /** @type {?} */\r\n    SearchListInput.prototype.allListItemsLabel;\r\n    /** @type {?} */\r\n    SearchListInput.prototype.selectedItemKey;\r\n    /** @type {?} */\r\n    SearchListInput.prototype.optionTemplate;\r\n    /** @type {?} */\r\n    SearchListInput.prototype.searchApi;\r\n    /** @type {?|undefined} */\r\n    SearchListInput.prototype.studyListHeaderLabel;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/search-list-item.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction SearchListItem() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    SearchListItem.prototype.id;\r\n    /** @type {?} */\r\n    SearchListItem.prototype.key;\r\n    /** @type {?} */\r\n    SearchListItem.prototype.prescreenInd;\r\n    /** @type {?} */\r\n    SearchListItem.prototype.reportingPeriod;\r\n    /** @type {?} */\r\n    SearchListItem.prototype.cohortInd;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/confirmation.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction Confirmation() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    Confirmation.prototype.message;\r\n    /** @type {?|undefined} */\r\n    Confirmation.prototype.heading;\r\n    /** @type {?|undefined} */\r\n    Confirmation.prototype.title;\r\n    /** @type {?|undefined} */\r\n    Confirmation.prototype.cancelLabel;\r\n    /** @type {?|undefined} */\r\n    Confirmation.prototype.okLabel;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/ctos-window.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n */\r\nvar  /**\r\n * @abstract\r\n */\r\nCtosWindow = /** @class */ (function () {\r\n    function CtosWindow() {\r\n    }\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    CtosWindow.prototype.getParameterByName = /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var url = AppWindow.getWindow().location.href;\r\n        name = name.replace(/[[]]/g, '\\$&');\r\n        /** @type {?} */\r\n        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\r\n        /** @type {?} */\r\n        var results = regex.exec(url);\r\n        if (!results) {\r\n            return null;\r\n        }\r\n        if (!results[2]) {\r\n            return '';\r\n        }\r\n        return decodeURIComponent(results[2].replace('/+/g', ' '));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CtosWindow.prototype.redirectAsPerParams = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @param {?} moduleId\r\n     * @return {?}\r\n     */\r\n    CtosWindow.prototype.userHasPrivilegesForModule = /**\r\n     * @param {?} moduleId\r\n     * @return {?}\r\n     */\r\n    function (moduleId) {\r\n        return of('');\r\n    };\r\n    /**\r\n     * @param {?} moduleName\r\n     * @return {?}\r\n     */\r\n    CtosWindow.prototype.navigateToModule = /**\r\n     * @param {?} moduleName\r\n     * @return {?}\r\n     */\r\n    function (moduleName) {\r\n    };\r\n    return CtosWindow;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/app-bootstrap.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n */\r\nvar  /**\r\n * @abstract\r\n */\r\nAppBootstrap = /** @class */ (function () {\r\n    function AppBootstrap() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AppBootstrap.prototype.init = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @param {?} environment\r\n     * @param {?=} serverInfo\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    AppBootstrap.prototype.call = /**\r\n     * @param {?} environment\r\n     * @param {?=} serverInfo\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (environment, serverInfo, actionParam) {\r\n    };\r\n    return AppBootstrap;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/about-resource.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction AboutResource() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    AboutResource.prototype.aboutBoxTitle;\r\n    /** @type {?} */\r\n    AboutResource.prototype.aboutBoxVersion;\r\n    /** @type {?} */\r\n    AboutResource.prototype.aboutBoxDisclaimer;\r\n    /** @type {?} */\r\n    AboutResource.prototype.logoUrl;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/password-resource.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction PasswordResource() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    PasswordResource.prototype.currentPassword;\r\n    /** @type {?} */\r\n    PasswordResource.prototype.newPassword;\r\n    /** @type {?} */\r\n    PasswordResource.prototype.confirmPassword;\r\n    /** @type {?} */\r\n    PasswordResource.prototype.lengthRule;\r\n    /** @type {?} */\r\n    PasswordResource.prototype.mixCharRule;\r\n    /** @type {?} */\r\n    PasswordResource.prototype.changePassword;\r\n    /** @type {?} */\r\n    PasswordResource.prototype.ok;\r\n    /** @type {?} */\r\n    PasswordResource.prototype.cancel;\r\n    /** @type {?} */\r\n    PasswordResource.prototype.nonEmptyField;\r\n    /** @type {?} */\r\n    PasswordResource.prototype.passwordMisMatchMessage;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/server-info.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction ServerInfo() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ServerInfo.prototype.clientVersion;\r\n    /** @type {?} */\r\n    ServerInfo.prototype.clientBuildID;\r\n    /** @type {?} */\r\n    ServerInfo.prototype.clientBuildDate;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/cache/cryptoJS-encryption.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Crypto jsencryption\r\n */\r\nvar  /**\r\n * Crypto jsencryption\r\n */\r\nCryptoJSEncryption = /** @class */ (function () {\r\n    function CryptoJSEncryption() {\r\n    }\r\n    /**\r\n     * @param {?} obj\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    CryptoJSEncryption.prototype.encrypt = /**\r\n     * @param {?} obj\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (obj, key) {\r\n        /** @type {?} */\r\n        var text = JSON.stringify(obj);\r\n        // const key = CryptoJS.enc.Base64.parse('TEST1234');\r\n        /** @type {?} */\r\n        var encrypted = AES.encrypt(text, key);\r\n        return encrypted.toString();\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    CryptoJSEncryption.prototype.decrypt = /**\r\n     * @param {?} text\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (text, key) {\r\n        // const key = CryptoJS.enc.Base64.parse('TEST1234');\r\n        /** @type {?} */\r\n        var decrypted = AES.decrypt(text.toString(), key);\r\n        /** @type {?} */\r\n        var obj = JSON.parse(decrypted.toString(enc.Utf8));\r\n        return obj;\r\n    };\r\n    return CryptoJSEncryption;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/cache/encryption.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Encryption\r\n * @record\r\n */\r\nfunction Encryption() { }\r\nif (false) {\r\n    /**\r\n     * @param {?} obj\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    Encryption.prototype.encrypt = function (obj, key) { };\r\n    /**\r\n     * @param {?} text\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    Encryption.prototype.decrypt = function (text, key) { };\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/tab-item.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction TabItem() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    TabItem.prototype.label;\r\n    /** @type {?} */\r\n    TabItem.prototype.routePath;\r\n    /** @type {?|undefined} */\r\n    TabItem.prototype.enable;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/nested-item.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction NestedItem() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    NestedItem.prototype.name;\r\n    /** @type {?|undefined} */\r\n    NestedItem.prototype.children;\r\n    /** @type {?|undefined} */\r\n    NestedItem.prototype.key;\r\n    /** @type {?|undefined} */\r\n    NestedItem.prototype.level;\r\n    /** @type {?|undefined} */\r\n    NestedItem.prototype.code;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/http-action-type.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar HttpActionType = {\r\n    get: \"Get\",\r\n    post: \"Post\",\r\n    delete: \"Delete\",\r\n    put: \"Put\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/common-routes.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CommonRoutes = /** @class */ (function () {\r\n    function CommonRoutes() {\r\n    }\r\n    CommonRoutes.data = [\r\n        {\r\n            'path': 'new-plans',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'app1',\r\n                'moduleId': 35\r\n            }\r\n        },\r\n        {\r\n            'path': 'new-study',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'app2',\r\n                'moduleId': 36\r\n            }\r\n        }, {\r\n            'path': 'new-countries',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'app3',\r\n                'moduleId': 9\r\n            }\r\n        }, {\r\n            'path': 'new-sites',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'app4',\r\n                'moduleId': 5\r\n            }\r\n        }, {\r\n            'path': 'new-login',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'login',\r\n                'moduleId': 39\r\n            }\r\n        }\r\n    ];\r\n    return CommonRoutes;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CommonRoutes.data;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: common-library.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { ALERT_TYPE, APIEndPoints, AppBootstrap, AppUtil, AppWindow, ApplicationError, BASE_HREF, BASE_TERMS_PARAMS, BaseConnectionService, BasePayloadCommandService, BaseTermsService, BreadcrumbService, COMMON, CUSTOM_ERROR_CODES, CacheKey, CacheStoreManagerService, CacheType, CommonAngularMaterialModule, CommonLibraryModule, CommonRoutes, ComponentsModule, ConfigurationService, ConfirmEqualValidatorDirective, ConfirmationDialogComponent, CryptoJSEncryption, CtosWindow, DATE_FORMAT, DEBOUNCE_TIME, DEFAULT_HELP_ID, DIALOG_CONFIG, DISPATCH_URL, DataService, DependencyManagerService, DialogService, DisplayBannerComponent, EncryptionAction, EncryptionService, ErrorTermsService, ErrorTermsStoreService, HELP_ID_CONSTANTS, HELP_INDEX_PAGE_PATH, HELP_MAP, HOSTED_HELP_COMMAND, HOSTED_HELP_URL, HttpActionType, HttpVerbs, INDICATOR, InfoComponent, LOCALE_APP_TERMS_PARAMS, LOGGING_SERVLET_URL, LOGIN_PARAMS, LOGOUT_PARAMS, LabelControlDirective, ListItem, LocaleAppResourcesService, LoginTermsService, LogoutService, NestedDropdownComponent, NotesComponent, PCEService, PayloadCommandService, REPORTING_PERIOD_CONST, ResetPasswordService, ServerStatusService, SignedDecimalDirective, SignedIntegerDirective, SpinnerService, StoreType, StringUtil, UserIdleConfig, UserIdleService, UserProfile, VALID_DATE_FORMATS, CTOS_DATE_FORMATS as ɵa, CTOSDateAdapter as ɵb, MAT_SCROLL_STRATEGY_FACTORY as ɵc, BreadcrumbComponent as ɵd, MainHeaderComponent as ɵe, InMemoryService as ɵf, RestApiService as ɵg, HelpService as ɵh, SubHeaderComponent as ɵi, SearchListComponent as ɵj, PasswordComponent as ɵk, ExportComponent as ɵl, RedirectComponent as ɵm, ContextMenuComponent as ɵn, TabComponent as ɵo, AuthMainHeaderComponent as ɵp };\n//# sourceMappingURL=common-library.js.map\n","import { DatePipe, CommonModule, DecimalPipe } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Component, Input, Output, ViewEncapsulation, ChangeDetectorRef, Pipe, Inject, ViewChild, ElementRef, Renderer2, HostListener, ChangeDetectionStrategy, NgModule, ErrorHandler } from '@angular/core';\nimport { APIEndPoints, AppUtil, CacheKey, CacheType, StoreType, EncryptionAction, COMMON, ApplicationError, HttpVerbs, LOGGING_SERVLET_URL, AppWindow, StringUtil, PayloadCommandService, BaseConnectionService, LogoutService, ConfigurationService as ConfigurationService$1, ServerStatusService, BASE_HREF, CtosWindow, LocaleAppResourcesService, DialogService, ConfirmationDialogComponent, DisplayBannerComponent, ErrorTermsStoreService, SpinnerService, CommonLibraryModule, CommonAngularMaterialModule, EncryptionService, BASE_TERMS_PARAMS, LOCALE_APP_TERMS_PARAMS, LOGIN_PARAMS as LOGIN_PARAMS$1, ErrorTermsService, BaseTermsService, LoginTermsService, AppBootstrap, ListItem, UserProfile, VALID_DATE_FORMATS } from 'common-library';\nimport { FormControl, Validators, FormBuilder, FormsModule } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatSnackBar, MatMenuModule } from '@angular/material';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { __spread, __values, __extends, __read } from 'tslib';\nimport { Router, RouterModule } from '@angular/router';\nimport { Subject, of, BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, bufferTime, filter, tap, finalize, take, debounceTime } from 'rxjs/operators';\nimport * as momentNS from 'moment';\nimport { scaleTime, select } from 'd3';\nimport { calculateViewDimensions, ColorHelper } from '@swimlane/ngx-charts/release';\nimport { curveLinear, line, area } from 'd3-shape';\nimport { scaleTime as scaleTime$1, scaleLinear } from 'd3-scale';\nimport { TooltipArea, CircleSeriesComponent, LineSeriesComponent, NgxChartsModule } from '@swimlane/ngx-charts';\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { Diagram, Model, GraphObject, Spot, Node, Link, Shape, Binding, Point, TextBlock, Picture, Map } from 'gojs';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/service-constant.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar APP_DATA = 'getAppData';\r\n/** @type {?} */\r\nvar LOGIN_PARAMS = {\r\n    commandName: 'GetTerms',\r\n    categoriesTerms: {\r\n        category: 'terms'\r\n    },\r\n    categories: {\r\n        category: 'login'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar ERROR_PARAMS = {\r\n    commandName: 'GetTerms',\r\n    categoriesTerms: {\r\n        category: 'terms'\r\n    },\r\n    categoriesError: {\r\n        category: 'error'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar USER_PARAMS = {\r\n    commandName: 'getUserData',\r\n    app: {\r\n        appType: 'SOMAIN'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar UPDATE_USER_PREFERENCE_ACTION_PARAMS = {\r\n    endPoint: true,\r\n    url: APIEndPoints.USER_PREFERENCE\r\n};\r\n/** @type {?} */\r\nvar USER_ACTION_PARAMS = {\r\n    endPoint: true\r\n};\r\n/** @type {?} */\r\nvar GSK_LOGO_URL = 'assets/images/';\r\n/** @type {?} */\r\nvar ALERT_CONFIRM_URL = 'assets/images/alertConfirm.png';\r\n/** @type {?} */\r\nvar UPDATE_CHART_PREFERNCE = {\r\n    commandName: 'updateUserPreference',\r\n    appType: 'SOMAIN',\r\n    category: 'PreferenceChartLegendPlan'\r\n};\r\n/** @type {?} */\r\nvar FILTER_PARAMS = {\r\n    commandName: 'getFilterData',\r\n    filterType: {\r\n        HSTDY: 'HSTDY',\r\n        STDY: 'STDY'\r\n    },\r\n    filterCriteria: {\r\n        THERAPY: 'THERAPY',\r\n        INDICN: 'INDICN',\r\n        PRGM: 'PRGM',\r\n        ASSET: 'ASSET'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar STUDYSUMMARY_COMMAND = {\r\n    commandName: 'GetStudySummary'\r\n};\r\n/** @type {?} */\r\nvar NA_TOOLTIP = 'Previously approved plans and their adjustments do not contain projections';\r\n/** @type {?} */\r\nvar REF_CARD_HEAD = 'Reference Card';\r\n/** @type {?} */\r\nvar STUDYSUMMARY_TARGET = 'target';\r\n/** @type {?} */\r\nvar UNIQUECOHORT = 1;\r\n/** @type {?} */\r\nvar UNIQUE = 1;\r\n/** @type {?} */\r\nvar WEEKS = \"weeks\";\r\n/** @type {?} */\r\nvar NOVALUE = \"-\";\r\n/** @type {?} */\r\nvar APPROVE = 'Approve';\r\n/** @type {?} */\r\nvar EDIT = 'Edit';\r\n/** @type {?} */\r\nvar VIEW = 'View';\r\n/** @type {?} */\r\nvar LABEL_ACTUAL = 'actual';\r\n/** @type {?} */\r\nvar SingleStudy = {\r\n    commandName: 'target'\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONSTANTS = {\r\n    MODULE_RUNWAY: 1,\r\n    MODULE_STUYD_LIST: 2,\r\n    MODULE_PLANNING: 3,\r\n    MODULE_STUDY: 4,\r\n    MODULE_SITES: 5,\r\n    MODULE_SCENARIO: 6,\r\n    MODULE_DATA_MANAGEMENT: 7,\r\n    MODULE_COUNTRY: 9,\r\n    MODULE_HISTORICAL: 18,\r\n    MODULE_TEMPLATES: 10,\r\n    MODULE_COST: 16,\r\n    MODULE_ENROLLMENT: 27,\r\n    MODULE_ADDMAP_COHORT: 28,\r\n    MODULE_GRANT_PLAN: 31,\r\n    MODULE_NEW_PLANNING: 35,\r\n    MODULE_NEW_STUDY: 36,\r\n    MODULE_NEW_COUNTRIES: 37,\r\n    MODULE_NEW_SITES: 38\r\n};\r\n/** @type {?} */\r\nvar PAGE_CONSTANTS = [\r\n    {\r\n        id: 1,\r\n        spaName: '',\r\n        routeUrl: '',\r\n        isMultiStudyView: true\r\n    },\r\n    {\r\n        id: 2,\r\n        spaName: '',\r\n        routeUrl: '',\r\n        isMultiStudyView: true\r\n    },\r\n    {\r\n        id: 3,\r\n        spaName: '',\r\n        routeUrl: '',\r\n        isMultiStudyView: false\r\n    },\r\n    // {\r\n    //   id: 4,\r\n    //   spaName: '',\r\n    //   routeUrl: '',\r\n    //   isMultiStudyView: false\r\n    // },\r\n    // {\r\n    //   id: 5,\r\n    //   spaName: '',\r\n    //   routeUrl: '',\r\n    //   isMultiStudyView: false\r\n    // },\r\n    {\r\n        id: 6,\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 7,\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    // {\r\n    //   id: 9,\r\n    //   spaName: '',\r\n    //   routeUrl: '',\r\n    //   isMultiStudyView: false\r\n    // },\r\n    {\r\n        id: 10,\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 16,\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 18,\r\n        spaName: '',\r\n        routeUrl: '',\r\n        isMultiStudyView: true\r\n    },\r\n    {\r\n        id: 27,\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 28,\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 31,\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 35,\r\n        spaName: 'app1',\r\n        routeUrl: '/new-plans',\r\n        isMultiStudyView: false,\r\n        isAngularModule: true\r\n    },\r\n    {\r\n        id: 4,\r\n        spaName: 'app2',\r\n        routeUrl: '/new-study',\r\n        isMultiStudyView: false,\r\n        isAngularModule: true\r\n    },\r\n    {\r\n        id: 9,\r\n        spaName: 'app3',\r\n        routeUrl: '/new-countries',\r\n        isMultiStudyView: false,\r\n        isAngularModule: true\r\n    },\r\n    {\r\n        id: 5,\r\n        spaName: 'app4',\r\n        routeUrl: '/new-sites',\r\n        isMultiStudyView: false,\r\n        isAngularModule: true\r\n    },\r\n    {\r\n        id: 39,\r\n        spaName: 'login',\r\n        routeUrl: '/new-login',\r\n        isMultiStudyView: false,\r\n        isAngularModule: true\r\n    },\r\n    {\r\n        id: 'STDLST',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'RNWYCHRT',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'MNGHILST',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'VSTRMETC',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'VENRLMETC',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'VSCRNMTC',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'VRNREMTC',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'VINVSCRD',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'MNGPLNTEM',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'MNGRTATEM',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'ENROVRW',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'STDMLSTN',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'ENTRCSTOV',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'DFENTRCST',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'CNTRPERF',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'ENRODET',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'CNTRDM',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'SCRCRD',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'MNGPLN',\r\n        spaName: 'app1',\r\n        routeUrl: '/new-plans',\r\n        isMultiStudyView: false\r\n    },\r\n    {\r\n        id: 'MNGCNTRY',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'DFNCNTPLN',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'MCRA',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'APPRPLN',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'DFCNPLNCST',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'INTERIM',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'DFNSOLVE',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    },\r\n    {\r\n        id: 'SSV',\r\n        spaName: '',\r\n        routeUrl: ''\r\n    }\r\n];\r\n/** @type {?} */\r\nvar INVALID_URL = \"Invalid url\";\r\n/** @type {?} */\r\nvar MENU = {\r\n    studyList: {\r\n        name: 'AllStudiesTab',\r\n        url: '/studyList',\r\n        moduleName: 'MODULE_STUYD_LIST'\r\n    },\r\n    runWay: {\r\n        name: 'RecruitmentTab',\r\n        url: '/runway',\r\n        moduleName: 'MODULE_RUNWAY'\r\n    },\r\n    ant: {\r\n        name: 'historicalAnalysisTab',\r\n        url: '/ant',\r\n        moduleName: 'MODULE_HISTORICAL'\r\n    },\r\n    eb: {\r\n        name: 'EBTab',\r\n        url: '/eb',\r\n        moduleName: 'MODULE_ENROLLMENT'\r\n    },\r\n    password: {\r\n        name: 'HeaderChangePassword',\r\n        url: '/password'\r\n    },\r\n    help: {\r\n        name: 'HeaderProfileHelp',\r\n        url: '/help'\r\n    },\r\n    about: {\r\n        name: 'HeaderAboutStudyOptimizer',\r\n        url: '/about'\r\n    },\r\n    logout: {\r\n        name: 'HeaderLogout',\r\n        url: '/logout'\r\n    },\r\n    // study: {\r\n    //   name: 'StudyViewsTab',\r\n    //   url: '/study',\r\n    //   moduleName: 'MODULE_STUDY'\r\n    // },\r\n    // countries: {\r\n    //   name: 'CountryViewsTab',\r\n    //   url: '/countries',\r\n    //   moduleName: 'MODULE_COUNTRY'\r\n    // },\r\n    // sites: {\r\n    //   name: 'SiteTab',\r\n    //   url: '/sites',\r\n    //   moduleName: 'MODULE_SITES'\r\n    // },\r\n    plans: {\r\n        name: 'PlansTab',\r\n        url: '/plan',\r\n        moduleName: 'MODULE_PLANNING'\r\n    },\r\n    newStudy: {\r\n        name: 'StudyViewsTab',\r\n        url: '/newStudy',\r\n        moduleName: 'MODULE_STUDY'\r\n    },\r\n    newCountries: {\r\n        name: 'CountryViewsTab',\r\n        url: '/newCountries',\r\n        moduleName: 'MODULE_COUNTRY'\r\n    },\r\n    newSites: {\r\n        name: 'SiteTab',\r\n        url: '/newSites',\r\n        moduleName: 'MODULE_SITES'\r\n    },\r\n    newPlans: {\r\n        name: 'PlansTab',\r\n        url: '/newPlans',\r\n        moduleName: 'MODULE_NEW_PLANNING'\r\n    },\r\n    logo: {\r\n        name: 'logoName'\r\n    },\r\n    appInfo: {\r\n        name: 'appInfo'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar PASSWORD = {\r\n    currentpsw: 'CurrentPassword',\r\n    newpsw: 'NewPassword',\r\n    confirmpsw: 'ConfirmPassword',\r\n    lengthRule: 'LENGHTHRULE',\r\n    mixCharRule: 'MIXCHARRULENEWPLANS',\r\n    changePassword: 'ChangePassword',\r\n    cancel: 'Cancel',\r\n    ok: 'OK'\r\n};\r\n/** @type {?} */\r\nvar ABOUT = {\r\n    aboutBoxTitle: 'aboutBoxTitle',\r\n    aboutBoxVersion: 'aboutBoxVersion',\r\n    aboutBoxPatch: 'aboutBoxPatch',\r\n    aboutBoxDisclaimer: 'aboutBoxDisclaimer'\r\n};\r\n/** @type {?} */\r\nvar COMMAND = {\r\n    PLANLIST: 'GetPlanList',\r\n    STUDYSUMMARY: 'GetStudySummary',\r\n    UPDATEUSAGEMETRICS: 'updateUsageMetrics',\r\n    CREATE_PLAN_TEMPLATE: 'createPlanTemplate',\r\n    GET_TEMPLATE_LIST: 'getTemplateList',\r\n    COPYPLAN: 'copyStudyPlan',\r\n    DELTEPLAN: 'deleteStudyPlan',\r\n    APPROVEPLAN: 'approvePlan',\r\n    APPROVEADJUSTMENT: 'approveAdjustStudyPlan',\r\n    KEEPUSERSESSIONALIVE: 'keepUserSessionAlive',\r\n    GET_STUDY_TAGS: 'getStudyTags',\r\n    GET_STUDY_TAGS_LIST: 'getStudyTagList',\r\n    STUDY_DETAILS: 'getStudyDetails',\r\n    STUDY_SETTINGS: 'getStudySettings',\r\n    GET_FILTER_COUNTRY_DATA: 'GetFilterCountryData',\r\n    GET_COHORTS_DETAILS: 'getCohortsDetails',\r\n    UPDATE_COUNTRY_NOTES: 'updateCountryNotes',\r\n    GETALLCURVES: 'GetAllCurves',\r\n    GETALLMILESTONES: 'getAllMileStones'\r\n};\r\n/** @type {?} */\r\nvar DIALOG_CONFIG = {\r\n    COPY_PLAN: {\r\n        ID: 'CopyPlanDialog',\r\n        WIDTH: '450px',\r\n        PANEL_CLASS: 'copy-plan-dialog'\r\n    },\r\n    DELETE_PLAN: {\r\n        ID: 'DeletePlanDialog',\r\n        WIDTH: '310px',\r\n        HEIGHT: '180px',\r\n        PANEL_CLASS: 'delete-plan-confirmation-dialog'\r\n    },\r\n    APPROVE_PLAN: {\r\n        ID: 'ApprovePlanDialog',\r\n        WIDTH: '450px',\r\n        PANEL_CLASS: 'approve-plan-dialog'\r\n    },\r\n    COPY_PLAN_SUCCESS: {\r\n        WIDTH: '365px',\r\n        PANEL_CLASS: 'copy-plan-success-dialog'\r\n    },\r\n    CONFIRM_UNSAVED_DATA: {\r\n        WIDTH: '310px',\r\n        HEIGHT: '190',\r\n        PANEL_CLASS: 'unsaved-data-confirmation-dialog'\r\n    },\r\n    MC_ERROR_DIALOG: {\r\n        ID: 'MCErrorDialog',\r\n        WIDTH: '350px',\r\n        PANEL_CLASS: 'mc-error-dialog'\r\n    }\r\n};\r\n/** @type {?} */\r\nvar USER_PREFERENCES = {\r\n    commandName: 'updateUserPreference'\r\n};\r\n/** @type {?} */\r\nvar ALERT_TYPE = {\r\n    CancelLabel: 'CancelLabel',\r\n    OkLabel: 'OkLabel',\r\n    OK: 'OK',\r\n    YesLabel: 'YesLabel',\r\n    NoLabel: 'NoLabel'\r\n};\r\n/** @type {?} */\r\nvar DISPATCH_URL = window.location.origin + \"/dv/StudyOptimizer/dispatch\";\r\n/** @type {?} */\r\nvar PAGE_CONSTANTS_NEW = [\r\n    {\r\n        url: 'card',\r\n        name: 'PLANCARD'\r\n    },\r\n    {\r\n        url: 'grid',\r\n        name: 'PLANGRID'\r\n    },\r\n    {\r\n        url: 'rate-adjustments',\r\n        name: 'NMCRA'\r\n    },\r\n    {\r\n        url: 'plan-properties',\r\n        name: 'PLANPROP'\r\n    },\r\n    {\r\n        url: 'plan-design',\r\n        name: 'PLANDSGN'\r\n    },\r\n    {\r\n        url: 'countries',\r\n        name: 'NCTRYDTL'\r\n    },\r\n    {\r\n        url: 'reports',\r\n        name: 'NREPORTS'\r\n    }\r\n];\r\n/** @type {?} */\r\nvar MILESTONE_GRAPHS = {\r\n    TFSI_LABEL: 'TFSI:Target First Site Initiated',\r\n    TFSI_SHORT: 'TFSI',\r\n    TFSI: 'Target First Site Initiated',\r\n    TLSR_LABEL: 'TLSR:Target Last Subject Randomized',\r\n    TLSR_SHORT: 'TLSR',\r\n    TLSR: 'Target Last Subject Randomized',\r\n    PFSI_LABEL: 'PFSI:Planned First Site Initiated:',\r\n    PFSI_SHORT: 'PFSI',\r\n    PFSI: 'Planned First Site Initiated',\r\n    PFSR_LABEL: 'PFSR:Planned First Subject Randomized',\r\n    PFSR_SHORT: 'PFSR',\r\n    PFSR: 'Planned First Subject Randomized',\r\n    PLSI_LABEL: 'PLSI:Planned Last Site Initiated',\r\n    PLSI_SHORT: 'PLSI',\r\n    PLSI: 'Planned Last Site Initiated',\r\n    PLSR_LABEL: 'PFSR:Planned Last Subject Randomized',\r\n    PLSR_SHORT: 'PLSR',\r\n    PLSR: 'Planned Last Subject Randomized',\r\n    DAYS_FROM_TFSI: ' days from TFSI',\r\n    DAYS_FROM_TLSR: ' days from TLSR',\r\n    SPACES: '     '\r\n};\r\n/** @type {?} */\r\nvar REQUIRED_ERROR_OBJ = {\r\n    required: true\r\n};\r\n/** @type {?} */\r\nvar NEWPLANTAB = 'NEWPLANTAB';\r\n/** @type {?} */\r\nvar CUE_CARD_HEADER_LABELS = {\r\n    sourceTargets: 'Source Targets',\r\n    studyTargets: 'Study Targets',\r\n    worldwide: 'Worldwide',\r\n    'parent Plan': 'Parent Plan',\r\n    actuals: 'Actuals',\r\n    projections: 'Projections',\r\n    country: 'Country',\r\n};\r\n/** @type {?} */\r\nvar EMPTY = '';\r\n/** @type {?} */\r\nvar DIALOG_ACIONS = {\r\n    OK: 'OK',\r\n    CANCEL: 'CANCEL',\r\n    CONTINUE: 'CONTINUE',\r\n    APPLY: 'APPLY'\r\n};\r\n/** @type {?} */\r\nvar MIN_MAX_RANGE = {\r\n    MAX_CHAR: 255,\r\n};\r\n/** @type {?} */\r\nvar ZERO = 0;\r\n/** @type {?} */\r\nvar GEO_LEVELS = {\r\n    COUNTRY: 'Country',\r\n    WW: 'WW',\r\n    REGION: 'Region'\r\n};\r\n/** @type {?} */\r\nvar DEFAULT_PREFERENCE_GRID_COLUMN = {\r\n    PreferenceGridColumns: {},\r\n    appType: 'SOMAIN',\r\n    category: 'PreferenceGridColumns'\r\n};\r\n/** @type {?} */\r\nvar SNACKBAR_POSITIVE = 'positive-snackbar';\r\n/** @type {?} */\r\nvar SNACKBAR_NEGATIVE = 'error-snackbar';\r\n/** @type {?} */\r\nvar ICON_POSITIVE = 'assets/images/manageplans/icon-positive.png';\r\n/** @type {?} */\r\nvar ICON_NEGATIVE = 'assets/images/manageplans/icon-error.png';\r\n/** @type {?} */\r\nvar MESSAGETYPE_POSITIVE = 'positive';\r\n/** @type {?} */\r\nvar MESSAGETYPE_NEGATIVE = 'negative';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/enums/preference-category.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar PreferenceCategory = {\r\n    PreferenceBookmarks: \"PreferenceBookmarks\",\r\n    PreferenceChartLegendPlan: \"PreferenceChartLegendPlan\",\r\n    PreferenceChartLegendStudy: \"PreferenceChartLegendStudy\",\r\n    PreferenceGridColumns: \"PreferenceGridColumns\",\r\n    PreferenceLayout: \"PreferenceLayout\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/ctos-utils.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment = momentNS;\r\n/**\r\n * CTOS util - Class containing static methods that are specific to the SO domain such as computations of enrolment parameters\r\n */\r\nvar  /**\r\n * CTOS util - Class containing static methods that are specific to the SO domain such as computations of enrolment parameters\r\n */\r\nCTOSUtil = /** @class */ (function () {\r\n    function CTOSUtil() {\r\n    }\r\n    /**\r\n     * Computes and returns the maximum enrollment for the specified enrollment target and over recruitment percent\r\n     *\r\n     * @param enrollmentTarget\r\n     * @param overRecruitmentPercent\r\n     * @returns (string | number)\r\n     * @memberof CTOSUtil\r\n     */\r\n    /**\r\n     * Computes and returns the maximum enrollment for the specified enrollment target and over recruitment percent\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} enrollmentTarget\r\n     * @param {?} overRecruitmentPercent\r\n     * @return {?} (string | number)\r\n     */\r\n    CTOSUtil.computeMaximumEnrollment = /**\r\n     * Computes and returns the maximum enrollment for the specified enrollment target and over recruitment percent\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} enrollmentTarget\r\n     * @param {?} overRecruitmentPercent\r\n     * @return {?} (string | number)\r\n     */\r\n    function (enrollmentTarget, overRecruitmentPercent) {\r\n        /** @type {?} */\r\n        var maximumEnrollment;\r\n        if (AppUtil.isDefined(enrollmentTarget, true)) {\r\n            if (AppUtil.isDefined(overRecruitmentPercent, true)) {\r\n                maximumEnrollment = Math.floor(enrollmentTarget + ((overRecruitmentPercent * enrollmentTarget) / 100));\r\n            }\r\n            else {\r\n                maximumEnrollment = enrollmentTarget;\r\n            }\r\n        }\r\n        if (!AppUtil.isDefined(maximumEnrollment, true)) {\r\n            maximumEnrollment = '';\r\n        }\r\n        return maximumEnrollment;\r\n    };\r\n    /**\r\n     * Computes and returns the randomization rate for the specified screening rate and screen failure percentage\r\n     *\r\n     * @param SR\r\n     * @param SFR\r\n     * @returns (string | number)\r\n     * @memberof CTOSUtil\r\n     */\r\n    /**\r\n     * Computes and returns the randomization rate for the specified screening rate and screen failure percentage\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} SR\r\n     * @param {?} SFR\r\n     * @param {?=} formatValue\r\n     * @return {?} (string | number)\r\n     */\r\n    CTOSUtil.computeRR = /**\r\n     * Computes and returns the randomization rate for the specified screening rate and screen failure percentage\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} SR\r\n     * @param {?} SFR\r\n     * @param {?=} formatValue\r\n     * @return {?} (string | number)\r\n     */\r\n    function (SR, SFR, formatValue) {\r\n        if (formatValue === void 0) { formatValue = true; }\r\n        /** @type {?} */\r\n        var RR = null;\r\n        if (AppUtil.isDefined(SR, true)) {\r\n            if (AppUtil.isDefined(SFR, true)) {\r\n                RR = SR * (1 - SFR / 100);\r\n            }\r\n            else {\r\n                RR = SR;\r\n            }\r\n        }\r\n        else {\r\n            RR = '';\r\n        }\r\n        if (AppUtil.isDefined(RR, true) && formatValue) {\r\n            RR = AppUtil.formatDecimal(RR, '0.1-3');\r\n        }\r\n        return RR;\r\n    };\r\n    /**\r\n     * Computes and returns the screening rate for the specified randomization rate and screen failure percentage\r\n     *\r\n     * @param RR\r\n     * @param SFR\r\n     * @returns (string | number)\r\n     * @memberof CTOSUtil\r\n     */\r\n    /**\r\n     * Computes and returns the screening rate for the specified randomization rate and screen failure percentage\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} RR\r\n     * @param {?} SFR\r\n     * @return {?} (string | number)\r\n     */\r\n    CTOSUtil.computeSR = /**\r\n     * Computes and returns the screening rate for the specified randomization rate and screen failure percentage\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} RR\r\n     * @param {?} SFR\r\n     * @return {?} (string | number)\r\n     */\r\n    function (RR, SFR) {\r\n        /** @type {?} */\r\n        var SR = null;\r\n        if (AppUtil.isDefined(RR, true)) {\r\n            if (AppUtil.isDefined(SFR, true)) {\r\n                SR = RR / (1 - SFR / 100);\r\n            }\r\n            else {\r\n                SR = RR;\r\n            }\r\n        }\r\n        else {\r\n            SR = '';\r\n        }\r\n        if (AppUtil.isDefined(SR, true)) {\r\n            SR = AppUtil.formatDecimal(SR, '0.1-3');\r\n        }\r\n        return SR;\r\n    };\r\n    /**\r\n     * Computes and returns the active number of sites for the specified total number of sites and actively screening sites percentage\r\n     *\r\n     * @param numSites\r\n     * @param SAS\r\n     * @returns (string | number)\r\n     * @memberof CTOSUtil\r\n     */\r\n    /**\r\n     * Computes and returns the active number of sites for the specified total number of sites and actively screening sites percentage\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} numSites\r\n     * @param {?} SAS\r\n     * @return {?} (string | number)\r\n     */\r\n    CTOSUtil.computeActiveSites = /**\r\n     * Computes and returns the active number of sites for the specified total number of sites and actively screening sites percentage\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} numSites\r\n     * @param {?} SAS\r\n     * @return {?} (string | number)\r\n     */\r\n    function (numSites, SAS) {\r\n        /** @type {?} */\r\n        var value = '';\r\n        if (AppUtil.isDefined(numSites, true) && AppUtil.isDefined(SAS, true)) {\r\n            value = Math.floor(numSites * (SAS / 100));\r\n            if (!AppUtil.isDefined(value, true)) {\r\n                value = '';\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Computes and returns the actively screening sites percentage for the specified total number of sites and active number of sites\r\n     *\r\n     * @param numSites\r\n     * @param activeSites\r\n     * @returns (string | number)\r\n     * @memberof CTOSUtil\r\n     */\r\n    /**\r\n     * Computes and returns the actively screening sites percentage for the specified total number of sites and active number of sites\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} numSites\r\n     * @param {?} activeSites\r\n     * @return {?} (string | number)\r\n     */\r\n    CTOSUtil.computeSAS = /**\r\n     * Computes and returns the actively screening sites percentage for the specified total number of sites and active number of sites\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} numSites\r\n     * @param {?} activeSites\r\n     * @return {?} (string | number)\r\n     */\r\n    function (numSites, activeSites) {\r\n        /** @type {?} */\r\n        var value = '';\r\n        if (AppUtil.isDefined(numSites, true)) {\r\n            value = (activeSites / numSites) * 100;\r\n            if (!AppUtil.isDefined(value, true)) {\r\n                value = '';\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Computes and returns the first subject screening date for the specified first site initiation date and\r\n     * the number of days from first site initiation to first subject screening\r\n     *\r\n     * @param FSI\r\n     * @param SITOFSSDAYS\r\n     * @returns momentNS.Moment\r\n     * @memberof CTOSUtil\r\n     */\r\n    /**\r\n     * Computes and returns the first subject screening date for the specified first site initiation date and\r\n     * the number of days from first site initiation to first subject screening\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} FSI\r\n     * @param {?} SITOFSSDAYS\r\n     * @return {?} momentNS.Moment\r\n     */\r\n    CTOSUtil.computeFSS = /**\r\n     * Computes and returns the first subject screening date for the specified first site initiation date and\r\n     * the number of days from first site initiation to first subject screening\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?} FSI\r\n     * @param {?} SITOFSSDAYS\r\n     * @return {?} momentNS.Moment\r\n     */\r\n    function (FSI, SITOFSSDAYS) {\r\n        /** @type {?} */\r\n        var FSS = null;\r\n        if (FSI && FSI.isValid() && AppUtil.isDefined(SITOFSSDAYS, true)) {\r\n            FSS = FSI.add(SITOFSSDAYS, 'days');\r\n        }\r\n        return FSS;\r\n    };\r\n    /**\r\n     * Returns the module information viz. module, page and study key\r\n     *\r\n     * @param  pageName\r\n     * @param  studykey\r\n     * @param  moduleName\r\n     * @returns ModuleInfo\r\n     * @memberof CTOSUtil\r\n     */\r\n    /**\r\n     * Returns the module information viz. module, page and study key\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?=} pageName\r\n     * @param {?=} studykey\r\n     * @param {?=} moduleName\r\n     * @return {?} ModuleInfo\r\n     */\r\n    CTOSUtil.getModuleInfo = /**\r\n     * Returns the module information viz. module, page and study key\r\n     *\r\n     * \\@memberof CTOSUtil\r\n     * @param {?=} pageName\r\n     * @param {?=} studykey\r\n     * @param {?=} moduleName\r\n     * @return {?} ModuleInfo\r\n     */\r\n    function (pageName, studykey, moduleName) {\r\n        if (moduleName === void 0) { moduleName = NEWPLANTAB; }\r\n        /** @type {?} */\r\n        var Obj = {\r\n            moduleName: moduleName\r\n        };\r\n        if (pageName) {\r\n            Obj.pageName = pageName;\r\n        }\r\n        if (studykey) {\r\n            Obj.studykey = studykey;\r\n        }\r\n        return Obj;\r\n    };\r\n    return CTOSUtil;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/chart-legend-mapping.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar mapping = {\r\n    'studyTargets': 'Tar',\r\n    'milestoneDates': 'Mil',\r\n    'scrAll': '',\r\n    'sitePlannedBase': 'BasPSI',\r\n    'scrInterimAnalysis': '',\r\n    'enrollPlannedAdj': 'AdjPSR',\r\n    'totalActual': '',\r\n    'enrollFrozenProj': 'FroPrSR',\r\n    'siteFrozenProj': 'FroPrSI',\r\n    'totalCurrentProj': '',\r\n    'enrollUpdatedProj': 'UpdPrSR',\r\n    'siteUpdatedProj': 'UpdPrSI',\r\n    'totalPlannedApproved': '',\r\n    'totalPlannedAdj': '',\r\n    'scrActual': 'ActSS',\r\n    'totalPlannedBase': '',\r\n    'scrCurrentProj': 'CurPrSS',\r\n    'enrollAll': '',\r\n    'aheadBehindBox': 'aheadBehind',\r\n    'scrFailureActual': 'ActSF',\r\n    'enrollActual': 'ActPSR',\r\n    'extendProjs': 'Ext',\r\n    'scrPlannedApproved': 'AppPSS',\r\n    'enrollCurrentProj': 'CurPrSR',\r\n    'studyCostSymbols': '',\r\n    'todaysDate': 'today',\r\n    'scrPlannedBase': 'BasPSS',\r\n    'dropoutActual': 'ActDO',\r\n    'cohortPerf': '',\r\n    'scrPlannedAdj': 'AdjPSS',\r\n    'enrollPlanConfBoundary': '',\r\n    'sitePlannedAdj': 'AdjPSI',\r\n    'siteActual': 'ActSI',\r\n    'scrFrozenProj': 'FroPrSS',\r\n    'enrollPlannedApproved': 'AppPSR',\r\n    'siteCurrentProj': 'CurPrSI',\r\n    'sitePlannedApproved': 'AppPSI',\r\n    'scrUpdatedProj': 'UpdPrSS',\r\n    'enrollPlannedBase': 'BasPSR',\r\n    'cbApproved': 'CBApp',\r\n    'cbAdjustment': 'CBAdj',\r\n    'cbCurrentProjection': 'CBCurPr',\r\n    'cbBase': 'CBBas'\r\n};\r\n// to make Conf Boundary work for Flex and HTML separately\r\n/** @type {?} */\r\nvar mappingPref = {\r\n    'studyTargets': 'Tar',\r\n    'milestoneDates': 'Mil',\r\n    'scrAll': '',\r\n    'sitePlannedBase': 'BasPSI',\r\n    'scrInterimAnalysis': '',\r\n    'enrollPlannedAdj': 'AdjPSR',\r\n    'totalActual': '',\r\n    'enrollFrozenProj': 'FroPrSR',\r\n    'siteFrozenProj': 'FroPrSI',\r\n    'totalCurrentProj': '',\r\n    'enrollUpdatedProj': 'UpdPrSR',\r\n    'siteUpdatedProj': 'UpdPrSI',\r\n    'totalPlannedApproved': '',\r\n    'totalPlannedAdj': '',\r\n    'scrActual': 'ActSS',\r\n    'totalPlannedBase': '',\r\n    'scrCurrentProj': 'CurPrSS',\r\n    'enrollAll': '',\r\n    'aheadBehindBox': 'aheadBehind',\r\n    'scrFailureActual': 'ActSF',\r\n    'enrollActual': 'ActPSR',\r\n    'extendProjs': 'Ext',\r\n    'scrPlannedApproved': 'AppPSS',\r\n    'enrollCurrentProj': 'CurPrSR',\r\n    'studyCostSymbols': '',\r\n    'todaysDate': 'today',\r\n    'scrPlannedBase': 'BasPSS',\r\n    'dropoutActual': 'ActDO',\r\n    'cohortPerf': '',\r\n    'scrPlannedAdj': 'AdjPSS',\r\n    'enrollPlanConfBoundary': '',\r\n    'sitePlannedAdj': 'AdjPSI',\r\n    'siteActual': 'ActSI',\r\n    'scrFrozenProj': 'FroPrSS',\r\n    'enrollPlannedApproved': 'AppPSR',\r\n    'siteCurrentProj': 'CurPrSI',\r\n    'sitePlannedApproved': 'AppPSI',\r\n    'scrUpdatedProj': 'UpdPrSS',\r\n    'enrollPlannedBase': 'BasPSR',\r\n    'cbApproved': 'CBApp',\r\n    'cbAdjustment': 'CBAdj',\r\n    'cbCurrentProjection': 'CBCurPr',\r\n    'cbBase': 'CBBas'\r\n};\r\n/** @type {?} */\r\nvar reversemapping = {\r\n    'Tar': 'studyTargets',\r\n    'Mil': 'milestoneDates',\r\n    'BasPSI': 'sitePlannedBase',\r\n    'AdjPSR': 'enrollPlannedAdj',\r\n    'FroPrSR': 'enrollFrozenProj',\r\n    'FroPrSI': 'siteFrozenProj',\r\n    'UpdPrSR': 'enrollUpdatedProj',\r\n    'UpdPrSI': 'siteUpdatedProj',\r\n    'ActSS': 'scrActual',\r\n    'CurPrSS': 'scrCurrentProj',\r\n    'ActSF': 'scrFailureActual',\r\n    'ActPSR': 'enrollActual',\r\n    'Ext': 'extendProjs',\r\n    'AppPSS': 'scrPlannedApproved',\r\n    'CurPrSR': 'enrollCurrentProj',\r\n    'BasPSS': 'scrPlannedBase',\r\n    'ActDO': 'dropoutActual',\r\n    'AdjPSS': 'scrPlannedAdj',\r\n    'AdjPSI': 'sitePlannedAdj',\r\n    'ActSI': 'siteActual',\r\n    'FroPrSS': 'scrFrozenProj',\r\n    'AppPSR': 'enrollPlannedApproved',\r\n    'CurPrSI': 'siteCurrentProj',\r\n    'AppPSI': 'sitePlannedApproved',\r\n    'UpdPrSS': 'scrUpdatedProj',\r\n    'BasPSR': 'enrollPlannedBase',\r\n    'CBBas': 'cbBase',\r\n    'CBAdj': 'cbAdjustment',\r\n    'CBApp': 'cbApproved',\r\n    'CBCurPr': 'cbCurrentProjection',\r\n    'aheadBehind': 'aheadBehindBox',\r\n    'today': 'todaysDate'\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/user-data.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$1 = momentNS;\r\nvar UserDataService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of user data service.\r\n     * @param payloadCommandService\r\n     * @param baseConnectionService\r\n     */\r\n    function UserDataService(payloadCommandService, baseConnectionService, logoutService, configurationService, serverStatusService) {\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.logoutService = logoutService;\r\n        this.configurationService = configurationService;\r\n        this.serverStatusService = serverStatusService;\r\n        this.userData = null;\r\n        this.isLoggedIn = false;\r\n        this._username = new Subject();\r\n        this.username$ = this._username.asObservable();\r\n        this._logoFileName = new Subject();\r\n        this.logoFileName$ = this._logoFileName.asObservable();\r\n        this._userPrefix = new Subject();\r\n        this.userPrefix$ = this._userPrefix.asObservable();\r\n    }\r\n    Object.defineProperty(UserDataService.prototype, \"lastKeepAliveCallTime\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._lastKeepAliveCallTime;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._lastKeepAliveCallTime = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserDataService.prototype, \"coefficient\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return (/** @type {?} */ (this._coefficient));\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._coefficient = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserDataService.prototype, \"isKeepAliveCallProceed\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._isKeepAliveCallProceed;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._isKeepAliveCallProceed = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserDataService.prototype, \"autoLogOutTime\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._autoLogOutTime;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._autoLogOutTime = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserDataService.prototype, \"sessionTimeOut\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._sessionTimeOut;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._sessionTimeOut = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserDataService.prototype, \"autoLogOutTimeBuffer\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._autoLogOutTimeBuffer;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._autoLogOutTimeBuffer = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserDataService.prototype, \"chartLegendPreference\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._chartLegendPreference;\r\n        },\r\n        set: /**\r\n         * @param {?} o\r\n         * @return {?}\r\n         */\r\n        function (o) {\r\n            this._chartLegendPreference = o;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserDataService.prototype, \"chartLegendPreferenceArr\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._chartLegendPreferenceArr;\r\n        },\r\n        set: /**\r\n         * @param {?} o\r\n         * @return {?}\r\n         */\r\n        function (o) {\r\n            this._chartLegendPreferenceArr = o;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserDataService.prototype, \"lastVisitedStudy\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.lastStudy;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.lastStudy = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserDataService.prototype, \"userPrivileges\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.uPrivileges;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.uPrivileges = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.setUserPrivileges = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        this.userPrivileges = data;\r\n    };\r\n    /**\r\n     * Sets username\r\n     * @param username\r\n     */\r\n    /**\r\n     * Sets username\r\n     * @param {?} username\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.setUsername = /**\r\n     * Sets username\r\n     * @param {?} username\r\n     * @return {?}\r\n     */\r\n    function (username) {\r\n        this._username.next(username);\r\n    };\r\n    /**\r\n     * Sets logo file name\r\n     * @param filename\r\n     */\r\n    /**\r\n     * Sets logo file name\r\n     * @param {?} filename\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.setLogoFileName = /**\r\n     * Sets logo file name\r\n     * @param {?} filename\r\n     * @return {?}\r\n     */\r\n    function (filename) {\r\n        this._logoFileName.next(filename);\r\n    };\r\n    /**\r\n     * Sets user prefix\r\n     */\r\n    /**\r\n     * Sets user prefix\r\n     * @param {?} username\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.setUserPrefix = /**\r\n     * Sets user prefix\r\n     * @param {?} username\r\n     * @return {?}\r\n     */\r\n    function (username) {\r\n        /** @type {?} */\r\n        var prefix = AppUtil.getNameInitials(username, ' ');\r\n        this._userPrefix.next(prefix);\r\n    };\r\n    /**\r\n     * Gets user data\r\n     * @param params\r\n     * @param [cacheType]\r\n     * @returns user data\r\n     */\r\n    /**\r\n     * Gets user data\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?} user data\r\n     */\r\n    UserDataService.prototype.getUserData = /**\r\n     * Gets user data\r\n     * @param {?} params\r\n     * @param {?=} actionParam\r\n     * @return {?} user data\r\n     */\r\n    function (params, actionParam) {\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        actionParam.cacheKey = CacheKey.UserDataKey;\r\n        actionParam.cacheType = CacheType.nonsticky;\r\n        actionParam.storeType = StoreType.InMemory;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n        actionParam.url = APIEndPoints.USER_DATA;\r\n        actionParam.isSSOEndPoint = false;\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo('PLANS');\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.USER_DATA;\r\n        }\r\n        /** @type {?} */\r\n        var userDataPayload;\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.USER_DATA;\r\n            userDataPayload = self.payloadCommandService.getApiRequest(params.commandName, params.app, null, moduleInfo);\r\n            return self.baseConnectionService\r\n                .send(userDataPayload, actionParam)\r\n                .pipe(map((/**\r\n             * @param {?} resp\r\n             * @return {?}\r\n             */\r\n            function (resp) {\r\n                if (resp.result === COMMON.RESULT_OK) {\r\n                    self.userData = resp;\r\n                    self.isLoggedIn = true;\r\n                    self.setUsername(self.userData.user.name);\r\n                    self.setLogoFileName(self.userData.user.logoFileName);\r\n                    self.setStudyKey(self.userData.user.preferences.userPreferences);\r\n                    self.chartLegendPreference = self.setChartLegendPreference(self.userData.user.preferences.userPreferences);\r\n                    self.chartLegendPreferenceArr = self.createLegendMap(self.chartLegendPreference);\r\n                    self.setUserPrivileges(self.userData.user.privileges.module);\r\n                    return self.userData;\r\n                }\r\n                else {\r\n                    self.userData = null;\r\n                    self.isLoggedIn = false;\r\n                    return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n                }\r\n            })));\r\n        }\r\n        else {\r\n            userDataPayload = self.payloadCommandService.getCommandDetails(params.commandName, params.app, null, null, moduleInfo);\r\n            return self.baseConnectionService\r\n                .sendRequest(userDataPayload, actionParam)\r\n                .pipe(map((/**\r\n             * @param {?} resp\r\n             * @return {?}\r\n             */\r\n            function (resp) {\r\n                if (resp.result === COMMON.RESULT_OK) {\r\n                    self.userData = resp;\r\n                    self.isLoggedIn = true;\r\n                    self.setUsername(self.userData.user.name);\r\n                    self.setLogoFileName(self.userData.user.logoFileName);\r\n                    self.setStudyKey(self.userData.user.preferences.userPreferences);\r\n                    self.chartLegendPreference = self.setChartLegendPreference(self.userData.user.preferences.userPreferences);\r\n                    self.chartLegendPreferenceArr = self.createLegendMap(self.chartLegendPreference);\r\n                    self.setUserPrivileges(self.userData.user.privileges.module);\r\n                    return self.userData;\r\n                }\r\n                else {\r\n                    self.userData = null;\r\n                    self.isLoggedIn = false;\r\n                    return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n                }\r\n            })));\r\n        }\r\n        // } else {\r\n        // return of(self.userData);\r\n        // }\r\n    };\r\n    /**\r\n     * @param {?} changedPref\r\n     * @param {?} chartLegendPreference\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.updateChartLegendPreference = /**\r\n     * @param {?} changedPref\r\n     * @param {?} chartLegendPreference\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (changedPref, chartLegendPreference, actionParam) {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var preferenceObject = UPDATE_CHART_PREFERNCE;\r\n        /** @type {?} */\r\n        var categoryObject = {};\r\n        categoryObject[preferenceObject.category] =\r\n            preferenceObject[preferenceObject.category];\r\n        /** @type {?} */\r\n        var tempObject = {\r\n            userPreference: {\r\n                params: {\r\n                    appType: preferenceObject.appType,\r\n                    category: preferenceObject.category,\r\n                }\r\n            }\r\n        };\r\n        /** @type {?} */\r\n        var userPreferencesPayload = this.payloadCommandService.getCommandDetails(UPDATE_CHART_PREFERNCE.commandName, null, null, tempObject);\r\n        /** @type {?} */\r\n        var baseParam = {};\r\n        if (!actionParam) {\r\n            actionParam = baseParam;\r\n            actionParam.dependencyList = [CacheKey.UserDataKey];\r\n        }\r\n        /** @type {?} */\r\n        var req = userPreferencesPayload.xmlRequest;\r\n        /** @type {?} */\r\n        var newReq = req.replace('</userPreference>', this.CreateCDATAObj(changedPref, chartLegendPreference)\r\n            + '</userPreference>');\r\n        userPreferencesPayload.xmlRequest = newReq;\r\n        return this.baseConnectionService.sendRequest(userPreferencesPayload, actionParam).pipe(map((/**\r\n         * @param {?} resp\r\n         * @return {?}\r\n         */\r\n        function (resp) {\r\n            if (resp.result === COMMON.RESULT_OK) {\r\n                return resp;\r\n            }\r\n            else {\r\n                return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n            }\r\n        })));\r\n    };\r\n    /**\r\n     * Gets user name\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets user name\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.getUserName = /**\r\n     * Gets user name\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (self.userData && self.userData.result === 'OK') {\r\n            return self.userData.user.name;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.getUserId = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (self.userData && self.userData.result === 'OK') {\r\n            return self.userData.user.id;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.getLastVisitedStudyKey = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var preferenceBookmarks = this.getPreferenceBookmarks(this.getUserPreferences());\r\n        if (preferenceBookmarks) {\r\n            return preferenceBookmarks.lastVisitedStudy;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.getUserPreferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var userPreferences;\r\n        if (self.userData &&\r\n            self.userData.result === 'OK' &&\r\n            self.userData.hasOwnProperty('user') &&\r\n            self.userData.user.hasOwnProperty('preferences') &&\r\n            self.userData.user.preferences.hasOwnProperty('userPreferences') &&\r\n            self.userData.user.preferences.userPreferences.length > 0) {\r\n            // fetch preferences\r\n            userPreferences = self.userData.user.preferences.userPreferences;\r\n        }\r\n        return userPreferences;\r\n    };\r\n    /**\r\n     * @param {?} userPreferences\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.getPreferenceBookmarksIndex = /**\r\n     * @param {?} userPreferences\r\n     * @return {?}\r\n     */\r\n    function (userPreferences) {\r\n        /** @type {?} */\r\n        var preferenceBookmarksIndex;\r\n        if (userPreferences.length > 0) {\r\n            // find the PreferenceBookmarksIndex\r\n            preferenceBookmarksIndex = userPreferences.findIndex((/**\r\n             * @param {?} userpref\r\n             * @return {?}\r\n             */\r\n            function (userpref) {\r\n                return userpref.category === 'PreferenceBookmarks';\r\n            }));\r\n        }\r\n        return preferenceBookmarksIndex;\r\n    };\r\n    /**\r\n     * @param {?} userPreferences\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.getPreferenceBookmarks = /**\r\n     * @param {?} userPreferences\r\n     * @return {?}\r\n     */\r\n    function (userPreferences) {\r\n        /** @type {?} */\r\n        var preferenceBookmarks;\r\n        if (userPreferences && userPreferences.length > 0) {\r\n            /** @type {?} */\r\n            var preferenceBookmarksIndex = this.getPreferenceBookmarksIndex(userPreferences);\r\n            // tslint:disable-next-line:prefer-const\r\n            if (preferenceBookmarksIndex > -1) {\r\n                preferenceBookmarks = userPreferences[preferenceBookmarksIndex].PreferenceBookmarks;\r\n            }\r\n        }\r\n        return preferenceBookmarks;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.getMruStudyList = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var preferenceBookmarks = this.getPreferenceBookmarks(this.getUserPreferences());\r\n        if (preferenceBookmarks !== undefined && preferenceBookmarks.hasOwnProperty('mruStudyList')) {\r\n            return preferenceBookmarks.mruStudyList.toString();\r\n        }\r\n        return '';\r\n    };\r\n    // updateUserPreference(preferenceObject, actionParam?: Action): Observable<any> {\r\n    //   // tslint:disable-next-line:prefer-const\r\n    //   let categoryObject = {};\r\n    //   categoryObject[preferenceObject.category] =\r\n    //     preferenceObject[preferenceObject.category];\r\n    //   const tempObject = {\r\n    //     userPreference: {\r\n    //       params: {\r\n    //         appType: preferenceObject.appType,\r\n    //         category: preferenceObject.category,\r\n    //         key: preferenceObject.key\r\n    //       },\r\n    //       value: !actionParam.endPoint ? JSON.stringify(categoryObject) : categoryObject\r\n    //     }\r\n    //   };\r\n    //   const moduleInfo = CTOSUtil.getModuleInfo('PLANS');\r\n    //   /* const baseParam: Action = {};\r\n    //   if (!actionParam) {\r\n    //     actionParam = baseParam;\r\n    //   } */\r\n    //   if (actionParam) {\r\n    //     actionParam.dependencyList = [CacheKey.UserDataKey];\r\n    //   }\r\n    //   actionParam = !actionParam ? {} as Action : actionParam;\r\n    //   if (actionParam.endPoint) {\r\n    //     actionParam.url = APIEndPoints.USER_PREFERENCE;\r\n    //     actionParam.httpMethod = HttpVerbs.put;\r\n    //   }\r\n    //   let userPreferencesPayload;\r\n    //   if (actionParam.endPoint) {\r\n    //     const params = tempObject.userPreference.params;\r\n    //     userPreferencesPayload = this.payloadCommandService.getApiRequest(\r\n    //       USER_PREFERENCES.commandName,\r\n    //       params,\r\n    //       null,\r\n    //       moduleInfo,\r\n    //       tempObject\r\n    //     );\r\n    //     return this.baseConnectionService.send(userPreferencesPayload, actionParam).pipe(\r\n    //       map(resp => {\r\n    //         if (resp.result === COMMON.RESULT_OK) {\r\n    //           return resp;\r\n    //         } else {\r\n    //           return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n    //         }\r\n    //       })\r\n    //     );\r\n    //   } else {\r\n    //     userPreferencesPayload = this.payloadCommandService.getCommandDetails(\r\n    //       USER_PREFERENCES.commandName,\r\n    //       null,\r\n    //       null,\r\n    //       tempObject,\r\n    //       moduleInfo\r\n    //     );\r\n    //     /* const baseParam: Action = {};\r\n    //     if (!actionParam) {\r\n    //       actionParam = baseParam;\r\n    //       actionParam.dependencyList = [CacheKey.UserDataKey];\r\n    //     } */\r\n    //     return this.baseConnectionService.sendRequest(userPreferencesPayload, actionParam).pipe(\r\n    //       map(resp => {\r\n    //         if (resp.result === COMMON.RESULT_OK) {\r\n    //           return resp;\r\n    //         } else {\r\n    //           return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n    //         }\r\n    //       })\r\n    //     );\r\n    //   }\r\n    // }\r\n    // updateUserPreference(preferenceObject, actionParam?: Action): Observable<any> {\r\n    //   // tslint:disable-next-line:prefer-const\r\n    //   let categoryObject = {};\r\n    //   categoryObject[preferenceObject.category] =\r\n    //     preferenceObject[preferenceObject.category];\r\n    //   const tempObject = {\r\n    //     userPreference: {\r\n    //       params: {\r\n    //         appType: preferenceObject.appType,\r\n    //         category: preferenceObject.category,\r\n    //         key: preferenceObject.key\r\n    //       },\r\n    //       value: !actionParam.endPoint ? JSON.stringify(categoryObject) : categoryObject\r\n    //     }\r\n    //   };\r\n    //   const moduleInfo = CTOSUtil.getModuleInfo('PLANS');\r\n    //   /* const baseParam: Action = {};\r\n    //   if (!actionParam) {\r\n    //     actionParam = baseParam;\r\n    //   } */\r\n    //   if (actionParam) {\r\n    //     actionParam.dependencyList = [CacheKey.UserDataKey];\r\n    //   }\r\n    //   actionParam = !actionParam ? {} as Action : actionParam;\r\n    //   if (actionParam.endPoint) {\r\n    //     actionParam.url = APIEndPoints.USER_PREFERENCE;\r\n    //     actionParam.httpMethod = HttpVerbs.put;\r\n    //   }\r\n    //   let userPreferencesPayload;\r\n    //   if (actionParam.endPoint) {\r\n    //     const params = tempObject.userPreference.params;\r\n    //     userPreferencesPayload = this.payloadCommandService.getApiRequest(\r\n    //       USER_PREFERENCES.commandName,\r\n    //       params,\r\n    //       null,\r\n    //       moduleInfo,\r\n    //       tempObject\r\n    //     );\r\n    //     return this.baseConnectionService.send(userPreferencesPayload, actionParam).pipe(\r\n    //       map(resp => {\r\n    //         if (resp.result === COMMON.RESULT_OK) {\r\n    //           return resp;\r\n    //         } else {\r\n    //           return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n    //         }\r\n    //       })\r\n    //     );\r\n    //   } else {\r\n    //     userPreferencesPayload = this.payloadCommandService.getCommandDetails(\r\n    //       USER_PREFERENCES.commandName,\r\n    //       null,\r\n    //       null,\r\n    //       tempObject,\r\n    //       moduleInfo\r\n    //     );\r\n    //     /* const baseParam: Action = {};\r\n    //     if (!actionParam) {\r\n    //       actionParam = baseParam;\r\n    //       actionParam.dependencyList = [CacheKey.UserDataKey];\r\n    //     } */\r\n    //     return this.baseConnectionService.sendRequest(userPreferencesPayload, actionParam).pipe(\r\n    //       map(resp => {\r\n    //         if (resp.result === COMMON.RESULT_OK) {\r\n    //           return resp;\r\n    //         } else {\r\n    //           return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n    //         }\r\n    //       })\r\n    //     );\r\n    //   }\r\n    // }\r\n    /**\r\n     * @param {?} preferenceObject\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.updateUserPreference = \r\n    // updateUserPreference(preferenceObject, actionParam?: Action): Observable<any> {\r\n    //   // tslint:disable-next-line:prefer-const\r\n    //   let categoryObject = {};\r\n    //   categoryObject[preferenceObject.category] =\r\n    //     preferenceObject[preferenceObject.category];\r\n    //   const tempObject = {\r\n    //     userPreference: {\r\n    //       params: {\r\n    //         appType: preferenceObject.appType,\r\n    //         category: preferenceObject.category,\r\n    //         key: preferenceObject.key\r\n    //       },\r\n    //       value: !actionParam.endPoint ? JSON.stringify(categoryObject) : categoryObject\r\n    //     }\r\n    //   };\r\n    //   const moduleInfo = CTOSUtil.getModuleInfo('PLANS');\r\n    //   /* const baseParam: Action = {};\r\n    //   if (!actionParam) {\r\n    //     actionParam = baseParam;\r\n    //   } */\r\n    //   if (actionParam) {\r\n    //     actionParam.dependencyList = [CacheKey.UserDataKey];\r\n    //   }\r\n    //   actionParam = !actionParam ? {} as Action : actionParam;\r\n    //   if (actionParam.endPoint) {\r\n    //     actionParam.url = APIEndPoints.USER_PREFERENCE;\r\n    //     actionParam.httpMethod = HttpVerbs.put;\r\n    //   }\r\n    //   let userPreferencesPayload;\r\n    //   if (actionParam.endPoint) {\r\n    //     const params = tempObject.userPreference.params;\r\n    //     userPreferencesPayload = this.payloadCommandService.getApiRequest(\r\n    //       USER_PREFERENCES.commandName,\r\n    //       params,\r\n    //       null,\r\n    //       moduleInfo,\r\n    //       tempObject\r\n    //     );\r\n    //     return this.baseConnectionService.send(userPreferencesPayload, actionParam).pipe(\r\n    //       map(resp => {\r\n    //         if (resp.result === COMMON.RESULT_OK) {\r\n    //           return resp;\r\n    //         } else {\r\n    //           return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n    //         }\r\n    //       })\r\n    //     );\r\n    //   } else {\r\n    //     userPreferencesPayload = this.payloadCommandService.getCommandDetails(\r\n    //       USER_PREFERENCES.commandName,\r\n    //       null,\r\n    //       null,\r\n    //       tempObject,\r\n    //       moduleInfo\r\n    //     );\r\n    //     /* const baseParam: Action = {};\r\n    //     if (!actionParam) {\r\n    //       actionParam = baseParam;\r\n    //       actionParam.dependencyList = [CacheKey.UserDataKey];\r\n    //     } */\r\n    //     return this.baseConnectionService.sendRequest(userPreferencesPayload, actionParam).pipe(\r\n    //       map(resp => {\r\n    //         if (resp.result === COMMON.RESULT_OK) {\r\n    //           return resp;\r\n    //         } else {\r\n    //           return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n    //         }\r\n    //       })\r\n    //     );\r\n    //   }\r\n    // }\r\n    /**\r\n     * @param {?} preferenceObject\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (preferenceObject, actionParam) {\r\n        // tslint:disable-next-line:prefer-const\r\n        /** @type {?} */\r\n        var categoryObject = {};\r\n        categoryObject[preferenceObject.category] =\r\n            preferenceObject[preferenceObject.category];\r\n        // const moduleInfo = CTOSUtil.getModuleInfo('PLANS');\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo('PLANS', this.getLastVisitedStudyKey());\r\n        if (actionParam) {\r\n            actionParam.dependencyList = [CacheKey.UserDataKey];\r\n        }\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        /** @type {?} */\r\n        var userPreferencesPayload;\r\n        if (actionParam.endPoint) {\r\n            /** @type {?} */\r\n            var params = {\r\n                appType: preferenceObject.appType,\r\n                category: preferenceObject.category,\r\n                key: preferenceObject.key\r\n            };\r\n            actionParam.url = APIEndPoints.USER_PREFERENCE;\r\n            actionParam.httpMethod = HttpVerbs.put;\r\n            /** @type {?} */\r\n            var userPreferencesPayloadXml = JSON.stringify(categoryObject);\r\n            /** @type {?} */\r\n            var tempObject = {\r\n                value: userPreferencesPayloadXml\r\n            };\r\n            userPreferencesPayload = this.payloadCommandService.getApiRequest(USER_PREFERENCES.commandName, params, null, moduleInfo, tempObject);\r\n            return this.baseConnectionService.send(userPreferencesPayload, actionParam).pipe(map((/**\r\n             * @param {?} resp\r\n             * @return {?}\r\n             */\r\n            function (resp) {\r\n                if (resp.result === COMMON.RESULT_OK) {\r\n                    return resp;\r\n                }\r\n                else {\r\n                    return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n                }\r\n            })));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var tempObject = {\r\n                userPreference: {\r\n                    params: {\r\n                        appType: preferenceObject.appType,\r\n                        category: preferenceObject.category,\r\n                        key: preferenceObject.key\r\n                    },\r\n                    value: !actionParam.endPoint ? JSON.stringify(categoryObject) : categoryObject\r\n                }\r\n            };\r\n            userPreferencesPayload = this.payloadCommandService.getCommandDetails(USER_PREFERENCES.commandName, null, null, tempObject, moduleInfo);\r\n            /* const baseParam: Action = {};\r\n            if (!actionParam) {\r\n              actionParam = baseParam;\r\n              actionParam.dependencyList = [CacheKey.UserDataKey];\r\n            } */\r\n            return this.baseConnectionService.sendRequest(userPreferencesPayload, actionParam).pipe(map((/**\r\n             * @param {?} resp\r\n             * @return {?}\r\n             */\r\n            function (resp) {\r\n                if (resp.result === COMMON.RESULT_OK) {\r\n                    return resp;\r\n                }\r\n                else {\r\n                    return new ApplicationError(resp.error.message, resp.error.errorCode);\r\n                }\r\n            })));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} userPreferences\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.setStudyKey = /**\r\n     * @param {?} userPreferences\r\n     * @return {?}\r\n     */\r\n    function (userPreferences) {\r\n        /** @type {?} */\r\n        var lastSelectedStudy = userPreferences.map((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            return data.PreferenceBookmarks;\r\n        })).filter((/**\r\n         * @param {?} r\r\n         * @return {?}\r\n         */\r\n        function (r) { return r; })).map((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) { return d.lastVisitedStudy; })).toString();\r\n        this.lastVisitedStudy = lastSelectedStudy;\r\n    };\r\n    /**\r\n     * @param {?} userPreferences\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.setChartLegendPreference = /**\r\n     * @param {?} userPreferences\r\n     * @return {?}\r\n     */\r\n    function (userPreferences) {\r\n        for (var i = 0; i < userPreferences.length; i++) {\r\n            if (userPreferences[i].category === 'PreferenceChartLegendPlan') {\r\n                return userPreferences[i].PreferenceChartLegendPlan;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} o\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.createLegendMap = /**\r\n     * @param {?} o\r\n     * @return {?}\r\n     */\r\n    function (o) {\r\n        /** @type {?} */\r\n        var preference = [];\r\n        for (var prop in o) {\r\n            if (mapping[prop] !== '' && o[prop] === true) {\r\n                preference.push(mapping[prop]);\r\n            }\r\n            else if (o[prop] === true) {\r\n                preference.push(prop);\r\n            }\r\n        }\r\n        // flex has selected, display all\r\n        if (preference.indexOf('CB') > -1 && !o.hasOwnProperty('cbApproved')) {\r\n            o['cbApproved'] = true;\r\n            o['cbAdjustment'] = true;\r\n            o['cbCurrentProjection'] = true;\r\n            o['cbBase'] = true;\r\n            // spl cases for remove duplicate conf boundary\r\n            /** @type {?} */\r\n            var CBList = ['CBApp', 'CBBas', 'CBAdj', 'CBCurPr'];\r\n            for (var i = 0; i < CBList.length; i++) {\r\n                /** @type {?} */\r\n                var idx = preference.indexOf(CBList[i]);\r\n                if (idx > -1) {\r\n                    preference.splice(idx, 1);\r\n                }\r\n            }\r\n            preference = __spread(preference, CBList);\r\n        }\r\n        return preference;\r\n    };\r\n    /**\r\n     * @param {?} moduleId\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.getUserPrivilegesForModule = /**\r\n     * @param {?} moduleId\r\n     * @return {?}\r\n     */\r\n    function (moduleId) {\r\n        /** @type {?} */\r\n        var privilegesForModule;\r\n        /** @type {?} */\r\n        var userPrivileges = this.getUserPrivilages();\r\n        /** @type {?} */\r\n        var filteredUserPrivileges;\r\n        if (Array.isArray(userPrivileges)) {\r\n            filteredUserPrivileges = userPrivileges.filter((/**\r\n             * @param {?} privilegeObject\r\n             * @return {?}\r\n             */\r\n            function (privilegeObject) {\r\n                if (privilegeObject.id === moduleId) {\r\n                    return privilegeObject;\r\n                }\r\n            }));\r\n        }\r\n        else {\r\n            if (userPrivileges['id'] === moduleId) {\r\n                filteredUserPrivileges.push(userPrivileges);\r\n            }\r\n        }\r\n        if (filteredUserPrivileges && filteredUserPrivileges.length > 0) {\r\n            privilegesForModule = filteredUserPrivileges[0].privilege;\r\n        }\r\n        else {\r\n            privilegesForModule = [];\r\n        }\r\n        if (!Array.isArray(privilegesForModule)) {\r\n            return [privilegesForModule];\r\n        }\r\n        return privilegesForModule;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.getUserPrivilages = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // if (this.userData &&\r\n        //   this.userData.result === 'OK' &&\r\n        //   this.userData.user &&\r\n        //   this.userData.user.privileges) {\r\n        //   return this.userData.user.privileges.module;\r\n        // }\r\n        return this.userPrivileges;\r\n    };\r\n    /**\r\n     * @param {?} privilageName\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.checkModulePrivilege = /**\r\n     * @param {?} privilageName\r\n     * @return {?}\r\n     */\r\n    function (privilageName) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var userPrivileges = this.getUserPrivilegesForModule(MODULE_CONSTANTS.MODULE_PLANNING);\r\n        try {\r\n            for (var userPrivileges_1 = __values(userPrivileges), userPrivileges_1_1 = userPrivileges_1.next(); !userPrivileges_1_1.done; userPrivileges_1_1 = userPrivileges_1.next()) {\r\n                var privilage = userPrivileges_1_1.value;\r\n                if (privilage.name === privilageName) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (userPrivileges_1_1 && !userPrivileges_1_1.done && (_a = userPrivileges_1.return)) _a.call(userPrivileges_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.updateUserPreferencesBookmarks = /**\r\n     * @param {?} item\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (item, actionParam) {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var userPreferences = self.getUserPreferences();\r\n        /** @type {?} */\r\n        var preferenceBookmarksIndex = self.getPreferenceBookmarksIndex(userPreferences);\r\n        /** @type {?} */\r\n        var preferenceBookmarksObj = userPreferences[preferenceBookmarksIndex];\r\n        // update the required fields\r\n        if (item.hasOwnProperty('isMultiStudyView') && item.isMultiStudyView) {\r\n            preferenceBookmarksObj.PreferenceBookmarks.lastMultiStudyViewID = item.id;\r\n            preferenceBookmarksObj.PreferenceBookmarks.multiStudyView = true;\r\n        }\r\n        else {\r\n            preferenceBookmarksObj.PreferenceBookmarks.lastSingleStudyViewID = item.id;\r\n            preferenceBookmarksObj.PreferenceBookmarks.multiStudyView = false;\r\n        }\r\n        // call updateUserPreference API\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        return self.updateUserPreference(preferenceBookmarksObj, actionParam);\r\n    };\r\n    /**\r\n     * update Usage Metrics.\r\n     * @param params\r\n     * e.g\r\n     *  const param = {\r\n        usageMetric: {\r\n          viewVisit: {\r\n            module: 'PLANS',\r\n            page: 'MNGCNTRY',\r\n            studykey: 26,\r\n            localTime: new Date()\r\n          }\r\n        }\r\n      };\r\n      <serviceRequest xmlns=\"http://www.coprindm.com\">\r\n        <command name=\"updateUsageMetrics\">\r\n          <usageMetric>\r\n            <viewVisit>\r\n              <module>PLANS</module>\r\n              <page>MNGCNTRY</page>\r\n              <studykey>26</studykey>\r\n              <localTime>Mon Oct 22 12:29:57 GMT+0530 2018</localTime>\r\n            </viewVisit>\r\n          </usageMetric>\r\n        </command>\r\n      </serviceRequest>\r\n     */\r\n    /**\r\n     * update Usage Metrics.\r\n     * @param {?=} params\r\n     * e.g\r\n     *  const param = {\r\n     * usageMetric: {\r\n     * viewVisit: {\r\n     * module: 'PLANS',\r\n     * page: 'MNGCNTRY',\r\n     * studykey: 26,\r\n     * localTime: new Date()\r\n     * }\r\n     * }\r\n     * };\r\n     * <serviceRequest xmlns=\"http://www.coprindm.com\">\r\n     * <command name=\"updateUsageMetrics\">\r\n     * <usageMetric>\r\n     * <viewVisit>\r\n     * <module>PLANS</module>\r\n     * <page>MNGCNTRY</page>\r\n     * <studykey>26</studykey>\r\n     * <localTime>Mon Oct 22 12:29:57 GMT+0530 2018</localTime>\r\n     * </viewVisit>\r\n     * </usageMetric>\r\n     * </command>\r\n     * </serviceRequest>\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.updateUsageMetrics = /**\r\n     * update Usage Metrics.\r\n     * @param {?=} params\r\n     * e.g\r\n     *  const param = {\r\n     * usageMetric: {\r\n     * viewVisit: {\r\n     * module: 'PLANS',\r\n     * page: 'MNGCNTRY',\r\n     * studykey: 26,\r\n     * localTime: new Date()\r\n     * }\r\n     * }\r\n     * };\r\n     * <serviceRequest xmlns=\"http://www.coprindm.com\">\r\n     * <command name=\"updateUsageMetrics\">\r\n     * <usageMetric>\r\n     * <viewVisit>\r\n     * <module>PLANS</module>\r\n     * <page>MNGCNTRY</page>\r\n     * <studykey>26</studykey>\r\n     * <localTime>Mon Oct 22 12:29:57 GMT+0530 2018</localTime>\r\n     * </viewVisit>\r\n     * </usageMetric>\r\n     * </command>\r\n     * </serviceRequest>\r\n     * @return {?}\r\n     */\r\n    function (params) {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo('PLANS');\r\n        /** @type {?} */\r\n        var usageMetricsPayload = that.payloadCommandService.getCommandDetails(COMMAND.UPDATEUSAGEMETRICS, '', '', params, moduleInfo);\r\n        return this.baseConnectionService.sendRequest(usageMetricsPayload, { url: LOGGING_SERVLET_URL }).pipe(map((/**\r\n         * @param {?} resp\r\n         * @return {?}\r\n         */\r\n        function (resp) {\r\n            if (resp.result === 'OK') {\r\n                return resp.result;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })));\r\n    };\r\n    /**\r\n     * Keeps user session alive\r\n     * @param [coefficient]\r\n     * Periodically call the keep user session alive api.\r\n     * Check the following condition (LastKeepAlive api call time + sessiontimeoutValue * coefficient) <= currenttime\r\n     */\r\n    /**\r\n     * Keeps user session alive\r\n     * @param {?=} coefficient\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.keepUserSessionAlive = /**\r\n     * Keeps user session alive\r\n     * @param {?=} coefficient\r\n     * @return {?}\r\n     */\r\n    function (coefficient) {\r\n        /** @type {?} */\r\n        var userData = this.userData;\r\n        if (userData && userData.user && userData.user.sessiontimeoutValue) {\r\n            this.coefficient = coefficient;\r\n            /** @type {?} */\r\n            var serverSessionTimeOutValue = parseInt(userData.user.sessiontimeoutValue, 10);\r\n            /** @type {?} */\r\n            var sessionTimeOut = (serverSessionTimeOutValue / 60);\r\n            this.isKeepAliveCallProceed = false;\r\n            /** @type {?} */\r\n            var modifiedLastKeepAliveCallTime = null;\r\n            if (!this.lastKeepAliveCallTime) {\r\n                this.isKeepAliveCallProceed = true;\r\n            }\r\n            if (!this.isKeepAliveCallProceed) {\r\n                /** @type {?} */\r\n                var calVal = sessionTimeOut * this.coefficient;\r\n                modifiedLastKeepAliveCallTime = moment$1(this.lastKeepAliveCallTime).add(calVal, 'm').local().format();\r\n                /** @type {?} */\r\n                var currentDateTime = moment$1(new Date()).local().format();\r\n                if (moment$1(modifiedLastKeepAliveCallTime).diff(moment$1(currentDateTime)) === 0 ||\r\n                    moment$1(modifiedLastKeepAliveCallTime).diff(moment$1(currentDateTime)) < 0) {\r\n                    this.isKeepAliveCallProceed = true;\r\n                }\r\n                else {\r\n                    this.isKeepAliveCallProceed = false;\r\n                }\r\n            }\r\n            if (this.isKeepAliveCallProceed) {\r\n                this.lastKeepAliveCallTime = moment$1(new Date()).local().format();\r\n                this.keepUserSessionAliveCall();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Keeps user session alive api call\r\n     */\r\n    /**\r\n     * Keeps user session alive api call\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.keepUserSessionAliveCall = /**\r\n     * Keeps user session alive api call\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo('PLANS');\r\n        /** @type {?} */\r\n        var keepUserSessionAlivePayload = this.payloadCommandService.getCommandDetails(COMMAND.KEEPUSERSESSIONALIVE, null, null, null, moduleInfo);\r\n        this.baseConnectionService.sendRequest(keepUserSessionAlivePayload)\r\n            .subscribe((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) {\r\n            if (res.result === 'Ok') {\r\n                _this.isKeepAliveCallProceed = false;\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * Users ideal watch\r\n     * Log out will perform after session time out\r\n     */\r\n    /**\r\n     * Users ideal watch\r\n     * Log out will perform after session time out\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.userIdealWatch = /**\r\n     * Users ideal watch\r\n     * Log out will perform after session time out\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this.idleSubscription) {\r\n            this.idleSubscription.unsubscribe();\r\n        }\r\n        this.idleSubscription = this.userIdeal$.pipe(bufferTime(this.setAutoLogOutTime()), filter((/**\r\n         * @param {?} arr\r\n         * @return {?}\r\n         */\r\n        function (arr) { return !arr.length; })), tap((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.logout();\r\n        })), finalize((/**\r\n         * @return {?}\r\n         */\r\n        function () { }))).subscribe();\r\n    };\r\n    /**\r\n     * Logouts user data service\r\n     */\r\n    /**\r\n     * Logouts user data service\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.logout = /**\r\n     * Logouts user data service\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        console.log('timeout......');\r\n        if (this.logOutSubscription) {\r\n            this.logOutSubscription.unsubscribe();\r\n        }\r\n        this.logOutSubscription = this.logoutService.logout().subscribe((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (data.result === COMMON.RESULT_OK) {\r\n                if (_this.serverStatusService.serverStatus) {\r\n                    /** @type {?} */\r\n                    var loginUrl = _this.configurationService.$loginUrl;\r\n                    if (loginUrl) {\r\n                        AppWindow.getWindow().location.href = loginUrl;\r\n                    }\r\n                }\r\n                else {\r\n                    AppWindow.getWindow().location.href = _this.serverStatusService.serverStatus.ssoRedirectURL;\r\n                }\r\n            }\r\n            else if (data.result === COMMON.RESULT_ERROR) {\r\n                console.log(data.error.message);\r\n                throw new Error(data.error.message);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * Sets auto log out time buffer\r\n     * Convert session time out (seconds) into milisecond\r\n     * @returns\r\n     */\r\n    /**\r\n     * Sets auto log out time buffer\r\n     * Convert session time out (seconds) into milisecond\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.setAutoLogOutTime = /**\r\n     * Sets auto log out time buffer\r\n     * Convert session time out (seconds) into milisecond\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var value = this.userData && this.userData.user && (this.userData.user.sessiontimeoutValue);\r\n        if (value) {\r\n            value = value - 60;\r\n        }\r\n        this.sessionTimeOut = value && ((value) * 1000);\r\n        console.log(\"%c session time out \" + this.sessionTimeOut, 'color: purple');\r\n        this.getPreferencesByCategory(PreferenceCategory.PreferenceGridColumns);\r\n        return this.sessionTimeOut;\r\n    };\r\n    /**This function returns preference object for provided category.\r\n     *\r\n     * @param categoryName : PreferenceCategory\r\n     *\r\n     * Use this enum to find out different category\r\n     *\r\n     * @returns Preference object\r\n     * example :\r\n     * preferenceObject : {\r\n            \"<CATEGORY_ID>\": {\r\n              <Data to be stored in preference>\r\n            },\r\n            \"appType\": \"<Application Type id>\",\r\n            \"category\": \"<CATEGORY_ID>\",\r\n            \"key\": <KEY Number>\r\n          }\r\n     */\r\n    /**\r\n     * This function returns preference object for provided category.\r\n     *\r\n     * @param {?} categoryName : PreferenceCategory\r\n     *\r\n     * Use this enum to find out different category\r\n     *\r\n     * @return {?} Preference object\r\n     * example :\r\n     * preferenceObject : {\r\n     * \"<CATEGORY_ID>\": {\r\n     * <Data to be stored in preference>\r\n     * },\r\n     * \"appType\": \"<Application Type id>\",\r\n     * \"category\": \"<CATEGORY_ID>\",\r\n     * \"key\": <KEY Number>\r\n     * }\r\n     */\r\n    UserDataService.prototype.getPreferencesByCategory = /**\r\n     * This function returns preference object for provided category.\r\n     *\r\n     * @param {?} categoryName : PreferenceCategory\r\n     *\r\n     * Use this enum to find out different category\r\n     *\r\n     * @return {?} Preference object\r\n     * example :\r\n     * preferenceObject : {\r\n     * \"<CATEGORY_ID>\": {\r\n     * <Data to be stored in preference>\r\n     * },\r\n     * \"appType\": \"<Application Type id>\",\r\n     * \"category\": \"<CATEGORY_ID>\",\r\n     * \"key\": <KEY Number>\r\n     * }\r\n     */\r\n    function (categoryName) {\r\n        if (!AppUtil.isDefined(categoryName)) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var cateogryByPreferecenes = null;\r\n        /** @type {?} */\r\n        var returnPreferences = null;\r\n        /** @type {?} */\r\n        var userPreferences = that.getUserPreferences();\r\n        if (userPreferences && userPreferences.length > 0) {\r\n            cateogryByPreferecenes = userPreferences.find((/**\r\n             * @param {?} data\r\n             * @return {?}\r\n             */\r\n            function (data) { return data.category === categoryName; }));\r\n            returnPreferences = cateogryByPreferecenes\r\n                ? cateogryByPreferecenes\r\n                : null;\r\n        }\r\n        return returnPreferences;\r\n    };\r\n    /**\r\n     * Function updates specific preference to be updated. There are multiple preferences that can be stored which are\r\n     * identified by Category Id.\r\n     *\r\n     * To understand object structure of preference, please refer getUserData.json from assets directory.\r\n     *\r\n     * @param preferenceObject : Preference object identified by Category.\r\n     *\r\n     * example :\r\n     * preferenceObject : {\r\n            \"<CATEGORY_ID>\": {\r\n              <Data to be stored in preference>\r\n            },\r\n            \"appType\": \"<Application Type id>\",\r\n            \"category\": \"<CATEGORY_ID>\",\r\n            \"key\": <KEY Number>\r\n          }\r\n     * @param actionParam : Action\r\n     */\r\n    /**\r\n     * Function updates specific preference to be updated. There are multiple preferences that can be stored which are\r\n     * identified by Category Id.\r\n     *\r\n     * To understand object structure of preference, please refer getUserData.json from assets directory.\r\n     *\r\n     * @param {?} preferenceObject : Preference object identified by Category.\r\n     *\r\n     * example :\r\n     * preferenceObject : {\r\n     * \"<CATEGORY_ID>\": {\r\n     * <Data to be stored in preference>\r\n     * },\r\n     * \"appType\": \"<Application Type id>\",\r\n     * \"category\": \"<CATEGORY_ID>\",\r\n     * \"key\": <KEY Number>\r\n     * }\r\n     * @param {?=} actionParam : Action\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.updatePreferencesByCategory = /**\r\n     * Function updates specific preference to be updated. There are multiple preferences that can be stored which are\r\n     * identified by Category Id.\r\n     *\r\n     * To understand object structure of preference, please refer getUserData.json from assets directory.\r\n     *\r\n     * @param {?} preferenceObject : Preference object identified by Category.\r\n     *\r\n     * example :\r\n     * preferenceObject : {\r\n     * \"<CATEGORY_ID>\": {\r\n     * <Data to be stored in preference>\r\n     * },\r\n     * \"appType\": \"<Application Type id>\",\r\n     * \"category\": \"<CATEGORY_ID>\",\r\n     * \"key\": <KEY Number>\r\n     * }\r\n     * @param {?=} actionParam : Action\r\n     * @return {?}\r\n     */\r\n    function (preferenceObject, actionParam) {\r\n        /** @type {?} */\r\n        var categoryObject = {};\r\n        categoryObject[preferenceObject.category] =\r\n            preferenceObject[preferenceObject.category];\r\n        /** @type {?} */\r\n        var tempObject = {\r\n            userPreference: {\r\n                params: {\r\n                    appType: preferenceObject.appType,\r\n                    category: preferenceObject.category\r\n                },\r\n                value: JSON.stringify(categoryObject)\r\n            }\r\n        };\r\n        /** @type {?} */\r\n        var userPreferencesPayload = this.payloadCommandService.getCommandDetails('updateUserPreference', null, null, tempObject);\r\n        /** @type {?} */\r\n        var baseParam = {};\r\n        if (!actionParam) {\r\n            actionParam = baseParam;\r\n            actionParam.dependencyList = [CacheKey.UserDataKey];\r\n        }\r\n        return this.baseConnectionService\r\n            .sendRequest(userPreferencesPayload, baseParam)\r\n            .pipe(map((/**\r\n         * @param {?} response\r\n         * @return {?}\r\n         */\r\n        function (response) {\r\n            if (response) {\r\n                return response;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })));\r\n    };\r\n    /**\r\n     * @param {?} pref\r\n     * @param {?} o\r\n     * @return {?}\r\n     */\r\n    UserDataService.prototype.CreateCDATAObj = /**\r\n     * @param {?} pref\r\n     * @param {?} o\r\n     * @return {?}\r\n     */\r\n    function (pref, o) {\r\n        /** @type {?} */\r\n        var cdata = '<![CDATA[<PreferenceChartLegendPlan>';\r\n        if (o instanceof Object) {\r\n            for (var prop in o) {\r\n                if (prop) {\r\n                    /** @type {?} */\r\n                    var mappedProp = mappingPref[prop];\r\n                    if (pref && pref instanceof Array && mappedProp.length > 0 && pref.indexOf(mappedProp) > -1) {\r\n                        o[prop] = true;\r\n                    }\r\n                    else if (pref && pref instanceof Array && mappedProp.length === 0) {\r\n                        o[prop] = o[prop];\r\n                    }\r\n                    else {\r\n                        o[prop] = false;\r\n                    }\r\n                    cdata += \"<\" + prop + \">\" + o[prop] + \"</\" + prop + \">\";\r\n                }\r\n            }\r\n        }\r\n        else if (o === undefined || o === '') {\r\n            this._chartLegendPreference = {};\r\n            for (var prop in mappingPref) {\r\n                if (pref && pref instanceof Array && mappingPref[prop].length > 0 && pref.indexOf(mappingPref[prop]) > -1) {\r\n                    cdata += \"<\" + prop + \">true</\" + prop + \">\";\r\n                    this._chartLegendPreference[prop] = true;\r\n                }\r\n                else {\r\n                    cdata += \"<\" + prop + \">false</\" + prop + \">\";\r\n                    this._chartLegendPreference[prop] = false;\r\n                }\r\n            }\r\n        }\r\n        cdata += '</PreferenceChartLegendPlan>]]>';\r\n        return StringUtil.escapeHTML(cdata);\r\n    };\r\n    /**\r\n     * Gets xmltag\r\n     * @param tags\r\n     * @returns the xml elements\r\n     */\r\n    /**\r\n     * Gets xmltag\r\n     * @private\r\n     * @param {?} tags\r\n     * @return {?} the xml elements\r\n     */\r\n    UserDataService.prototype.getXMLTag = /**\r\n     * Gets xmltag\r\n     * @private\r\n     * @param {?} tags\r\n     * @return {?} the xml elements\r\n     */\r\n    function (tags) {\r\n        // If the content is not an Object or an Array return the value\r\n        if (typeof tags !== 'object') {\r\n            if (typeof tags === 'string') {\r\n                tags = StringUtil.escapeHTML(tags);\r\n            }\r\n            return tags;\r\n        }\r\n        /** @type {?} */\r\n        var req = '';\r\n        // For each Value that you have in the object or an Array process it for a new tag\r\n        for (var key in tags) {\r\n            if (!tags.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            // If The Data is not in the form of an Array parse the OBject for parameters and tags\r\n            if (Object.prototype.toString.call(tags) !== '[object Array]') {\r\n                if (key !== 'params' && key !== 'value') {\r\n                    req += \"<\" + key;\r\n                    if (tags[key] && tags[key].params !== undefined) {\r\n                        // console.log('Params:', tags[key].params);\r\n                        for (var value in tags[key].params) {\r\n                            // req += ' ' + value + '=\\'' + tags[key].params[value] + '\\'';\r\n                            if (value) {\r\n                                req += \" \" + value + \"=\\\"\" + tags[key].params[value] + \"\\\"\";\r\n                            }\r\n                        }\r\n                    }\r\n                    req += \">\";\r\n                }\r\n            }\r\n            if (key !== 'params') {\r\n                req += this.getXMLTag(tags[key]);\r\n            }\r\n            if (Object.prototype.toString.call(tags) !== '[object Array]') {\r\n                if (key !== 'params' && key !== 'value') {\r\n                    req += \"</\" + key + \">\";\r\n                }\r\n            }\r\n        }\r\n        req = '&lt;![CDATA[ ' + req + ' ]]>';\r\n        return req;\r\n    };\r\n    UserDataService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    UserDataService.ctorParameters = function () { return [\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService },\r\n        { type: LogoutService },\r\n        { type: ConfigurationService$1 },\r\n        { type: ServerStatusService }\r\n    ]; };\r\n    /** @nocollapse */ UserDataService.ngInjectableDef = ɵɵdefineInjectable({ factory: function UserDataService_Factory() { return new UserDataService(ɵɵinject(PayloadCommandService), ɵɵinject(BaseConnectionService), ɵɵinject(LogoutService), ɵɵinject(ConfigurationService$1), ɵɵinject(ServerStatusService)); }, token: UserDataService, providedIn: \"root\" });\r\n    return UserDataService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    UserDataService.prototype.userData;\r\n    /** @type {?} */\r\n    UserDataService.prototype.isLoggedIn;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._username;\r\n    /** @type {?} */\r\n    UserDataService.prototype.username$;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._logoFileName;\r\n    /** @type {?} */\r\n    UserDataService.prototype.logoFileName$;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._userPrefix;\r\n    /** @type {?} */\r\n    UserDataService.prototype.userPrefix$;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype.lastStudy;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype.uPrivileges;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._lastKeepAliveCallTime;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._coefficient;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._isKeepAliveCallProceed;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._autoLogOutTime;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._sessionTimeOut;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._autoLogOutTimeBuffer;\r\n    /** @type {?} */\r\n    UserDataService.prototype.userIdeal$;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserDataService.prototype.idleSubscription;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    UserDataService.prototype.logOutSubscription;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._chartLegendPreference;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype._chartLegendPreferenceArr;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype.baseConnectionService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype.logoutService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype.configurationService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    UserDataService.prototype.serverStatusService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/window.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar WindowService = /** @class */ (function (_super) {\r\n    __extends(WindowService, _super);\r\n    function WindowService(router, userDataService) {\r\n        var _this = _super.call(this) || this;\r\n        _this.router = router;\r\n        _this.userDataService = userDataService;\r\n        _this.subscriptions = [];\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WindowService.prototype.redirectAsPerParams = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var preferenceIdSubscription = self.getPreferenceId().subscribe((/**\r\n         * @param {?} successResponse\r\n         * @return {?}\r\n         */\r\n        function (successResponse) {\r\n            if (successResponse) {\r\n                /** @type {?} */\r\n                var prefId_1 = successResponse;\r\n                /** @type {?} */\r\n                var item_1 = PAGE_CONSTANTS.find((/**\r\n                 * @param {?} c\r\n                 * @return {?}\r\n                 */\r\n                function (c) {\r\n                    return c.id === prefId_1;\r\n                }));\r\n                if (item_1 !== undefined) {\r\n                    /** @type {?} */\r\n                    var preferenceBookmarksSubscription = self.userDataService.updateUserPreferencesBookmarks(item_1).subscribe((/**\r\n                     * @param {?} successResp\r\n                     * @return {?}\r\n                     */\r\n                    function (successResp) {\r\n                        if (!item_1.routeUrl) {\r\n                            // self.navigateToFlexApp();\r\n                            self.router.navigate(['/']);\r\n                            /** Uncomment the following code and add conditions for all application routes\r\n                             * when using user preferences in absence of prefId for finding the last visited module */\r\n                            // } else if (item.routeUrl && item.routeUrl === '/new-plans') {\r\n                            //     self.router.navigate(['/']);\r\n                        }\r\n                        else {\r\n                            self.router.navigate([item_1.routeUrl]);\r\n                        }\r\n                    }), (/**\r\n                     * @param {?} errorResponse\r\n                     * @return {?}\r\n                     */\r\n                    function (errorResponse) {\r\n                        throw new Error(errorResponse);\r\n                    }));\r\n                    self.subscriptions.push(preferenceBookmarksSubscription);\r\n                }\r\n                else {\r\n                    self.navigateToFlexApp();\r\n                }\r\n            }\r\n            else {\r\n                self.router.navigate(['/']);\r\n            }\r\n        }), (/**\r\n         * @param {?} errorResponse\r\n         * @return {?}\r\n         */\r\n        function (errorResponse) {\r\n            throw new Error(errorResponse);\r\n        }));\r\n        self.subscriptions.push(preferenceIdSubscription);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WindowService.prototype.redirectOnSPABasedOnPreference = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // before login\r\n        /** @type {?} */\r\n        var prefCategory = PreferenceCategory.PreferenceBookmarks;\r\n        /** @type {?} */\r\n        var preferenceBookmarks = this.userDataService.getPreferencesByCategory(prefCategory);\r\n        /** @type {?} */\r\n        var prefId = preferenceBookmarks.PreferenceBookmarks.lastSingleStudyViewID;\r\n        /** @type {?} */\r\n        var item = PAGE_CONSTANTS.find((/**\r\n         * @param {?} c\r\n         * @return {?}\r\n         */\r\n        function (c) {\r\n            return c.id === prefId;\r\n        }));\r\n        if (!item.routeUrl) {\r\n            this.router.navigate(['/new-study']); // will change\r\n        }\r\n        else {\r\n            this.router.navigate([item.routeUrl]); // new-study\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WindowService.prototype.redirectBasedOnPreference = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var prefCategory = PreferenceCategory.PreferenceBookmarks;\r\n        /** @type {?} */\r\n        var preferenceBookmarks = this.userDataService.getPreferencesByCategory(prefCategory);\r\n        console.log('preferenceBookmarks: ', preferenceBookmarks);\r\n        /** @type {?} */\r\n        var prefId = preferenceBookmarks.PreferenceBookmarks.lastSingleStudyViewID;\r\n        /** @type {?} */\r\n        var item = PAGE_CONSTANTS.find((/**\r\n         * @param {?} c\r\n         * @return {?}\r\n         */\r\n        function (c) {\r\n            return c.id === prefId;\r\n        }));\r\n        /** @type {?} */\r\n        var actionParam = {};\r\n        actionParam.endPoint = true;\r\n        /** @type {?} */\r\n        var preferenceBookmarksSubscription = self.userDataService.updateUserPreferencesBookmarks(item, actionParam).subscribe((/**\r\n         * @param {?} successResp\r\n         * @return {?}\r\n         */\r\n        function (successResp) {\r\n            if (!item.routeUrl) {\r\n                self.router.navigate(['/']);\r\n                /** Uncomment the following code and add conditions for all application routes\r\n                 * when using user preferences in absence of prefId for finding the last visited module */\r\n                // } else if (item.routeUrl && item.routeUrl === '/new-plans') {\r\n                //     self.router.navigate(['/']);\r\n            }\r\n            else {\r\n                self.router.navigate([item.routeUrl]); // new-country\r\n            }\r\n        }), (/**\r\n         * @param {?} errorResponse\r\n         * @return {?}\r\n         */\r\n        function (errorResponse) {\r\n            throw new Error(errorResponse);\r\n        }));\r\n        self.subscriptions.push(preferenceBookmarksSubscription);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    WindowService.prototype.getPreferenceId = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // const self = this;\r\n        /** @type {?} */\r\n        var prefId = parseInt(_super.prototype.getParameterByName.call(this, 'prefId'), 10) || _super.prototype.getParameterByName.call(this, 'prefId');\r\n        /** Uncomment the following code if preferences for user are to be used while naviation in absence of prefId.\r\n         * Also add the check for tab literals commented in above method */\r\n        // if (prefId === undefined || prefId === null) {\r\n        //     return self.userDataService.getUserData(USER_PARAMS).pipe(map(resp => {\r\n        //         const preferenceBookmarks = self.userDataService.getPreferenceBookmarks(self.userDataService.getUserPreferences());\r\n        //         if (preferenceBookmarks.multiStudyView === true) {\r\n        //             prefId = parseInt(preferenceBookmarks.lastMultiStudyViewID, 10) || preferenceBookmarks.lastMultiStudyViewID;\r\n        //         } else {\r\n        //             prefId = parseInt(preferenceBookmarks.lastSingleStudyViewID, 10) || preferenceBookmarks.lastSingleStudyViewID;\r\n        //         }\r\n        //         return prefId;\r\n        //     }), catchError(error => {\r\n        //         throw error;\r\n        //     }));\r\n        // } else {\r\n        return of(prefId);\r\n        // }\r\n    };\r\n    /**\r\n     * @param {?} moduleName\r\n     * @return {?}\r\n     */\r\n    WindowService.prototype.navigateToModule = /**\r\n     * @param {?} moduleName\r\n     * @return {?}\r\n     */\r\n    function (moduleName) {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var id = MODULE_CONSTANTS[moduleName];\r\n        /** @type {?} */\r\n        var item = PAGE_CONSTANTS.find((/**\r\n         * @param {?} pc\r\n         * @return {?}\r\n         */\r\n        function (pc) {\r\n            return pc.id === id;\r\n        }));\r\n        if (item !== undefined) {\r\n            /** @type {?} */\r\n            var actionParam = {};\r\n            actionParam.endPoint = true;\r\n            actionParam.url = APIEndPoints.USER_PREFERENCE;\r\n            actionParam.httpMethod = HttpVerbs.put;\r\n            /** @type {?} */\r\n            var subscription = self.userDataService.updateUserPreferencesBookmarks(item, actionParam).subscribe((/**\r\n             * @param {?} successResponse\r\n             * @return {?}\r\n             */\r\n            function (successResponse) {\r\n                if (item.isAngularModule) {\r\n                    self.router.navigate([item.routeUrl]); // newCountries\r\n                }\r\n                else {\r\n                    self.navigateToFlexApp();\r\n                }\r\n            }), (/**\r\n             * @param {?} errorResponse\r\n             * @return {?}\r\n             */\r\n            function (errorResponse) {\r\n                throw new Error(errorResponse);\r\n            }));\r\n            self.subscriptions.push(subscription);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    WindowService.prototype.navigateToFlexApp = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var url = AppUtil.generateFlexUrl(BASE_HREF);\r\n        AppWindow.getWindow().location.href = url;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WindowService.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} subscription\r\n         * @return {?}\r\n         */\r\n        function (subscription) {\r\n            subscription.unsubscribe();\r\n        }));\r\n        this.subscriptions = null;\r\n    };\r\n    WindowService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    WindowService.ctorParameters = function () { return [\r\n        { type: Router },\r\n        { type: UserDataService }\r\n    ]; };\r\n    /** @nocollapse */ WindowService.ngInjectableDef = ɵɵdefineInjectable({ factory: function WindowService_Factory() { return new WindowService(ɵɵinject(Router), ɵɵinject(UserDataService)); }, token: WindowService, providedIn: \"root\" });\r\n    return WindowService;\r\n}(CtosWindow));\r\nif (false) {\r\n    /** @type {?} */\r\n    WindowService.prototype.subscriptions;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    WindowService.prototype.router;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    WindowService.prototype.userDataService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/header/header.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar HeaderComponent = /** @class */ (function () {\r\n    function HeaderComponent(soCommonWindowService) {\r\n        this.soCommonWindowService = soCommonWindowService;\r\n        this.itemSelect = new EventEmitter();\r\n    }\r\n    Object.defineProperty(HeaderComponent.prototype, \"searchListFormGroupName\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.searchListFormGroup;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.searchListFormGroup = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HeaderComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    HeaderComponent.prototype.itemSelected = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.itemSelect.emit(event);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HeaderComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.userProfile = null;\r\n        this.mainHeaderItems = null;\r\n        this.logoUrl = null;\r\n        this.alertConfirmUrl = null;\r\n        this.subHeaderItems = null;\r\n        this.studyRefreshDate = null;\r\n        this.studyRefreshDateLabel = null;\r\n        this.itemSelect = null;\r\n    };\r\n    /**\r\n     * @param {?} moduleName\r\n     * @return {?}\r\n     */\r\n    HeaderComponent.prototype.navigateToModule = /**\r\n     * @param {?} moduleName\r\n     * @return {?}\r\n     */\r\n    function (moduleName) {\r\n        this.soCommonWindowService.navigateToModule(moduleName);\r\n    };\r\n    HeaderComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-header',\r\n                    template: \"<ctos-main-header [userProfile]=\\\"userProfile\\\" [items]=\\\"mainHeaderItems\\\" [logoUrl]=\\\"logoUrl\\\" [appInfoUrl]=\\\"appInfoUrl\\\" [alertConfirmUrl]=\\\"alertConfirmUrl\\\"\\r\\n    [aboutResource]=\\\"aboutResource\\\" [passwordResource]=\\\"passwordResource\\\" (headerTabClicked)=\\\"navigateToModule($event)\\\"></ctos-main-header>\\r\\n<ctos-sub-header [subHeaders]=\\\"subHeaderItems\\\" [studyRefreshDate]=\\\"studyRefreshDate\\\" [studyRefreshDateLabel]=\\\"studyRefreshDateLabel\\\"\\r\\n    [studyListInput]=\\\"studyListInput\\\" [searchListFormGroupName]=\\\"searchListFormGroupName\\\" (itemSelect)=\\\"itemSelected($event)\\\" (headerTabClicked)=\\\"navigateToModule($event)\\\"\\r\\n    [disablePlansTab]=\\\"disablePlansTab\\\"></ctos-sub-header>\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    HeaderComponent.ctorParameters = function () { return [\r\n        { type: WindowService }\r\n    ]; };\r\n    HeaderComponent.propDecorators = {\r\n        userProfile: [{ type: Input }],\r\n        mainHeaderItems: [{ type: Input }],\r\n        logoUrl: [{ type: Input }],\r\n        appInfoUrl: [{ type: Input }],\r\n        alertConfirmUrl: [{ type: Input }],\r\n        subHeaderItems: [{ type: Input }],\r\n        studyRefreshDate: [{ type: Input }],\r\n        studyRefreshDateLabel: [{ type: Input }],\r\n        studyListInput: [{ type: Input }],\r\n        aboutResource: [{ type: Input }],\r\n        passwordResource: [{ type: Input }],\r\n        disablePlansTab: [{ type: Input }],\r\n        searchListFormGroupName: [{ type: Input }],\r\n        itemSelect: [{ type: Output }]\r\n    };\r\n    return HeaderComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.userProfile;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.mainHeaderItems;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.logoUrl;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.appInfoUrl;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.alertConfirmUrl;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.subHeaderItems;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.studyRefreshDate;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.studyRefreshDateLabel;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.studyListInput;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.aboutResource;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.passwordResource;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.searchListFormGroup;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.disablePlansTab;\r\n    /** @type {?} */\r\n    HeaderComponent.prototype.itemSelect;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    HeaderComponent.prototype.soCommonWindowService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/milestone-graph/milestone-graph.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$2 = momentNS;\r\nvar MilestoneGraphComponent = /** @class */ (function () {\r\n    function MilestoneGraphComponent(cdRef) {\r\n        this.cdRef = cdRef;\r\n        this.title = 'D3 Custom Widget';\r\n        this.baseline = {};\r\n        this.site = {};\r\n        this.subjects = {};\r\n        this.higherend = 500;\r\n        this.lowerend = 50;\r\n        this.position = 65;\r\n        this.siteY = 58; // 60; // to shift the site (purple/magenta) line\r\n        // 60; // to shift the site (purple/magenta) line\r\n        this.subjectY = 72; // 70; // to shift the subject (blue) line\r\n        // 70; // to shift the subject (blue) line\r\n        this.dateFormat = 'DD-MMM-YYYY';\r\n        this.collisionSafety = 20; // collision safety margin of 20px apart\r\n        this.rangeParam = [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.render();\r\n        this.rangeParam = [this.lowerend, this.higherend];\r\n        this.xScale = scaleTime()\r\n            .domain([new Date(this.range.start), new Date(this.range.end)])\r\n            .range(this.rangeParam);\r\n        this.xTFSI = this.xScale(new Date(this.milestone['TFSI']));\r\n        this.xTLSR = this.xScale(new Date(this.milestone['TLSR']));\r\n        this.xPFSR = this.xScale(new Date(this.milestone['PFSI']));\r\n        this.xPLSR = this.xScale(new Date(this.milestone['PLSR']));\r\n        this.xPFSI = this.xScale(new Date(this.milestone['PFSI']));\r\n        this.xPLSI = this.xScale(new Date(this.milestone['PLSI']));\r\n        this.DrawBaseline();\r\n        this.PlotPlannedSiteMilestones();\r\n        this.PlotPlannedSubjectsMilestones();\r\n        this.cdRef.detectChanges();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.draw = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    // to clear the SVG contents\r\n    //   private clearSVG() {\r\n    //     d3.select('#' + this.id + ' .baseline')\r\n    //       .selectAll('*')\r\n    //       .remove();\r\n    //     d3.select('#' + this.id + ' .site')\r\n    //       .selectAll('*')\r\n    //       .remove();\r\n    //     d3.select('#' + this.id + ' .subjects')\r\n    //       .selectAll('*')\r\n    //       .remove();\r\n    //   }\r\n    // to clear the SVG contents\r\n    //   private clearSVG() {\r\n    //     d3.select('#' + this.id + ' .baseline')\r\n    //       .selectAll('*')\r\n    //       .remove();\r\n    //     d3.select('#' + this.id + ' .site')\r\n    //       .selectAll('*')\r\n    //       .remove();\r\n    //     d3.select('#' + this.id + ' .subjects')\r\n    //       .selectAll('*')\r\n    //       .remove();\r\n    //   }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.DrawBaseline = \r\n    // to clear the SVG contents\r\n    //   private clearSVG() {\r\n    //     d3.select('#' + this.id + ' .baseline')\r\n    //       .selectAll('*')\r\n    //       .remove();\r\n    //     d3.select('#' + this.id + ' .site')\r\n    //       .selectAll('*')\r\n    //       .remove();\r\n    //     d3.select('#' + this.id + ' .subjects')\r\n    //       .selectAll('*')\r\n    //       .remove();\r\n    //   }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.showBaseline()) {\r\n            if (this.milestone['PFSI'] &&\r\n                this.milestone['PLSI'] &&\r\n                this.xTLSR - this.xTFSI < this.collisionSafety) {\r\n                this.xTLSR = this.xTFSI + this.collisionSafety;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.type = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return 'CUSTOM';\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.PlotPlannedSiteMilestones = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.milestone['PFSI'] &&\r\n            this.milestone['PLSI'] &&\r\n            moment$2(this.milestone['PLSI']) >= moment$2(this.milestone['PFSI'])) {\r\n            // if site line\r\n            if (this.xPLSI - this.xPFSI < this.collisionSafety) {\r\n                this.xPLSI = this.xPFSI + this.collisionSafety;\r\n            }\r\n            /** @type {?} */\r\n            var xxTFSI = moment$2(this.milestone['TFSI']);\r\n            /** @type {?} */\r\n            var xxPFSI = moment$2(this.milestone['PFSI']);\r\n            /** @type {?} */\r\n            var aheadBehindDaysFSI = parseInt(moment$2\r\n                .duration(xxPFSI.diff(xxTFSI))\r\n                .asDays()\r\n                .toString(), 10);\r\n            this.aheadBehindDaysFSIColor = this.determineColor(aheadBehindDaysFSI);\r\n            this.diffFSI =\r\n                (aheadBehindDaysFSI > 0\r\n                    ? '+' + aheadBehindDaysFSI\r\n                    : aheadBehindDaysFSI) + this.labels.DAYS_FROM_TFSI;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.PlotPlannedSubjectsMilestones = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // const xPFSS = this.xScale(new Date(this.milestone['PFSS']));\r\n        // const xPLSS = this.xScale(new Date(this.milestone['PLSS']));\r\n        if (this.xPFSR && this.xPLSR) {\r\n            // if subject line\r\n            if (this.xPLSR - this.xPFSR < this.collisionSafety) {\r\n                this.xPLSR = this.xPFSR + this.collisionSafety;\r\n            }\r\n            /** @type {?} */\r\n            var xxPLSR = moment$2(this.milestone['PLSR']);\r\n            /** @type {?} */\r\n            var xxTLSR = moment$2(this.milestone['TLSR']);\r\n            /** @type {?} */\r\n            var aheadBehindDaysLSR = parseInt(moment$2\r\n                .duration(xxPLSR.diff(xxTLSR))\r\n                .asDays()\r\n                .toString(), 10);\r\n            this.aheadBehindDaysLSRColor = this.determineColor(aheadBehindDaysLSR);\r\n            this.diffLSR =\r\n                (aheadBehindDaysLSR > 0\r\n                    ? '+' + aheadBehindDaysLSR\r\n                    : aheadBehindDaysLSR) + this.labels.DAYS_FROM_TLSR;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} difference\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.determineColor = /**\r\n     * @param {?} difference\r\n     * @return {?}\r\n     */\r\n    function (difference) {\r\n        if (difference <= 0) {\r\n            return '#00C221';\r\n        }\r\n        else {\r\n            return '#E20000';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.render = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.clearSVG();\r\n        this.higherend = document.getElementById(this.id).clientWidth - 50;\r\n        this.draw();\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.onResize = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        this.render();\r\n    };\r\n    /**\r\n     * @param {?} line1\r\n     * @param {?} date\r\n     * @param {?=} line3\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.getTooltipData = /**\r\n     * @param {?} line1\r\n     * @param {?} date\r\n     * @param {?=} line3\r\n     * @return {?}\r\n     */\r\n    function (line1, date, line3) {\r\n        /** @type {?} */\r\n        var result = line1 + '\\n' + this.labels.SPACES + moment$2(this.milestone[date]).format(this.dateFormat);\r\n        if (line3) {\r\n            result = result + '\\n' + this.labels.SPACES + line3;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.showBaseline = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.xTFSI && this.xTLSR;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.showPlannedSiteMilestones = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return (this.xPFSI &&\r\n            this.xPLSI &&\r\n            this.milestone['PFSI'] &&\r\n            this.milestone['PLSI'] &&\r\n            moment$2(this.milestone['PLSI']) >=\r\n                moment$2(this.milestone['PFSI']));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphComponent.prototype.showPlannedSubjectsMilestones = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.xPFSR && this.xPLSR;\r\n    };\r\n    MilestoneGraphComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line\r\n                    selector: 'ctos-milestone-graph',\r\n                    template: \"<svg id=\\\"{{ id }}\\\" class=\\\"outer\\\" style=\\\"min-width:350px;width: 90%\\\" (window:resize)=\\\"onResize($event)\\\">\\r\\n  <!--Site milestones and baseline-->\\r\\n  <g class=\\\"site\\\" *ngIf=\\\"showPlannedSiteMilestones()\\\">\\r\\n    <line class=\\\"line\\\" [attr.x1]=\\\"xPFSI\\\" [attr.y1]=\\\"siteY\\\" [attr.x2]=\\\"xPLSI\\\" [attr.y2]=\\\"siteY\\\"></line>\\r\\n    <polygon class=\\\"polygon1\\\" [attr.points]=\\\"xPFSI +\\r\\n      ',' +\\r\\n      (siteY - 6) +\\r\\n      ' ' +\\r\\n      (xPFSI - 5) +\\r\\n      ',' +\\r\\n      (siteY - 14) +\\r\\n      ' ' +\\r\\n      (xPFSI + 5) +\\r\\n      ',' +\\r\\n      (siteY - 14)\\\" [attr.stroke]=\\\"aheadBehindDaysFSIColor\\\" [attr.stroke-width]=\\\"0\\\"\\r\\n      [attr.fill]=\\\"aheadBehindDaysFSIColor\\\" [attr.d]=\\\"labels.PFSI_LABEL + diffFSI\\\"\\r\\n      [matTooltipClass]=\\\"'ctos-text-centered-tooltip'\\\" [matTooltip]=\\\"\\r\\n        getTooltipData(labels.PFSI, labels.PFSI_SHORT, diffFSI)\\r\\n      \\\"></polygon>\\r\\n    <text [attr.x]=\\\"xPFSI - 8\\\" [attr.y]=\\\"siteY - 20\\\">{{ labels.PFSI_SHORT }}</text>\\r\\n    <polygon class=\\\"polygon2\\\" [attr.points]=\\\"xPLSI +\\r\\n      ',' +\\r\\n      (siteY - 6) +\\r\\n      ' ' +\\r\\n      (xPLSI - 5) +\\r\\n      ',' +\\r\\n      (siteY - 14) +\\r\\n      ' ' +\\r\\n      (xPLSI + 5) +\\r\\n      ',' +\\r\\n      (siteY - 14)\\\" [attr.stroke]=\\\"'black'\\\" [attr.stroke-width]=\\\"1\\\" [attr.fill]=\\\"'white'\\\" [attr.d]=\\\"labels.PLSI_LABEL\\\"\\r\\n      [matTooltipClass]=\\\"'ctos-text-centered-tooltip'\\\" [matTooltip]=\\\"getTooltipData(labels.PLSI, labels.PLSI_SHORT)\\\">\\r\\n    </polygon>\\r\\n    <text [attr.x]=\\\"xPLSI - 8\\\" [attr.y]=\\\"siteY - 20\\\">{{ labels.PLSI_SHORT }}</text>\\r\\n  </g>\\r\\n\\r\\n  <!--Sites milestones and baseline-->\\r\\n  <g class=\\\"baseline\\\" *ngIf=\\\"showBaseline()\\\">\\r\\n    <line class=\\\"line\\\" [attr.x1]=\\\"xTFSI\\\" [attr.y1]=\\\"position\\\" [attr.x2]=\\\"xTLSR\\\" [attr.y2]=\\\"position\\\"></line>\\r\\n    <circle class=\\\"circle1\\\" [attr.cx]=\\\"xTFSI\\\" [attr.cy]=\\\"position\\\" [attr.r]=\\\"5\\\" [attr.d]=\\\"labels.TFSI_LABEL\\\"\\r\\n      [matTooltipClass]=\\\"'ctos-text-centered-tooltip'\\\" [matTooltip]=\\\"getTooltipData(labels.TFSI, labels.TFSI_SHORT)\\\">\\r\\n    </circle>\\r\\n    <text [attr.x]=\\\"xTFSI - 27\\\" [attr.y]=\\\"position + 3\\\">{{ labels.TFSI_SHORT }}</text>\\r\\n    <circle class=\\\"circle2\\\" [attr.cx]=\\\"xTLSR\\\" [attr.cy]=\\\"position\\\" [attr.r]=\\\"5\\\" [attr.d]=\\\"labels.TLSR_LABEL\\\"\\r\\n      [matTooltipClass]=\\\"'ctos-text-centered-tooltip'\\\" [matTooltip]=\\\"getTooltipData(labels.TLSR, labels.TLSR_SHORT)\\\">\\r\\n    </circle>\\r\\n    <text [attr.x]=\\\"xTLSR + 10\\\" [attr.y]=\\\"position + 3\\\">{{ labels.TLSR_SHORT }}</text>\\r\\n  </g>\\r\\n\\r\\n  <!--Target line and milestone-->\\r\\n  <g class=\\\"subjects\\\" *ngIf=\\\"showPlannedSubjectsMilestones()\\\">\\r\\n    <line class=\\\"line\\\" [attr.x1]=\\\"xPFSR\\\" [attr.y1]=\\\"subjectY\\\" [attr.x2]=\\\"xPLSR\\\" [attr.y2]=\\\"subjectY\\\"></line>\\r\\n    <text [attr.x]=\\\"xPFSR - 10\\\" [attr.y]=\\\"subjectY + 27\\\" [attr.stroke-width]=\\\"0\\\">\\r\\n      {{ labels.PFSR_SHORT }}\\r\\n    </text>\\r\\n    <polygon class=\\\"polygon1\\\" [attr.points]=\\\"xPFSR +\\r\\n      ',' +\\r\\n      (subjectY + 6) +\\r\\n      ' ' +\\r\\n      (xPFSR - 5) +\\r\\n      ',' +\\r\\n      (subjectY + 14) +\\r\\n      ' ' +\\r\\n      (xPFSR + 5) +\\r\\n      ',' +\\r\\n      (subjectY + 14)\\\" [attr.stroke]=\\\"'black'\\\" [attr.stroke-width]=\\\"1\\\" [attr.fill]=\\\"'white'\\\"\\r\\n      [attr.d]=\\\"labels.PFSR_LABEL\\\" [matTooltipClass]=\\\"'ctos-text-centered-tooltip'\\\"\\r\\n      [matTooltip]=\\\"getTooltipData(labels.PFSR, labels.PFSR_SHORT)\\\"></polygon>\\r\\n    <text [attr.x]=\\\"xPLSR - 10\\\" [attr.y]=\\\"subjectY + 27\\\" [attr.stroke-width]=\\\"0\\\">\\r\\n      {{ labels.PLSR_SHORT }}\\r\\n    </text>\\r\\n    <polygon class=\\\"polygon2\\\" [attr.points]=\\\"xPLSR +\\r\\n      ',' +\\r\\n      (subjectY + 6) +\\r\\n      ' ' +\\r\\n      (xPLSR - 5) +\\r\\n      ',' +\\r\\n      (subjectY + 14) +\\r\\n      ' ' +\\r\\n      (xPLSR + 5) +\\r\\n      ',' +\\r\\n      (subjectY + 14)\\\" [attr.stroke]=\\\"aheadBehindDaysLSRColor\\\" [attr.stroke-width]=\\\"0\\\"\\r\\n      [attr.fill]=\\\"aheadBehindDaysLSRColor\\\" [attr.d]=\\\"labels.PLSR_LABEL\\\"\\r\\n      [matTooltipClass]=\\\"'ctos-text-centered-tooltip'\\\"\\r\\n      [matTooltip]=\\\"getTooltipData(labels.PLSR, labels.PLSR_SHORT, diffLSR)\\\"></polygon>\\r\\n  </g>\\r\\n</svg>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    styles: [\"\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    MilestoneGraphComponent.ctorParameters = function () { return [\r\n        { type: ChangeDetectorRef }\r\n    ]; };\r\n    MilestoneGraphComponent.propDecorators = {\r\n        milestone: [{ type: Input }],\r\n        id: [{ type: Input }],\r\n        range: [{ type: Input }],\r\n        labels: [{ type: Input }]\r\n    };\r\n    return MilestoneGraphComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.title;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.milestone;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.id;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.range;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.labels;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.baseline;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.site;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.subjects;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.xTFSI;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.xTLSR;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.xPFSI;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.xPLSI;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.diffFSI;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.aheadBehindDaysFSIColor;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.diffLSR;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.aheadBehindDaysLSRColor;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.xPFSR;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.xPLSR;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.xScale;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.higherend;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.lowerend;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.position;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.siteY;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.subjectY;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.dateFormat;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.collisionSafety;\r\n    /** @type {?} */\r\n    MilestoneGraphComponent.prototype.rangeParam;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    MilestoneGraphComponent.prototype.cdRef;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/study-list.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar StudyListService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of study list service.\r\n     * @param payloadCommandService\r\n     * @param baseConnectionService\r\n     */\r\n    function StudyListService(payloadCommandService, baseConnectionService, userDataService) {\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.userDataService = userDataService;\r\n        this.studyKeySubject = new Subject();\r\n        this.studyKey$ = this.studyKeySubject.asObservable();\r\n    }\r\n    Object.defineProperty(StudyListService.prototype, \"studyTag\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.sTag;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.sTag = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // /**\r\n    //  * Gets criteria details\r\n    //  * @returns\r\n    //  */\r\n    // GetCriteriaDetails() {\r\n    //   return this.filterDataService.histList.pipe(\r\n    //     map(messages => {\r\n    //       return messages;\r\n    //     })\r\n    //   );\r\n    // }\r\n    // /**\r\n    //  * Gets study list\r\n    //  * @param [criteriName]\r\n    //  * @param [cacheType]\r\n    //  * @returns\r\n    //  */\r\n    // getStudyList(criteriName?: any, cacheType?: CacheType) {\r\n    //   if (!cacheType) {\r\n    //     cacheType = CacheType.sticky;\r\n    //   }\r\n    //   const CriteriNames = criteriName ? criteriName : [];\r\n    //   const tempObject = {\r\n    //     criteriaList: {\r\n    //       value: []\r\n    //     }\r\n    //   };\r\n    //   CriteriNames.forEach(function (value, key) {\r\n    //     tempObject.criteriaList.value.push({\r\n    //       criterionVal: {\r\n    //         params: {\r\n    //           criterionId: value\r\n    //         },\r\n    //         value: 'All'\r\n    //       }\r\n    //     });\r\n    //   });\r\n    //   const moduleInfo = {\r\n    //     moduleName: 'STDLST',\r\n    //     pageName: 'MNGHILST'\r\n    //   };\r\n    //   const studyListPayload = this.payloadCommandService.getCommandDetails(\r\n    //     'GetStudyList',\r\n    //     {},\r\n    //     {},\r\n    //     tempObject,\r\n    //     moduleInfo\r\n    //   );\r\n    //   return this.baseConnectionService\r\n    //     .sendRequest(studyListPayload, {\r\n    //       cacheKey: CacheKey.StudyDataKey,\r\n    //       cacheType: cacheType\r\n    //     })\r\n    //     .pipe(\r\n    //       map(response => {\r\n    //         if (\r\n    //           response.hasOwnProperty('studyList') &&\r\n    //           response.studyList.hasOwnProperty('studyThumbnail')\r\n    //         ) {\r\n    //           return response.studyList.studyThumbnail;\r\n    //         } else {\r\n    //           return response;\r\n    //         }\r\n    //       })\r\n    //     );\r\n    // }\r\n    /**\r\n     * Gets study tag list\r\n     * @returns study tag list\r\n     */\r\n    // /**\r\n    //  * Gets criteria details\r\n    //  * @returns\r\n    //  */\r\n    // GetCriteriaDetails() {\r\n    //   return this.filterDataService.histList.pipe(\r\n    //     map(messages => {\r\n    //       return messages;\r\n    //     })\r\n    //   );\r\n    // }\r\n    // /**\r\n    //  * Gets study list\r\n    //  * @param [criteriName]\r\n    //  * @param [cacheType]\r\n    //  * @returns\r\n    //  */\r\n    // getStudyList(criteriName?: any, cacheType?: CacheType) {\r\n    //   if (!cacheType) {\r\n    //     cacheType = CacheType.sticky;\r\n    //   }\r\n    //   const CriteriNames = criteriName ? criteriName : [];\r\n    //   const tempObject = {\r\n    //     criteriaList: {\r\n    //       value: []\r\n    //     }\r\n    //   };\r\n    //   CriteriNames.forEach(function (value, key) {\r\n    //     tempObject.criteriaList.value.push({\r\n    //       criterionVal: {\r\n    //         params: {\r\n    //           criterionId: value\r\n    //         },\r\n    //         value: 'All'\r\n    //       }\r\n    //     });\r\n    //   });\r\n    //   const moduleInfo = {\r\n    //     moduleName: 'STDLST',\r\n    //     pageName: 'MNGHILST'\r\n    //   };\r\n    //   const studyListPayload = this.payloadCommandService.getCommandDetails(\r\n    //     'GetStudyList',\r\n    //     {},\r\n    //     {},\r\n    //     tempObject,\r\n    //     moduleInfo\r\n    //   );\r\n    //   return this.baseConnectionService\r\n    //     .sendRequest(studyListPayload, {\r\n    //       cacheKey: CacheKey.StudyDataKey,\r\n    //       cacheType: cacheType\r\n    //     })\r\n    //     .pipe(\r\n    //       map(response => {\r\n    //         if (\r\n    //           response.hasOwnProperty('studyList') &&\r\n    //           response.studyList.hasOwnProperty('studyThumbnail')\r\n    //         ) {\r\n    //           return response.studyList.studyThumbnail;\r\n    //         } else {\r\n    //           return response;\r\n    //         }\r\n    //       })\r\n    //     );\r\n    // }\r\n    /**\r\n     * Gets study tag list\r\n     * @param {?} searchCriteria\r\n     * @param {?=} actionParam\r\n     * @return {?} study tag list\r\n     */\r\n    StudyListService.prototype.getStudyTagList = \r\n    // /**\r\n    //  * Gets criteria details\r\n    //  * @returns\r\n    //  */\r\n    // GetCriteriaDetails() {\r\n    //   return this.filterDataService.histList.pipe(\r\n    //     map(messages => {\r\n    //       return messages;\r\n    //     })\r\n    //   );\r\n    // }\r\n    // /**\r\n    //  * Gets study list\r\n    //  * @param [criteriName]\r\n    //  * @param [cacheType]\r\n    //  * @returns\r\n    //  */\r\n    // getStudyList(criteriName?: any, cacheType?: CacheType) {\r\n    //   if (!cacheType) {\r\n    //     cacheType = CacheType.sticky;\r\n    //   }\r\n    //   const CriteriNames = criteriName ? criteriName : [];\r\n    //   const tempObject = {\r\n    //     criteriaList: {\r\n    //       value: []\r\n    //     }\r\n    //   };\r\n    //   CriteriNames.forEach(function (value, key) {\r\n    //     tempObject.criteriaList.value.push({\r\n    //       criterionVal: {\r\n    //         params: {\r\n    //           criterionId: value\r\n    //         },\r\n    //         value: 'All'\r\n    //       }\r\n    //     });\r\n    //   });\r\n    //   const moduleInfo = {\r\n    //     moduleName: 'STDLST',\r\n    //     pageName: 'MNGHILST'\r\n    //   };\r\n    //   const studyListPayload = this.payloadCommandService.getCommandDetails(\r\n    //     'GetStudyList',\r\n    //     {},\r\n    //     {},\r\n    //     tempObject,\r\n    //     moduleInfo\r\n    //   );\r\n    //   return this.baseConnectionService\r\n    //     .sendRequest(studyListPayload, {\r\n    //       cacheKey: CacheKey.StudyDataKey,\r\n    //       cacheType: cacheType\r\n    //     })\r\n    //     .pipe(\r\n    //       map(response => {\r\n    //         if (\r\n    //           response.hasOwnProperty('studyList') &&\r\n    //           response.studyList.hasOwnProperty('studyThumbnail')\r\n    //         ) {\r\n    //           return response.studyList.studyThumbnail;\r\n    //         } else {\r\n    //           return response;\r\n    //         }\r\n    //       })\r\n    //     );\r\n    // }\r\n    /**\r\n     * Gets study tag list\r\n     * @param {?} searchCriteria\r\n     * @param {?=} actionParam\r\n     * @return {?} study tag list\r\n     */\r\n    function (searchCriteria, actionParam) {\r\n        var _this = this;\r\n        if (searchCriteria === undefined || searchCriteria === null) {\r\n            searchCriteria = '';\r\n        }\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo();\r\n        /** @type {?} */\r\n        var mruStudyListIds = this.userDataService.getMruStudyList();\r\n        /** @type {?} */\r\n        var studyTagsPayload;\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.STUDY_TAGS_LIST; // will change\r\n            studyTagsPayload = this.payloadCommandService.getApiRequest(COMMAND.GET_STUDY_TAGS_LIST, null, {\r\n                'mruStudyList': mruStudyListIds,\r\n                'searchCriteria': searchCriteria\r\n            }, moduleInfo);\r\n            return this.baseConnectionService\r\n                .send(studyTagsPayload, actionParam)\r\n                .pipe(map((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) { return _this.handleStudyTagListRes(response, mruStudyListIds); })));\r\n        }\r\n        else {\r\n            studyTagsPayload = this.payloadCommandService.getCommandDetails(COMMAND.GET_STUDY_TAGS_LIST, {\r\n                'mruStudyList': mruStudyListIds,\r\n                'searchCriteria': searchCriteria\r\n            }, null, null, moduleInfo);\r\n            return this.baseConnectionService\r\n                .sendRequest(studyTagsPayload)\r\n                .pipe(map((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) { return _this.handleStudyTagListRes(response, mruStudyListIds); })));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} response\r\n     * @param {?} mruStudyListIds\r\n     * @return {?}\r\n     */\r\n    StudyListService.prototype.handleStudyTagListRes = /**\r\n     * @param {?} response\r\n     * @param {?} mruStudyListIds\r\n     * @return {?}\r\n     */\r\n    function (response, mruStudyListIds) {\r\n        if (response.result === COMMON.RESULT_OK) {\r\n            /** @type {?} */\r\n            var retResponse = {};\r\n            if (response.hasOwnProperty('mruStudyTags')) {\r\n                if (response.mruStudyTags.studyTag instanceof Array) {\r\n                    retResponse['recentListItems'] = response.mruStudyTags.studyTag;\r\n                }\r\n                else if (response.mruStudyTags.studyTag) {\r\n                    retResponse['recentListItems'] = [response.mruStudyTags.studyTag];\r\n                }\r\n                else {\r\n                    retResponse['recentListItems'] = [];\r\n                }\r\n            }\r\n            else {\r\n                retResponse['recentListItems'] = [];\r\n            }\r\n            this.sortMruStudyTags(retResponse['recentListItems'], mruStudyListIds);\r\n            if (response.hasOwnProperty('listOfStudyTags')) {\r\n                if (response.listOfStudyTags.studyTag instanceof Array) {\r\n                    retResponse['allListItems'] = response.listOfStudyTags.studyTag;\r\n                }\r\n                else if (response.listOfStudyTags.studyTag) {\r\n                    retResponse['allListItems'] = [response.listOfStudyTags.studyTag];\r\n                }\r\n                else {\r\n                    retResponse['allListItems'] = [];\r\n                }\r\n            }\r\n            else {\r\n                retResponse['allListItems'] = [];\r\n            }\r\n            retResponse['allListItems'] = this.sortListOfStudyTags(retResponse['allListItems'], 'id');\r\n            return retResponse;\r\n        }\r\n        else {\r\n            return new ApplicationError(response.error.message, response.error.errorCode);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} itemsArray\r\n     * @param {?} mruStudyListIds\r\n     * @return {?}\r\n     */\r\n    StudyListService.prototype.sortMruStudyTags = /**\r\n     * @param {?} itemsArray\r\n     * @param {?} mruStudyListIds\r\n     * @return {?}\r\n     */\r\n    function (itemsArray, mruStudyListIds) {\r\n        /** @type {?} */\r\n        var sortingArr = mruStudyListIds.split(';').map((/**\r\n         * @param {?} t\r\n         * @return {?}\r\n         */\r\n        function (t) {\r\n            return parseInt(t, 10);\r\n        }));\r\n        return itemsArray.sort((/**\r\n         * @param {?} a\r\n         * @param {?} b\r\n         * @return {?}\r\n         */\r\n        function (a, b) {\r\n            return sortingArr.indexOf(a.key) - sortingArr.indexOf(b.key);\r\n        })).reverse();\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    StudyListService.prototype.shareStudyKey = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        this.studyKeySubject.next(data.key);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} itemsArray\r\n     * @param {?} attributeName\r\n     * @return {?}\r\n     */\r\n    StudyListService.prototype.sortListOfStudyTags = /**\r\n     * @private\r\n     * @param {?} itemsArray\r\n     * @param {?} attributeName\r\n     * @return {?}\r\n     */\r\n    function (itemsArray, attributeName) {\r\n        return itemsArray.sort((/**\r\n         * @param {?} a\r\n         * @param {?} b\r\n         * @return {?}\r\n         */\r\n        function (a, b) {\r\n            /** @type {?} */\r\n            var str1 = a[attributeName].toString().toLowerCase();\r\n            /** @type {?} */\r\n            var str2 = b[attributeName].toString().toLowerCase();\r\n            if (str1 > str2) {\r\n                return 1;\r\n            }\r\n            else if (str1 < str2) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    StudyListService.prototype.getStudyTags = /**\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (actionParam) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo();\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.STUDY_TAGS; // will change\r\n            // will change\r\n            /** @type {?} */\r\n            var studyTagsPayload = this.payloadCommandService.getApiRequest(COMMAND.GET_STUDY_TAGS, null, null, moduleInfo);\r\n            return this.baseConnectionService\r\n                .send(studyTagsPayload, actionParam)\r\n                .pipe(map((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) { return _this.handleStudyTagsRes(response); })));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var payload = this.payloadCommandService.getCommandDetails(COMMAND.GET_STUDY_TAGS, null, null, null, moduleInfo);\r\n            return this.baseConnectionService.sendRequest(payload).pipe(map((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) {\r\n                // if (response.result === COMMON.RESULT_OK) {\r\n                //   if (Array.isArray(response.studyTags.studyTag)) {\r\n                //     this.studyTag = response.studyTags.studyTag;\r\n                //   } else {\r\n                //     this.studyTag = [response.studyTags.studyTag];\r\n                //   }\r\n                //   console.log(this.studyTag);\r\n                //   return of([]);\r\n                // }\r\n                _this.handleStudyTagsRes(response);\r\n            })));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} response\r\n     * @return {?}\r\n     */\r\n    StudyListService.prototype.handleStudyTagsRes = /**\r\n     * @param {?} response\r\n     * @return {?}\r\n     */\r\n    function (response) {\r\n        if (response.result === COMMON.RESULT_OK) {\r\n            if (Array.isArray(response.studyTags.studyTag)) {\r\n                this.studyTag = response.studyTags.studyTag;\r\n            }\r\n            else {\r\n                this.studyTag = [response.studyTags.studyTag];\r\n            }\r\n            console.log(this.studyTag);\r\n            return of([]);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    StudyListService.prototype.getStudyInfoByKey = /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        /** @type {?} */\r\n        var tag = {};\r\n        if (this.studyTag) {\r\n            tag = this.studyTag.find((/**\r\n             * @param {?} item\r\n             * @return {?}\r\n             */\r\n            function (item) { return item.key.toString() === key.toString(); }));\r\n        }\r\n        return tag;\r\n    };\r\n    StudyListService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    StudyListService.ctorParameters = function () { return [\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService },\r\n        { type: UserDataService }\r\n    ]; };\r\n    /** @nocollapse */ StudyListService.ngInjectableDef = ɵɵdefineInjectable({ factory: function StudyListService_Factory() { return new StudyListService(ɵɵinject(PayloadCommandService), ɵɵinject(BaseConnectionService), ɵɵinject(UserDataService)); }, token: StudyListService, providedIn: \"root\" });\r\n    return StudyListService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StudyListService.prototype.studyKeySubject;\r\n    /** @type {?} */\r\n    StudyListService.prototype.studyKey$;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StudyListService.prototype.sTag;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StudyListService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StudyListService.prototype.baseConnectionService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StudyListService.prototype.userDataService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/plan-dropdown-list/plan-dropdown-list.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PlanDropdownListComponent = /** @class */ (function () {\r\n    function PlanDropdownListComponent(localeAppResourcesService, studyListService, dialogService) {\r\n        this.localeAppResourcesService = localeAppResourcesService;\r\n        this.studyListService = studyListService;\r\n        this.dialogService = dialogService;\r\n        this.planSelect = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanDropdownListComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.placeholder = this.localeAppResourcesService.getResource('PLNDT_DROPDOWN_PLACEHOLDER');\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    PlanDropdownListComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes.hasOwnProperty('items') && changes.items.currentValue !== undefined) {\r\n            this.setSelectedItem();\r\n        }\r\n    };\r\n    // TODO in progress\r\n    // TODO in progress\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    PlanDropdownListComponent.prototype.onPlanSelect = \r\n    // TODO in progress\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        var _this = this;\r\n        this.canDeactivate().subscribe((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        function (res) {\r\n            if (res === true) {\r\n                _this.dialogService.isStatusChanged = false;\r\n                _this.selectedPlanKey = event.value;\r\n                _this.setSelectedItem();\r\n                _this.planSelect.emit(_this.selectedPlanListItem);\r\n            }\r\n            else {\r\n                if (event && event.source) {\r\n                    /** @type {?} */\r\n                    var matSelect = event.source;\r\n                    matSelect.writeValue(_this.selectedPlanKey);\r\n                }\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?=} isReset\r\n     * @return {?}\r\n     */\r\n    PlanDropdownListComponent.prototype.canDeactivate = /**\r\n     * @param {?=} isReset\r\n     * @return {?}\r\n     */\r\n    function (isReset) {\r\n        if (isReset === true) {\r\n            return of(true);\r\n        }\r\n        if (this.dialogService.isStatusChanged === true) {\r\n            return this.dialogService.confirm();\r\n        }\r\n        return of(true);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanDropdownListComponent.prototype.setSelectedItem = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.items.forEach((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        function (item) {\r\n            if (item.key === _this.selectedPlanKey) {\r\n                _this.selectedPlanListItem = item;\r\n            }\r\n            else {\r\n                if (item.hasOwnProperty('briefAdjustPlanList')) {\r\n                    /** @type {?} */\r\n                    var adjItemIndex = item.briefAdjustPlanList.findIndex((/**\r\n                     * @param {?} adjItem\r\n                     * @return {?}\r\n                     */\r\n                    function (adjItem) {\r\n                        return adjItem.key === _this.selectedPlanKey;\r\n                    }));\r\n                    if (adjItemIndex !== -1) {\r\n                        _this.selectedPlanListItem = item.briefAdjustPlanList[adjItemIndex];\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanDropdownListComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.placeholder = null;\r\n        this.selectedPlanListItem = null;\r\n    };\r\n    PlanDropdownListComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-plan-dropdown-list',\r\n                    template: \"<mat-form-field class=\\\"dropdown-form-field\\\" floatLabel=\\\"never\\\">\\r\\n  <mat-select [placeholder]=\\\"placeholder\\\" disableOptionCentering=\\\"true\\\" panelClass=\\\"plan-dropdown-panel ie-dropdown\\\" [value]=\\\"selectedPlanKey\\\"\\r\\n    (selectionChange)=\\\"onPlanSelect($event)\\\">\\r\\n    <mat-select-trigger [matTooltip]=\\\"selectedPlanListItem?.name\\\" [matTooltipClass]=\\\"'ctos-tooltip'\\\">\\r\\n      <img [src]=\\\"selectedPlanListItem?.planImageStatus\\\" class=\\\"plan-status-icon\\\" />\\r\\n      <span [innerHTML]=\\\"selectedPlanListItem?.name\\\"></span>\\r\\n    </mat-select-trigger>\\r\\n    <ng-container *ngFor=\\\"let item of items\\\">\\r\\n      <mat-option [value]=\\\"item.key\\\" class=\\\"main-item\\\" [matTooltip]=\\\"item.name\\\" [matTooltipClass]=\\\"'ctos-tooltip'\\\">\\r\\n        <img [src]=\\\"item?.planImageStatus\\\" class=\\\"plan-status-icon\\\" />\\r\\n        <span [innerHTML]=\\\"item.name\\\"></span>\\r\\n      </mat-option>\\r\\n      <mat-option *ngFor=\\\"let subitem of item.briefAdjustPlanList\\\" [value]=\\\"subitem.key\\\" class=\\\"sub-item\\\" [matTooltip]=\\\"subitem.name\\\" [matTooltipClass]=\\\"'ctos-tooltip'\\\">\\r\\n        <img [src]=\\\"subitem?.planImageStatus\\\" class=\\\"plan-status-icon\\\" />\\r\\n        <span [innerHTML]=\\\"subitem.name\\\"></span>\\r\\n      </mat-option>\\r\\n    </ng-container>\\r\\n  </mat-select>\\r\\n</mat-form-field>\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    PlanDropdownListComponent.ctorParameters = function () { return [\r\n        { type: LocaleAppResourcesService },\r\n        { type: StudyListService },\r\n        { type: DialogService }\r\n    ]; };\r\n    PlanDropdownListComponent.propDecorators = {\r\n        items: [{ type: Input }],\r\n        selectedPlanKey: [{ type: Input }],\r\n        planSelect: [{ type: Output }]\r\n    };\r\n    return PlanDropdownListComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    PlanDropdownListComponent.prototype.items;\r\n    /** @type {?} */\r\n    PlanDropdownListComponent.prototype.selectedPlanKey;\r\n    /** @type {?} */\r\n    PlanDropdownListComponent.prototype.planSelect;\r\n    /** @type {?} */\r\n    PlanDropdownListComponent.prototype.placeholder;\r\n    /** @type {?} */\r\n    PlanDropdownListComponent.prototype.selectedPlanListItem;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanDropdownListComponent.prototype.localeAppResourcesService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanDropdownListComponent.prototype.studyListService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanDropdownListComponent.prototype.dialogService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/trim-pipe.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar TrimPipe = /** @class */ (function () {\r\n    function TrimPipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    TrimPipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value) {\r\n            return value.toString().trim();\r\n        }\r\n        return '';\r\n    };\r\n    TrimPipe.decorators = [\r\n        { type: Pipe, args: [{ name: 'trim' },] }\r\n    ];\r\n    return TrimPipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/cue-card/cue-card.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar CueCard = {\r\n    SourceTargets: \"SourceTargets\",\r\n    StudyTargets: \"StudyTargets\",\r\n    Worldwide: \"Worldwide\",\r\n    ParentPlan: \"ParentPlan\",\r\n    Actuals: \"Actuals\",\r\n    Projections: \"Projections\",\r\n    Country: \"Country\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/cue-card/cue-card.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CueCardService = /** @class */ (function () {\r\n    /**\r\n   * Creates an instance of cue card service.\r\n   * @param localeAppResourcesService\r\n   */\r\n    function CueCardService(localeAppResourcesService) {\r\n        this.localeAppResourcesService = localeAppResourcesService;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    CueCardService.prototype.getResouce = /**\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        return this.localeAppResourcesService.getResource(key);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CueCardService.prototype.getCueCardHeader = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.getResouce('REF_CARD_HEAD');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CueCardService.prototype.getCueCardResources = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var resource = {};\r\n        resource.SourceTargets = this.getResouce(CueCard.SourceTargets);\r\n        resource.StudyTargets = this.getResouce(CueCard.StudyTargets);\r\n        resource.Worldwide = this.getResouce(CueCard.Worldwide);\r\n        resource.ParentPlan = this.getResouce(CueCard.ParentPlan);\r\n        resource.Actuals = this.getResouce(CueCard.Actuals);\r\n        resource.Projections = this.getResouce(CueCard.Projections);\r\n        resource.Country = this.getResouce(CueCard.Country);\r\n        return resource;\r\n    };\r\n    CueCardService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    CueCardService.ctorParameters = function () { return [\r\n        { type: LocaleAppResourcesService }\r\n    ]; };\r\n    return CueCardService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CueCardService.prototype.localeAppResourcesService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/cue-card/cue-card.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CueCardComponent = /** @class */ (function () {\r\n    function CueCardComponent(cueCardService, localeAppResourcesService) {\r\n        this.cueCardService = cueCardService;\r\n        this.localeAppResourcesService = localeAppResourcesService;\r\n        this.rowElements = [];\r\n        this.headElements = [];\r\n        this.extraElements = [];\r\n        this.headerElements = [];\r\n        this.NaToolTip = NA_TOOLTIP;\r\n        this.referenceCardHeading = this.cueCardService.getCueCardHeader();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CueCardComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    CueCardComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        /** @type {?} */\r\n        var cueDetails = changes.cueCardDetails;\r\n        this.cueCardDetails = cueDetails.currentValue;\r\n        if (this.cueCardDetails !== undefined) {\r\n            this.getHeadElements();\r\n            this.getRowElements();\r\n        }\r\n    };\r\n    /*Extracting the row names from the cue card details.\r\n    Here, extracting the row names from the object, specified in headerElements\r\n    */\r\n    /*Extracting the row names from the cue card details.\r\n      Here, extracting the row names from the object, specified in headerElements\r\n      */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CueCardComponent.prototype.getRowElements = /*Extracting the row names from the cue card details.\r\n      Here, extracting the row names from the object, specified in headerElements\r\n      */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.rowElements = [];\r\n        if (this.headElements.length !== 0) {\r\n            for (var key = 1; key < this.headElements.length; key++) {\r\n                if (this.cueCardDetails[key - 1][this.headElements[key]]) {\r\n                    this.extraElements = Object.keys(this.cueCardDetails[key - 1][this.headElements[key]]);\r\n                }\r\n                else {\r\n                    this.extraElements = [];\r\n                }\r\n                /** @type {?} */\r\n                var i = 0;\r\n                while (i < this.extraElements.length) {\r\n                    if (this.rowElements.indexOf(this.extraElements[i]) === -1) {\r\n                        this.rowElements.push(this.extraElements[i]);\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    CueCardComponent.prototype.getCueCardResource = /**\r\n     * @private\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        return this.localeAppResourcesService.getResource(key);\r\n    };\r\n    Object.defineProperty(CueCardComponent.prototype, \"cueCardResources\", {\r\n        get: /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                actuals: this.getCueCardResource('ACTUALS_CUECARD'),\r\n                approvedPlan: this.getCueCardResource('APPROVEDPLAN_CUECARD')\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /*Extracting the column names from the cueCardDetails\r\n      Object.keys() method returns the keys of the object\r\n    */\r\n    /*Extracting the column names from the cueCardDetails\r\n        Object.keys() method returns the keys of the object\r\n      */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CueCardComponent.prototype.getHeadElements = /*Extracting the column names from the cueCardDetails\r\n        Object.keys() method returns the keys of the object\r\n      */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.headerElements = [];\r\n        if (this.cueCardDetails !== null || this.cueCardDetails.length !== 0) {\r\n            this.headerElements = this.cueCardDetails.map((/**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                return Object.keys(value);\r\n            }));\r\n            this.headElements = this.headerElements.slice();\r\n            this.headElements.unshift(' ');\r\n            console.log('this.headElements', this.headElements);\r\n            if (this.headElements[5][0] !== this.cueCardResources.actuals && this.headElements[5][0] !== this.cueCardResources.approvedPlan) {\r\n                this.referenceCardHeading = this.headElements[5][0];\r\n                // this.headElements[4][0] = this.headElements[4][0].toLowerCase()\r\n                //   .split(' ')\r\n                //   .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n                //   .join(' ');\r\n            }\r\n            else {\r\n                this.referenceCardHeading = this.cueCardService.getCueCardHeader();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    CueCardComponent.prototype.getHeaderLabel = /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        return this.cueCardService.getCueCardResources()[key] || key;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CueCardComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.cueCardDetails = [];\r\n    };\r\n    CueCardComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-cue-card',\r\n                    template: \"<div class=\\\"cue-card-container-div\\\">\\r\\n  <h5 class=\\\"ctos-card-header ctos-card-title\\\">{{referenceCardHeading}}</h5>\\r\\n  <table class=\\\"table table-borderless\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th *ngFor=\\\"let head of headElements; let item = index\\\" class=\\\"col-header\\\"\\r\\n          [matTooltip]=\\\"((item == 4 || item == 5) && getHeaderLabel(head) != 'approved Plan' &&  getHeaderLabel(head) != 'Actuals') ? getHeaderLabel(head) : ''\\\" \\r\\n          matTooltipClass=\\\"tool-tip-capitlize\\\"\\r\\n          [ngClass]=\\\"{'boldHeader': (item == 4 || item == 5) && getHeaderLabel(head) != 'approved Plan' &&  getHeaderLabel(head) != 'Actuals'}\\\">\\r\\n          {{getHeaderLabel(head)}}\\r\\n        </th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let row of rowElements; let item = index\\\" class=\\\"row-data\\\">\\r\\n        <td>{{row}}</td>\\r\\n        <td *ngFor=\\\"let head of headerElements; let index = index\\\">\\r\\n          <span [matTooltip]=\\\"cueCardDetails[index][head][row] == 'N/A' ? NaToolTip : ''\\\">\\r\\n            {{cueCardDetails[index][head][row] | ctosDateCustomPipe}}\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\",\r\n                    providers: [CueCardService]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    CueCardComponent.ctorParameters = function () { return [\r\n        { type: CueCardService },\r\n        { type: LocaleAppResourcesService }\r\n    ]; };\r\n    CueCardComponent.propDecorators = {\r\n        cueCardDetails: [{ type: Input }]\r\n    };\r\n    return CueCardComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CueCardComponent.prototype.rowElements;\r\n    /** @type {?} */\r\n    CueCardComponent.prototype.headElements;\r\n    /** @type {?} */\r\n    CueCardComponent.prototype.extraElements;\r\n    /** @type {?} */\r\n    CueCardComponent.prototype.headerElements;\r\n    /** @type {?} */\r\n    CueCardComponent.prototype.NaToolTip;\r\n    /** @type {?} */\r\n    CueCardComponent.prototype.referenceCardHeading;\r\n    /** @type {?} */\r\n    CueCardComponent.prototype.cueCardDetails;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CueCardComponent.prototype.cueCardService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CueCardComponent.prototype.localeAppResourcesService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/dropdown/dropdown.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DropdownComponent = /** @class */ (function () {\r\n    function DropdownComponent() {\r\n        this.items = new FormControl();\r\n        this.classes = 'ctos-so-dropdown';\r\n        this.isDisable = false;\r\n        this.selectionChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DropdownComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.config && this.config.subject) {\r\n            this.classes = 'ctos-so-dropdown create-plan';\r\n        }\r\n        else {\r\n            this.classes = 'ctos-so-dropdown sort-options';\r\n        }\r\n    };\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    DropdownComponent.prototype.ngOnChanges = \r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        for (var propName in changes) {\r\n            if (propName && propName === 'config') {\r\n                /** @type {?} */\r\n                var change = changes[propName];\r\n                if (change.currentValue) {\r\n                    // this.setPlanInfo(change.currentValue);\r\n                    // this.config.disa\r\n                    this.isDisable = change.currentValue.disabled;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    DropdownComponent.prototype.onSelect = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.selectionChange.emit(event.value);\r\n    };\r\n    /**\r\n     * @param {?} op1\r\n     * @param {?} op2\r\n     * @return {?}\r\n     */\r\n    DropdownComponent.prototype.compareFn = /**\r\n     * @param {?} op1\r\n     * @param {?} op2\r\n     * @return {?}\r\n     */\r\n    function (op1, op2) {\r\n        return op1[this['id']] === op2[this['id']];\r\n    };\r\n    DropdownComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-dropdown',\r\n                    template: \"<mat-form-field [ngClass]=\\\"{'create-plan': config?.subject ? true: false}\\\" appearance=\\\"outline\\\" class=\\\"ctos-so-dropdown\\\" #matSelect>\\r\\n  <mat-select class=\\\"ctos-drop-down\\\"\\r\\n    [formControl]=\\\"items\\\"\\r\\n    [id]=\\\"config.keyField\\\"\\r\\n    (selectionChange)=\\\"onSelect($event)\\\"\\r\\n    [(ngModel)]=\\\"config.selectedItem\\\"\\r\\n    [compareWith]=\\\"compareFn\\\"\\r\\n    [panelClass]=\\\"classes\\\"\\r\\n    [disableOptionCentering]=\\\"true\\\"\\r\\n    [placeholder]=\\\"config.noSelectLabel\\\"\\r\\n    [disabled]=\\\"isDisable\\\"\\r\\n  >\\r\\n    <mat-select-trigger>\\r\\n      <span\\r\\n        *ngIf=\\\"config.selectedItem\\\" class=\\\"ctos-drop-down-content\\\"\\r\\n        >{{ config?.resources.prefixLabel + ' '}}{{\\r\\n          config.selectedItem[config.keyField]\\r\\n        }}\\r\\n      </span>\\r\\n    </mat-select-trigger>\\r\\n    <mat-option\\r\\n      *ngFor=\\\"let item of list\\\"\\r\\n      [value]=\\\"item\\\"\\r\\n      [matTooltip]=\\\"item[config.keyField]\\\"\\r\\n      [matTooltipPosition]=\\\"config.tooltipPosition\\\"\\r\\n    >\\r\\n      {{ item[config.keyField] }}</mat-option\\r\\n    >\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    DropdownComponent.ctorParameters = function () { return []; };\r\n    DropdownComponent.propDecorators = {\r\n        list: [{ type: Input }],\r\n        config: [{ type: Input }],\r\n        selectionChange: [{ type: Output }]\r\n    };\r\n    return DropdownComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    DropdownComponent.prototype.list;\r\n    /** @type {?} */\r\n    DropdownComponent.prototype.config;\r\n    /** @type {?} */\r\n    DropdownComponent.prototype.selectionChange;\r\n    /** @type {?} */\r\n    DropdownComponent.prototype.items;\r\n    /** @type {?} */\r\n    DropdownComponent.prototype.classes;\r\n    /** @type {?} */\r\n    DropdownComponent.prototype.isDisable;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/study-list-input.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar StudyListInput = /** @class */ (function () {\r\n    function StudyListInput() {\r\n    }\r\n    return StudyListInput;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    StudyListInput.prototype.placeholder;\r\n    /** @type {?} */\r\n    StudyListInput.prototype.recentListItemsLabel;\r\n    /** @type {?} */\r\n    StudyListInput.prototype.allListItemsLabel;\r\n    /** @type {?} */\r\n    StudyListInput.prototype.selectedItemKey;\r\n    /** @type {?} */\r\n    StudyListInput.prototype.optionTemplate;\r\n    /** @type {?} */\r\n    StudyListInput.prototype.searchApi;\r\n    /** @type {?} */\r\n    StudyListInput.prototype.studyListHeaderLabel;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/app-data.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AppDataService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of app data service.\r\n     * @param payloadCommandService\r\n     * @param baseConnectionService\r\n     */\r\n    function AppDataService(payloadCommandService, baseConnectionService, localeAppResourcesService) {\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.localeAppResourcesService = localeAppResourcesService;\r\n    }\r\n    /**\r\n     * Gets app data\r\n     * It will load the application data.\r\n     * @param [actionParam]\r\n     * @returns\r\n     *\r\n     */\r\n    /**\r\n     * Gets app data\r\n     * It will load the application data.\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     *\r\n     */\r\n    AppDataService.prototype.getAppData = /**\r\n     * Gets app data\r\n     * It will load the application data.\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     *\r\n     */\r\n    function (actionParam) {\r\n        var _this = this;\r\n        actionParam = !actionParam ? (/** @type {?} */ ({})) : actionParam;\r\n        actionParam.cacheKey = CacheKey.GetAppDataKey;\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n        /** @type {?} */\r\n        var moduleInfo = {\r\n            moduleName: 'NEWPLANTAB'\r\n        };\r\n        /** @type {?} */\r\n        var queryParams = {\r\n            'appType': 'SOMAIN'\r\n        };\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.APP_DATA;\r\n        }\r\n        /** @type {?} */\r\n        var stargetAppData;\r\n        if (actionParam.endPoint) {\r\n            stargetAppData = this.payloadCommandService.getApiRequest(APP_DATA, queryParams, null, moduleInfo);\r\n            return this.baseConnectionService.send(stargetAppData, actionParam)\r\n                .pipe(map((/**\r\n             * @param {?} data\r\n             * @return {?}\r\n             */\r\n            function (data) {\r\n                if (data.result === COMMON.RESULT_OK) {\r\n                    _this.appDataResponse = data;\r\n                    return _this.appDataResponse;\r\n                }\r\n                else if (data.result === COMMON.RESULT_ERROR) {\r\n                    console.log(data.error.message);\r\n                    return data.error.message;\r\n                }\r\n            })));\r\n        }\r\n        else {\r\n            stargetAppData = this.payloadCommandService.getCommandDetails(APP_DATA, null, null, null, moduleInfo);\r\n            return this.baseConnectionService.sendRequest(stargetAppData, actionParam)\r\n                .pipe(map((/**\r\n             * @param {?} data\r\n             * @return {?}\r\n             */\r\n            function (data) {\r\n                if (data.result === COMMON.RESULT_OK) {\r\n                    _this.appDataResponse = data;\r\n                    return _this.appDataResponse;\r\n                }\r\n                else if (data.result === COMMON.RESULT_ERROR) {\r\n                    console.log(data.error.message);\r\n                    return data.error.message;\r\n                }\r\n            })));\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AppDataService.prototype.getConfiguredRateLabel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.appDataResponse && this.appDataResponse.appMetadata) {\r\n            if (this.appDataResponse.appMetadata.isSRAvailable) {\r\n                return this.localeAppResourcesService.getResource('Screening');\r\n            }\r\n            else if (!this.appDataResponse.appMetadata.isSRAvailable) {\r\n                return this.localeAppResourcesService.getResource('Randomization');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} reportingPeriod\r\n     * @return {?}\r\n     */\r\n    AppDataService.prototype.getReportingFreqDefByName = /**\r\n     * @param {?} reportingPeriod\r\n     * @return {?}\r\n     */\r\n    function (reportingPeriod) {\r\n        if (this.appDataResponse && this.appDataResponse.appMetadata && reportingPeriod) {\r\n            /** @type {?} */\r\n            var reportingFreqDef = this.appDataResponse.appMetadata.reportingFrequency.reportingFreqDef.find((/**\r\n             * @param {?} reportingFreqItem\r\n             * @return {?}\r\n             */\r\n            function (reportingFreqItem) {\r\n                return reportingFreqItem.Name === reportingPeriod;\r\n            }));\r\n            return reportingFreqDef;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AppDataService.prototype.isSRAvailable = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.appDataResponse && this.appDataResponse.appMetadata) {\r\n            return this.appDataResponse.appMetadata.isSRAvailable;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AppDataService.prototype.getCurveColors = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.appDataResponse.appMetadata && this.appDataResponse.appMetadata.curveColorsList\r\n            && this.appDataResponse.appMetadata.curveColorsList.curveColors) {\r\n            return this.appDataResponse.appMetadata.curveColorsList.curveColors;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AppDataService.prototype.isCountryLockEnabled = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.appDataResponse && this.appDataResponse.appMetadata && this.appDataResponse.appMetadata.isCountryLockEnable) {\r\n            return this.appDataResponse.appMetadata.isCountryLockEnable;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AppDataService.prototype.isProjectedRatesEnabled = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.appDataResponse && this.appDataResponse.appMetadata && this.appDataResponse.appMetadata.isEnableProjRates) {\r\n            return this.appDataResponse.appMetadata.isEnableProjRates;\r\n        }\r\n        return false;\r\n    };\r\n    AppDataService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    AppDataService.ctorParameters = function () { return [\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService },\r\n        { type: LocaleAppResourcesService }\r\n    ]; };\r\n    /** @nocollapse */ AppDataService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AppDataService_Factory() { return new AppDataService(ɵɵinject(PayloadCommandService), ɵɵinject(BaseConnectionService), ɵɵinject(LocaleAppResourcesService)); }, token: AppDataService, providedIn: \"root\" });\r\n    return AppDataService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    AppDataService.prototype.appDataResponse;\r\n    /** @type {?} */\r\n    AppDataService.prototype.showAppStudyStatus;\r\n    /** @type {?} */\r\n    AppDataService.prototype.showCustomerStudyStatus;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppDataService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppDataService.prototype.baseConnectionService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppDataService.prototype.localeAppResourcesService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/filter-data.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FilterDataService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of filter data service.\r\n     * @param payloadCommandService\r\n     * @param baseConnectionService\r\n     */\r\n    function FilterDataService(payloadCommandService, baseConnectionService) {\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.filterDataResponse = null;\r\n        this.iscro = false;\r\n        this.histStudiesFilterCriteriaList = [];\r\n        this.standardCriteriaList = [];\r\n        this.customCriteriaList = [];\r\n        this.displayColumnList = [];\r\n        this.multipleSolarKeys = '';\r\n        this.displayColumListCustom = [];\r\n        this.histList = new Subject();\r\n    }\r\n    /**\r\n     * Gets filter data\r\n     * @param params\r\n     * @param [cacheType]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets filter data\r\n     * @param {?=} params\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    FilterDataService.prototype.getFilterData = /**\r\n     * Gets filter data\r\n     * @param {?=} params\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (params, actionParam) {\r\n        if (!params) {\r\n            params = FILTER_PARAMS.commandName;\r\n        }\r\n        /** @type {?} */\r\n        var baseParam = {};\r\n        if (!actionParam) {\r\n            baseParam.cacheKey = CacheKey.FilterDataKey;\r\n            actionParam = baseParam;\r\n        }\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo();\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var response;\r\n        /** @type {?} */\r\n        var filterDataPayload = that.payloadCommandService.getCommandDetails(params, null, null, null, moduleInfo);\r\n        return that.baseConnectionService.sendRequest(filterDataPayload, actionParam)\r\n            .pipe(map((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            response = data;\r\n            if (response.result === COMMON.RESULT_OK) {\r\n                that.filterDataResponse = response;\r\n                that.getHistStudiesFilterCriteriaList();\r\n                return response.result;\r\n            }\r\n            else {\r\n                return response.error.message;\r\n            }\r\n        })));\r\n    };\r\n    /**\r\n     * Gets hist studies filter criteria list\r\n     *\r\n     * There are two type of filter criteria metadata STDY (Studies) and Historical Studies (HSTDY)\r\n     * This method loop the entire critieria and check the HSTDY meta data condition, and call the\r\n     * getStandardCustomCriteriaList and setCriteriaMetaDataMap method for each criteria.\r\n     * getStandardCustomCriteriaList method set the value in displayColumnList, displayColumListCustom,\r\n     * customCriteriaList and standardCriteriaList varibles.\r\n     * setCriteriaMetaDataMap set the isCro information on historical list.\r\n     */\r\n    /**\r\n     * Gets hist studies filter criteria list\r\n     *\r\n     * There are two type of filter criteria metadata STDY (Studies) and Historical Studies (HSTDY)\r\n     * This method loop the entire critieria and check the HSTDY meta data condition, and call the\r\n     * getStandardCustomCriteriaList and setCriteriaMetaDataMap method for each criteria.\r\n     * getStandardCustomCriteriaList method set the value in displayColumnList, displayColumListCustom,\r\n     * customCriteriaList and standardCriteriaList varibles.\r\n     * setCriteriaMetaDataMap set the isCro information on historical list.\r\n     * @return {?}\r\n     */\r\n    FilterDataService.prototype.getHistStudiesFilterCriteriaList = /**\r\n     * Gets hist studies filter criteria list\r\n     *\r\n     * There are two type of filter criteria metadata STDY (Studies) and Historical Studies (HSTDY)\r\n     * This method loop the entire critieria and check the HSTDY meta data condition, and call the\r\n     * getStandardCustomCriteriaList and setCriteriaMetaDataMap method for each criteria.\r\n     * getStandardCustomCriteriaList method set the value in displayColumnList, displayColumListCustom,\r\n     * customCriteriaList and standardCriteriaList varibles.\r\n     * setCriteriaMetaDataMap set the isCro information on historical list.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var criteriaMetaDataList;\r\n        if (that.filterDataResponse !== null) {\r\n            criteriaMetaDataList = that.filterDataResponse.filterCriteriaMetadata.criterionMetadataList;\r\n            for (var i = 0; i < criteriaMetaDataList.length; i++) {\r\n                if (criteriaMetaDataList[i].filterType === 'HSTDY') {\r\n                    that.histStudiesFilterCriteriaList = criteriaMetaDataList[i].criterion;\r\n                    // console.dir(that.histStudiesFilterCriteriaList);\r\n                    that.getStandardCustomCriteriaList();\r\n                    that.setCriteriaMetaDataMap();\r\n                    break;\r\n                }\r\n            }\r\n            this.histList.next(that.histStudiesFilterCriteriaList);\r\n        }\r\n    };\r\n    /**\r\n     * Sets criteria meta data map\r\n     *\r\n     * setCriteriaMetaDataMap set the isCro information on historical list.\r\n     * @returns\r\n     */\r\n    /**\r\n     * Sets criteria meta data map\r\n     *\r\n     * setCriteriaMetaDataMap set the isCro information on historical list.\r\n     * @return {?}\r\n     */\r\n    FilterDataService.prototype.setCriteriaMetaDataMap = /**\r\n     * Sets criteria meta data map\r\n     *\r\n     * setCriteriaMetaDataMap set the isCro information on historical list.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var criterion = that.histStudiesFilterCriteriaList;\r\n        /** @type {?} */\r\n        var criterionLength = criterion.length;\r\n        /** @type {?} */\r\n        var i;\r\n        /** @type {?} */\r\n        var item;\r\n        if (criterionLength > 0) {\r\n            that.criterionMetadataMap = {};\r\n            for (i = 0; i < criterionLength; i++) {\r\n                item = criterion[i];\r\n                that.criterionMetadataMap[item.id] = item;\r\n                // To check CRO avilability\r\n                if (item.id === 'CRO') {\r\n                    that.iscro = true;\r\n                }\r\n            }\r\n        }\r\n        return that.criterionMetadataMap;\r\n    };\r\n    /**\r\n     * Gets standard custom criteria list\r\n     *\r\n     * It loop the entire historical criteria list and\r\n     * check the each criteria,  parentFilterCritieriaID property, if it is undefined then\r\n     * it will check the isCustom property, if it is true then check the isFilter & isDisplayFiled property , if\r\n     * isFilter property is true then push the criteria object data in customCriteria array. If isDisplayFiled property is\r\n     * true push the criteria object data in displayColumListCustom array.\r\n     * If isCustom property is false then  check the isFilter & isDisplayFiled property , if\r\n     * isFilter property is true then push the criteria object data in standardCriteriaList array. If isDisplayFiled property is\r\n     * true push the criteria object data in displayColumnList array.\r\n     *\r\n     */\r\n    /**\r\n     * Gets standard custom criteria list\r\n     *\r\n     * It loop the entire historical criteria list and\r\n     * check the each criteria,  parentFilterCritieriaID property, if it is undefined then\r\n     * it will check the isCustom property, if it is true then check the isFilter & isDisplayFiled property , if\r\n     * isFilter property is true then push the criteria object data in customCriteria array. If isDisplayFiled property is\r\n     * true push the criteria object data in displayColumListCustom array.\r\n     * If isCustom property is false then  check the isFilter & isDisplayFiled property , if\r\n     * isFilter property is true then push the criteria object data in standardCriteriaList array. If isDisplayFiled property is\r\n     * true push the criteria object data in displayColumnList array.\r\n     *\r\n     * @return {?}\r\n     */\r\n    FilterDataService.prototype.getStandardCustomCriteriaList = /**\r\n     * Gets standard custom criteria list\r\n     *\r\n     * It loop the entire historical criteria list and\r\n     * check the each criteria,  parentFilterCritieriaID property, if it is undefined then\r\n     * it will check the isCustom property, if it is true then check the isFilter & isDisplayFiled property , if\r\n     * isFilter property is true then push the criteria object data in customCriteria array. If isDisplayFiled property is\r\n     * true push the criteria object data in displayColumListCustom array.\r\n     * If isCustom property is false then  check the isFilter & isDisplayFiled property , if\r\n     * isFilter property is true then push the criteria object data in standardCriteriaList array. If isDisplayFiled property is\r\n     * true push the criteria object data in displayColumnList array.\r\n     *\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var criteriaLength = that.histStudiesFilterCriteriaList.length;\r\n        for (var i = 0; i < criteriaLength; i++) {\r\n            if (typeof that.histStudiesFilterCriteriaList[i].parentFilterCriteriaID === 'undefined') {\r\n                if (that.histStudiesFilterCriteriaList[i].isCustom === true) {\r\n                    if (that.histStudiesFilterCriteriaList[i].isFilterField === true) {\r\n                        that.customCriteriaList.push(that.histStudiesFilterCriteriaList[i]);\r\n                    }\r\n                    if (that.histStudiesFilterCriteriaList[i].isDisplayField === true) {\r\n                        that.displayColumListCustom.push(that.histStudiesFilterCriteriaList[i]);\r\n                    }\r\n                }\r\n                else {\r\n                    if (that.histStudiesFilterCriteriaList[i].isFilterField === true) {\r\n                        that.standardCriteriaList.push(that.histStudiesFilterCriteriaList[i]);\r\n                    }\r\n                    if (that.histStudiesFilterCriteriaList[i].isDisplayField === true) {\r\n                        that.displayColumnList.push(that.histStudiesFilterCriteriaList[i]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (that.multipleSolarKeys === '') {\r\n                    that.multipleSolarKeys = that.histStudiesFilterCriteriaList[i].solrID;\r\n                }\r\n                else {\r\n                    that.multipleSolarKeys = that.multipleSolarKeys + '_' + that.histStudiesFilterCriteriaList[i].solrID;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This method will return the array which contain the criteria object information.\r\n     *\r\n     * Get the criteria object value by id.\r\n     * Iterate the historical criteria list and check the id property if the parameter the object.id is\r\n     * equal to criteria.id then push the criteria object in arrFilterCriteriaById array.\r\n     *\r\n     * @param criteriaInfo\r\n     * @returns\r\n     */\r\n    /**\r\n     * This method will return the array which contain the criteria object information.\r\n     *\r\n     * Get the criteria object value by id.\r\n     * Iterate the historical criteria list and check the id property if the parameter the object.id is\r\n     * equal to criteria.id then push the criteria object in arrFilterCriteriaById array.\r\n     *\r\n     * @param {?} criteriaInfo\r\n     * @return {?}\r\n     */\r\n    FilterDataService.prototype.getCriteriaById = /**\r\n     * This method will return the array which contain the criteria object information.\r\n     *\r\n     * Get the criteria object value by id.\r\n     * Iterate the historical criteria list and check the id property if the parameter the object.id is\r\n     * equal to criteria.id then push the criteria object in arrFilterCriteriaById array.\r\n     *\r\n     * @param {?} criteriaInfo\r\n     * @return {?}\r\n     */\r\n    function (criteriaInfo) {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var arrFilterCriteriaById = [];\r\n        /** @type {?} */\r\n        var isIdCheck = false;\r\n        /** @type {?} */\r\n        var _criterionMetadataMap = that.criterionMetadataMap;\r\n        for (var criteriaKey in _criterionMetadataMap) {\r\n            if (criteriaKey) {\r\n                /** @type {?} */\r\n                var criteriaVal = _criterionMetadataMap[criteriaKey];\r\n                if (!isIdCheck) {\r\n                    if (criteriaVal.id === criteriaInfo.id) {\r\n                        isIdCheck = true;\r\n                        arrFilterCriteriaById.push(criteriaVal);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return arrFilterCriteriaById;\r\n    };\r\n    /**\r\n     * Gets criteria values by keys\r\n     *\r\n     * CriteriaData is the single criteria object which contain the following information\r\n                {\r\n            \"dataType\": \"TEXT\",\r\n            \"displaySeq\": 5,\r\n            \"displayType\": \"MSLIST\",\r\n            \"id\": \"TST\",\r\n            \"isCustom\": false,\r\n            \"isDisplayField\": true,\r\n            \"isFilterField\": true,\r\n            \"isSortable\": true,\r\n            \"jsonFieldValue\": \"sampleData\",\r\n            \"name\": \"TSTSample\",\r\n            \"solrID\": \"sampleKey\",\r\n            \"sortFilterSolrField\": \"sampleValue\",\r\n            \"data\": [\r\n                {\r\n                \"code\": \"sampleA\",\r\n                \"key\": 11,\r\n                \"value\": \"sampleA\"\r\n                },\r\n                {\r\n                \"code\": \"SampelB\",\r\n                \"key\": 12,\r\n                \"value\": \"SampelB\"\r\n                },\r\n            ]\r\n            }\r\n     * `\r\n     * criteriaInfo is the list of key value pair arrary like\r\n            [  {key :'1', value : null},\r\n            {key :'11', value : null},\r\n            {key :'10', value : null},\r\n            {key :'14', value : null},\r\n            ]\r\n    * Iterate the criteriaData.data array, check the data property of criteriaInfo if it is defined then iterate the\r\n    * critieriaInfo and check the criteriaData data property if it is array then check the criteriaData.data[i].key equal to\r\n    * criteriaInfo.data[i].key if it is equal then set push the value in arrFilterCriteriaByKey  array.\r\n    * Sorting the array and return it.\r\n     * @param criteriaInfo\r\n     * @param criteriaData\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets criteria values by keys\r\n     *\r\n     * CriteriaData is the single criteria object which contain the following information\r\n     * {\r\n     * \"dataType\": \"TEXT\",\r\n     * \"displaySeq\": 5,\r\n     * \"displayType\": \"MSLIST\",\r\n     * \"id\": \"TST\",\r\n     * \"isCustom\": false,\r\n     * \"isDisplayField\": true,\r\n     * \"isFilterField\": true,\r\n     * \"isSortable\": true,\r\n     * \"jsonFieldValue\": \"sampleData\",\r\n     * \"name\": \"TSTSample\",\r\n     * \"solrID\": \"sampleKey\",\r\n     * \"sortFilterSolrField\": \"sampleValue\",\r\n     * \"data\": [\r\n     * {\r\n     * \"code\": \"sampleA\",\r\n     * \"key\": 11,\r\n     * \"value\": \"sampleA\"\r\n     * },\r\n     * {\r\n     * \"code\": \"SampelB\",\r\n     * \"key\": 12,\r\n     * \"value\": \"SampelB\"\r\n     * },\r\n     * ]\r\n     * }\r\n     * `\r\n     * criteriaInfo is the list of key value pair arrary like\r\n     * [  {key :'1', value : null},\r\n     * {key :'11', value : null},\r\n     * {key :'10', value : null},\r\n     * {key :'14', value : null},\r\n     * ]\r\n     * Iterate the criteriaData.data array, check the data property of criteriaInfo if it is defined then iterate the\r\n     * critieriaInfo and check the criteriaData data property if it is array then check the criteriaData.data[i].key equal to\r\n     * criteriaInfo.data[i].key if it is equal then set push the value in arrFilterCriteriaByKey  array.\r\n     * Sorting the array and return it.\r\n     * @param {?} criteriaInfo\r\n     * @param {?} criteriaData\r\n     * @return {?}\r\n     */\r\n    FilterDataService.prototype.getCriteriaValuesByKeys = /**\r\n     * Gets criteria values by keys\r\n     *\r\n     * CriteriaData is the single criteria object which contain the following information\r\n     * {\r\n     * \"dataType\": \"TEXT\",\r\n     * \"displaySeq\": 5,\r\n     * \"displayType\": \"MSLIST\",\r\n     * \"id\": \"TST\",\r\n     * \"isCustom\": false,\r\n     * \"isDisplayField\": true,\r\n     * \"isFilterField\": true,\r\n     * \"isSortable\": true,\r\n     * \"jsonFieldValue\": \"sampleData\",\r\n     * \"name\": \"TSTSample\",\r\n     * \"solrID\": \"sampleKey\",\r\n     * \"sortFilterSolrField\": \"sampleValue\",\r\n     * \"data\": [\r\n     * {\r\n     * \"code\": \"sampleA\",\r\n     * \"key\": 11,\r\n     * \"value\": \"sampleA\"\r\n     * },\r\n     * {\r\n     * \"code\": \"SampelB\",\r\n     * \"key\": 12,\r\n     * \"value\": \"SampelB\"\r\n     * },\r\n     * ]\r\n     * }\r\n     * `\r\n     * criteriaInfo is the list of key value pair arrary like\r\n     * [  {key :'1', value : null},\r\n     * {key :'11', value : null},\r\n     * {key :'10', value : null},\r\n     * {key :'14', value : null},\r\n     * ]\r\n     * Iterate the criteriaData.data array, check the data property of criteriaInfo if it is defined then iterate the\r\n     * critieriaInfo and check the criteriaData data property if it is array then check the criteriaData.data[i].key equal to\r\n     * criteriaInfo.data[i].key if it is equal then set push the value in arrFilterCriteriaByKey  array.\r\n     * Sorting the array and return it.\r\n     * @param {?} criteriaInfo\r\n     * @param {?} criteriaData\r\n     * @return {?}\r\n     */\r\n    function (criteriaInfo, criteriaData) {\r\n        /** @type {?} */\r\n        var arrFilterCriteriaByKey = [];\r\n        if (criteriaData !== undefined) {\r\n            criteriaData.data.map((/**\r\n             * @param {?} criteriaVal\r\n             * @return {?}\r\n             */\r\n            function (criteriaVal) {\r\n                /** @type {?} */\r\n                var isKeyCheck = false;\r\n                if (criteriaInfo.data !== undefined) {\r\n                    criteriaInfo.data.options.map((/**\r\n                     * @param {?} criteriaInfoVal\r\n                     * @return {?}\r\n                     */\r\n                    function (criteriaInfoVal) {\r\n                        if (!isKeyCheck) {\r\n                            if (!Array.isArray(criteriaData.data)) {\r\n                                if (criteriaData.data.key.toString() === criteriaInfoVal.key) {\r\n                                    if (!AppUtil.checkElementExistsInArray(arrFilterCriteriaByKey, criteriaData.data)) {\r\n                                        arrFilterCriteriaByKey.push({ 'key': criteriaData.data.key, 'value': criteriaData.data.value });\r\n                                        isKeyCheck = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (criteriaVal.key.toString() === criteriaInfoVal.key) {\r\n                                    if (!AppUtil.checkElementExistsInArray(arrFilterCriteriaByKey, criteriaVal)) {\r\n                                        arrFilterCriteriaByKey.push({ 'key': criteriaVal.key, 'value': criteriaVal.value });\r\n                                        isKeyCheck = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n                }\r\n            }));\r\n        }\r\n        if (arrFilterCriteriaByKey.length > 0) {\r\n            arrFilterCriteriaByKey = this.sortByAsc(arrFilterCriteriaByKey);\r\n        }\r\n        return arrFilterCriteriaByKey;\r\n    };\r\n    /**\r\n     * Sorts by asc\r\n     * @param array\r\n     * @returns\r\n     */\r\n    /**\r\n     * Sorts by asc\r\n     * @param {?} array\r\n     * @return {?}\r\n     */\r\n    FilterDataService.prototype.sortByAsc = /**\r\n     * Sorts by asc\r\n     * @param {?} array\r\n     * @return {?}\r\n     */\r\n    function (array) {\r\n        /** @type {?} */\r\n        var result = [];\r\n        result = array.sort((/**\r\n         * @param {?} a\r\n         * @param {?} b\r\n         * @return {?}\r\n         */\r\n        function (a, b) {\r\n            return a.value.localeCompare(b.value);\r\n        }));\r\n        return result;\r\n    };\r\n    /**\r\n     * Gets criteria by name\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets criteria by name\r\n     * @return {?}\r\n     */\r\n    FilterDataService.prototype.getCriteriaByName = /**\r\n     * Gets criteria by name\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var arrFilterCriteriaByName = [];\r\n        /** @type {?} */\r\n        var arrFilterData = that.histStudiesFilterCriteriaList;\r\n        arrFilterCriteriaByName = arrFilterData.map((/**\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        function (name) { return name.id; }));\r\n        return arrFilterCriteriaByName;\r\n    };\r\n    /**\r\n     * @param {?} filterName\r\n     * @param {?} filterValue\r\n     * @return {?}\r\n     */\r\n    FilterDataService.prototype.getCriteriaIdByFilterName = /**\r\n     * @param {?} filterName\r\n     * @param {?} filterValue\r\n     * @return {?}\r\n     */\r\n    function (filterName, filterValue) {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var arrFilterData = that.histStudiesFilterCriteriaList;\r\n        /** @type {?} */\r\n        var filterData = arrFilterData.find((/**\r\n         * @param {?} citeriaData\r\n         * @return {?}\r\n         */\r\n        function (citeriaData) { return citeriaData.id === filterName; }));\r\n        if (filterData.data) {\r\n            /** @type {?} */\r\n            var data = filterData.data.find((/**\r\n             * @param {?} resp\r\n             * @return {?}\r\n             */\r\n            function (resp) { return resp.value === filterValue; }));\r\n            return data.key;\r\n        }\r\n    };\r\n    FilterDataService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    FilterDataService.ctorParameters = function () { return [\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService }\r\n    ]; };\r\n    /** @nocollapse */ FilterDataService.ngInjectableDef = ɵɵdefineInjectable({ factory: function FilterDataService_Factory() { return new FilterDataService(ɵɵinject(PayloadCommandService), ɵɵinject(BaseConnectionService)); }, token: FilterDataService, providedIn: \"root\" });\r\n    return FilterDataService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    FilterDataService.prototype.criterionMetadataMap;\r\n    /** @type {?} */\r\n    FilterDataService.prototype.filterDataResponse;\r\n    /** @type {?} */\r\n    FilterDataService.prototype.iscro;\r\n    /** @type {?} */\r\n    FilterDataService.prototype.histStudiesFilterCriteriaList;\r\n    /** @type {?} */\r\n    FilterDataService.prototype.standardCriteriaList;\r\n    /** @type {?} */\r\n    FilterDataService.prototype.customCriteriaList;\r\n    /** @type {?} */\r\n    FilterDataService.prototype.displayColumnList;\r\n    /** @type {?} */\r\n    FilterDataService.prototype.multipleSolarKeys;\r\n    /** @type {?} */\r\n    FilterDataService.prototype.displayColumListCustom;\r\n    /** @type {?} */\r\n    FilterDataService.prototype.histList;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    FilterDataService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    FilterDataService.prototype.baseConnectionService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/approve-plan/approve-plan.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ApprovePlanComponent = /** @class */ (function () {\r\n    function ApprovePlanComponent(dialogRef, data, approvePlanFB) {\r\n        this.dialogRef = dialogRef;\r\n        this.data = data;\r\n        this.approvePlanFB = approvePlanFB;\r\n        this.approvePlanForm = this.approvePlanFB.group({\r\n            planName: [data.name, Validators.required],\r\n            planDescription: [data.description],\r\n            approvalComments: ['', Validators.required]\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ApprovePlanComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ApprovePlanComponent.prototype.onPlanNameBlur = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var newValue = this.approvePlanForm.get('planName').value\r\n            ? this.approvePlanForm.get('planName').value.trim()\r\n            : '';\r\n        this.approvePlanForm.get('planName').setValue(newValue);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ApprovePlanComponent.prototype.cancel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.dialogRef.close({ action: 'Cancel' });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ApprovePlanComponent.prototype.ok = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.approvePlanForm.valid) {\r\n            this.dialogRef.close({ action: this.data.labels.APPROVE_PLAN_OK, form: this.approvePlanForm.value });\r\n        }\r\n        else {\r\n            console.error('Form values are not valid');\r\n        }\r\n    };\r\n    ApprovePlanComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-approve-plan',\r\n                    template: \"<form class=\\\"approve-plan-form-container\\\" [formGroup]=\\\"approvePlanForm\\\" (ngSubmit)=\\\"ok()\\\">\\r\\n  <h1 mat-dialog-title>{{data.labels?.APPROVE_PLAN}}</h1>\\r\\n  <div mat-dialog-content>\\r\\n    <div>\\r\\n      {{data.labels?.APPROVE_PLAN_APPROVER}}<span class=\\\"approver-name\\\">{{ data.approver }}</span>\\r\\n      <br />\\r\\n    </div>\\r\\n    <label> <span class=\\\"required\\\">*</span>{{data.labels?.APPROVE_PLAN_NAME}}</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Plan Name\\\" formControlName=\\\"planName\\\" (blur)=\\\"onPlanNameBlur()\\\"\\r\\n      [attr.disabled]=\\\"data.isPlan || null\\\" required [matTooltipClass]=\\\"'warn ctos-tooltip'\\\" [matTooltip]=\\\"data.labels?.APPROVE_PLAN_REQ_MSG\\\"\\r\\n      matTooltipPosition=\\\"right\\\" [matTooltipDisabled]=\\\"!(approvePlanForm.get('planName').touched &&\\r\\n      approvePlanForm.get('planName').hasError('required'))\\\" />\\r\\n    <br />\\r\\n    <!-- <mat-error\\r\\n      *ngIf=\\\"\\r\\n        approvePlanForm.get('planName').touched &&\\r\\n        approvePlanForm.get('planName').hasError('required')\\r\\n      \\\"\\r\\n      >This field is mendatory.</mat-error\\r\\n    > -->\\r\\n    <label> {{data.labels?.APPROVE_PLAN_DESCR}}</label>\\r\\n    <textarea rows=\\\"4\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Plan Description\\\" formControlName=\\\"planDescription\\\"\\r\\n      [attr.disabled]=\\\"data.isPlan || null\\\"></textarea>\\r\\n    <br />\\r\\n\\r\\n    <label> <span class=\\\"required\\\">*</span>{{data.labels?.APPROVE_PLAN_COMMENTS}}</label>\\r\\n    <textarea rows=\\\"4\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Approval Comments\\\" formControlName=\\\"approvalComments\\\"\\r\\n      required [matTooltipClass]=\\\"'warn ctos-tooltip'\\\" [matTooltip]=\\\"data.labels?.APPROVE_PLAN_REQ_MSG\\\"\\r\\n      matTooltipPosition=\\\"right\\\" [matTooltipDisabled]=\\\"!(approvePlanForm.get('approvalComments').touched &&\\r\\n      approvePlanForm.get('approvalComments').hasError('required'))\\\"></textarea>\\r\\n    <br />\\r\\n    <!-- <mat-error\\r\\n      *ngIf=\\\"\\r\\n        approvePlanForm.get('approvalComments').touched &&\\r\\n        approvePlanForm.get('approvalComments').hasError('required')\\r\\n      \\\"\\r\\n      >This field is mendatory.</mat-error\\r\\n    > -->\\r\\n  </div>\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button type=\\\"button\\\" class=\\\"cancel-btn\\\" (click)=\\\"cancel()\\\">{{data.labels?.APPROVE_PLAN_CANCEL}}</button>\\r\\n    <button mat-button type=\\\"submit\\\" class=\\\"ok-btn\\\" [disabled]=\\\"!approvePlanForm.valid\\\">\\r\\n      {{data.labels?.APPROVE_PLAN_OK}}\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ApprovePlanComponent.ctorParameters = function () { return [\r\n        { type: MatDialogRef },\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] },\r\n        { type: FormBuilder }\r\n    ]; };\r\n    return ApprovePlanComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    ApprovePlanComponent.prototype.approvePlanForm;\r\n    /** @type {?} */\r\n    ApprovePlanComponent.prototype.dialogRef;\r\n    /** @type {?} */\r\n    ApprovePlanComponent.prototype.data;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ApprovePlanComponent.prototype.approvePlanFB;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/copy-plan/copy-plan.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CopyPlanComponent = /** @class */ (function () {\r\n    function CopyPlanComponent(dialogRef, data, copyPlanFB) {\r\n        this.dialogRef = dialogRef;\r\n        this.data = data;\r\n        this.copyPlanFB = copyPlanFB;\r\n        this.isSearchListOn = true;\r\n        this.toggleArrowFlag = false;\r\n        this.labels = {\r\n            required: this.data.labels.COPY_PLAN_REQ_MSG,\r\n            maxLength: this.data.labels.COPY_PLAN_MAX_LENGTH_MSG\r\n        };\r\n        this.copyPlanForm = this.copyPlanFB.group({\r\n            copyToPlanName: [data.name, [\r\n                    Validators.required,\r\n                    Validators.maxLength(MIN_MAX_RANGE.MAX_CHAR)\r\n                ]],\r\n            editPlanDescription: [data.description],\r\n            studySearchFormGroup: this.copyPlanFB.group({\r\n                searchListControl: [''],\r\n                filterListControl: ['']\r\n            })\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CopyPlanComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} selectedStudyItem\r\n     * @return {?}\r\n     */\r\n    CopyPlanComponent.prototype.studySelected = /**\r\n     * @param {?} selectedStudyItem\r\n     * @return {?}\r\n     */\r\n    function (selectedStudyItem) {\r\n        console.log(selectedStudyItem);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CopyPlanComponent.prototype.onPlanNameBlur = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var newValue = this.copyPlanForm.get('copyToPlanName').value\r\n            ? this.copyPlanForm.get('copyToPlanName').value.trim()\r\n            : '';\r\n        this.copyPlanForm.get('copyToPlanName').setValue(newValue);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CopyPlanComponent.prototype.cancel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.dialogRef.close({ action: 'Cancel' });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CopyPlanComponent.prototype.ok = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log('isFormValid...' + this.copyPlanForm.valid);\r\n        if (this.copyPlanForm.valid) {\r\n            this.dialogRef.close({ action: this.data.labels.COPY_PLAN_OK, form: this.copyPlanForm.value });\r\n        }\r\n        else {\r\n            console.error('Form values are not valid');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CopyPlanComponent.prototype.getTooltipMessage = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var tooltipMsg = '';\r\n        /** @type {?} */\r\n        var control = this.copyPlanForm.get('copyToPlanName');\r\n        if (control.errors) {\r\n            if (control.errors.required) {\r\n                tooltipMsg = this.labels.required;\r\n            }\r\n            else if (control.errors.maxlength) {\r\n                tooltipMsg = StringUtil.interpolate(this.labels.maxLength, [MIN_MAX_RANGE.MAX_CHAR.toString()]);\r\n            }\r\n        }\r\n        return tooltipMsg;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CopyPlanComponent.prototype.hasTooltipMessage = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.getTooltipMessage().length > 0;\r\n    };\r\n    CopyPlanComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-copy-plan',\r\n                    template: \"<form\\r\\n  class=\\\"copy-plan-form-container\\\"\\r\\n  [formGroup]=\\\"copyPlanForm\\\"\\r\\n  (ngSubmit)=\\\"ok()\\\"\\r\\n>\\r\\n  <h1 mat-dialog-title>{{data.labels?.COPY_PLAN}}</h1>\\r\\n  <div mat-dialog-content>\\r\\n    <label><span class=\\\"required\\\">*</span>{{data.labels?.COPY_PLAN_STUDY}}</label>\\r\\n    <fieldset formArrayName=\\\"studySearchFormGroup\\\">\\r\\n      <ctos-search-list\\r\\n        [searchListFormGroupName]=\\\"copyPlanForm.get('studySearchFormGroup')\\\"\\r\\n        [searchListInput]=\\\"data.studyListInput\\\"\\r\\n        [labels]=\\\"labels\\\"\\r\\n        (itemSelect)=\\\"studySelected($event)\\\"\\r\\n        [isSearchListOn]=\\\"isSearchListOn\\\"\\r\\n      >\\r\\n      </ctos-search-list>\\r\\n    </fieldset>\\r\\n    <br/>\\r\\n    <label><span class=\\\"required\\\">*</span>{{data.labels?.COPY_PLAN_NAME}}</label>\\r\\n    <input\\r\\n      type=\\\"text\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      placeholder=\\\"Enter Plan Name\\\"\\r\\n      formControlName=\\\"copyToPlanName\\\"\\r\\n      required\\r\\n      (blur)=\\\"onPlanNameBlur()\\\"\\r\\n      [matTooltipClass]=\\\"'warn ctos-tooltip'\\\"\\r\\n      [matTooltip]=\\\"getTooltipMessage()\\\"\\r\\n      matTooltipPosition=\\\"right\\\"\\r\\n      [matTooltipDisabled]=\\\"!hasTooltipMessage()\\\"\\r\\n    />\\r\\n    <br/>\\r\\n    <!-- <mat-error\\r\\n      *ngIf=\\\"\\r\\n        copyPlanForm.get('copyToPlanName').touched &&\\r\\n        copyPlanForm.get('copyToPlanName').hasError('required')\\r\\n      \\\"\\r\\n      >This field is mendatory.</mat-error\\r\\n    > -->\\r\\n\\r\\n    <label>{{data.labels?.COPY_PLAN_DESCR}}</label>\\r\\n    <textarea\\r\\n      class=\\\"form-control\\\"\\r\\n      rows=\\\"4\\\"\\r\\n      placeholder=\\\"Enter Plan Description\\\"\\r\\n      formControlName=\\\"editPlanDescription\\\"\\r\\n    ></textarea>\\r\\n    <br/>\\r\\n  </div>\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button type=\\\"button\\\" class=\\\"cancel-btn ctos-btn-secondary\\\" (click)=\\\"cancel()\\\">\\r\\n      {{data.labels?.COPY_PLAN_CANCEL}}\\r\\n    </button>\\r\\n    <button [disabled]=\\\"!copyPlanForm.valid\\\"\\r\\n      mat-button [ngClass]=\\\"{'disabled-button': !this.copyPlanForm.valid}\\\"\\r\\n      type=\\\"submit\\\"\\r\\n      class=\\\"ok-btn ctos-btn-primary\\\"\\r\\n    >\\r\\n    {{data.labels?.COPY_PLAN_OK}}\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    CopyPlanComponent.ctorParameters = function () { return [\r\n        { type: MatDialogRef },\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] },\r\n        { type: FormBuilder }\r\n    ]; };\r\n    return CopyPlanComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CopyPlanComponent.prototype.isSearchListOn;\r\n    /** @type {?} */\r\n    CopyPlanComponent.prototype.toggleArrowFlag;\r\n    /** @type {?} */\r\n    CopyPlanComponent.prototype.copyPlanForm;\r\n    /** @type {?} */\r\n    CopyPlanComponent.prototype.labels;\r\n    /** @type {?} */\r\n    CopyPlanComponent.prototype.dialogRef;\r\n    /** @type {?} */\r\n    CopyPlanComponent.prototype.data;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CopyPlanComponent.prototype.copyPlanFB;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/plan-options/plan-status.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar PlanStatus = {\r\n    VALID: \"VALID\",\r\n    INVALID: \"INVALID\",\r\n    APPROVED: \"APPROVED\",\r\n    PREVAPPROVED: \"PREVAPPROVED\",\r\n    BASEVALID: \"status-valid\",\r\n    BASEAPPROVED: \"status-approved\",\r\n    BASEINVALID: \"status-invalid\",\r\n    ADJVALID: \"status-adjustment-valid\",\r\n    ADJINVALID: \"status-adjustment-invalid\",\r\n    ADJPREVAPPROVED: \"status-adjustment-previously-approved\",\r\n    BASEPREAPPROVED: \"status-preapproved\",\r\n    BASEPREVAPPROVED: \"status-previously-approved\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/plan-options/plan-options.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction ApprovePlanLabels() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ApprovePlanLabels.prototype.APPROVE_PLAN;\r\n    /** @type {?} */\r\n    ApprovePlanLabels.prototype.APPROVE_PLAN_APPROVER;\r\n    /** @type {?} */\r\n    ApprovePlanLabels.prototype.APPROVE_PLAN_NAME;\r\n    /** @type {?} */\r\n    ApprovePlanLabels.prototype.APPROVE_PLAN_DESCR;\r\n    /** @type {?} */\r\n    ApprovePlanLabels.prototype.APPROVE_PLAN_COMMENTS;\r\n    /** @type {?} */\r\n    ApprovePlanLabels.prototype.APPROVE_PLAN_OK;\r\n    /** @type {?} */\r\n    ApprovePlanLabels.prototype.APPROVE_PLAN_CANCEL;\r\n    /** @type {?} */\r\n    ApprovePlanLabels.prototype.APPROVE_PLAN_REQ_MSG;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction CopyPlanLabels() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    CopyPlanLabels.prototype.COPY_PLAN;\r\n    /** @type {?} */\r\n    CopyPlanLabels.prototype.COPY_PLAN_STUDY;\r\n    /** @type {?} */\r\n    CopyPlanLabels.prototype.COPY_PLAN_NAME;\r\n    /** @type {?} */\r\n    CopyPlanLabels.prototype.COPY_PLAN_DESCR;\r\n    /** @type {?} */\r\n    CopyPlanLabels.prototype.COPY_PLAN_OK;\r\n    /** @type {?} */\r\n    CopyPlanLabels.prototype.COPY_PLAN_CANCEL;\r\n    /** @type {?} */\r\n    CopyPlanLabels.prototype.COPY_PLAN_REQ_MSG;\r\n    /** @type {?} */\r\n    CopyPlanLabels.prototype.COPY_PLAN_MAX_LENGTH_MSG;\r\n}\r\n/**\r\n * PlanOptionsService is used to perform common functionality that is required on plan options click.\r\n * Plan options examples: Edit, Delete, Duplicate, Approve Plan.\r\n * There are some more options e.g. Create template, Create adjustment, Update cost.\r\n * To make plan options available in multiple places related to plan, we have this service to perform common operations.\r\n */\r\nvar PlanOptionsService = /** @class */ (function () {\r\n    /**\r\n     * This constructor function is used to inject common providers like below.\r\n     * It also instantiates responseData and responseObservable$.\r\n     */\r\n    function PlanOptionsService(route, baseConnectionService, payloadCommandService, localeAppResourcesService, errorTermsService, dialog, filterDataService, studyListService, snackBar, userDataService, appDataService, spinnerService, dialogService) {\r\n        this.route = route;\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.localeAppResourcesService = localeAppResourcesService;\r\n        this.errorTermsService = errorTermsService;\r\n        this.dialog = dialog;\r\n        this.filterDataService = filterDataService;\r\n        this.studyListService = studyListService;\r\n        this.snackBar = snackBar;\r\n        this.userDataService = userDataService;\r\n        this.appDataService = appDataService;\r\n        this.spinnerService = spinnerService;\r\n        this.dialogService = dialogService;\r\n        this.userActionData = null;\r\n        this.navigateAwaySelection$ = new Subject();\r\n        this.responseData = new Subject();\r\n        this.responseObservable$ = this.responseData.asObservable();\r\n        this.planApproved = new Subject();\r\n        this.planApproved$ = this.planApproved.asObservable();\r\n    }\r\n    /**\r\n     * Gets plan actions for user\r\n     * @returns plan actions for user\r\n     * current page will remove relevant option from plan actions as we are currently doing that action.\r\n     */\r\n    /**\r\n     * Gets plan actions for user\r\n     * @param {?} planData\r\n     * @param {?} milestone\r\n     * @return {?} plan actions for user\r\n     * current page will remove relevant option from plan actions as we are currently doing that action.\r\n     */\r\n    PlanOptionsService.prototype.getPlanActions = /**\r\n     * Gets plan actions for user\r\n     * @param {?} planData\r\n     * @param {?} milestone\r\n     * @return {?} plan actions for user\r\n     * current page will remove relevant option from plan actions as we are currently doing that action.\r\n     */\r\n    function (planData, milestone) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var planActionLabels = this.getPlanOptionLabels();\r\n        /** @type {?} */\r\n        var planActions = [];\r\n        /** @type {?} */\r\n        var userPrivileges = this.userDataService.getUserPrivilegesForModule(MODULE_CONSTANTS.MODULE_PLANNING);\r\n        /** @type {?} */\r\n        var tooltipMsgs = this.getTooltipLabels();\r\n        /** @type {?} */\r\n        var approvePrivilege = this.checkModulePrivilege(userPrivileges, APPROVE);\r\n        /** @type {?} */\r\n        var editPrivilege = this.checkModulePrivilege(userPrivileges, EDIT);\r\n        /** @type {?} */\r\n        var allPlanActions = this.getAllPlanActions();\r\n        if (planData) {\r\n            /** @type {?} */\r\n            var planStatus_1 = planData.planStatus['value'] || planData.planStatus;\r\n            allPlanActions.forEach((/**\r\n             * @param {?} planAction\r\n             * @return {?}\r\n             */\r\n            function (planAction) {\r\n                if (planAction.name === planActionLabels.COPY_PLAN) {\r\n                    planAction.isEnabled = editPrivilege;\r\n                }\r\n                else if (planAction.name === planActionLabels.DELETE_PLAN) {\r\n                    planAction.isEnabled = editPrivilege && planData.isDeletable;\r\n                }\r\n                else if (planAction.name === planActionLabels.APPROVE_PLAN) {\r\n                    planAction.isEnabled =\r\n                        approvePrivilege && _this.isPlanApprovable(planData);\r\n                }\r\n                else if (planAction.name === planActionLabels.CREATE_ADJUSTMENT) {\r\n                    /** @type {?} */\r\n                    var studyMilestoneAchieved = _this.studyMilestonesAchieved(milestone);\r\n                    planAction.isEnabled =\r\n                        editPrivilege &&\r\n                            planData.isPlan &&\r\n                            studyMilestoneAchieved &&\r\n                            planStatus_1 === PlanStatus.APPROVED;\r\n                    if (planStatus_1 === PlanStatus.APPROVED && !studyMilestoneAchieved) {\r\n                        planAction.tooltipMsg = tooltipMsgs.createAdjustmentCheckMilestone;\r\n                    }\r\n                }\r\n                if (planAction.isVisible === true) {\r\n                    planActions.push(planAction);\r\n                }\r\n            }));\r\n        }\r\n        return planActions;\r\n    };\r\n    /**\r\n     * This function has a switch case based on param actionItem, and acts based on that.\r\n     * e.g. it will open a delete dialog using dialog service with help of ConfirmationDialogComponent.\r\n     * and it will also subscribe to the dialog afterClose event to capture and define what happens on dialog close.\r\n     */\r\n    /**\r\n     * This function has a switch case based on param actionItem, and acts based on that.\r\n     * e.g. it will open a delete dialog using dialog service with help of ConfirmationDialogComponent.\r\n     * and it will also subscribe to the dialog afterClose event to capture and define what happens on dialog close.\r\n     * @param {?} actionItem\r\n     * @param {?} labels\r\n     * @param {?} planInfo\r\n     * @param {?=} studyListInput\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.onPlanActionClicked = /**\r\n     * This function has a switch case based on param actionItem, and acts based on that.\r\n     * e.g. it will open a delete dialog using dialog service with help of ConfirmationDialogComponent.\r\n     * and it will also subscribe to the dialog afterClose event to capture and define what happens on dialog close.\r\n     * @param {?} actionItem\r\n     * @param {?} labels\r\n     * @param {?} planInfo\r\n     * @param {?=} studyListInput\r\n     * @return {?}\r\n     */\r\n    function (actionItem, labels, planInfo, studyListInput) {\r\n        var _this = this;\r\n        switch (actionItem) {\r\n            case labels.PLAN_ACTION_LABELS.COPY_PLAN:\r\n                this.dialogService.isProceed = true;\r\n                /** @type {?} */\r\n                var copyPlanLabels_1 = this.getCopyPlanLabels();\r\n                if (this.dialogService.isStatusChanged &&\r\n                    this.dialogService.isStatusChanged === true) {\r\n                    this.confirmUnSavedChanges();\r\n                    this.subscription = this.navigateAwaySelection$\r\n                        .asObservable()\r\n                        .subscribe((/**\r\n                     * @param {?} event\r\n                     * @return {?}\r\n                     */\r\n                    function (event) {\r\n                        if (event) {\r\n                            _this.openCopyPlanDialog(actionItem, planInfo, studyListInput, copyPlanLabels_1);\r\n                        }\r\n                        _this.subscription.unsubscribe();\r\n                    }));\r\n                }\r\n                else {\r\n                    this.openCopyPlanDialog(actionItem, planInfo, studyListInput, copyPlanLabels_1);\r\n                }\r\n                break;\r\n            case labels.PLAN_ACTION_LABELS.CREATE_ADJUSTMENT:\r\n                planInfo && planInfo.key\r\n                    ? this.route.navigate(['/plans', 'plandetails', planInfo.key, 'plan-properties'], {\r\n                        queryParams: { type: 'adj' }\r\n                    })\r\n                    : this.route.navigate(['/plans', 'plandetails', 'invalid']);\r\n                break;\r\n            case labels.PLAN_ACTION_LABELS.DELETE_PLAN:\r\n                // this.isDeleteConfirm = true;\r\n                /** @type {?} */\r\n                var deleteDialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n                    width: DIALOG_CONFIG.DELETE_PLAN.WIDTH,\r\n                    height: DIALOG_CONFIG.DELETE_PLAN.HEIGHT,\r\n                    data: this.getDeletePlanProp(),\r\n                    panelClass: DIALOG_CONFIG.DELETE_PLAN.PANEL_CLASS,\r\n                    id: DIALOG_CONFIG.DELETE_PLAN.ID\r\n                });\r\n                deleteDialogRef.afterClosed().subscribe((/**\r\n                 * @param {?} eventObject\r\n                 * @return {?}\r\n                 */\r\n                function (eventObject) {\r\n                    if (eventObject && eventObject.action === _this.getDeletePlanProp().okLabel) {\r\n                        /** @type {?} */\r\n                        var deletePlanPayload = _this.getDeletePlanPayload(planInfo);\r\n                        _this.deletePlan(actionItem, deletePlanPayload);\r\n                    }\r\n                }));\r\n                break;\r\n            case labels.PLAN_ACTION_LABELS.APPROVE_PLAN:\r\n                if (this.dialogService.isStatusChanged &&\r\n                    this.dialogService.isStatusChanged === true) {\r\n                    this.confirmUnSavedChanges();\r\n                    this.subscription = this.navigateAwaySelection$\r\n                        .asObservable()\r\n                        .subscribe((/**\r\n                     * @param {?} event\r\n                     * @return {?}\r\n                     */\r\n                    function (event) {\r\n                        if (event) {\r\n                            _this.openApprovePlanDialog(actionItem, planInfo);\r\n                        }\r\n                        _this.subscription.unsubscribe();\r\n                    }));\r\n                }\r\n                else {\r\n                    this.openApprovePlanDialog(actionItem, planInfo);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} actionItem\r\n     * @param {?} planInfo\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.openApprovePlanDialog = /**\r\n     * @param {?} actionItem\r\n     * @param {?} planInfo\r\n     * @return {?}\r\n     */\r\n    function (actionItem, planInfo) {\r\n        var _this = this;\r\n        if (planInfo.plsr !== undefined && planInfo.plsr !== null && planInfo.plsr !== '') {\r\n            /** @type {?} */\r\n            var approvePlanLabels_1 = this.getApprovePlanLabels();\r\n            /** @type {?} */\r\n            var approvePlanDialogRef = this.dialog.open(ApprovePlanComponent, {\r\n                width: DIALOG_CONFIG.APPROVE_PLAN.WIDTH,\r\n                data: {\r\n                    name: planInfo.name,\r\n                    approver: planInfo.approver,\r\n                    description: planInfo.description,\r\n                    labels: approvePlanLabels_1,\r\n                    isPlan: planInfo.isPlan,\r\n                    planDesign: planInfo.isCohortPlan\r\n                },\r\n                panelClass: DIALOG_CONFIG.APPROVE_PLAN.PANEL_CLASS,\r\n                id: DIALOG_CONFIG.APPROVE_PLAN.ID\r\n            });\r\n            approvePlanDialogRef.afterClosed().subscribe((/**\r\n             * @param {?} eventObject\r\n             * @return {?}\r\n             */\r\n            function (eventObject) {\r\n                if (eventObject && eventObject.action === approvePlanLabels_1.APPROVE_PLAN_OK) {\r\n                    // this.spinnerService.spin$.next(true);\r\n                    /** @type {?} */\r\n                    var approvePlanPayload = _this.getApprovePlanPayload(planInfo, eventObject.form);\r\n                    _this.approvePlan(actionItem, approvePlanPayload, planInfo);\r\n                }\r\n            }));\r\n        }\r\n        else {\r\n            this.openDialog();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.openDialog = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var propMessage = { heading: EMPTY, message: EMPTY, okLabel: EMPTY, cancelLabel: EMPTY, showCancel: EMPTY };\r\n        propMessage.okLabel = this.localeAppResourcesService.getResource(DIALOG_ACIONS.OK);\r\n        propMessage.heading = this.errorTermsService.getErrorMessage('ApprovePlanTitle');\r\n        propMessage.message = this.errorTermsService.getErrorMessage('ApprovePlanMsg');\r\n        // this.localeAppResourcesService.getResource(ApprovePlanMsg);\r\n        this.dialog.open(ConfirmationDialogComponent, {\r\n            width: DIALOG_CONFIG.APPROVE_PLAN.WIDTH,\r\n            data: propMessage,\r\n            panelClass: DIALOG_CONFIG.APPROVE_PLAN.PANEL_CLASS,\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getCopyPlanLabels = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            COPY_PLAN: this.localeAppResourcesService.getResource('COPY_PLAN'),\r\n            COPY_PLAN_STUDY: this.localeAppResourcesService.getResource('COPY_PLAN_STUDY'),\r\n            COPY_PLAN_NAME: this.localeAppResourcesService.getResource('COPY_PLAN_NAME'),\r\n            COPY_PLAN_DESCR: this.localeAppResourcesService.getResource('COPY_PLAN_DESCR'),\r\n            COPY_PLAN_OK: this.localeAppResourcesService.getResource('COPY_PLAN_OK'),\r\n            COPY_PLAN_CANCEL: this.localeAppResourcesService.getResource('COPY_PLAN_CANCEL'),\r\n            COPY_PLAN_REQ_MSG: this.localeAppResourcesService.getResource('COPY_PLAN_REQ_MSG'),\r\n            COPY_PLAN_MAX_LENGTH_MSG: this.errorTermsService.getErrorMessage('maxCharExceedError')\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} actionItem\r\n     * @param {?} planInfo\r\n     * @param {?} studyListInput\r\n     * @param {?} labels\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.openCopyPlanDialog = /**\r\n     * @param {?} actionItem\r\n     * @param {?} planInfo\r\n     * @param {?} studyListInput\r\n     * @param {?} labels\r\n     * @return {?}\r\n     */\r\n    function (actionItem, planInfo, studyListInput, labels) {\r\n        var _this = this;\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n        /** @type {?} */\r\n        var copyPlanDialogRef = this.dialog.open(CopyPlanComponent, {\r\n            width: DIALOG_CONFIG.COPY_PLAN.WIDTH,\r\n            data: {\r\n                name: planInfo.name + ' - Copy',\r\n                studyListInput: studyListInput,\r\n                description: planInfo.description,\r\n                labels: labels\r\n            },\r\n            panelClass: DIALOG_CONFIG.COPY_PLAN.PANEL_CLASS,\r\n            id: DIALOG_CONFIG.COPY_PLAN.ID\r\n        });\r\n        copyPlanDialogRef.afterClosed().subscribe((/**\r\n         * @param {?} eventObject\r\n         * @return {?}\r\n         */\r\n        function (eventObject) {\r\n            if (eventObject && eventObject.action === labels.COPY_PLAN_OK) {\r\n                _this.dialogService.isProceed = false;\r\n                eventObject.form.copyToPlanName = eventObject.form.copyToPlanName\r\n                    ? eventObject.form.copyToPlanName.trim()\r\n                    : '';\r\n                /** @type {?} */\r\n                var copyPlanPayload = _this.getCopyPlanPayload(planInfo, eventObject.form);\r\n                _this.copyPlan(actionItem, planInfo, copyPlanPayload);\r\n            }\r\n            else {\r\n                _this.dialogService.isProceed = true;\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} planInfo\r\n     * @param {?} eventObject\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getCopyPlanPayload = /**\r\n     * @param {?} planInfo\r\n     * @param {?} eventObject\r\n     * @return {?}\r\n     */\r\n    function (planInfo, eventObject) {\r\n        return {\r\n            studyKey: this.getLastVisitedStudyKey(),\r\n            destStudyKey: eventObject.studySearchFormGroup.searchListControl.key,\r\n            studyName: this.getLastVisitedStudyName(),\r\n            destStudyName: eventObject.studySearchFormGroup.searchListControl.name ||\r\n                eventObject.studySearchFormGroup.searchListControl.id,\r\n            planKey: planInfo.key,\r\n            name: eventObject.copyToPlanName,\r\n            description: eventObject.editPlanDescription,\r\n            version: planInfo.version,\r\n            isCohortPlan: planInfo.isCohortPlan\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} actionItem\r\n     * @param {?} planInfo\r\n     * @param {?} payload\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.copyPlan = /**\r\n     * @param {?} actionItem\r\n     * @param {?} planInfo\r\n     * @param {?} payload\r\n     * @return {?}\r\n     */\r\n    function (actionItem, planInfo, payload) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var baseParam = {};\r\n        baseParam.dependencyList = [\r\n            CacheKey.GetPlanListKey + '_' + payload.studyKey,\r\n            CacheKey.GetPlanListKey + '_' + payload.destStudyKey\r\n        ];\r\n        this.callAPI(COMMAND.COPYPLAN, payload, baseParam).subscribe((/**\r\n         * @param {?} response\r\n         * @return {?}\r\n         */\r\n        function (response) {\r\n            _this.responseData.next(new Object({\r\n                response: {\r\n                    requestData: {\r\n                        planName: planInfo.name,\r\n                        destPlanName: payload.name,\r\n                        studyKey: payload.studyKey,\r\n                        destStudyKey: payload.destStudyKey,\r\n                        studyName: payload.studyName,\r\n                        destStudyName: payload.destStudyName,\r\n                        isPlan: planInfo.isPlan,\r\n                        parentPlanKey: !planInfo.isPlan ? planInfo.parentPlankey : null\r\n                    },\r\n                    responseData: response\r\n                },\r\n                actionItem: actionItem\r\n            }));\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getApprovePlanLabels = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            APPROVE_PLAN: this.localeAppResourcesService.getResource('APPROVE_PLAN'),\r\n            APPROVE_PLAN_APPROVER: this.localeAppResourcesService.getResource('APPROVE_PLAN_APPROVER'),\r\n            APPROVE_PLAN_NAME: this.localeAppResourcesService.getResource('APPROVE_PLAN_NAME'),\r\n            APPROVE_PLAN_DESCR: this.localeAppResourcesService.getResource('APPROVE_PLAN_DESCR'),\r\n            APPROVE_PLAN_COMMENTS: this.localeAppResourcesService.getResource('APPROVE_PLAN_COMMENTS'),\r\n            APPROVE_PLAN_OK: this.localeAppResourcesService.getResource('APPROVE_PLAN_OK'),\r\n            APPROVE_PLAN_CANCEL: this.localeAppResourcesService.getResource('APPROVE_PLAN_CANCEL'),\r\n            APPROVE_PLAN_REQ_MSG: this.localeAppResourcesService.getResource('APPROVE_PLAN_REQ_MSG')\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} planInfo\r\n     * @param {?} eventObject\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getApprovePlanPayload = /**\r\n     * @param {?} planInfo\r\n     * @param {?} eventObject\r\n     * @return {?}\r\n     */\r\n    function (planInfo, eventObject) {\r\n        /** @type {?} */\r\n        var payload = {\r\n            studyKey: this.getLastVisitedStudyKey(),\r\n            version: planInfo.version\r\n        };\r\n        if (!planInfo.isPlan) {\r\n            payload.newName = eventObject.planName;\r\n            payload.adjustStudyPlanKey = planInfo.key;\r\n            payload.description = eventObject.planDescription;\r\n            payload.approvalComment = eventObject.approvalComments;\r\n        }\r\n        else {\r\n            payload.planKey = planInfo.key;\r\n            payload.planComment = eventObject.approvalComments;\r\n        }\r\n        payload.isCohortPlan = planInfo.isCohortPlan;\r\n        return payload;\r\n    };\r\n    /**\r\n     * @param {?} actionItem\r\n     * @param {?} payload\r\n     * @param {?} planInfo\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.approvePlan = /**\r\n     * @param {?} actionItem\r\n     * @param {?} payload\r\n     * @param {?} planInfo\r\n     * @return {?}\r\n     */\r\n    function (actionItem, payload, planInfo) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var baseParam = {};\r\n        /** @type {?} */\r\n        var planKey = payload.planKey\r\n            ? payload.planKey\r\n            : payload.adjustStudyPlanKey;\r\n        // baseParam.dependencyList = [\r\n        //   CacheKey.GetPlanListKey + '_' + payload.studyKey,\r\n        //   CacheKey.GetPlanDetails + '_' + payload.studyKey + '_' + planKey,\r\n        //   'GetSourceSummaryKey' + '_' + payload.studyKey\r\n        // ];\r\n        baseParam.dependencyList = [\r\n            CacheKey.GetPlanListKey + '_' + payload.studyKey,\r\n            CacheKey.GetPlanDetails,\r\n            'GetSourceSummaryKey' + '_' + payload.studyKey\r\n        ];\r\n        if (planInfo.isPlan) {\r\n            this.callAPI(COMMAND.APPROVEPLAN, payload, baseParam)\r\n                .pipe(take(1))\r\n                .subscribe((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) {\r\n                // this.spinnerService.spin$.next(false);\r\n                _this.responseData.next(new Object({\r\n                    response: response,\r\n                    actionItem: actionItem\r\n                }));\r\n                _this.planApproved.next();\r\n            }));\r\n        }\r\n        else {\r\n            this.callAPI(COMMAND.APPROVEADJUSTMENT, payload, baseParam)\r\n                .pipe(take(1))\r\n                .subscribe((/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) {\r\n                // this.spinnerService.spin$.next(false);\r\n                _this.responseData.next(new Object({\r\n                    response: response,\r\n                    actionItem: actionItem\r\n                }));\r\n                _this.planApproved.next();\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} planInfo\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getDeletePlanPayload = /**\r\n     * @param {?} planInfo\r\n     * @return {?}\r\n     */\r\n    function (planInfo) {\r\n        return {\r\n            studyKey: planInfo.studyKey,\r\n            planKey: planInfo.key,\r\n            version: planInfo.version\r\n        };\r\n    };\r\n    /**\r\n     * This function will also do api call of delete plan with help of baseConnectionService.sendRequest()\r\n     * with params including { studyKey: planInfo.studyKey, planKey: planInfo.key, version: planInfo.version }.\r\n     * It will return Observable of received response.\r\n     */\r\n    /**\r\n     * This function will also do api call of delete plan with help of baseConnectionService.sendRequest()\r\n     * with params including { studyKey: planInfo.studyKey, planKey: planInfo.key, version: planInfo.version }.\r\n     * It will return Observable of received response.\r\n     * @param {?} actionItem\r\n     * @param {?} payload\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.deletePlan = /**\r\n     * This function will also do api call of delete plan with help of baseConnectionService.sendRequest()\r\n     * with params including { studyKey: planInfo.studyKey, planKey: planInfo.key, version: planInfo.version }.\r\n     * It will return Observable of received response.\r\n     * @param {?} actionItem\r\n     * @param {?} payload\r\n     * @return {?}\r\n     */\r\n    function (actionItem, payload) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var baseParam = {};\r\n        baseParam.dependencyList = [\r\n            CacheKey.GetPlanListKey + '_' + payload.studyKey\r\n        ];\r\n        this.callAPI(COMMAND.DELTEPLAN, payload, baseParam).subscribe((/**\r\n         * @param {?} response\r\n         * @return {?}\r\n         */\r\n        function (response) {\r\n            _this.responseData.next(new Object({\r\n                response: response,\r\n                actionItem: actionItem\r\n            }));\r\n        }));\r\n    };\r\n    /**\r\n     * This function gets delete plan properties to be passed to delete dialog.\r\n     */\r\n    /**\r\n     * This function gets delete plan properties to be passed to delete dialog.\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getDeletePlanProp = /**\r\n     * This function gets delete plan properties to be passed to delete dialog.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            heading: this.localeAppResourcesService.getResource('DPTitle'),\r\n            message: this.errorTermsService.getErrorMessage('AreYouSure') +\r\n                ' delete this plan?',\r\n            okLabel: this.localeAppResourcesService.getResource(ALERT_TYPE.OkLabel),\r\n            cancelLabel: this.localeAppResourcesService.getResource(ALERT_TYPE.CancelLabel)\r\n        };\r\n    };\r\n    /**\r\n     */\r\n    /**\r\n     *\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getPlanOptionsResources = /**\r\n     *\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            PLAN_ACTION_LABELS: this.getPlanOptionLabels(),\r\n            BANNER_LABELS: this.getBannerLabels()\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} planData\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.isPlanApprovable = /**\r\n     * @param {?} planData\r\n     * @return {?}\r\n     */\r\n    function (planData) {\r\n        if (planData.planStatus) {\r\n            return (planData.planStatus['value'] === PlanStatus.VALID ||\r\n                planData.planStatus === PlanStatus.VALID) &&\r\n                planData.isReadOnly === false\r\n                ? true\r\n                : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} milestone\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.studyMilestonesAchieved = /**\r\n     * @param {?} milestone\r\n     * @return {?}\r\n     */\r\n    function (milestone) {\r\n        if (milestone) {\r\n            /** @type {?} */\r\n            var studyFSIAchieved = milestone.FSI !== undefined ? true : false;\r\n            /** @type {?} */\r\n            var studyLSRAchieved = milestone.LSR === undefined ? true : false;\r\n            return studyFSIAchieved && studyLSRAchieved;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} userPrivilages\r\n     * @param {?} privilageName\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.checkModulePrivilege = /**\r\n     * @param {?} userPrivilages\r\n     * @param {?} privilageName\r\n     * @return {?}\r\n     */\r\n    function (userPrivilages, privilageName) {\r\n        var e_1, _a;\r\n        try {\r\n            for (var userPrivilages_1 = __values(userPrivilages), userPrivilages_1_1 = userPrivilages_1.next(); !userPrivilages_1_1.done; userPrivilages_1_1 = userPrivilages_1.next()) {\r\n                var privilage = userPrivilages_1_1.value;\r\n                if (privilage.name === privilageName) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (userPrivilages_1_1 && !userPrivilages_1_1.done && (_a = userPrivilages_1.return)) _a.call(userPrivilages_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getAllPlanActions = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var labels = this.getPlanOptionLabels();\r\n        /** @type {?} */\r\n        var tooltipMsgs = this.getTooltipLabels();\r\n        return [\r\n            {\r\n                name: labels.COPY_PLAN,\r\n                isVisible: true,\r\n                isEnabled: true,\r\n                tooltipMsg: tooltipMsgs.copyPlanToStudy,\r\n                hasDivider: false\r\n            },\r\n            {\r\n                name: labels.CREATE_ADJUSTMENT,\r\n                isVisible: true,\r\n                isEnabled: true,\r\n                tooltipMsg: tooltipMsgs.createAdjustment,\r\n                hasDivider: false\r\n            },\r\n            {\r\n                name: labels.DELETE_PLAN,\r\n                isVisible: true,\r\n                isEnabled: true,\r\n                tooltipMsg: tooltipMsgs.deletePlan,\r\n                hasDivider: false\r\n            },\r\n            {\r\n                name: labels.APPROVE_PLAN,\r\n                isVisible: true,\r\n                isEnabled: true,\r\n                tooltipMsg: tooltipMsgs.approvePlan,\r\n                hasDivider: true\r\n            }\r\n        ];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getPlanOptionLabels = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            COPY_PLAN: this.localeAppResourcesService.getResource('COPY_PLAN'),\r\n            CREATE_ADJUSTMENT: this.localeAppResourcesService.getResource('CREATE_ADJUSTMENT'),\r\n            DELETE_PLAN: this.localeAppResourcesService.getResource('DELETE_PLAN'),\r\n            APPROVE_PLAN: this.localeAppResourcesService.getResource('APPROVE_PLAN')\r\n        };\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getBannerLabels = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            SUCCESS: {\r\n                DELETE_PLAN: this.localeAppResourcesService.getResource('SUCCESS_MSG_DELETE_PLAN'),\r\n                APPROVE_PLAN: this.localeAppResourcesService.getResource('SUCCESS_MSG_APPROVE_PLAN'),\r\n                COPY_PLAN: {\r\n                    MODAL_HEADING: this.localeAppResourcesService.getResource('COPY_PLAN_SUCCESS_HEADING'),\r\n                    MODAL_MSG_PART_1: this.localeAppResourcesService.getResource('COPY_PLAN_SUCCESS_PART_1'),\r\n                    MODAL_MSG_PART_2: this.localeAppResourcesService.getResource('COPY_PLAN_SUCCESS_PART_2'),\r\n                    MODAL_MSG_PART_3: this.localeAppResourcesService.getResource('COPY_PLAN_SUCCESS_PART_3'),\r\n                    MODAL_ACTION_STAY: this.localeAppResourcesService.getResource('COPY_PLAN_SUCCESS_STAY'),\r\n                    MODAL_ACTION_GO: this.localeAppResourcesService.getResource('COPY_PLAN_SUCCESS_GO')\r\n                },\r\n                PLAN_DESIGN: {\r\n                    SAVE_PLAN_DESIGN: this.localeAppResourcesService.getResource('SAVE_PLAN_DESIGN')\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} msg\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.showSuccessMessage = /**\r\n     * @param {?} msg\r\n     * @return {?}\r\n     */\r\n    function (msg) {\r\n        this.snackBar.openFromComponent(DisplayBannerComponent, {\r\n            data: {\r\n                message: msg,\r\n                icon: 'assets/images/manageplans/icon-positive.png',\r\n                messageType: 'positive'\r\n            },\r\n            panelClass: ['positive-snackbar']\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} resource\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getResource = /**\r\n     * @param {?} resource\r\n     * @return {?}\r\n     */\r\n    function (resource) {\r\n        return this.localeAppResourcesService.getResource(resource);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getStudyTagListFunction = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return (/**\r\n         * @param {?} searchCriteria\r\n         * @return {?}\r\n         */\r\n        function (searchCriteria) {\r\n            return _this.studyListService.getStudyTagList(searchCriteria);\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getLastVisitedStudyKey = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.userDataService.getLastVisitedStudyKey();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getLastVisitedStudyName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var studyTag = this.studyListService.getStudyInfoByKey(this.getLastVisitedStudyKey());\r\n        return studyTag ? studyTag.id : '';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getUserName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.userDataService.getUserName();\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.callAPI = /**\r\n     * @param {?} command\r\n     * @param {?} payload\r\n     * @param {?} baseParam\r\n     * @return {?}\r\n     */\r\n    function (command, payload, baseParam) {\r\n        return this.baseConnectionService\r\n            .sendRequest(this.payloadCommandService.getCommandDetails(command, payload, null, null, this.userActionData), baseParam)\r\n            .pipe(map((/**\r\n         * @param {?} response\r\n         * @return {?}\r\n         */\r\n        function (response) { return response; })));\r\n    };\r\n    /**\r\n     * @param {?} errorCode\r\n     * @param {?} errorSuffix\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getErrorMsg = /**\r\n     * @param {?} errorCode\r\n     * @param {?} errorSuffix\r\n     * @return {?}\r\n     */\r\n    function (errorCode, errorSuffix) {\r\n        /** @type {?} */\r\n        var ErrorCode = errorSuffix + errorCode;\r\n        /** @type {?} */\r\n        var errorDescription = this.errorTermsService.getErrorMessage(ErrorCode);\r\n        if (errorDescription == null || errorDescription === undefined) {\r\n            errorDescription = this.errorTermsService.getErrorMessage(errorCode);\r\n        }\r\n        return errorDescription;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.confirmUnSavedChanges = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var deleteDialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: DIALOG_CONFIG.CONFIRM_UNSAVED_DATA.WIDTH,\r\n            data: this.getConfirmProp(),\r\n            panelClass: DIALOG_CONFIG.DELETE_PLAN.PANEL_CLASS,\r\n            id: 'warnDataLossOnNavDialog'\r\n        });\r\n        deleteDialogRef.afterClosed().subscribe((/**\r\n         * @param {?} eventObject\r\n         * @return {?}\r\n         */\r\n        function (eventObject) {\r\n            if (eventObject && eventObject.action === _this.getConfirmProp().okLabel) {\r\n                _this.navigateAwaySelection$.next(true);\r\n            }\r\n            else {\r\n                _this.navigateAwaySelection$.next(false);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getConfirmProp = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            heading: this.localeAppResourcesService.getResource('unsavedTitle'),\r\n            message: this.localeAppResourcesService.getResource('unsavedMessage'),\r\n            okLabel: this.localeAppResourcesService.getResource(ALERT_TYPE.OkLabel),\r\n            cancelLabel: this.localeAppResourcesService.getResource(ALERT_TYPE.CancelLabel)\r\n        };\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsService.prototype.getTooltipLabels = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            copyPlanToStudy: '',\r\n            // this.localeAppResourcesService.getResource('TOOLTIP_COPY_PLAN'),\r\n            createAdjustment: this.localeAppResourcesService.getResource('TOOLTIP_CREATE_ADJUSTMENT'),\r\n            createAdjustmentCheckMilestone: this.localeAppResourcesService.getResource('TOOLTIP_CREATE_ADJ_CHECK_MILESTONE'),\r\n            deletePlan: '',\r\n            // this.localeAppResourcesService.getResource('TOOLTIP_DELETE_PLAN'),\r\n            approvePlan: '' // this.localeAppResourcesService.getResource('TOOLTIP_APPROVE_PLAN')\r\n        };\r\n    };\r\n    PlanOptionsService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    PlanOptionsService.ctorParameters = function () { return [\r\n        { type: Router },\r\n        { type: BaseConnectionService },\r\n        { type: PayloadCommandService },\r\n        { type: LocaleAppResourcesService },\r\n        { type: ErrorTermsStoreService },\r\n        { type: MatDialog },\r\n        { type: FilterDataService },\r\n        { type: StudyListService },\r\n        { type: MatSnackBar },\r\n        { type: UserDataService },\r\n        { type: AppDataService },\r\n        { type: SpinnerService },\r\n        { type: DialogService }\r\n    ]; };\r\n    return PlanOptionsService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    PlanOptionsService.prototype.responseData;\r\n    /** @type {?} */\r\n    PlanOptionsService.prototype.responseObservable$;\r\n    /** @type {?} */\r\n    PlanOptionsService.prototype.planForm;\r\n    /** @type {?} */\r\n    PlanOptionsService.prototype.userActionData;\r\n    /** @type {?} */\r\n    PlanOptionsService.prototype.subscription;\r\n    /** @type {?} */\r\n    PlanOptionsService.prototype.navigateAwaySelection$;\r\n    /** @type {?} */\r\n    PlanOptionsService.prototype.planApproved;\r\n    /** @type {?} */\r\n    PlanOptionsService.prototype.planApproved$;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.route;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.baseConnectionService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.localeAppResourcesService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.errorTermsService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.dialog;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.filterDataService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.studyListService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.snackBar;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.userDataService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.appDataService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.spinnerService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsService.prototype.dialogService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/plan-options/plan-options.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PlanOptionsComponent = /** @class */ (function () {\r\n    function PlanOptionsComponent(planOptionsService, datePipe) {\r\n        this.planOptionsService = planOptionsService;\r\n        this.datePipe = datePipe;\r\n        this.isDisabled = false;\r\n        this.studyListInput = new StudyListInput();\r\n        this.planApprovedEvent = new EventEmitter();\r\n    }\r\n    Object.defineProperty(PlanOptionsComponent.prototype, \"userActionData\", {\r\n        set: /**\r\n         * @param {?} userActionObject\r\n         * @return {?}\r\n         */\r\n        function (userActionObject) {\r\n            if (userActionObject) {\r\n                this.planOptionsService.userActionData = userActionObject;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PlanOptionsComponent.prototype, \"planData\", {\r\n        set: /**\r\n         * @param {?} plan\r\n         * @return {?}\r\n         */\r\n        function (plan) {\r\n            this._planData = plan;\r\n            this.planOptions = this.planOptionsService.getPlanActions(plan, this.milestone);\r\n            this.studyListInput.selectedItemKey = this.planOptionsService.getLastVisitedStudyKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PlanOptionsComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.studyListInput.placeholder = this.planOptionsService.getResource('StudyListSearch');\r\n        this.studyListInput.allListItemsLabel = this.planOptionsService.getResource('AllStudiesView');\r\n        this.studyListInput.studyListHeaderLabel = this.planOptionsService.getResource('StudyListHeader');\r\n        this.studyListInput.optionTemplate = this.studyListOptionTemplate;\r\n        this.studyListInput.searchApi = this.planOptionsService.getStudyTagListFunction();\r\n        this.planOptionsService.planApproved$.subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.planApprovedEvent.emit();\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    PlanOptionsComponent.prototype.optionClicked = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        /** @type {?} */\r\n        var planInfo = {\r\n            studyKey: this.planOptionsService.getLastVisitedStudyKey(),\r\n            name: this._planData.name || this._planData.planName,\r\n            key: this._planData.planKey || this._planData.key,\r\n            version: this._planData.version || this._planData.Version,\r\n            description: this._planData.description,\r\n            approver: this.planOptionsService.getUserName(),\r\n            isPlan: this._planData.isPlan,\r\n            isCohortPlan: this.isCohortPlan,\r\n            parentPlankey: !this._planData.isPlan ? this._planData.parentPlankey : null,\r\n            plsr: this.dateFormatter(this._planData)\r\n        };\r\n        this.planOptionsService.onPlanActionClicked(event, this.planOptionsService.getPlanOptionsResources(), planInfo, this.studyListInput);\r\n    };\r\n    /**\r\n     * @param {?} planData\r\n     * @return {?}\r\n     */\r\n    PlanOptionsComponent.prototype.dateFormatter = /**\r\n     * @param {?} planData\r\n     * @return {?}\r\n     */\r\n    function (planData) {\r\n        /** @type {?} */\r\n        var date;\r\n        if (planData.hasOwnProperty('LSR')) {\r\n            date = planData.LSR;\r\n        }\r\n        else if (planData.hasOwnProperty('TLSR')) {\r\n            date = planData.TLSR;\r\n        }\r\n        return date\r\n            ? this.datePipe.transform(date, 'dd') +\r\n                '-' +\r\n                this.datePipe.transform(date, 'MMM') +\r\n                '-' +\r\n                this.datePipe.transform(date, 'yyyy')\r\n            : null;\r\n    };\r\n    Object.defineProperty(PlanOptionsComponent.prototype, \"isCohortPlan\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            /** @type {?} */\r\n            var value;\r\n            if (this._planData) {\r\n                if (this._planData.hasOwnProperty('planDesign')) {\r\n                    value = this._planData.planDesign === 'Cohort' ? 'Y' : 'N';\r\n                }\r\n                else if (this._planData.hasOwnProperty('isCohortPlan')) {\r\n                    value = this._planData.isCohortPlan;\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * on changes\r\n     * @param changes\r\n     */\r\n    /**\r\n     * on changes\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    PlanOptionsComponent.prototype.ngOnChanges = /**\r\n     * on changes\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        for (var propName in changes) {\r\n            if (propName && propName === 'planData') {\r\n                /** @type {?} */\r\n                var change = changes[propName];\r\n                if (change.currentValue) {\r\n                    this.setPlanInfo(change.currentValue);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets plan info\r\n     * @param [plan]\r\n     */\r\n    /**\r\n     * Sets plan info\r\n     * @param {?=} plan\r\n     * @return {?}\r\n     */\r\n    PlanOptionsComponent.prototype.setPlanInfo = /**\r\n     * Sets plan info\r\n     * @param {?=} plan\r\n     * @return {?}\r\n     */\r\n    function (plan) {\r\n        this._planData = plan;\r\n        this.planOptions = this.planOptionsService.getPlanActions(plan, this.milestone);\r\n        this.studyListInput.selectedItemKey = this.planOptionsService.getLastVisitedStudyKey();\r\n    };\r\n    PlanOptionsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-plan-options',\r\n                    template: \"<!-- <ctos-context-menu\\r\\n  #menu\\r\\n  [options]=\\\"planOptions\\\"\\r\\n  (fireEvent)=\\\"optionClicked($event)\\\"\\r\\n  [ngClass]=\\\"{ disabled: 'isDisabled' }\\\"\\r\\n> -->\\r\\n<mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" [class]=\\\"'context-menu plan-options-menu'\\\">\\r\\n  <ng-container *ngFor=\\\"let item of planOptions\\\">\\r\\n    <div [matTooltip]=\\\"item.tooltipMsg\\\" matTooltipPosition=\\\"left\\\" [matTooltipDisabled]=\\\"item.isEnabled\\\">\\r\\n      <hr *ngIf=\\\"item.hasDivider\\\"/>\\r\\n      <button mat-menu-item [disabled]=\\\"!item.isEnabled\\\" (click)=\\\"optionClicked(item.name)\\\">\\r\\n        <span>{{ item.name }}</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</mat-menu>\\r\\n<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" [disabled]=\\\"isDisabled\\\">\\r\\n  <i class=\\\"material-icons\\\">\\r\\n    more_vert\\r\\n    </i>\\r\\n</button>\\r\\n<ng-template #studyListOptionTemplate let-item>\\r\\n  <img src=\\\"assets/images/preScreening.png\\\" *ngIf=\\\"item.prescreenInd\\\" />\\r\\n  <span [matTooltip]=\\\"item.id\\\">&nbsp;{{ item.id }}</span>\\r\\n</ng-template>\\r\\n<!-- </ctos-context-menu> -->\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    PlanOptionsComponent.ctorParameters = function () { return [\r\n        { type: PlanOptionsService },\r\n        { type: DatePipe }\r\n    ]; };\r\n    PlanOptionsComponent.propDecorators = {\r\n        milestone: [{ type: Input }],\r\n        isDisabled: [{ type: Input }],\r\n        userActionData: [{ type: Input }],\r\n        planData: [{ type: Input }],\r\n        studyListOptionTemplate: [{ type: ViewChild, args: ['studyListOptionTemplate', { static: true },] }],\r\n        planApprovedEvent: [{ type: Output }]\r\n    };\r\n    return PlanOptionsComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    PlanOptionsComponent.prototype.milestone;\r\n    /** @type {?} */\r\n    PlanOptionsComponent.prototype.isDisabled;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsComponent.prototype.studyListOptionTemplate;\r\n    /** @type {?} */\r\n    PlanOptionsComponent.prototype.planOptions;\r\n    /** @type {?} */\r\n    PlanOptionsComponent.prototype._planData;\r\n    /** @type {?} */\r\n    PlanOptionsComponent.prototype.studyListInput;\r\n    /** @type {?} */\r\n    PlanOptionsComponent.prototype.planApprovedEvent;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsComponent.prototype.planOptionsService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanOptionsComponent.prototype.datePipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/CurveData.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CurveData = /** @class */ (function () {\r\n    function CurveData() {\r\n    }\r\n    return CurveData;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CurveData.prototype.name;\r\n    /** @type {?} */\r\n    CurveData.prototype.series;\r\n    /** @type {?} */\r\n    CurveData.prototype.code;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart-legend/ctos-plan-chart-legend.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CTOSPlanChartLegendService = /** @class */ (function () {\r\n    function CTOSPlanChartLegendService() {\r\n        this.planKey = -1;\r\n        this.selectedCurves = [];\r\n        this.isDirty = false;\r\n        this.selectedLegend = new BehaviorSubject(null);\r\n        this.selectedLegend$ = this.selectedLegend.asObservable();\r\n        this.LegendPref = new BehaviorSubject(null);\r\n        this.LegendPref$ = this.selectedLegend.asObservable();\r\n    }\r\n    /**\r\n     * @param {?} selection\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendService.prototype.setLegendSelection = /**\r\n     * @param {?} selection\r\n     * @return {?}\r\n     */\r\n    function (selection) {\r\n        this.selectedLegend.next(selection);\r\n    };\r\n    /**\r\n     * @param {?} pref\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendService.prototype.setLegendPref = /**\r\n     * @param {?} pref\r\n     * @return {?}\r\n     */\r\n    function (pref) {\r\n        this.LegendPref.next(pref);\r\n    };\r\n    CTOSPlanChartLegendService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    CTOSPlanChartLegendService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ CTOSPlanChartLegendService.ngInjectableDef = ɵɵdefineInjectable({ factory: function CTOSPlanChartLegendService_Factory() { return new CTOSPlanChartLegendService(); }, token: CTOSPlanChartLegendService, providedIn: \"root\" });\r\n    return CTOSPlanChartLegendService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendService.prototype.selectedLegend;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendService.prototype.selectedLegend$;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendService.prototype.LegendPref;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendService.prototype.LegendPref$;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendService.prototype.planKey;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendService.prototype.selectedCurves;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendService.prototype.isDirty;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/MileStonesData.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MileStonesData = /** @class */ (function () {\r\n    function MileStonesData() {\r\n    }\r\n    return MileStonesData;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    MileStonesData.prototype.targetMileStone;\r\n    /** @type {?} */\r\n    MileStonesData.prototype.markers;\r\n    /** @type {?} */\r\n    MileStonesData.prototype.markersToPlot;\r\n    /** @type {?} */\r\n    MileStonesData.prototype.showTargetMilestone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/TargetMilestone.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$3 = momentNS;\r\nvar TargetMilestone = /** @class */ (function () {\r\n    function TargetMilestone(name, data, desc, scalex, scaley, val) {\r\n        this.dateFormat = 'DD MMM YYYY';\r\n        this.name = name;\r\n        this.data = data;\r\n        this.description = desc;\r\n        this.scaleX = scalex;\r\n        this.scaleY = scaley;\r\n        this.value = val;\r\n        this.displayText = name + ' : ' + moment$3(data).format(this.dateFormat);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TargetMilestone.prototype.isTargetLine = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var plannedSite = 'Planned Sites';\r\n        return ['25%', '50%', '90%', plannedSite].indexOf(this.name) > -1 ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TargetMilestone.prototype.color = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ((['LSS', 'TLSS', 'PLSS', 'ALSS', 'AFSS', 'PFSS', 'PrLSS', 'UpdPrLSS', 'FroPrLSS'].indexOf(this.name) > -1) ? '#a9e8b4' :\r\n            (['LSR', 'TLSR', 'PLSR', 'ALSR', 'PrLSR', 'UpdPrLSR', 'FroPrLSR', 'StudyPrLSR',\r\n                'Study PrLSR'].indexOf(this.name) > -1 ? '#7eb1fb' :\r\n                (['Today'].indexOf(this.name) > -1) ? '#ffb84d' : '#bf80ce'));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TargetMilestone.prototype.isTargetLineSubjectAxis = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var plannedScreening = 'Planned Screening';\r\n        /** @type {?} */\r\n        var maximumScreening = 'Maximum Screening';\r\n        /** @type {?} */\r\n        var maximumRandomization = 'Maximum Randomization';\r\n        return [plannedScreening, maximumRandomization, maximumScreening]\r\n            .indexOf(this.name) > -1 ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TargetMilestone.prototype.seedNumber = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.isTargetLine() || this.isTargetLineSubjectAxis() ? 1 : 0;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TargetMilestone.prototype.width = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.name.length * 7;\r\n    };\r\n    return TargetMilestone;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.name;\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.data;\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.description;\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.scaleX;\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.scaleY;\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.value;\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.displayText;\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.x;\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.y;\r\n    /** @type {?} */\r\n    TargetMilestone.prototype.dateFormat;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/ctos-plan-chart.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$4 = momentNS;\r\nvar CTOSPlanChartComponent = /** @class */ (function () {\r\n    function CTOSPlanChartComponent(chartElement, lgdServ, renderer) {\r\n        var _this = this;\r\n        this.chartElement = chartElement;\r\n        this.lgdServ = lgdServ;\r\n        this.renderer = renderer;\r\n        // remove it, not used\r\n        this.activate = new EventEmitter();\r\n        this.deactivate = new EventEmitter();\r\n        this.roundDomains = false;\r\n        this.schemeType = 'ordinal';\r\n        this.curve = curveLinear;\r\n        this.activeEntries = [];\r\n        this.yOrientLeft = 'left';\r\n        this.yOrientRight = 'right';\r\n        // legend vars\r\n        this.showGridLines = false;\r\n        // variables\r\n        this.margin = [0, 20, 0, 20];\r\n        // NGX graph options\r\n        this.showXAxisLabel = true;\r\n        this.xAxisLabel = 'Enrollment Period';\r\n        this.showYAxisLabel = true;\r\n        this.yAxisLabel = '';\r\n        this.y2AxisLabel = '';\r\n        this.scaleType = 'linear';\r\n        this.xAxisHeight = 0;\r\n        this.yAxisWidth = 0;\r\n        this.manualRefresh = new EventEmitter();\r\n        this.targetMileStoneX = new Array();\r\n        this.targetMileStoneY = new Array();\r\n        this.dateFormat = 'DD MMM YYYY';\r\n        this.collisionSafety = 110;\r\n        this.colisionYfactor = 17;\r\n        this.markers = new Array();\r\n        this.markerPlots = new Array();\r\n        this.markerRadius = 12;\r\n        this.milestoneKey = 'Tar';\r\n        this.markerKey = 'Mil';\r\n        this.widthMargin = 0;\r\n        this.heightMargin = 0;\r\n        this.sliderTop = -32;\r\n        this.graphRendered = false;\r\n        this.allMilestones = [];\r\n        this.milestonesForCopyOnly = {\r\n            FSI: true,\r\n            FroPrLSS: true,\r\n            FroPrLSR: true,\r\n            AppPSI: true,\r\n            AppPFSI: true,\r\n            BasPSI: true,\r\n            BasPFSI: true,\r\n            AdjPSI: true,\r\n            AdjPFSI: true,\r\n            CurPrSI: true,\r\n            CurPrFSI: true,\r\n            UpdPrSI: true,\r\n            UpdPrFSI: true,\r\n            FroPrSI: true,\r\n            FroPrFSI: true,\r\n            ActFSI: true\r\n        };\r\n        this.sizeChanged = false;\r\n        this.dataChanged = false;\r\n        this.tempPlannedSite = 'Planned Sites';\r\n        this.tempPlannedScreening = 'Planned Screening';\r\n        this.tempMaximumScreening = 'Maximum Screening';\r\n        this.tempMaximumRandomization = 'Maximum Randomization';\r\n        this.aheadBehindData = [];\r\n        this.pinnedObjects = {};\r\n        this.withoutDateMarkerPlots = [];\r\n        this.subscriptions = new Array();\r\n        this.subscriptions.push(this.lgdServ.selectedLegend$.subscribe((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            _this.preferredCurves = data;\r\n            if (_this.preferredCurves) {\r\n                _this.ngOnChanges(null);\r\n            }\r\n        })));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.manualRefresh.emit();\r\n        console.log('type =>' + this.type);\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (this.axisLabels) {\r\n            this.yAxisLabel = this.axisLabels.subjects;\r\n            this.y2AxisLabel = this.axisLabels.sites;\r\n        }\r\n        this.graphRendered = false;\r\n        this.deepCopySegregate();\r\n        this.heightMargin = 100;\r\n        this.widthMargin = 120;\r\n        this.render();\r\n        this.todaysDateMilestone = {\r\n            axis: 'date',\r\n            name: 'date',\r\n            id: 'today',\r\n            markers: [new TargetMilestone('Today', moment$4(new Date()).format('MM/DD/YYYY'), 'Today\\'s Date', this.xScaleLine(new Date()), 0, 'NA')]\r\n        };\r\n        this.plotMilestones();\r\n        this.plotMarkers();\r\n        this.collisionDetectionNew();\r\n        this.adjustGraph();\r\n        if (changes && changes.refresh) {\r\n            this.sizeChanged = !this.sizeChanged;\r\n            this.pinnedObjects = this.singlePinnedPoints;\r\n        }\r\n        else if (changes && !changes.refresh) {\r\n            this.dataChanged = !this.dataChanged;\r\n            this.pinnedObjects = {};\r\n            this.singlePinnedPoints = {};\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.adjustGraph = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        window.setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            /** @type {?} */\r\n            var dimstmp = _this.getContainerDims();\r\n            if (_this.chartElement.nativeElement.querySelectorAll('.ngx-charts-outer')\r\n                && _this.chartElement.nativeElement.querySelectorAll('.ngx-charts')\r\n                && _this.chartElement.nativeElement.querySelectorAll('.ngx-charts-outer')[0]\r\n                && _this.chartElement.nativeElement.querySelectorAll('.ngx-charts')[0]\r\n                && dimstmp) {\r\n                _this.renderer.setStyle(_this.chartElement.nativeElement.querySelectorAll('.ngx-charts-outer')[0], 'width', dimstmp.width + 'px');\r\n                _this.renderer.setAttribute(_this.chartElement.nativeElement.querySelectorAll('.ngx-charts')[0], 'width', dimstmp.width);\r\n                _this.renderer.setAttribute(_this.chartElement.nativeElement.querySelectorAll('.ngx-charts')[0], 'height', dimstmp.height);\r\n            }\r\n            _this.graphRendered = true;\r\n            _this.sliderTop = -32;\r\n        }), 10);\r\n    };\r\n    // not used as of now, remove it.\r\n    // not used as of now, remove it.\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.onResize = \r\n    // not used as of now, remove it.\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        /** @type {?} */\r\n        var oldMin = this.minValue;\r\n        /** @type {?} */\r\n        var oldMix = this.maxValue;\r\n        this.ngOnChanges(null);\r\n        this.minValue = oldMin;\r\n        this.maxValue = oldMix;\r\n        this.filterData(this.minValue, this.maxValue);\r\n        this.xDomainLine = [this.minValue, this.maxValue];\r\n        this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\r\n        this.plotMilestones();\r\n        this.plotMarkers();\r\n        this.collisionDetectionNew();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} subscription\r\n         * @return {?}\r\n         */\r\n        function (subscription) {\r\n            subscription.unsubscribe();\r\n        }));\r\n    };\r\n    ////////////////////////////////////\r\n    //  ngx graph special funcs\r\n    ///////////////////////////////////\r\n    ////////////////////////////////////\r\n    //  ngx graph special funcs\r\n    ///////////////////////////////////\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.render = \r\n    ////////////////////////////////////\r\n    //  ngx graph special funcs\r\n    ///////////////////////////////////\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var dimstmp = this.getContainerDims();\r\n        if (dimstmp) {\r\n            this.width = dimstmp.width - this.widthMargin;\r\n            this.height = dimstmp.height - this.heightMargin;\r\n        }\r\n        this.dims = calculateViewDimensions({\r\n            width: this.width,\r\n            height: this.height,\r\n            margins: this.margin,\r\n            xAxisHeight: this.xAxisHeight,\r\n            yAxisWidth: this.yAxisWidth,\r\n            showXLabel: this.showXAxisLabel,\r\n            showYLabel: this.showYAxisLabel,\r\n            legendType: this.schemeType,\r\n        });\r\n        this.view = [this.dims.width, this.dims.height];\r\n        this.xDomainLine = this.getXDomainLine();\r\n        this.yDomainLine = this.getYDomainLine();\r\n        this.seriesDomain = this.getSeriesDomain();\r\n        this.ySiteDomainLine = this.getYSiteDomainLine();\r\n        this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\r\n        this.yScaleLine = this.getYScaleLine(this.yDomainLine, this.dims.height);\r\n        this.ySiteScaleLine = this.getYSiteScaleLine(this.ySiteDomainLine, this.dims.height);\r\n        this.setColors();\r\n        this.transform = \"translate(80,15)\";\r\n        this.options = {\r\n            stepsArray: this.dateRange.map((/**\r\n             * @param {?} date\r\n             * @return {?}\r\n             */\r\n            function (date) {\r\n                return { value: date.getTime() };\r\n            })),\r\n            translate: (/**\r\n             * @param {?} value\r\n             * @param {?} label\r\n             * @return {?}\r\n             */\r\n            function (value, label) {\r\n                return new Date(value).toDateString();\r\n            })\r\n        };\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.createDateRange = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.dateRange = [];\r\n        /** @type {?} */\r\n        var strtDate = new Date(this.minValue);\r\n        /** @type {?} */\r\n        var endDate = new Date(this.maxValue);\r\n        /** @type {?} */\r\n        var moveDate = new Date(this.minValue);\r\n        /** @type {?} */\r\n        var i = 0;\r\n        while (moveDate < endDate) {\r\n            moveDate = new Date(this.minValue);\r\n            moveDate.setDate(moveDate.getDate() + i);\r\n            this.dateRange.push(moveDate);\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getXDomainLine = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e;\r\n        /** @type {?} */\r\n        var values = [];\r\n        try {\r\n            for (var _f = __values(this.chartData), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                var curve = _g.value;\r\n                try {\r\n                    for (var _h = (e_2 = void 0, __values(curve.series)), _j = _h.next(); !_j.done; _j = _h.next()) {\r\n                        var d = _j.value;\r\n                        if (values.indexOf(d.name) === -1) {\r\n                            values.push(d.name);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        try {\r\n            for (var _k = __values(this.centerInitData), _l = _k.next(); !_l.done; _l = _k.next()) {\r\n                var curve = _l.value;\r\n                try {\r\n                    for (var _m = (e_4 = void 0, __values(curve.series)), _o = _m.next(); !_o.done; _o = _m.next()) {\r\n                        var d = _o.value;\r\n                        if (values.indexOf(d.name) === -1) {\r\n                            values.push(d.name);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        /** @type {?} */\r\n        var tm = this.getXTMilestone();\r\n        if (tm) {\r\n            try {\r\n                for (var tm_1 = __values(tm), tm_1_1 = tm_1.next(); !tm_1_1.done; tm_1_1 = tm_1.next()) {\r\n                    var d = tm_1_1.value;\r\n                    if (values.indexOf(d.date) === -1) {\r\n                        values.push(new Date(d.date));\r\n                    }\r\n                }\r\n            }\r\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n            finally {\r\n                try {\r\n                    if (tm_1_1 && !tm_1_1.done && (_e = tm_1.return)) _e.call(tm_1);\r\n                }\r\n                finally { if (e_5) throw e_5.error; }\r\n            }\r\n        }\r\n        this.scaleType = this.getScaleType(values);\r\n        /** @type {?} */\r\n        var domain = [];\r\n        if (values.length === 0) {\r\n            this.dateRange = values;\r\n            return [];\r\n        }\r\n        if (this.scaleType === 'time') {\r\n            // [Gaurav] Sort is mandatory for axis values to be in order for correct span on tooltip area\r\n            // reference function, findClosestPointIndex, in file, tooltip-area.component.js\r\n            values = values.slice().sort((/**\r\n             * @param {?} a\r\n             * @param {?} b\r\n             * @return {?}\r\n             */\r\n            function (a, b) {\r\n                /** @type {?} */\r\n                var aDate = a.getTime();\r\n                /** @type {?} */\r\n                var bDate = b.getTime();\r\n                if (aDate > bDate) {\r\n                    return 1;\r\n                }\r\n                if (bDate > aDate) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }));\r\n            this.minValue = new Date(values[0]).getTime();\r\n            this.maxValue = new Date(values[values.length - 1]).getTime();\r\n            this.createDateRange();\r\n            domain = [this.minValue, this.maxValue];\r\n        }\r\n        else {\r\n            domain = values;\r\n        }\r\n        this.xSet = values;\r\n        return domain;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getYDomainLine = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_6, _a, e_7, _b, e_8, _c;\r\n        /** @type {?} */\r\n        var domain = [];\r\n        try {\r\n            for (var _d = __values(this.chartData), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                var curve = _e.value;\r\n                try {\r\n                    for (var _f = (e_7 = void 0, __values(curve.series)), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                        var d = _g.value;\r\n                        if (domain.indexOf(d.value) < 0) {\r\n                            domain.push(d.value);\r\n                        }\r\n                        if (d.min !== undefined) {\r\n                            if (domain.indexOf(d.min) < 0) {\r\n                                domain.push(d.min);\r\n                            }\r\n                        }\r\n                        if (d.max !== undefined) {\r\n                            if (domain.indexOf(d.max) < 0) {\r\n                                domain.push(d.max);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\r\n                    }\r\n                    finally { if (e_7) throw e_7.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n        finally {\r\n            try {\r\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n            }\r\n            finally { if (e_6) throw e_6.error; }\r\n        }\r\n        /** @type {?} */\r\n        var yt = this.getYSubTMilestone();\r\n        if (yt) {\r\n            try {\r\n                for (var yt_1 = __values(yt), yt_1_1 = yt_1.next(); !yt_1_1.done; yt_1_1 = yt_1.next()) {\r\n                    var d = yt_1_1.value;\r\n                    if (domain.indexOf(d.value) < 0) {\r\n                        domain.push(d.value);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\r\n            finally {\r\n                try {\r\n                    if (yt_1_1 && !yt_1_1.done && (_c = yt_1.return)) _c.call(yt_1);\r\n                }\r\n                finally { if (e_8) throw e_8.error; }\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var min = Math.min.apply(Math, __spread(domain));\r\n        /** @type {?} */\r\n        var max = Math.max.apply(Math, __spread(domain));\r\n        min = Math.min(0, min);\r\n        return [min, max];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getYSiteDomainLine = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_9, _a, e_10, _b;\r\n        /** @type {?} */\r\n        var domain = [];\r\n        try {\r\n            for (var _c = __values(this.centerInitData), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var curve = _d.value;\r\n                try {\r\n                    for (var _e = (e_10 = void 0, __values(curve.series)), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var d = _f.value;\r\n                        if (domain.indexOf(d.value) < 0) {\r\n                            domain.push(d.value);\r\n                        }\r\n                        if (d.min !== undefined) {\r\n                            if (domain.indexOf(d.min) < 0) {\r\n                                domain.push(d.min);\r\n                            }\r\n                        }\r\n                        if (d.max !== undefined) {\r\n                            if (domain.indexOf(d.max) < 0) {\r\n                                domain.push(d.max);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_10_1) { e_10 = { error: e_10_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_10) throw e_10.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_9) throw e_9.error; }\r\n        }\r\n        /** @type {?} */\r\n        var min = Math.min.apply(Math, __spread(domain));\r\n        /** @type {?} */\r\n        var max = Math.max.apply(Math, __spread(domain));\r\n        min = Math.min(0, min);\r\n        /** @type {?} */\r\n        var subjectDomainLine = this.getYDomainLine();\r\n        if (subjectDomainLine[0] < 0) {\r\n            /*const factor = Math.abs(subjectDomainLine[0]) / (subjectDomainLine[1] + Math.abs(subjectDomainLine[0]));\r\n            min = -((max * factor) / (1 - factor));*/\r\n            min = (subjectDomainLine[0] / subjectDomainLine[1]) * max;\r\n        }\r\n        return [min, max];\r\n    };\r\n    /**\r\n     * @param {?} domain\r\n     * @param {?} width\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getXScaleLine = /**\r\n     * @param {?} domain\r\n     * @param {?} width\r\n     * @return {?}\r\n     */\r\n    function (domain, width) {\r\n        /** @type {?} */\r\n        var scale;\r\n        if (this.scaleType === 'time') {\r\n            scale = scaleTime$1()\r\n                .range([0, this.dims.width])\r\n                .domain(domain);\r\n        }\r\n        else if (this.scaleType === 'linear') {\r\n            scale = scaleLinear()\r\n                .range([0, this.dims.width])\r\n                .domain(domain);\r\n            if (this.roundDomains) {\r\n                scale = scale.nice();\r\n            }\r\n        }\r\n        return scale;\r\n    };\r\n    /**\r\n     * @param {?} domain\r\n     * @param {?} height\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getYScaleLine = /**\r\n     * @param {?} domain\r\n     * @param {?} height\r\n     * @return {?}\r\n     */\r\n    function (domain, height) {\r\n        /** @type {?} */\r\n        var scale = scaleLinear()\r\n            .range([this.dims.height, 0])\r\n            .domain(domain);\r\n        return this.roundDomains ? scale.nice() : scale;\r\n    };\r\n    /**\r\n     * @param {?} domain\r\n     * @param {?} height\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getYSiteScaleLine = /**\r\n     * @param {?} domain\r\n     * @param {?} height\r\n     * @return {?}\r\n     */\r\n    function (domain, height) {\r\n        /** @type {?} */\r\n        var scale = scaleLinear()\r\n            .range([this.dims.height, 0])\r\n            .domain(domain);\r\n        return this.roundDomains ? scale.nice() : scale;\r\n    };\r\n    /**\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getScaleType = /**\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function (values) {\r\n        var e_11, _a;\r\n        /** @type {?} */\r\n        var date = true;\r\n        /** @type {?} */\r\n        var num = true;\r\n        try {\r\n            for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\r\n                var value = values_1_1.value;\r\n                if (!this.isDate(value)) {\r\n                    date = false;\r\n                }\r\n                if (typeof value !== 'number') {\r\n                    num = false;\r\n                }\r\n            }\r\n        }\r\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\r\n        finally {\r\n            try {\r\n                if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\r\n            }\r\n            finally { if (e_11) throw e_11.error; }\r\n        }\r\n        if (date) {\r\n            return 'time';\r\n        }\r\n        if (num) {\r\n            return 'linear';\r\n        }\r\n        return 'ordinal';\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.isDate = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value instanceof Date) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.setColors = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var domain;\r\n        if (this.schemeType === 'ordinal') {\r\n            domain = this.xDomainLine;\r\n        }\r\n        else {\r\n            domain = this.yDomainLine;\r\n        }\r\n        /** @type {?} */\r\n        var colorScheme = {\r\n            domain: ['#de82f6', '#8d8b8e', '#93BDAA', '\t#479a75', '#62a3ef', '#ca9bec',\r\n                '#7c93d2', '#ead954', '#f16170']\r\n        };\r\n        this.colors = new ColorHelper(colorScheme, this.schemeType, domain, this.centerColor);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getSeriesDomain = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.combinedSeries = this.chartData.slice(0);\r\n        this.combinedSeries.push({\r\n            name: this.yAxisLabel,\r\n            series: this.chartData\r\n        });\r\n        return this.combinedSeries.map((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) { return d.name; }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.hideCircles = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.hoveredVertical = null;\r\n        this.deactivateAll();\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.updateHoveredVertical = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        this.hoveredVertical = item.value;\r\n        this.deactivateAll();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.deactivateAll = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_12, _a;\r\n        this.activeEntries = __spread(this.activeEntries);\r\n        try {\r\n            for (var _b = __values(this.activeEntries), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var entry = _c.value;\r\n                this.deactivate.emit({ value: entry, entries: [] });\r\n            }\r\n        }\r\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_12) throw e_12.error; }\r\n        }\r\n        this.activeEntries = [];\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.onActivate = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        /** @type {?} */\r\n        var idx = this.activeEntries.findIndex((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) {\r\n            return d.name === item.name && d.value === item.value && d.series === item.series;\r\n        }));\r\n        if (idx > -1) {\r\n            return;\r\n        }\r\n        this.activeEntries = __spread([item], this.activeEntries);\r\n        this.activate.emit({ value: item, entries: this.activeEntries });\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.onDeactivate = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        /** @type {?} */\r\n        var idx = this.activeEntries.findIndex((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) {\r\n            return d.name === item.name && d.value === item.value && d.series === item.series;\r\n        }));\r\n        this.activeEntries.splice(idx, 1);\r\n        this.activeEntries = __spread(this.activeEntries);\r\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n    };\r\n    // filter data based on window selected\r\n    // filter data based on window selected\r\n    /**\r\n     * @param {?} startDate\r\n     * @param {?} endDate\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.filterData = \r\n    // filter data based on window selected\r\n    /**\r\n     * @param {?} startDate\r\n     * @param {?} endDate\r\n     * @return {?}\r\n     */\r\n    function (startDate, endDate) {\r\n        // this.sliceData(this.data1);\r\n        this.chartData.forEach((/**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        function (element) {\r\n            element.series = element.series.filter((/**\r\n             * @param {?} m\r\n             * @return {?}\r\n             */\r\n            function (m) { return new Date(m.name) >= new Date(startDate) && new Date(m.name) <= new Date(endDate); }));\r\n        }));\r\n        this.centerInitData.forEach((/**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        function (element) {\r\n            element.series = element.series.filter((/**\r\n             * @param {?} m\r\n             * @return {?}\r\n             */\r\n            function (m) { return new Date(m.name) >= new Date(startDate) && new Date(m.name) <= new Date(endDate); }));\r\n        }));\r\n    };\r\n    // date slider window selection\r\n    // date slider window selection\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.onSlideValueChange = \r\n    // date slider window selection\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.deepCopySegregate();\r\n        // following code to invoked after charData changes\r\n        this.filterData(this.minValue, this.maxValue);\r\n        this.xDomainLine = [this.minValue, this.maxValue];\r\n        this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\r\n        this.plotMilestones();\r\n        this.plotMarkers();\r\n        this.collisionDetectionNew();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.deepCopySegregate = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.chartData = new Array();\r\n        this.centerInitData = new Array();\r\n        this.activeTooltipArea = new Array();\r\n        /** @type {?} */\r\n        var item;\r\n        if (this.combinedData && this.combinedData.length > 0) {\r\n            this.combinedData.forEach((/**\r\n             * @param {?} element\r\n             * @return {?}\r\n             */\r\n            function (element) {\r\n                if (_this.preferredCurves && _this.checkLegendState(element.code)) {\r\n                    item = new CurveData();\r\n                    item.name = element.name;\r\n                    item.code = element.code;\r\n                    if (item.code.indexOf('SI') > -1) {\r\n                        item.series = Object.assign([], element.series);\r\n                        _this.centerInitData = __spread(_this.centerInitData, [item]);\r\n                    }\r\n                    else {\r\n                        item.series = Object.assign([], element.series);\r\n                        _this.chartData = __spread(_this.chartData, [item]);\r\n                    }\r\n                    _this.activeTooltipArea = __spread(_this.activeTooltipArea, [item]);\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} code\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.checkLegendState = /**\r\n     * @private\r\n     * @param {?} code\r\n     * @return {?}\r\n     */\r\n    function (code) {\r\n        for (var i = 0; i < this.preferredCurves.length; i++) {\r\n            if (code) {\r\n                if (code.indexOf(this.preferredCurves[i]) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} legendArr\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getSelectedMarkerFromLegend = /**\r\n     * @private\r\n     * @param {?} legendArr\r\n     * @return {?}\r\n     */\r\n    function (legendArr) {\r\n        /** @type {?} */\r\n        var data = new Array();\r\n        if (this.milestoneData) {\r\n            if (this.milestoneData.markers) {\r\n                data = this.milestoneData.markers.filter((/**\r\n                 * @param {?} elm\r\n                 * @return {?}\r\n                 */\r\n                function (elm) { return legendArr.indexOf(elm.id) > -1; }));\r\n            }\r\n        }\r\n        return data;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.clearMileStoneShapes = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.targetMileStoneX = [];\r\n        this.targetMileStoneY = [];\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.clearMarkerShapes = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.markerPlots = [];\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.plotOnlyTodayDateMilestone = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.markerPlots = __spread(this.todaysDateMilestone.markers);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.plotMarkers = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this.preferredCurves) {\r\n            if (this.preferredCurves.indexOf(this.markerKey) < 0 && this.preferredCurves.indexOf('today') < 0) {\r\n                this.clearMarkerShapes();\r\n                return;\r\n            }\r\n            else if (this.preferredCurves.indexOf(this.markerKey) < 0 && this.preferredCurves.indexOf('today') > -1) {\r\n                this.plotOnlyTodayDateMilestone();\r\n                return;\r\n            }\r\n        }\r\n        if (this.preferredCurves) {\r\n            this.markers = this.getSelectedMarkerFromLegend(this.preferredCurves);\r\n        }\r\n        this.markerPlots = [];\r\n        if (this.markers && this.markers.length > 0) {\r\n            this.markers.filter((/**\r\n             * @param {?} m\r\n             * @return {?}\r\n             */\r\n            function (m) { return new Date(m.date) >= new Date(_this.minValue) && new Date(m.date) <= new Date(_this.maxValue); })).forEach((/**\r\n             * @param {?} element\r\n             * @return {?}\r\n             */\r\n            function (element) {\r\n                if (!_this.milestonesForCopyOnly[element.name]) {\r\n                    /** @type {?} */\r\n                    var color = _this.centerColor.filter((/**\r\n                     * @param {?} m\r\n                     * @return {?}\r\n                     */\r\n                    function (m) { return m.name === element.code; }));\r\n                    if (color) {\r\n                        element.color = color[0].value;\r\n                    }\r\n                    element.scaleX = _this.xScaleLine(new Date(element.date));\r\n                    if (element.name === '25%' || element.name === '50%' || element.name === '90%') {\r\n                        element.scaleX = 0;\r\n                        element.scaleY = _this.ySiteScaleLine(element.value);\r\n                    }\r\n                    else {\r\n                        element.scaleY = 0;\r\n                    }\r\n                    _this.markerPlots.push(new TargetMilestone(element.name, element.date, element.description, element.scaleX, element.scaleY, element.value));\r\n                }\r\n            }));\r\n            this.withoutDateMarkerPlots = [];\r\n            this.markers.filter((/**\r\n             * @param {?} m\r\n             * @return {?}\r\n             */\r\n            function (m) { return m.name === _this.tempPlannedSite || m.name === _this.tempPlannedScreening || m.name === _this.tempMaximumRandomization\r\n                || m.name === _this.tempMaximumScreening; })).forEach((/**\r\n             * @param {?} element\r\n             * @return {?}\r\n             */\r\n            function (element) {\r\n                if (element.axis === 'subject') {\r\n                    if (_this.yScaleLine.domain()[1] < element.value) {\r\n                        element.scaleY = 0;\r\n                    }\r\n                    else {\r\n                        element.scaleY = _this.yScaleLine(element.value);\r\n                    }\r\n                    element.scaleX = _this.dims.width + 1;\r\n                }\r\n                else if (element.axis === 'site') {\r\n                    if (_this.ySiteScaleLine.domain()[1] < element.value) {\r\n                        element.scaleY = 0;\r\n                    }\r\n                    else {\r\n                        element.scaleY = _this.ySiteScaleLine(element.value);\r\n                    }\r\n                    element.scaleX = 0;\r\n                }\r\n                // element.name = element.name.replace(/_/g, ' ');\r\n                _this.withoutDateMarkerPlots.push(new TargetMilestone(element.name, ' ', element.description, element.scaleX, element.scaleY, element.value));\r\n            }));\r\n            if (this.preferredCurves.indexOf('today') > -1) {\r\n                this.markerPlots = __spread(this.withoutDateMarkerPlots, this.todaysDateMilestone.markers, this.markerPlots);\r\n            }\r\n            else {\r\n                this.markerPlots = __spread(this.withoutDateMarkerPlots, this.markerPlots);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.isMileStoneSelected = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.preferredCurves) {\r\n            if (this.preferredCurves.indexOf(this.milestoneKey) > 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.plotMilestones = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var mileStnData = new Array();\r\n        if (this.milestoneData && this.milestoneData.targetMileStone) {\r\n            mileStnData = this.milestoneData.targetMileStone;\r\n        }\r\n        if (!this.isMileStoneSelected()) {\r\n            this.clearMileStoneShapes();\r\n            return;\r\n        }\r\n        this.targetMileStoneX = [];\r\n        this.targetMileStoneY = [];\r\n        if (mileStnData) {\r\n            mileStnData.filter((/**\r\n             * @param {?} m\r\n             * @return {?}\r\n             */\r\n            function (m) { return m.axis === 'date' && new Date(m.date) >= new Date(_this.minValue) && new Date(m.date) <= new Date(_this.maxValue); })).forEach((/**\r\n             * @param {?} element\r\n             * @return {?}\r\n             */\r\n            function (element) {\r\n                _this.targetMileStoneX.push(new TargetMilestone(element.name, element.date, element.description, _this.xScaleLine(new Date(element.date)), 0, -1));\r\n            }));\r\n            this.targetMileStoneX.sort((/**\r\n             * @param {?} a\r\n             * @param {?} b\r\n             * @return {?}\r\n             */\r\n            function (a, b) {\r\n                return new Date(a.data).getTime() - new Date(b.data).getTime();\r\n            }));\r\n            mileStnData.filter((/**\r\n             * @param {?} m\r\n             * @return {?}\r\n             */\r\n            function (m) { return m.axis === 'subject' && m.value >= _this.yDomainLine[0] && m.value <= _this.yDomainLine[1]; })).forEach((/**\r\n             * @param {?} element\r\n             * @return {?}\r\n             */\r\n            function (element) {\r\n                _this.targetMileStoneY.push(new TargetMilestone(element.description, element.value, element.description, _this.dims.width - 40, _this.yScaleLine(element.value), element.value));\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} name\r\n     * @param {?} desc\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getMileStoneRTTooltipData = /**\r\n     * @param {?} name\r\n     * @param {?} desc\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (name, desc, value) {\r\n        /** @type {?} */\r\n        var result = desc + '\\n ' + value;\r\n        return result;\r\n    };\r\n    /**\r\n     * @param {?} name\r\n     * @param {?} desc\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getMileStoneTooltipData = /**\r\n     * @param {?} name\r\n     * @param {?} desc\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (name, desc, date) {\r\n        return desc + '\\n' + ' (' + moment$4(date).format(this.dateFormat) + ')';\r\n    };\r\n    /**\r\n     * @param {?} name\r\n     * @param {?} desc\r\n     * @param {?} date\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getMarkerTooltipData = /**\r\n     * @param {?} name\r\n     * @param {?} desc\r\n     * @param {?} date\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (name, desc, date, value) {\r\n        return desc + '\\n\\n' + ' (' + moment$4(date).format(this.dateFormat) + ')';\r\n    };\r\n    /**\r\n     * @param {?} desc\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getTargetLineTooltipData = /**\r\n     * @param {?} desc\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (desc, value) {\r\n        return desc + ' (' + value + ')';\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.onActivateDeactivate = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        console.log('in onActivateDeactivate');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getContainerDims = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var width;\r\n        /** @type {?} */\r\n        var height;\r\n        /** @type {?} */\r\n        var hostElem = this.chartElement.nativeElement;\r\n        if (hostElem.parentNode !== null) { // Get the container dimensions\r\n            // Get the container dimensions\r\n            /** @type {?} */\r\n            var dims = hostElem.parentNode.getBoundingClientRect();\r\n            width = dims.width;\r\n            height = dims.height;\r\n        }\r\n        if (width && height) {\r\n            return { width: width, height: height };\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.collisionDetectionNew = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.allMilestones = [];\r\n        this.allMilestones = __spread(this.targetMileStoneY, this.targetMileStoneX, this.markerPlots);\r\n        this.allMilestones.sort((/**\r\n         * @param {?} a\r\n         * @param {?} b\r\n         * @return {?}\r\n         */\r\n        function (a, b) {\r\n            // return b.seedNumber() - a.seedNumber();\r\n            if (b.seedNumber() - a.seedNumber() > 0) {\r\n                return 1;\r\n            }\r\n            else if (b.seedNumber() === a.seedNumber() && b.seedNumber() > 0 && b.value > a.value) {\r\n                return 1;\r\n            }\r\n            else if (b.seedNumber() === a.seedNumber() && b.seedNumber() > 0 && b.value < a.value) {\r\n                return -1;\r\n            }\r\n            else if (b.seedNumber() !== a.seedNumber() && b.seedNumber() > 0) {\r\n                return 1;\r\n            }\r\n            else if (b.seedNumber() !== a.seedNumber() && a.seedNumber() > 0) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }));\r\n        for (var i = 0; i < this.allMilestones.length; i++) {\r\n            this.allMilestones[i].x = this.allMilestones[i].scaleX - this.collisionSafety / 2;\r\n            this.allMilestones[i].y = this.allMilestones[i].scaleY;\r\n            if (this.allMilestones[i].scaleX < this.collisionSafety / 2) {\r\n                this.allMilestones[i].x = 0;\r\n            }\r\n            else if (this.allMilestones[i].scaleX > this.dims.width - this.collisionSafety / 2) {\r\n                this.allMilestones[i].x = this.dims.width - this.collisionSafety;\r\n            }\r\n            if (!this.allMilestones[i].isTargetLine() && !this.allMilestones[i].isTargetRandomization()\r\n                && !this.allMilestones[i].isTargetScreening()) {\r\n                for (var j = 0; j < i; j++) {\r\n                    if ((this.allMilestones[j].isTargetLine() || this.allMilestones[j].isTargetRandomization()\r\n                        || this.allMilestones[j].isTargetScreening())\r\n                        && Math.abs(this.allMilestones[j].y - this.allMilestones[i].y) < this.colisionYfactor\r\n                        && Math.abs(this.allMilestones[j].x - this.allMilestones[i].x) < this.collisionSafety) {\r\n                        // potential infinite loop avoided by + 1\r\n                        this.allMilestones[i].y = this.allMilestones[j].y + this.colisionYfactor + 1;\r\n                        this.allMilestones[i].scaleY = this.allMilestones[i].y;\r\n                        j = 0;\r\n                    }\r\n                    else if (Math.abs(this.allMilestones[i].x - this.allMilestones[j].x) < this.collisionSafety\r\n                        && Math.abs(this.allMilestones[j].y - this.allMilestones[i].y) < this.colisionYfactor) {\r\n                        // potential infinite loop avoided by + 1\r\n                        this.allMilestones[i].y = this.allMilestones[j].y + this.colisionYfactor + 1;\r\n                        this.allMilestones[i].scaleY = this.allMilestones[i].y;\r\n                        j = 0;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (var j = 0; j < i; j++) {\r\n                    if (this.allMilestones[j].isTargetLine() && this.allMilestones[i].isTargetLine()\r\n                        && Math.abs(this.allMilestones[j].y - this.allMilestones[i].y) < this.colisionYfactor) {\r\n                        this.allMilestones[i].x = this.allMilestones[j].x + this.allMilestones[j].width();\r\n                    }\r\n                    else if (this.allMilestones[j].isTargetRandomization() && this.allMilestones[i].isTargetRandomization()\r\n                        && Math.abs(this.allMilestones[j].y - this.allMilestones[i].y) < this.colisionYfactor) {\r\n                        this.allMilestones[i].y = this.allMilestones[j].y - 10;\r\n                    }\r\n                    else if (this.allMilestones[j].isTargetScreening() && this.allMilestones[i].isTargetScreening()\r\n                        && Math.abs(this.allMilestones[j].y - this.allMilestones[i].y) < this.colisionYfactor) {\r\n                        this.allMilestones[i].y = this.allMilestones[j].y - 10;\r\n                    }\r\n                    else if (!this.allMilestones[j].isTargetLine() && !this.allMilestones[i].isTargetLine()\r\n                        && Math.abs(this.allMilestones[j].y - this.allMilestones[i].y) < this.colisionYfactor) {\r\n                        this.allMilestones[i].x = this.allMilestones[j].x - 5\r\n                            - this.allMilestones[i].width();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.plotAheadBehindData(this.allMilestones);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getXTMilestone = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.milestoneData && this.milestoneData.targetMileStone) {\r\n            /** @type {?} */\r\n            var xAxisArr = this.milestoneData.targetMileStone.filter((/**\r\n             * @param {?} m\r\n             * @return {?}\r\n             */\r\n            function (m) { return m.axis === 'date'; }));\r\n            return xAxisArr;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.getYSubTMilestone = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.milestoneData && this.milestoneData.targetMileStone) {\r\n            /** @type {?} */\r\n            var xAxisArr = this.milestoneData.targetMileStone.filter((/**\r\n             * @param {?} m\r\n             * @return {?}\r\n             */\r\n            function (m) { return m.axis === 'subject'; }));\r\n            return xAxisArr;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} tick\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.toInt = /**\r\n     * @param {?} tick\r\n     * @return {?}\r\n     */\r\n    function (tick) {\r\n        return parseInt(tick, 0);\r\n    };\r\n    /**\r\n     * @param {?} markersData\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.plotAheadBehindData = /**\r\n     * @param {?} markersData\r\n     * @return {?}\r\n     */\r\n    function (markersData) {\r\n        /** @type {?} */\r\n        var tempToday;\r\n        /** @type {?} */\r\n        var tempPlsr;\r\n        /** @type {?} */\r\n        var tempTlsr;\r\n        /** @type {?} */\r\n        var tempAheadBehindColor;\r\n        /** @type {?} */\r\n        var width;\r\n        /** @type {?} */\r\n        var tempAheadBehindObj = [];\r\n        markersData.filter((/**\r\n         * @param {?} m\r\n         * @return {?}\r\n         */\r\n        function (m) { return m.name === 'PLSR' || m.name === 'TLSR' || m.name === 'Today'; })).forEach((/**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        function (element) {\r\n            if (element.name === 'Today') {\r\n                tempToday = element.scaleX;\r\n            }\r\n            else if (element.name === 'PLSR') {\r\n                tempPlsr = element.scaleX;\r\n            }\r\n            else if (element.name === 'TLSR') {\r\n                tempTlsr = element.scaleX;\r\n            }\r\n        }));\r\n        if (tempPlsr && tempTlsr && this.preferredCurves.indexOf('aheadBehind') > -1) {\r\n            if ((tempPlsr - tempTlsr) > 0) {\r\n                tempAheadBehindColor = '#F6D7DB'; // behind-pink\r\n                width = tempPlsr - tempTlsr;\r\n            }\r\n            else {\r\n                tempAheadBehindColor = '#b9ccec'; // ahead-blue\r\n                width = tempTlsr - tempPlsr;\r\n            }\r\n            tempAheadBehindObj.push({\r\n                color: tempAheadBehindColor,\r\n                x: (tempPlsr - tempTlsr) > 0 ? tempTlsr : tempPlsr,\r\n                y: 0,\r\n                width: width,\r\n                height: this.dims.height\r\n            });\r\n        }\r\n        if (tempToday && this.preferredCurves.indexOf('today') > -1\r\n            && (this.xScaleLine(this.xDomainLine[1]) - tempToday) > 0) {\r\n            tempAheadBehindObj.push({\r\n                color: '#e69e26',\r\n                x: tempToday,\r\n                y: 0,\r\n                width: this.xScaleLine(this.xDomainLine[1]) - tempToday,\r\n                height: this.dims.height\r\n            });\r\n        }\r\n        this.aheadBehindData = tempAheadBehindObj;\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartComponent.prototype.collectPins = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        /*for (const prop in $event) {\r\n          if (this.singlePinnedPoints !== undefined) {\r\n            this.singlePinnedPoints[prop] = $event[prop];\r\n          }\r\n        }*/\r\n        this.singlePinnedPoints = $event;\r\n    };\r\n    CTOSPlanChartComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-plan-chart',\r\n                    template: \"<ngx-charts-chart\\r\\n [view]=\\\"view\\\" *ngIf=\\\"activeTooltipArea.length > 0\\\">\\r\\n  <svg:g\\r\\n  [attr.transform]=\\\"transform\\\" \\r\\n  class=\\\"line-chart chart \\\">\\r\\n    <svg:g ngx-charts-x-axis \\r\\n    [xScale]=\\\"xScaleLine\\\" \\r\\n    [dims]=\\\"dims\\\" \\r\\n    [showGridLines]=\\\"showGridLines\\\" \\r\\n    [showLabel]=\\\"showXAxisLabel\\\">\\r\\n    </svg:g>\\r\\n    <svg:g ngx-charts-y-axis \\r\\n    [yScale]=\\\"yScaleLine\\\" \\r\\n    [dims]=\\\"dims\\\" \\r\\n    [yOrient]=\\\"yOrientRight\\\" \\r\\n    [showLabel]=\\\"showYAxisLabel\\\"\\r\\n      [labelText]=\\\"yAxisLabel\\\">\\r\\n    </svg:g>\\r\\n    <svg:g ngx-charts-y-axis \\r\\n    [yScale]=\\\"ySiteScaleLine\\\"\\r\\n    [tickFormatting]=\\\"toInt\\\"\\r\\n    [dims]=\\\"dims\\\" \\r\\n    [yOrient]=\\\"yOrientLeft\\\" \\r\\n      [showLabel]=\\\"showYAxisLabel\\\" \\r\\n      [labelText]=\\\"y2AxisLabel\\\">\\r\\n    </svg:g>\\r\\n    \\r\\n    <svg:g [ngClass]=\\\"type\\\">\\r\\n\\r\\n    </svg:g>\\r\\n\\r\\n    <svg:g>\\r\\n      <g *ngFor=\\\"let item of aheadBehindData\\\">\\r\\n        <rect [attr.x] = \\\"item.x\\\" [attr.y] = \\\"item.y\\\" [attr.width] = \\\"item.width\\\" [attr.height] = \\\"item.height\\\"\\r\\n        [attr.fill] = \\\"item.color\\\" opacity=\\\"0.2\\\" stroke-width=\\\"0.5px\\\" />\\r\\n      </g>\\r\\n    </svg:g>\\r\\n\\r\\n    <svg:g>\\r\\n      <svg:g *ngFor=\\\"let series of chartData\\\">\\r\\n        <svg:g extended-ngx-charts-line-series \\r\\n        [xScale]=\\\"xScaleLine\\\" \\r\\n        [yScale]=\\\"yScaleLine\\\" \\r\\n        [colors]=\\\"colors\\\" \\r\\n        [data]=\\\"series\\\" \\r\\n        [scaleType]=\\\"scaleType\\\"\\r\\n          [curve]=\\\"curve\\\" />\\r\\n      </svg:g>\\r\\n      <svg:g *ngFor=\\\"let series of centerInitData\\\">\\r\\n        <svg:g extended-ngx-charts-line-series \\r\\n        [xScale]=\\\"xScaleLine\\\" \\r\\n        [yScale]=\\\"ySiteScaleLine\\\" \\r\\n        [colors]=\\\"colors\\\" \\r\\n        [data]=\\\"series\\\" \\r\\n        [scaleType]=\\\"scaleType\\\"\\r\\n          [curve]=\\\"curve\\\" />\\r\\n      </svg:g>\\r\\n      <svg:g app-extended-ngx-tooltip-area\\r\\n      [sizeChanged] = \\\"sizeChanged\\\"\\r\\n      [dataChanged] = \\\"dataChanged\\\"\\r\\n      [dims]=\\\"dims\\\" \\r\\n      [xSet]=\\\"xSet\\\" \\r\\n      [xScale]=\\\"xScaleLine\\\" \\r\\n      [results]=\\\"activeTooltipArea\\\" \\r\\n      [colors]=\\\"colors\\\"\\r\\n        (hover)=\\\"updateHoveredVertical($event)\\\" />\\r\\n      <svg:g *ngFor=\\\"let series of chartData\\\">\\r\\n        <svg:g app-extended-ngx-charts-circle-series\\r\\n        [pinnedObject] = \\\"pinnedObjects\\\"\\r\\n        [sizeChanged] = \\\"sizeChanged\\\"\\r\\n        [dataChanged] = \\\"dataChanged\\\"\\r\\n        [xScale]=\\\"xScaleLine\\\" \\r\\n        [yScale]=\\\"yScaleLine\\\" \\r\\n        [colors]=\\\"colors\\\" \\r\\n        [data]=\\\"series\\\" \\r\\n        [scaleType]=\\\"scaleType\\\"\\r\\n          [visibleValue]=\\\"hoveredVertical\\\" \\r\\n          [activeEntries]=\\\"activeEntries\\\" (activate)=\\\"onActivate($event)\\\" (deactivate)=\\\"onDeactivate($event)\\\"\\r\\n          (collectPins)=\\\"collectPins($event)\\\"\\r\\n        />\\r\\n      </svg:g>\\r\\n      <svg:g *ngFor=\\\"let series of centerInitData\\\">\\r\\n        <svg:g app-extended-ngx-charts-circle-series\\r\\n        [pinnedObject] = \\\"pinnedObjects\\\"\\r\\n        [sizeChanged] = \\\"sizeChanged\\\"\\r\\n        [dataChanged] = \\\"dataChanged\\\"\\r\\n        [xScale]=\\\"xScaleLine\\\" \\r\\n        [yScale]=\\\"ySiteScaleLine\\\" \\r\\n        [colors]=\\\"colors\\\" \\r\\n        [data]=\\\"series\\\" \\r\\n        [scaleType]=\\\"scaleType\\\"\\r\\n          [visibleValue]=\\\"hoveredVertical\\\" \\r\\n          [activeEntries]=\\\"activeEntries\\\" (activate)=\\\"onActivate($event)\\\" (deactivate)=\\\"onDeactivate($event)\\\" \\r\\n          (collectPins)=\\\"collectPins($event)\\\"\\r\\n        />\\r\\n      </svg:g>\\r\\n    </svg:g>\\r\\n\\r\\n    <svg:g class='milestones'>\\r\\n        <g class=\\\"milestone-x\\\" *ngFor=\\\"let milestone of targetMileStoneX; let i = index\\\">\\r\\n          <g>\\r\\n            <rect style=\\\"cursor:pointer\\\" [attr.x]=\\\"(milestone.x)\\\" [attr.y]=\\\"(milestone.y - 15)\\\" width=\\\"110\\\" height=\\\"15\\\" \\r\\n              [attr.rx] = \\\"3\\\" [attr.ry] = \\\"3\\\"\\r\\n              [attr.fill]=\\\"milestone.color()\\\" opacity=\\\"0.2\\\" stroke-width=\\\"0.5px\\\" [matTooltipClass]=\\\"'ctos-text-centered-tooltip'\\\"\\r\\n              [matTooltip]=\\\"getMileStoneTooltipData(milestone.name, milestone.description,milestone.data)\\\"\\r\\n              />\\r\\n            <text\\r\\n              fill=\\\"black\\\" stroke-width=\\\".01px\\\"\\r\\n              [attr.x]=\\\"(milestone.x + 5)\\\"\\r\\n              [attr.y]=\\\"(milestone.y - 3)\\\"\\r\\n              style=\\\"pointer-events: none;font-size: 9px;\\\">{{milestone.displayText}}\\r\\n            </text>\\r\\n            <line [attr.x1]=\\\"milestone.scaleX\\\" [attr.y1]=\\\"milestone.scaleY\\\" \\r\\n              [attr.x2]=\\\"milestone.scaleX\\\" [attr.y2]=\\\"this.dims.height\\\" [attr.stroke]=\\\"milestone.color()\\\" stroke-width=\\\"0.5\\\"  />\\r\\n          </g>\\r\\n        </g>\\r\\n  \\r\\n       <g class=\\\"milestone-y\\\"\\r\\n           *ngFor=\\\"let milestone of targetMileStoneY; let i = index\\\">\\r\\n            <text\\r\\n              fill=\\\"black\\\" stroke=\\\"white\\\" stroke-width=\\\".01px\\\"\\r\\n              [attr.x]=\\\"(milestone.x)\\\"\\r\\n              [attr.y]=\\\"(milestone.y - 3)\\\"\\r\\n              style=\\\"font-size: 9px;\\\">{{milestone.description}} ({{milestone.data}})\\r\\n              <title [ngClass] = \\\"'ctos-text-centered-tooltip'\\\">{{milestone.description}} ({{milestone.data}})</title>\\r\\n            </text>\\r\\n            <line [attr.x1]=\\\"0\\\" [attr.y1]=\\\"milestone.scaleY\\\" [attr.x2]=\\\"this.dims.width\\\" [attr.y2]=\\\"milestone.scaleY\\\" stroke=\\\"gray\\\" stroke-width=\\\"0.5\\\"  />\\r\\n         </g>\\r\\n    </svg:g>\\r\\n\\r\\n    <svg:g class=\\\"markers\\\">\\r\\n      <g class=\\\"marker\\\" \\r\\n        style=\\\"cursor:pointer\\\" \\r\\n        *ngFor=\\\"let markerPlot of markerPlots; let i = index\\\">\\r\\n        <rect *ngIf=\\\"!markerPlot.isTargetLine() && !markerPlot.isTargetRandomization()  && !markerPlot.isTargetScreening()\\\" [attr.x]=\\\"markerPlot.x\\\" [attr.y]=\\\"(markerPlot.scaleY - 15)\\\" width=\\\"110\\\" height=\\\"15\\\" \\r\\n          [attr.rx] = \\\"3\\\" [attr.ry] = \\\"3\\\"\\r\\n          [attr.fill]=\\\"markerPlot.color()\\\" opacity=\\\"0.2\\\" stroke-width=\\\"0.5px\\\" [matTooltipClass]=\\\"'ctos-text-centered-tooltip'\\\"\\r\\n          [matTooltip]=\\\"getMarkerTooltipData(markerPlot.name, markerPlot.description,markerPlot.data,markerPlot.value)\\\"/>\\r\\n        <text *ngIf=\\\"!markerPlot.isTargetLine() && !markerPlot.isTargetRandomization()  && !markerPlot.isTargetScreening()\\\"\\r\\n          fill=\\\"black\\\" stroke-width=\\\".01px\\\"\\r\\n          [attr.x]=\\\"(markerPlot.x + 5)\\\"\\r\\n          [attr.y]=\\\"(markerPlot.scaleY - 3)\\\"\\r\\n          style=\\\"pointer-events: none;font-size: 9px;\\\">{{markerPlot.displayText}}\\r\\n        </text>\\r\\n        <line *ngIf=\\\"!markerPlot.isTargetLine() && !markerPlot.isTargetRandomization()  && !markerPlot.isTargetScreening()\\\" [attr.x1]=\\\"markerPlot.scaleX\\\" [attr.y1]=\\\"markerPlot.scaleY\\\" \\r\\n        [attr.x2]=\\\"markerPlot.scaleX\\\" [attr.y2]=\\\"this.dims.height\\\" [attr.stroke]=\\\"markerPlot.color()\\\" stroke-width=\\\"0.5\\\"  />\\r\\n        \\r\\n        <!--Target line on Site axis-->\\r\\n        <text *ngIf=\\\"markerPlot.isTargetLine() && !markerPlot.isTargetRandomization() && !markerPlot.isTargetScreening()\\\"\\r\\n          fill=\\\"black\\\" stroke=\\\"white\\\" stroke-width=\\\".01px\\\"\\r\\n          [attr.x]=\\\"(markerPlot.x)\\\"\\r\\n          [attr.y]=\\\"(markerPlot.y - 3)\\\"\\r\\n          style=\\\"font-size: 9px;\\\">{{markerPlot.name}} ({{markerPlot.value}})\\r\\n          <title [ngClass] = \\\"'ctos-text-centered-tooltip'\\\">{{markerPlot.description}} ({{markerPlot.value}})</title>\\r\\n        </text>\\r\\n        <line *ngIf=\\\"markerPlot.isTargetLine() && !markerPlot.isTargetRandomization()  && !markerPlot.isTargetScreening()\\\" [attr.x1]=\\\"0\\\" [attr.y1]=\\\"markerPlot.scaleY\\\" [attr.x2]=\\\"this.dims.width\\\" [attr.y2]=\\\"markerPlot.scaleY\\\" stroke=\\\"gray\\\" stroke-width=\\\"0.5\\\"  />\\r\\n\\r\\n        <!--Target line on subject axis-->\\r\\n        <text *ngIf=\\\"(markerPlot.isTargetRandomization() || markerPlot.isTargetScreening()) && !markerPlot.isTargetLine()\\\"\\r\\n          fill=\\\"black\\\" stroke=\\\"white\\\" stroke-width=\\\".01px\\\"\\r\\n          [attr.x]=\\\"(markerPlot.x)\\\"\\r\\n          [attr.y]=\\\"(markerPlot.y - 3)\\\"\\r\\n          style=\\\"font-size: 9px;\\\">{{markerPlot.name}} ({{markerPlot.value}})\\r\\n          <title [ngClass] = \\\"'ctos-text-centered-tooltip'\\\">{{markerPlot.description}} ({{markerPlot.value}})</title>\\r\\n        </text>\\r\\n        <line *ngIf=\\\"(markerPlot.isTargetRandomization() || markerPlot.isTargetScreening()) && !markerPlot.isTargetLine()\\\" [attr.x1]=\\\"0\\\" [attr.y1]=\\\"markerPlot.scaleY\\\"\\r\\n         [attr.x2]=\\\"this.dims.width\\\" [attr.y2]=\\\"markerPlot.scaleY\\\" stroke=\\\"green\\\" stroke-width=\\\"0.5\\\"/>\\r\\n      </g>\\r\\n    </svg:g>\\r\\n  </svg:g>\\r\\n</ngx-charts-chart>\\r\\n<ng5-slider [ngStyle]=\\\"{'top': sliderTop+10 +'px'}\\\" *ngIf='activeTooltipArea.length > 0 && graphRendered' \\r\\n  [manualRefresh]=\\\"manualRefresh\\\" \\r\\n  [(value)]=\\\"minValue\\\" \\r\\n  [(highValue)]=\\\"maxValue\\\" \\r\\n  [options]=\\\"options\\\"\\r\\n  (userChangeEnd)='onSlideValueChange()'></ng5-slider>\\r\\n<div *ngIf='activeTooltipArea.length == 0' style='text-align: center;width:100%;position: relative; top: 100px'>\\r\\n  No Data to display\\r\\n</div>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    styles: [\".ngx-charts{float:right;overflow:visible}.ngx-charts .arc,.ngx-charts .bar,.ngx-charts .circle{cursor:pointer}.ngx-charts .data-circle{stroke-width:2px;stroke:#9e54b0;fill:#fff}.ngx-charts .perc-text{font-size:9px;font-weight:700}.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .card.active,.ngx-charts .card:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover{opacity:.8;-webkit-transition:opacity .1s ease-in-out;transition:opacity .1s ease-in-out}.ngx-charts .arc:focus,.ngx-charts .bar:focus,.ngx-charts .card:focus,.ngx-charts .cell:focus,.ngx-charts g:focus{outline:0}.ngx-charts g .line-series>path.line{stroke-width:2px}.ngx-charts .area-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .line-series.inactive{-webkit-transition:opacity .1s ease-in-out;transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:rgba(0,0,0,.05)}#isMilesonesVisible{margin:7px}.card{border:none;box-shadow:0 4px 20px rgba(0,0,0,.5);display:inline-block}.areaGenerator{opacity:.35}.zoom{cursor:move;fill:none;pointer-events:all}.ng5-slider{margin:0!important;left:20px;width:90%!important;top:100px}.ng5-slider-expanded{width:85%!important}.ng5-slider .ng5-slider-bubble{font-size:11px!important}.ng5-slider .ng5-slider-pointer{width:18px!important;height:18px!important;top:-7px!important;z-index:1!important}.ng5-slider .ng5-slider-pointer:after{top:3px!important;left:3px!important;margin:2px}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    CTOSPlanChartComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: CTOSPlanChartLegendService },\r\n        { type: Renderer2 }\r\n    ]; };\r\n    CTOSPlanChartComponent.propDecorators = {\r\n        combinedData: [{ type: Input }],\r\n        width: [{ type: Input }],\r\n        height: [{ type: Input }],\r\n        centerColor: [{ type: Input }],\r\n        milestoneData: [{ type: Input }],\r\n        refresh: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        axisLabels: [{ type: Input }],\r\n        activate: [{ type: Output }],\r\n        deactivate: [{ type: Output }],\r\n        hideCircles: [{ type: HostListener, args: ['mouseleave',] }]\r\n    };\r\n    return CTOSPlanChartComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.chartData;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.centerInitData;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.activeTooltipArea;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.combinedData;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.width;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.height;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.centerColor;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.milestoneData;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.refresh;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.type;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.axisLabels;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.activate;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.deactivate;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.roundDomains;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.schemeType;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.curve;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.activeEntries;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.preferredCurves;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.xScaleLine;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.yScaleLine;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.ySiteScaleLine;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.xDomainLine;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.yDomainLine;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.ySiteDomainLine;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.colors;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.yOrientLeft;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.yOrientRight;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.xSet;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.seriesDomain;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.combinedSeries;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.transform;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.showGridLines;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.hoveredVertical;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.margin;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.view;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.showXAxisLabel;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.xAxisLabel;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.showYAxisLabel;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.yAxisLabel;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.y2AxisLabel;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.dims;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.scaleType;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.xAxisHeight;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.yAxisWidth;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.minValue;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.maxValue;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.dateRange;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.options;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.manualRefresh;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.targetMileStoneX;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.targetMileStoneY;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.dateFormat;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.collisionSafety;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.colisionYfactor;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.markers;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.markerPlots;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.markerRadius;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.milestoneKey;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.markerKey;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.widthMargin;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.heightMargin;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.sliderTop;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.graphRendered;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.allMilestones;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.milestonesForCopyOnly;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.sizeChanged;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.dataChanged;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.tempPlannedSite;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.tempPlannedScreening;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.tempMaximumScreening;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.tempMaximumRandomization;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.aheadBehindData;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.todaysDateMilestone;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.singlePinnedPoints;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.pinnedObjects;\r\n    /** @type {?} */\r\n    CTOSPlanChartComponent.prototype.withoutDateMarkerPlots;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    CTOSPlanChartComponent.prototype.chartElement;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CTOSPlanChartComponent.prototype.lgdServ;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CTOSPlanChartComponent.prototype.renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart-legend/ctos-plan-chart-legend.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CTOSPlanChartLegendComponent = /** @class */ (function () {\r\n    function CTOSPlanChartLegendComponent(lgdServ) {\r\n        this.lgdServ = lgdServ;\r\n        this.approved = ['AppPSR', 'AppPSI', 'AppPSS',\r\n            'ActPSR', 'ActSI', 'ActSS', 'ActSF', 'ActDO',\r\n            'UpdPrSI', 'UpdPrSR', 'UpdPrSS',\r\n            'Act', 'Tar', 'Mil'\r\n        ];\r\n        this.adjustment = ['AdjPSR', 'AdjPSI', 'AdjPSS',\r\n            'ActPSR', 'ActSI', 'ActSS', 'ActSF', 'ActDO',\r\n            'UpdPrSI', 'UpdPrSR', 'UpdPrSS',\r\n            'Act', 'Tar', 'Mil'\r\n        ];\r\n        this.previous = ['AppPSR', 'AppPSI', 'AppPSS',\r\n            'ActPSR', 'ActSI', 'ActSS', 'ActSF', 'ActDO',\r\n            'UpdPrSI', 'UpdPrSR', 'UpdPrSS',\r\n            'Act', 'Tar', 'Mil'\r\n        ];\r\n        this.base = ['BasPSR', 'BasPSI', 'BasPSS',\r\n            'ActPSR', 'ActSI', 'ActSS', 'ActSF', 'ActDO',\r\n            'UpdPrSI', 'UpdPrSR', 'UpdPrSS',\r\n            'Act', 'Tar', 'Mil'\r\n        ];\r\n        this.ExpandCollapse = new Subject();\r\n        this.TriggerChange = new Subject();\r\n        this.isExpand = false;\r\n        this.pressed = false;\r\n        this.presentCurves = {};\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var forceEmit = false;\r\n        if (changes && changes.preference) {\r\n            this.lgdServ.selectedCurves = this.preference;\r\n        }\r\n        this.lgdServ.isDirty = false;\r\n        this.presentCurves = {};\r\n        if (this.lgdServ.selectedCurves && this.lgdServ.selectedCurves.length > 0 && this.chartData instanceof Array) {\r\n            this.chartData.forEach((/**\r\n             * @param {?} element\r\n             * @return {?}\r\n             */\r\n            function (element) {\r\n                _this.presentCurves[element.code] = true;\r\n            }));\r\n            this.addOtherCurves();\r\n            // to take care of default updated projection checking if present\r\n            /*if (this.presentCurves['UpdPr'])  {\r\n                this.lgdServ.selectedCurves = [...this.lgdServ.selectedCurves, ...['UpdPrSI', 'UpdPrSR', 'UpdPrSS', 'UpdPr']];\r\n            }*/\r\n            this.groups.forEach((/**\r\n             * @param {?} element\r\n             * @return {?}\r\n             */\r\n            function (element) {\r\n                element.value.forEach((/**\r\n                 * @param {?} item\r\n                 * @return {?}\r\n                 */\r\n                function (item) {\r\n                    element.checked = false;\r\n                    if (_this.presentCurves[item.value] && !item.hasOwnProperty('dependOn')) {\r\n                        item['disabled'] = false;\r\n                        item['checked'] = (_this.lgdServ.selectedCurves.indexOf(item.value) > -1) ? true : false;\r\n                    }\r\n                    else if (_this.presentCurves[item.value] && item.hasOwnProperty('dependOn')) {\r\n                        if (_this.lgdServ.selectedCurves.indexOf(item.dependOn) > -1\r\n                            && _this.lgdServ.selectedCurves.indexOf(item.value) < 0) {\r\n                            _this.lgdServ.selectedCurves.push(item.value);\r\n                        }\r\n                        item['disabled'] = false;\r\n                        item['checked'] = _this.lgdServ.selectedCurves.indexOf(item.value) > -1 ? true : false;\r\n                    }\r\n                    else if (!_this.presentCurves[item.value] && item.hasOwnProperty('dependOn')) {\r\n                        /** @type {?} */\r\n                        var idx = _this.lgdServ.selectedCurves.indexOf(item.value);\r\n                        if (idx > -1) {\r\n                            _this.lgdServ.selectedCurves.splice(idx, 1);\r\n                        }\r\n                        item['disabled'] = true;\r\n                        item['checked'] = false;\r\n                    }\r\n                    else {\r\n                        item['disabled'] = true;\r\n                        item['checked'] = false;\r\n                    }\r\n                }));\r\n            }));\r\n            /*if (changes && changes.chartData && changes.chartData.currentValue.length !== changes.chartData.previousValue.length) {\r\n                forceEmit = true;\r\n            }*/\r\n            this.TriggerChange.next(forceEmit);\r\n        }\r\n        else if (this.lgdServ.selectedCurves.length === 0) {\r\n            /** @type {?} */\r\n            var profileArr_1 = [];\r\n            this.presentCurves = {};\r\n            // this.profile = 'Approved';\r\n            switch (this.profile.type) {\r\n                case 'Adjustment': {\r\n                    profileArr_1 = this.adjustment;\r\n                    break;\r\n                }\r\n                case 'Approved': {\r\n                    profileArr_1 = this.approved;\r\n                    break;\r\n                }\r\n                case 'PreviouslyApproved': {\r\n                    profileArr_1 = this.previous;\r\n                    break;\r\n                }\r\n                case 'Base': {\r\n                    profileArr_1 = this.base;\r\n                    break;\r\n                }\r\n            }\r\n            if (profileArr_1.length > 0) {\r\n                // check for present curves and profile to render the legend\r\n                this.lgdServ.selectedCurves = profileArr_1;\r\n                this.preference = profileArr_1;\r\n                if (this.chartData instanceof Array && this.groups) {\r\n                    this.chartData.forEach((/**\r\n                     * @param {?} element\r\n                     * @return {?}\r\n                     */\r\n                    function (element) {\r\n                        _this.presentCurves[element.code] = true;\r\n                    }));\r\n                    this.addOtherCurves();\r\n                    this.groups.forEach((/**\r\n                     * @param {?} element\r\n                     * @return {?}\r\n                     */\r\n                    function (element) {\r\n                        element.value.forEach((/**\r\n                         * @param {?} item\r\n                         * @return {?}\r\n                         */\r\n                        function (item) {\r\n                            element.checked = false;\r\n                            if (_this.presentCurves[item.value]) {\r\n                                item['disabled'] = false;\r\n                                item['checked'] = (profileArr_1.indexOf(item.value) > -1) ? true : false;\r\n                            }\r\n                            else {\r\n                                item['disabled'] = true;\r\n                                item['checked'] = false;\r\n                            }\r\n                        }));\r\n                    }));\r\n                    this.TriggerChange.next(forceEmit);\r\n                }\r\n            }\r\n        }\r\n        this.lgdServ.planKey = this.profile.key;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendComponent.prototype.xpandAllLegend = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.pressed = !this.pressed;\r\n        this.ExpandCollapse.next(this.pressed);\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendComponent.prototype.changePref = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        // this.lgdServ.selectedCurves = $event;\r\n        this.lgdServ.setLegendSelection(this.preference);\r\n        if (this.preference) {\r\n            this.lgdServ.setLegendPref(this.preference);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendComponent.prototype.OnLegendState = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        this.isExpand = $event;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendComponent.prototype.addOtherCurves = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // logic to find presence of conf boundaries, line types and extend Proj checkbox\r\n        /** @type {?} */\r\n        var states = ['App', 'Bas', 'Act', 'Adj', 'CurPr', 'UpdPr', 'FroPr', 'CBApp', 'CBBas', 'CBCurPr', 'CBAdj', 'EP', 'Ext'];\r\n        for (var index = 0; index < states.length; index++) {\r\n            for (var key in this.presentCurves) {\r\n                if (key.indexOf(states[index]) > -1) {\r\n                    this.presentCurves[states[index]] = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.presentCurves['Tar'] = true;\r\n        this.presentCurves['Mil'] = true;\r\n        this.presentCurves['today'] = true;\r\n        this.presentCurves['aheadBehind'] = true;\r\n    };\r\n    CTOSPlanChartLegendComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-plan-chart-legend',\r\n                    template: \"<div id='legendHolder' class='legendholder'>\\r\\n    <button class='xpand' (click)='xpandAllLegend()'>{{!isExpand ? 'Expand Legend' : 'Collapse Legend'}}</button>\\r\\n    <!--ctos-so-plan-chart-legend-item (changeSelection)=\\\"changePref($event)\\\" *ngFor='let item of groups' [placeholder]='item.name' [data]='item.value' [id]=\\\"item.id\\\" [control]=\\\"legend\\\" [parentSubject]=\\\"parentSubject\\\"></ctos-so-plan-chart-legend-item-->\\r\\n    <ctos-so-custom-multiselect [ExpandCollapse]=\\\"ExpandCollapse\\\" [data]=\\\"groups\\\" (changeSelection)=\\\"changePref($event)\\\" [color]=\\\"color\\\" [trigger]='TriggerChange'\\r\\n        (LegendState)=\\\"OnLegendState($event)\\\"></ctos-so-custom-multiselect>\\r\\n</div>\",\r\n                    // styleUrls: ['./ctos-plan-chart-legend.component.scss'],\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    CTOSPlanChartLegendComponent.ctorParameters = function () { return [\r\n        { type: CTOSPlanChartLegendService }\r\n    ]; };\r\n    CTOSPlanChartLegendComponent.propDecorators = {\r\n        chartData: [{ type: Input }],\r\n        color: [{ type: Input }],\r\n        groups: [{ type: Input }],\r\n        profile: [{ type: Input }],\r\n        preference: [{ type: Input }]\r\n    };\r\n    return CTOSPlanChartLegendComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.approved;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.adjustment;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.previous;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.base;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.ExpandCollapse;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.TriggerChange;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.chartData;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.color;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.groups;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.profile;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.preference;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.isExpand;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.pressed;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendComponent.prototype.presentCurves;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CTOSPlanChartLegendComponent.prototype.lgdServ;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/pipes/ctos-date-custom-pipe.pipe.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n *  The following pipe checks if the element received is a number or a string.\r\n * @param value matches [^[0-9]{4}-[0-1][0-9]-[0-3][0-9]] then is applies angular pipe and returns the value\r\n * else if \\@param value is a number it returns the value as it is.\r\n */\r\nvar DateCustomPipe = /** @class */ (function () {\r\n    function DateCustomPipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    DateCustomPipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        if (!isNaN(value)) {\r\n            return value;\r\n        }\r\n        /** @type {?} */\r\n        var result = value.match('^[0-9]{4}-[0-1][0-9]-[0-3][0-9]');\r\n        if (result) {\r\n            /** @type {?} */\r\n            var pipe = new DatePipe('en-US');\r\n            return pipe.transform(value, 'dd-MMM-yyyy');\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    };\r\n    DateCustomPipe.decorators = [\r\n        { type: Pipe, args: [{ name: 'ctosDateCustomPipe' },] }\r\n    ];\r\n    return DateCustomPipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart-legend/ctos-plan-chart-legend-item.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CTOSPlanChartLegendItemComponent = /** @class */ (function () {\r\n    function CTOSPlanChartLegendItemComponent() {\r\n        this.changeSelection = new EventEmitter();\r\n        this.selectionChange = new EventEmitter();\r\n        this.disableRipple = true;\r\n        this.selected = [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendItemComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.parentSubject.subscribe((/**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        function (event) {\r\n            // called when the notifyChildren method is\r\n            // called in the parent component\r\n            console.log('In subscribe function -> ' + event);\r\n            if (event) {\r\n                document.getElementById('legendHolder').style.height = '300px';\r\n                _this.mySelect.open(CTOSPlanChartLegendItemComponent, { panelClass: 'myapp-no-padding-dialog' });\r\n            }\r\n            else {\r\n                document.getElementById('legendHolder').style.height = '40px';\r\n                _this.mySelect.close();\r\n            }\r\n        }));\r\n        /*this.selected = [];\r\n        this.data.forEach(item => {\r\n            if (item.checked) {\r\n                this.selected.push(item.value);\r\n            }\r\n        });*/\r\n        // this.changeSelection.emit({ 'id': this.id, 'selection': this.selected});\r\n        this.selectAllStateSet();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendItemComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // needed if child gets re-created (eg on some model changes)\r\n        // note that subsequent subscriptions on the same subject will fail\r\n        // so the parent has to re-create parentSubject on changes\r\n        this.parentSubject.unsubscribe();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendItemComponent.prototype.ngOnChanges = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.mySelect.value = this.selected;\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendItemComponent.prototype.onChange = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        var _this = this;\r\n        this.selected = [];\r\n        this.data.forEach((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        function (item) {\r\n            // item.selected = (!item.disabled && $event.checked ? true : false);\r\n            if ($event.checked && !item.disabled) {\r\n                _this.selected.push(item.value);\r\n                item.checked = true;\r\n            }\r\n            else {\r\n                item.checked = false;\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendItemComponent.prototype.onSelectionChange = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        this.data.forEach((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        function (item) {\r\n            if ($event.value.indexOf(item.value) > -1) {\r\n                item.checked = true;\r\n            }\r\n            else {\r\n                item.checked = false;\r\n            }\r\n        }));\r\n        // this.selectAllStateSet();\r\n        this.changeSelection.emit({\r\n            'id': this.id,\r\n            'selection': $event.value\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendItemComponent.prototype.openDropdown = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        /*console.log('In open dropdown');\r\n        */\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CTOSPlanChartLegendItemComponent.prototype.selectAllStateSet = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var totCount = this.data.length;\r\n        /** @type {?} */\r\n        var selectedCount = 0;\r\n        this.selected = [];\r\n        this.data.forEach((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        function (item) {\r\n            if (item.disabled) {\r\n                totCount = totCount - 1;\r\n            }\r\n            else if (item.checked) {\r\n                selectedCount = selectedCount + 1;\r\n                _this.selected.push(item.value);\r\n            }\r\n        }));\r\n        if (totCount > 0 && totCount === selectedCount) {\r\n            this.indeterminate = false;\r\n            this.checked = true;\r\n        }\r\n        else if (totCount > 0 && selectedCount > 0 && totCount > selectedCount) {\r\n            this.indeterminate = true;\r\n            this.checked = false;\r\n        }\r\n        else {\r\n            this.indeterminate = false;\r\n            this.checked = false;\r\n        }\r\n    };\r\n    CTOSPlanChartLegendItemComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-plan-chart-legend-item',\r\n                    template: \"<span>\\r\\n    <mat-checkbox [id]='placeholder' (ngModelChange)='onChange($event)' [(ngModel)]=\\\"checked\\\"\\r\\n    [(indeterminate)]=\\\"indeterminate\\\" [disableRipple]='disableRipple' [formControl]=\\\"control\\\"></mat-checkbox>\\r\\n    {{checked}}\\r\\n    {{indeterminate}}\\r\\n    <mat-form-field class=\\\"legendItems\\\">\\r\\n        <mat-select #legendItem [placeholder]=\\\"placeholder\\\" [(value)]=\\\"selected\\\" [formControl]=\\\"control\\\" multiple (selectionChange)='onSelectionChange($event)'\\r\\n        (openedChange)=\\\"openDropdown($event)\\\" [panelClass]='panelClass'>\\r\\n            <mat-option *ngFor=\\\"let item of data\\\" [value]=\\\"item.value\\\" [disabled]='item.disabled'>{{item.checked}}</mat-option>\\r\\n        </mat-select>\\r\\n    </mat-form-field>\\r\\n</span>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    styles: [\".legendItems{padding:2px 7px}.myapp-no-padding-dialog{padding:0}\"]\r\n                }] }\r\n    ];\r\n    CTOSPlanChartLegendItemComponent.propDecorators = {\r\n        placeholder: [{ type: Input }],\r\n        data: [{ type: Input }],\r\n        control: [{ type: Input }],\r\n        id: [{ type: Input }],\r\n        changeSelection: [{ type: Output }],\r\n        selectionChange: [{ type: Output }],\r\n        parentSubject: [{ type: Input }],\r\n        mySelect: [{ type: ViewChild, args: ['legendItem', { static: true },] }],\r\n        myCheck: [{ type: ViewChild, args: ['c', { static: true },] }]\r\n    };\r\n    return CTOSPlanChartLegendItemComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.placeholder;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.data;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.control;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.id;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.changeSelection;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.selectionChange;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.parentSubject;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.mySelect;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.myCheck;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.panelClass;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.disableRipple;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.indeterminate;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.selected;\r\n    /** @type {?} */\r\n    CTOSPlanChartLegendItemComponent.prototype.checked;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/gojs-canvas/gojs-canvas.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar GojsCanvasComponent = /** @class */ (function () {\r\n    //  @Input() set cohortNode(cohortNodes: any) {\r\n    //     this.cohortListArray = cohortNodes;\r\n    //     this.refreshCanvas(this.cohortListArray);\r\n    //   }\r\n    function GojsCanvasComponent() {\r\n        var _this = this;\r\n        this.diagram = new Diagram();\r\n        this.myModel = new Model();\r\n        this.modelChanged = new EventEmitter();\r\n        this.nodeSelected = new EventEmitter();\r\n        // Place GoJS license key here:\r\n        // (go as any).licenseKey = '4300138342';\r\n        /* tslint:disable */\r\n        ((/** @type {?} */ (Diagram))).licenseKey = '73f041e4b21c28c702d95d76423d6cbc5cf07f21de824aa3595016a7b85f6a122b99e17102d6dfd2c2fc1dac1d7d978a8a953c2bc24c5533e236d1d417e7d4fbe73726b5110b13dda70773949bf92ba7fb7077fa91b025f28e7c8ce0fbae96cc5ae8a18449d81eb828780e2e5f61af42';\r\n        /* tslint:disable */\r\n        this.goJsObj = GraphObject.make;\r\n        this.diagram = new Diagram();\r\n        this.diagram.initialContentAlignment = Spot.LeftCenter;\r\n        // this.diagram.allowDrop = true;\r\n        // new go.Binding('location', 'loc', go.Point.parse).makeTwoWay(go.Point.stringify),\r\n        this.diagram.allowCopy = false;\r\n        this.diagram.allowMove = true;\r\n        this.diagram.defaultCursor = 'default';\r\n        this.diagram.undoManager.isEnabled = true;\r\n        this.diagram.animationManager.isEnabled = false;\r\n        this.diagram.animationManager.stopAnimation();\r\n        this.diagram.addDiagramListener('ChangedSelection', (/**\r\n         * @param {?} e\r\n         * @return {?}\r\n         */\r\n        function (e) {\r\n            /** @type {?} */\r\n            var node = e.diagram.selection.first();\r\n            // e.diagram.select(e.diagram.findNodeForData(e.diagram.model.nodeDataArray[0]));\r\n            _this.nodeSelected.emit(node instanceof Node ? node : null);\r\n        }));\r\n        this.diagram.addModelChangedListener((/**\r\n         * @param {?} e\r\n         * @return {?}\r\n         */\r\n        function (e) { return e.isTransactionFinished\r\n            && _this.modelChanged.emit(e); })); // && this.diagram.select(this.diagram.findNodeForData(this.diagram.model.nodeDataArray[0]))\r\n        // this.diagram.addDiagramListener('InitialLayoutCompleted', function(e) {\r\n        //   this.modelChanged.emit();\r\n        //   // pick a random node data\r\n        //   // find the corresponding Node\r\n        //   const node = e.diagram.selection.first();\r\n        //   // and center it and select it\r\n        //   this.diagram.select(node);\r\n        // });\r\n    }\r\n    Object.defineProperty(GojsCanvasComponent.prototype, \"model\", {\r\n        set: /**\r\n         * @param {?} val\r\n         * @return {?}\r\n         */\r\n        function (val) {\r\n            this.diagram.model = val;\r\n            this.nodeList = val.nodeDataArray;\r\n            this.dataIndex = 0;\r\n            if (this.selectedNode && Object.keys(this.selectedNode).length > 0 && this.nodeList) {\r\n                for (var i = 0; i < this.nodeList.length; i++) {\r\n                    if (this.selectedNode.category === 'cohort' && this.nodeList[i].cohortKey === this.selectedNode.key) {\r\n                        this.dataIndex = i;\r\n                    }\r\n                    if (this.selectedNode.category === 'dependency' && this.nodeList[i].dependencyKey === this.selectedNode.key) {\r\n                        this.dataIndex = i;\r\n                    }\r\n                }\r\n            }\r\n            this.diagram.select(this.diagram.findNodeForData(val.nodeDataArray[this.dataIndex]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GojsCanvasComponent.prototype, \"isApprovedPlan\", {\r\n        set: /**\r\n         * @param {?} flag\r\n         * @return {?}\r\n         */\r\n        function (flag) {\r\n            this.diagram.isReadOnly = flag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GojsCanvasComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /* tslint:disable */\r\n        // (go as any).licenseKey = '73f041e4b21c28c702d95d76423d6cbc5cf07f21de824aa3595016a7b85f6a122b99e17102d6dfd2c2fc1dac1d7d978a8a953c2bc24c5533e236d1d417e7d4fbe73726b5110b13dda70773949bf92ba7fb7077fa91b025f28e7c8ce0fbae96cc5ae8a18449d81eb828780e2e5f61af42';\r\n        /* tslint:disable */\r\n        this.diagram.div = this.diagramRef.nativeElement;\r\n        this.diagram.linkTemplate = this.goJsObj(Link, { relinkableFrom: false, relinkableTo: false }, this.goJsObj(Shape, { strokeWidth: .5 }, new Binding('stroke', 'fromNode', (/**\r\n         * @param {?} n\r\n         * @return {?}\r\n         */\r\n        function (n) { return n.data.category; }))\r\n            .ofObject()), \r\n        /*   this.goJsObj(go.Shape,\r\n             { toArrow: 'OpenTriangle', fill: '#fefefe' }),*/\r\n        new Binding('deletable', 'isEditable'));\r\n        /**\r\n         * @param {?} fromnode\r\n         * @param {?} fromport\r\n         * @param {?} tonode\r\n         * @param {?} toport\r\n         * @return {?}\r\n         */\r\n        function sameCategory(fromnode, fromport, tonode, toport) {\r\n            return fromnode.data.category !== tonode.data.category;\r\n        }\r\n        this.diagram.toolManager.linkingTool.linkValidation = sameCategory;\r\n        // this.diagram.toolManager.relinkingTool.linkValidation = sameCategory;\r\n        /** @type {?} */\r\n        var cohortMap = this.goJsObj(Node, 'Auto', \r\n        // new go.Binding('location', 'loc', go.Point.parse),\r\n        //  { locationSpot: go.Spot.Center },\r\n        new Binding('location', 'loc', Point.parse).makeTwoWay(Point.stringify), this.goJsObj(Shape, 'RoundedRectangle', {\r\n            stroke: 'gray', strokeWidth: .5, width: 180,\r\n            fill: '#fefefe',\r\n            // the default fill, if there is no data-binding\r\n            portId: '', cursor: 'pointer',\r\n            // the Shape is the port, not the whole Node\r\n            // allow all kinds of links from and to this port\r\n            fromLinkable: true, fromLinkableSelfNode: false, fromLinkableDuplicates: false,\r\n            toLinkable: true, toLinkableSelfNode: false, toLinkableDuplicates: false,\r\n            fromSpot: Spot.RightSide,\r\n            // coming out from right side\r\n            toSpot: Spot.LeftSide\r\n        }, new Binding('fill', 'color')), this.goJsObj(TextBlock, {\r\n            width: 140,\r\n            font: 'bold 12px sans-serif',\r\n            stroke: '#111',\r\n            margin: 5,\r\n            isMultiline: false,\r\n            // don't allow newlines in text\r\n            editable: false,\r\n            // allow in-place editing by user\r\n            textAlign: 'left',\r\n            cursor: 'grab',\r\n            verticalAlignment: Spot.Center,\r\n            text: 'textAlign: \"left\"'\r\n        }, new Binding('text', 'cohortName').makeTwoWay()), new Binding('deletable', 'isEditable'), this.goJsObj(Picture, {\r\n            width: 22, height: 22, source: './assets/images/enrollmentPause.svg',\r\n            alignment: new Spot(1, 0, -17, 1), opacity: 0.0\r\n        }, new Binding('opacity', 'isIAPresent', (/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) { return v ? 1.0 : 0.0; }))));\r\n        /** @type {?} */\r\n        var dependencyMap = this.goJsObj(Node, 'Auto', \r\n        // { locationSpot: go.Spot.Center },\r\n        new Binding('location', 'loc', Point.parse).makeTwoWay(Point.stringify), this.goJsObj(Picture, { width: 40, height: 40, source: './assets/images/dependency.png' }, {\r\n            cursor: 'pointer', portId: '',\r\n            fromLinkable: true, fromLinkableSelfNode: false, fromLinkableDuplicates: false,\r\n            toLinkable: true, toLinkableSelfNode: false, toLinkableDuplicates: false\r\n        }), this.goJsObj(TextBlock, {\r\n            font: 'bold 11px sans-serif',\r\n            stroke: '#111',\r\n            margin: 2,\r\n            isMultiline: false,\r\n            // don't allow newlines in text\r\n            editable: false,\r\n            // allow in-place editing by user\r\n            textAlign: 'left'\r\n        }, new Binding('text', 'dependencyName')), new Binding('deletable', 'isEditable'));\r\n        /** @type {?} */\r\n        var templmap = new Map();\r\n        templmap.add('cohort', cohortMap);\r\n        templmap.add('dependency', dependencyMap);\r\n        this.diagram.nodeTemplateMap = templmap;\r\n        this.diagram.validCycle = Diagram.CycleNotDirected;\r\n        // this.diagram.isReadOnly = true;\r\n        //  this.myModel.nodeDataArray = this.cohortListArray;\r\n        // this.diagram.model = this.myModel;\r\n    };\r\n    GojsCanvasComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-gojs-canvas',\r\n                    template: \"\\r\\n<div #diagramDiv class=\\\"diagramDiv\\\"></div>\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    GojsCanvasComponent.ctorParameters = function () { return []; };\r\n    GojsCanvasComponent.propDecorators = {\r\n        diagramRef: [{ type: ViewChild, args: ['diagramDiv', { static: true },] }],\r\n        selectedNode: [{ type: Input }],\r\n        model: [{ type: Input }],\r\n        modelChanged: [{ type: Output }],\r\n        nodeSelected: [{ type: Output }],\r\n        isApprovedPlan: [{ type: Input }]\r\n    };\r\n    return GojsCanvasComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    GojsCanvasComponent.prototype.dataIndex;\r\n    /** @type {?} */\r\n    GojsCanvasComponent.prototype.nodeList;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    GojsCanvasComponent.prototype.diagram;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    GojsCanvasComponent.prototype.myModel;\r\n    /** @type {?} */\r\n    GojsCanvasComponent.prototype.goJsObj;\r\n    /** @type {?} */\r\n    GojsCanvasComponent.prototype.cohortListArray;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    GojsCanvasComponent.prototype.diagramRef;\r\n    /** @type {?} */\r\n    GojsCanvasComponent.prototype.resources;\r\n    /** @type {?} */\r\n    GojsCanvasComponent.prototype.selectedNode;\r\n    /** @type {?} */\r\n    GojsCanvasComponent.prototype.modelChanged;\r\n    /** @type {?} */\r\n    GojsCanvasComponent.prototype.nodeSelected;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart-legend/ctos-so-custom-multiselect.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CTOSCustomMultiSelectComponent = /** @class */ (function () {\r\n    function CTOSCustomMultiSelectComponent(lgdServ) {\r\n        this.lgdServ = lgdServ;\r\n        this.changeSelection = new EventEmitter();\r\n        this.LegendState = new EventEmitter();\r\n        this.legendColor = {};\r\n        this.isExpanded = false;\r\n        this.multimode = [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        console.log('In custom legend - ngOnInit');\r\n        this.ExpandCollapse.subscribe((/**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        function (event) {\r\n            _this.isExpanded = !_this.isExpanded;\r\n            if (_this.isExpanded) {\r\n                document.getElementById('legendHolder').style.height = '300px';\r\n                _this.openCloseDropdowns(document.getElementsByClassName('dropdown-content'), 'open');\r\n            }\r\n            else {\r\n                document.getElementById('legendHolder').style.height = '40px';\r\n                _this.openCloseDropdowns(document.getElementsByClassName('dropdown-content'), 'remove');\r\n            }\r\n            _this.LegendState.emit(_this.isExpanded);\r\n        }));\r\n        this.trigger.subscribe((/**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        function (event) {\r\n            // this.data = event;\r\n            _this.ngOnChanges(null);\r\n        }));\r\n        if (this.color) {\r\n            this.color.forEach((/**\r\n             * @param {?} element\r\n             * @return {?}\r\n             */\r\n            function (element) {\r\n                _this.legendColor[element.name] = element.value;\r\n            }));\r\n            this.legendColor['UpdPrSI'] = '#E44686';\r\n            this.legendColor['UpdPrSR'] = '#BFD8FF';\r\n            this.legendColor['UpdPrSS'] = '#FFAC38';\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        this.selectedCurves = [];\r\n        this.collectMultiModalProps();\r\n        this.updateStateOfAcrossTypes();\r\n        this.selectAllStatusCheck();\r\n        this.changeSelection.emit(this.selectedCurves);\r\n    };\r\n    /**\r\n     * @param {?} list\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.openCloseDropdowns = /**\r\n     * @param {?} list\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    function (list, action) {\r\n        if (action === 'open') {\r\n            for (var i = 0; i < list.length; i++) {\r\n                list[i].classList.add('show');\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < list.length; i++) {\r\n                list[i].classList.remove('show');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ExpandCollapse.unsubscribe();\r\n        this.trigger.unsubscribe();\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.openDropDown = /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (id) {\r\n        document.getElementById(id).classList.toggle('show');\r\n        if (document.getElementsByClassName('dropdown-content show').length === 0) {\r\n            document.getElementById('legendHolder').style.height = '40px';\r\n            this.isExpanded = false;\r\n            this.LegendState.emit(this.isExpanded);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.onCheckboxChange = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        if (this.multimode.indexOf($event.target.value) > -1) {\r\n            this.setStateOfAcrossTypes($event.target.value, $event.target.checked);\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var index = this.lgdServ.selectedCurves.indexOf($event.target.value);\r\n            if (this.lgdServ.selectedCurves && index > -1) {\r\n                this.lgdServ.selectedCurves.splice(index, 1);\r\n            }\r\n            else {\r\n                this.lgdServ.selectedCurves.push($event.target.value);\r\n            }\r\n        }\r\n        // to ensure line types shows correct status\r\n        this.updateStateOfAcrossTypes();\r\n        this.selectAllStatusCheck();\r\n        this.changeSelection.emit(this.selectedCurves);\r\n    };\r\n    // re-write due to preference save\r\n    // re-write due to preference save\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.onSelectAllChange = \r\n    // re-write due to preference save\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var id = $event.srcElement.value;\r\n        for (var i = 0; i < this.data.length; i++) {\r\n            if (id === this.data[i].id && !this.data[i].hasOwnProperty('multimode')) {\r\n                /** @type {?} */\r\n                var listItems = this.data[i];\r\n                listItems.value.forEach((/**\r\n                 * @param {?} item\r\n                 * @return {?}\r\n                 */\r\n                function (item) {\r\n                    if (!item.disabled) {\r\n                        item.checked = $event.srcElement.checked;\r\n                        /** @type {?} */\r\n                        var idx = _this.lgdServ.selectedCurves.indexOf(item.value);\r\n                        if ($event.srcElement.checked && idx === -1) {\r\n                            _this.lgdServ.selectedCurves.push(item.value);\r\n                        }\r\n                        else if (!$event.srcElement.checked && idx > -1) {\r\n                            _this.lgdServ.selectedCurves.splice(idx, 1);\r\n                        }\r\n                    }\r\n                    // modify the selected Curves\r\n                    if (item.checked && _this.selectedCurves.indexOf(item.value) < 0) {\r\n                        _this.selectedCurves.push(item.value);\r\n                    }\r\n                    else if (!item.checked && _this.selectedCurves.indexOf(item.value) > -1) {\r\n                        _this.selectedCurves.splice(_this.selectedCurves.indexOf(item.value), 1);\r\n                    }\r\n                }));\r\n                break;\r\n            }\r\n            else if (id === this.data[i].id && this.data[i].hasOwnProperty('multimode')) { // lines select all check box clicked\r\n                this.selectedCurves = [];\r\n                // loop til line types, hence index 4/i\r\n                for (var j = 0; j < 4; j++) {\r\n                    /** @type {?} */\r\n                    var listItems = this.data[j].value;\r\n                    this.data[j].checked = $event.srcElement.checked;\r\n                    for (var k = 0; k < listItems.length; k++) {\r\n                        if (!listItems[k].disabled) {\r\n                            listItems[k].checked = $event.srcElement.checked;\r\n                            /** @type {?} */\r\n                            var idx = this.lgdServ.selectedCurves.indexOf(listItems[k].value);\r\n                            if ($event.srcElement.checked && idx === -1) {\r\n                                this.lgdServ.selectedCurves.push(listItems[k].value);\r\n                            }\r\n                            else if (!$event.srcElement.checked && idx > -1) {\r\n                                this.lgdServ.selectedCurves.splice(idx, 1);\r\n                            }\r\n                        }\r\n                        // to main selected curves\r\n                        if ($event.srcElement.checked && !this.data[j].hasOwnProperty('multimode')) {\r\n                            this.selectedCurves.push(listItems[k].value);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // to ensure line types shows correct status\r\n        this.updateStateOfAcrossTypes();\r\n        this.selectAllStatusCheck();\r\n        this.changeSelection.emit(this.selectedCurves);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.selectAllStatusCheck = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.selectedCurves = [];\r\n        for (var i = 0; i < this.data.length; i++) {\r\n            /** @type {?} */\r\n            var listItems = this.data[i].value;\r\n            this.data[i].checked = true;\r\n            for (var j = 0; j < listItems.length; j++) {\r\n                if (!listItems[j].disabled && !listItems[j].checked) {\r\n                    this.data[i].checked = false;\r\n                }\r\n                else if (listItems[j].checked && !listItems[j].multimode) {\r\n                    this.selectedCurves.push(listItems[j].value);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.collectMultiModalProps = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.multimode = [];\r\n        for (var i = 0; i < this.data.length; i++) {\r\n            if (this.data[i].hasOwnProperty('multimode')) {\r\n                /** @type {?} */\r\n                var listItems = this.data[i].value;\r\n                for (var j = 0; j < listItems.length; j++) {\r\n                    this.multimode.push(listItems[j].value);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} code\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.setStateOfAcrossTypes = /**\r\n     * @param {?} code\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    function (code, state) {\r\n        // object iteration til 4 types\r\n        for (var i = 0; i < 4; i++) {\r\n            /** @type {?} */\r\n            var listItems = this.data[i].value;\r\n            for (var j = 0; j < listItems.length; j++) {\r\n                /** @type {?} */\r\n                var idx = listItems[j].value.indexOf(code);\r\n                if (!listItems[j].disabled && idx > -1) {\r\n                    listItems[j].checked = state;\r\n                    /** @type {?} */\r\n                    var prefId = this.lgdServ.selectedCurves.indexOf(listItems[j].value);\r\n                    if (state && idx > -1) {\r\n                        this.selectedCurves.push(listItems[j].value);\r\n                        if (prefId === -1) {\r\n                            this.lgdServ.selectedCurves.push(listItems[j].value);\r\n                        }\r\n                    }\r\n                    else if (!state && idx > -1) {\r\n                        /** @type {?} */\r\n                        var _idx = this.selectedCurves.indexOf(listItems[j].value);\r\n                        if (_idx > -1) {\r\n                            this.selectedCurves.splice(_idx, 1);\r\n                        } // for chart data\r\n                        if (prefId > -1) {\r\n                            this.lgdServ.selectedCurves.splice(prefId, 1);\r\n                        } // for preference\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.updateStateOfAcrossTypes = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // object iteration til 4 types\r\n        /** @type {?} */\r\n        var masterList = 4;\r\n        /** @type {?} */\r\n        var listItems = this.data[masterList].value;\r\n        for (var type = 0; type < listItems.length; type++) {\r\n            if (!listItems[type].disabled) {\r\n                for (var across = 0; across < masterList; across++) {\r\n                    /** @type {?} */\r\n                    var acrossList = this.data[across].value;\r\n                    for (var inside = 0; inside < acrossList.length; inside++) {\r\n                        if (acrossList[inside].value.indexOf(listItems[type].value) > -1 && !acrossList[inside].disabled) {\r\n                            listItems[type].checked = acrossList[inside].checked;\r\n                            if (listItems[type].checked && this.selectedCurves && this.selectedCurves.indexOf(listItems[type].value) < 0) {\r\n                                this.selectedCurves.push(listItems[type].value);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!listItems[type].checked) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CTOSCustomMultiSelectComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-custom-multiselect',\r\n                    template: \"<div class=\\\"dropdown\\\" *ngFor=\\\"let item of data\\\" >\\r\\n        <span>\\r\\n                <!--Checkbox for select all-->\\r\\n                <label class=\\\"container\\\">\\r\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"item.checked\\\" [attr.checked]=\\\"item.checked? 'true':null\\\" \\r\\n                                value=\\\"{{item.id}}\\\" (change)=\\\"onSelectAllChange($event)\\\">\\r\\n                        <span [attr.class]=\\\"legendColor[item.id]? 'checkmarkParent' : 'defaultcheckmarkParent'\\\" [style.border]=\\\"legendColor[item.id]? '2px solid ' + legendColor[item.id] : '1px solid #ccc'\\\" [style.background-color]=\\\"item.checked? legendColor[item.id] : null\\\"></span>\\r\\n                </label>\\r\\n\\r\\n                <!--Below is the dropdown-->\\r\\n                <button (click)=\\\"openDropDown(item.id)\\\" class=\\\"dropbtn\\\">{{item.name}}</button>\\r\\n                <div id=\\\"{{item.id}}\\\" class=\\\"dropdown-content\\\" >\\r\\n                <label class=\\\"container\\\" *ngFor=\\\"let element of item.value\\\" [attr.class]=\\\"element.disabled ? 'container disabled':'container'\\\">{{element.name}}\\r\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"element.checked\\\" [attr.checked]=\\\"element.checked && !element.disabled? 'true':null\\\" \\r\\n                                [attr.disabled]=\\\"element.disabled ? 'true':null\\\" value=\\\"{{element.value}}\\\" (change)=\\\"onCheckboxChange($event)\\\">\\r\\n                        <span [attr.class]=\\\"legendColor[element.value]? 'checkmark' : 'defaultcheckmark'\\\" [style.border]=\\\"legendColor[element.value]? '2px solid ' + legendColor[element.value] : '1px solid #ccc'\\\" [style.background-color]=\\\"element.checked && legendColor[element.value]? legendColor[element.value] : '#fff'\\\"></span>\\r\\n                </label>\\r\\n                </div>\\r\\n        </span>\\r\\n</div>\",\r\n                    styles: [\".container{display:block;position:relative;padding-left:35px;line-height:2;cursor:pointer;font-size:12px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:100%}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmarkParent,.defaultcheckmarkParent{position:absolute;top:10px;left:-18px;height:15px;width:15px}.checkmark,.defaultcheckmark{position:absolute;top:5px;left:3px;height:15px;width:15px}.checkmark:after,.checkmarkParent:after,.defaultcheckmark:after,.defaultcheckmarkParent:after{content:\\\"\\\";position:absolute;display:none}.container input:checked~.checkmark:after,.container input:checked~.checkmarkParent:after,.container input:checked~.defaultcheckmark:after,.container input:checked~.defaultcheckmarkParent:after{display:block}.container .checkmark:after,.container .checkmarkParent:after{left:4px;top:0;width:5px;height:10px;border:solid #fff;border-width:0 1.5px 1.5px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.container .defaultcheckmark:after,.container .defaultcheckmarkParent:after{left:5px;top:0;width:5px;height:10px;border:solid #7faff8;border-width:0 1.5px 1.5px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.dropbtn{background-color:#fff;color:#595959;font:10pt apollo;padding:6px;text-align:left;outline:0;border:.5px solid #d3d3d3;cursor:pointer;width:100%;margin:2px}.dropdown{position:relative;display:inline-block;margin:0 20px;-webkit-box-flex:1;flex:1}.dropdown-content{display:none;position:absolute;background-color:#fff;min-width:160px;box-shadow:0 8px 16px 0 rgba(0,0,0,.2);z-index:3}.dropdown-content label{color:#000;text-decoration:none}.dropdown-content label.disabled{color:#ccc;text-decoration:none;background-color:#fff}.dropdown-content label:hover{background-color:#ddd}.show{display:block}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    CTOSCustomMultiSelectComponent.ctorParameters = function () { return [\r\n        { type: CTOSPlanChartLegendService }\r\n    ]; };\r\n    CTOSCustomMultiSelectComponent.propDecorators = {\r\n        ExpandCollapse: [{ type: Input }],\r\n        trigger: [{ type: Input }],\r\n        data: [{ type: Input }],\r\n        color: [{ type: Input }],\r\n        changeSelection: [{ type: Output }],\r\n        LegendState: [{ type: Output }]\r\n    };\r\n    return CTOSCustomMultiSelectComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.ExpandCollapse;\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.trigger;\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.data;\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.color;\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.changeSelection;\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.LegendState;\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.selectedCurves;\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.legendColor;\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.isExpanded;\r\n    /** @type {?} */\r\n    CTOSCustomMultiSelectComponent.prototype.multimode;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CTOSCustomMultiSelectComponent.prototype.lgdServ;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/extended/extended-ngx-tooltip-area.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/*@Component({\r\n selector: 'app-extended-ngx-tooltip-area',\r\n template: `\r\n   <p>\r\n     extended-ngx-tooltip-area works!\r\n   </p>\r\n `,\r\n styles: []\r\n})*/\r\n/** @type {?} */\r\nvar moment$5 = momentNS;\r\nvar ExtendedNgxTooltipAreaComponent = /** @class */ (function (_super) {\r\n    __extends(ExtendedNgxTooltipAreaComponent, _super);\r\n    function ExtendedNgxTooltipAreaComponent() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.lastAnchorPoss = [];\r\n        _this.dateFormat = 'DD MMM YYYY';\r\n        _this.anchorPosIndex = -1;\r\n        _this.anchors = {};\r\n        _this.maxTooltipLength = 0;\r\n        _this.getToolTipTextDate = '';\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.anchors = {};\r\n        this.anchorPosIndex = -1;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.anchors = null;\r\n        this.anchorPosIndex = -1;\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes && changes.sizeChanged && changes.sizeChanged.currentValue !== changes.sizeChanged.previousValue) {\r\n            this.onResize(null);\r\n        }\r\n        else if (changes && changes.dataChanged && changes.dataChanged.currentValue !== changes.dataChanged.previousValue) {\r\n            this.anchors = {};\r\n            this.anchorPosIndex = -1;\r\n            // remove existing pinned obj\r\n            select(this.anchorHolder.nativeElement).selectAll('*').remove();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.hideTooltip = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.tooltipAnchor) {\r\n            _super.prototype.hideTooltip.call(this);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.pinTooltip = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        console.log('ExtendedNgxTooltipAreaComponent -> pinTooltip');\r\n        if (this.lastAnchorPoss.indexOf(this.anchorPosIndex) < 0 && this.anchorValues.length > 0) {\r\n            this.anchors[this.anchorPosIndex] = this.anchorValues;\r\n            this.maxTooltipLength = 0;\r\n            this.anchorValues.forEach((/**\r\n             * @param {?} item\r\n             * @return {?}\r\n             */\r\n            function (item) {\r\n                if (_this.maxTooltipLength < item.series.length) {\r\n                    _this.maxTooltipLength = item.series.length;\r\n                }\r\n            }));\r\n            this.createAnchor(this.anchorPosIndex);\r\n            this.lastAnchorPoss.push(this.anchorPosIndex);\r\n            console.log(this.anchorValues);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} x\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.createAnchor = /**\r\n     * @param {?} x\r\n     * @return {?}\r\n     */\r\n    function (x) {\r\n        /** @type {?} */\r\n        var closestPoint = this.xSet[x];\r\n        /** @type {?} */\r\n        var anchorPos = this.xScale(closestPoint);\r\n        anchorPos = Math.max(0, anchorPos);\r\n        anchorPos = Math.min(this.dims.width, anchorPos);\r\n        /** @type {?} */\r\n        var _that = this;\r\n        // black hairline dragger\r\n        select(this.anchorHolder.nativeElement).append('rect').on('click', (/**\r\n         * @return {?}\r\n         */\r\n        function () { _that.onRemove(this, _that); }))\r\n            .attr('x', anchorPos).attr('class', 'a' + x)\r\n            .attr('width', '2').attr('height', this.dims.height);\r\n        // black tooltip rectangle\r\n        select(this.anchorHolder.nativeElement).append('rect').on('click', (/**\r\n         * @return {?}\r\n         */\r\n        function () { _that.onRemove(this, _that); }))\r\n            .attr('fill', '#000')\r\n            .attr('opacity', 0.7)\r\n            .attr('x', anchorPos + 20).attr('y', this.dims.height / 2)\r\n            .attr('rx', 3)\r\n            .attr('ry', 3)\r\n            .attr('class', 'a' + x)\r\n            .attr('height', 15 * this.anchorValues.length + 15).attr('width', this.maxTooltipLength * 6.5 + 10);\r\n        // color square\r\n        select(this.anchorHolder.nativeElement).selectAll('a' + x)\r\n            .data(this.anchorValues).enter()\r\n            .append('rect').on('click', (/**\r\n         * @return {?}\r\n         */\r\n        function () { _that.onRemove(this, _that); }))\r\n            .attr('rx', 3)\r\n            .attr('ry', 3)\r\n            .attr('x', anchorPos + 23)\r\n            .attr('y', (/**\r\n         * @param {?} d\r\n         * @param {?} i\r\n         * @return {?}\r\n         */\r\n        function (d, i) { return (_that.dims.height / 2 + 10 * i + 3 * (i + 1)); }))\r\n            .attr('width', 10)\r\n            .attr('height', 10)\r\n            .style('fill', (/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) { return d['color']; }))\r\n            .attr('class', 'a' + x);\r\n        // text\r\n        select(this.anchorHolder.nativeElement).selectAll('a' + x)\r\n            .data(this.anchorValues).enter()\r\n            .append('text').on('click', (/**\r\n         * @return {?}\r\n         */\r\n        function () { _that.onRemove(this, _that); }))\r\n            .text((/**\r\n         * @param {?} d\r\n         * @param {?} i\r\n         * @return {?}\r\n         */\r\n        function (d, i) { return d['series'] + ' : ' + Math.abs(d['value']); }))\r\n            .attr('x', anchorPos + 35).attr('y', (/**\r\n         * @param {?} d\r\n         * @param {?} i\r\n         * @return {?}\r\n         */\r\n        function (d, i) { return (_that.dims.height / 2 + 13 * i + 11); }))\r\n            .attr('class', 'a' + x)\r\n            .style('fill', '#fff').style('font-family', 'apollo');\r\n        select(this.anchorHolder.nativeElement)\r\n            .append('text').on('click', (/**\r\n         * @return {?}\r\n         */\r\n        function () { _that.onRemove(this, _that); }))\r\n            .attr('x', anchorPos + 35).attr('y', _that.dims.height / 2 + 13 * _that.anchorValues.length + 11).style('fill', '#fff')\r\n            .attr('class', 'a' + x)\r\n            .text(moment$5(this.anchorValues[0].name).format(this.dateFormat));\r\n    };\r\n    /**\r\n     * @param {?} dis\r\n     * @param {?} that\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.onRemove = /**\r\n     * @param {?} dis\r\n     * @param {?} that\r\n     * @return {?}\r\n     */\r\n    function (dis, that) {\r\n        // dis.remove();\r\n        /** @type {?} */\r\n        var className = '';\r\n        for (var i = 0; i < dis.classList.length; i++) {\r\n            if (dis.classList[i].indexOf('a') > -1) {\r\n                className = dis.classList[i];\r\n                break;\r\n            }\r\n        }\r\n        if (className.length > 1) { // presence of className\r\n            select(this.anchorHolder.nativeElement).selectAll('.' + className).remove();\r\n            for (var i = 0; i < that.lastAnchorPoss.length; i++) {\r\n                if (className.indexOf(that.lastAnchorPoss[i]) > -1) {\r\n                    if (this.anchors[this.lastAnchorPoss[i]]) {\r\n                        delete this.anchors[this.lastAnchorPoss[i]];\r\n                    }\r\n                    this.lastAnchorPoss.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.mouseMove = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        /** @type {?} */\r\n        var xPos = event.pageX - event.target.getBoundingClientRect().left;\r\n        /** @type {?} */\r\n        var closestIndex = this.findClosestPointIndex(xPos);\r\n        this.anchorPosIndex = closestIndex;\r\n        /** @type {?} */\r\n        var closestPoint = this.xSet[closestIndex];\r\n        this.anchorPos = this.xScale(closestPoint);\r\n        this.anchorPos = Math.max(0, this.anchorPos);\r\n        this.anchorPos = Math.min(this.dims.width, this.anchorPos);\r\n        this.anchorValues = this.getValues(closestPoint);\r\n        if (this.anchorPos !== this.lastAnchorPos && this.tooltipAnchor) {\r\n            /** @type {?} */\r\n            var ev = new MouseEvent('mouseleave', { bubbles: false });\r\n            this.tooltipAnchor.nativeElement.dispatchEvent(ev);\r\n            this.anchorOpacity = 0.7;\r\n            this.hover.emit({\r\n                value: closestPoint\r\n            });\r\n            this.showTooltip();\r\n            this.lastAnchorPos = this.anchorPos;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} tooltipItem\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.getToolTipText = /**\r\n     * @param {?} tooltipItem\r\n     * @return {?}\r\n     */\r\n    function (tooltipItem) {\r\n        /** @type {?} */\r\n        var result = '';\r\n        if (tooltipItem.series !== undefined) {\r\n            result += tooltipItem.series;\r\n        }\r\n        else {\r\n            result += '???';\r\n        }\r\n        result += ': ';\r\n        if (tooltipItem.value !== undefined) {\r\n            result += (tooltipItem.value < 0 ? (tooltipItem.value * -1).toLocaleString() : tooltipItem.value.toLocaleString());\r\n        }\r\n        if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\r\n            result += ' (';\r\n            if (tooltipItem.min !== undefined) {\r\n                if (tooltipItem.max === undefined) {\r\n                    result += '≥';\r\n                }\r\n                result += tooltipItem.min.toLocaleString();\r\n                if (tooltipItem.max !== undefined) {\r\n                    result += ' - ';\r\n                }\r\n            }\r\n            else if (tooltipItem.max !== undefined) {\r\n                result += '≤';\r\n            }\r\n            if (tooltipItem.max !== undefined) {\r\n                result += tooltipItem.max.toLocaleString();\r\n            }\r\n            result += ')';\r\n        }\r\n        if (tooltipItem.name !== undefined) {\r\n            this.getToolTipTextDate = moment$5(tooltipItem.name).format(this.dateFormat);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param {?} pinnedObjects\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.retainAnchor = /**\r\n     * @param {?} pinnedObjects\r\n     * @return {?}\r\n     */\r\n    function (pinnedObjects) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var _that = this;\r\n        try {\r\n            for (var _b = __values(Object.keys(pinnedObjects)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var prop1 = _c.value;\r\n                /** @type {?} */\r\n                var prop = Number(prop1);\r\n                /** @type {?} */\r\n                var closestPoint = this.xSet[prop];\r\n                /** @type {?} */\r\n                var propNum = this.xScale(closestPoint);\r\n                propNum = Math.max(0, propNum);\r\n                propNum = Math.min(this.dims.width, propNum);\r\n                /** @type {?} */\r\n                var val = pinnedObjects[prop];\r\n                // black hairline dragger\r\n                select(this.anchorHolder.nativeElement).append('rect').on('click', (/**\r\n                 * @return {?}\r\n                 */\r\n                function () { _that.onRemove(this, _that); }))\r\n                    .attr('x', propNum).attr('class', 'a' + prop)\r\n                    .attr('width', '2').attr('height', this.dims.height);\r\n                // black tooltip rectangle\r\n                select(this.anchorHolder.nativeElement).append('rect').on('click', (/**\r\n                 * @return {?}\r\n                 */\r\n                function () { _that.onRemove(this, _that); }))\r\n                    .attr('fill', '#000')\r\n                    .attr('opacity', 0.7)\r\n                    .attr('x', propNum + 20).attr('y', this.dims.height / 2)\r\n                    .attr('rx', 3)\r\n                    .attr('ry', 3)\r\n                    .attr('class', 'a' + prop)\r\n                    .attr('height', 15 * val.length + 15).attr('width', this.maxTooltipLength * 6.5 + 10);\r\n                // color square\r\n                select(this.anchorHolder.nativeElement).selectAll('a' + prop)\r\n                    .data(val).enter()\r\n                    .append('rect').on('click', (/**\r\n                 * @return {?}\r\n                 */\r\n                function () { _that.onRemove(this, _that); }))\r\n                    .attr('rx', 3)\r\n                    .attr('ry', 3)\r\n                    .attr('x', propNum + 23)\r\n                    .attr('y', (/**\r\n                 * @param {?} d\r\n                 * @param {?} i\r\n                 * @return {?}\r\n                 */\r\n                function (d, i) { return (_that.dims.height / 2 + 10 * i + 3 * (i + 1)); }))\r\n                    .attr('width', 10)\r\n                    .attr('height', 10)\r\n                    .style('fill', (/**\r\n                 * @param {?} d\r\n                 * @return {?}\r\n                 */\r\n                function (d) { return d['color']; }))\r\n                    .attr('class', 'a' + prop);\r\n                // text\r\n                select(this.anchorHolder.nativeElement).selectAll('a' + prop)\r\n                    .data(val).enter()\r\n                    .append('text').on('click', (/**\r\n                 * @return {?}\r\n                 */\r\n                function () { _that.onRemove(this, _that); }))\r\n                    .text((/**\r\n                 * @param {?} d\r\n                 * @param {?} i\r\n                 * @return {?}\r\n                 */\r\n                function (d, i) { return d['series'] + ' : ' + Math.abs(d['value']); }))\r\n                    .attr('x', propNum + 35).attr('y', (/**\r\n                 * @param {?} d\r\n                 * @param {?} i\r\n                 * @return {?}\r\n                 */\r\n                function (d, i) { return (_that.dims.height / 2 + 13 * i + 11); }))\r\n                    .attr('class', 'a' + prop)\r\n                    .style('fill', '#fff').style('font-family', 'apollo');\r\n                select(this.anchorHolder.nativeElement)\r\n                    .append('text').on('click', (/**\r\n                 * @return {?}\r\n                 */\r\n                function () { _that.onRemove(this, _that); }))\r\n                    .attr('x', propNum + 35).attr('y', _that.dims.height / 2 + 13 * val.length + 11).style('fill', '#fff')\r\n                    .attr('class', 'a' + prop)\r\n                    .text(moment$5(val[0].name).format(this.dateFormat));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    ExtendedNgxTooltipAreaComponent.prototype.onResize = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        select(this.anchorHolder.nativeElement).selectAll('*').remove();\r\n        this.retainAnchor(this.anchors);\r\n    };\r\n    ExtendedNgxTooltipAreaComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line\r\n                    selector: 'g[app-extended-ngx-tooltip-area]',\r\n                    template: \"\\n   <svg:g (window:resize)=\\\"onResize($event)\\\">\\n     <svg:rect\\n       class=\\\"tooltip-area\\\"\\n       [attr.x]=\\\"0\\\"\\n       y=\\\"0\\\"\\n       [attr.width]=\\\"dims.width\\\"\\n       [attr.height]=\\\"dims.height\\\"\\n       style=\\\"opacity: 0; cursor: 'auto';\\\"\\n       (mousemove)=\\\"mouseMove($event)\\\"\\n       (mouseleave)=\\\"hideTooltip()\\\"\\n       (click)=\\\"pinTooltip()\\\"\\n     />\\n     <xhtml:ng-template #defaultTooltipTemplate let-model=\\\"model\\\">\\n       <xhtml:div class=\\\"area-tooltip-container\\\" *ngIf=\\\"model.length > 0\\\">\\n         <xhtml:div\\n           *ngFor=\\\"let tooltipItem of model\\\"\\n           class=\\\"tooltip-item\\\">\\n           <span\\n             class=\\\"tooltip-item-color\\\"\\n             [style.background-color]=\\\"tooltipItem.color\\\">\\n           </span>\\n           {{getToolTipText(tooltipItem)}}\\n         </xhtml:div>\\n         <span>{{getToolTipTextDate}}</span>\\n       </xhtml:div>\\n     </xhtml:ng-template>\\n\\n     <g #anchorHolder class='anchorHolder'>\\n     </g>\\n\\n     <svg:rect\\n       #tooltipAnchor\\n       *ngIf = \\\"anchorValues.length > 0\\\"\\n       [@animationState]=\\\"anchorOpacity !== 0 ? 'active' : 'inactive'\\\"\\n       class=\\\"tooltip-anchor\\\"\\n       [attr.x]=\\\"anchorPos\\\"\\n       y=\\\"0\\\"\\n       [attr.width]=\\\"1\\\"\\n       [attr.height]=\\\"dims.height\\\"\\n       [style.opacity]=\\\"anchorOpacity\\\"\\n       [style.pointer-events]=\\\"'none'\\\"\\n       ngx-tooltip\\n       [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n       [tooltipPlacement]=\\\"'right'\\\"\\n       [tooltipType]=\\\"'tooltip'\\\"\\n       [tooltipSpacing]=\\\"15\\\"\\n       [tooltipTemplate]=\\\"tooltipTemplate ? tooltipTemplate: defaultTooltipTemplate\\\"\\n       [tooltipContext]=\\\"anchorValues\\\"\\n       [tooltipImmediateExit]=\\\"true\\\"\\n     />\\n   </svg:g>\\n \",\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    animations: [\r\n                        trigger('animationState', [\r\n                            transition('inactive => active', [\r\n                                style({\r\n                                    opacity: 0,\r\n                                }),\r\n                                animate(250, style({ opacity: 0.7 }))\r\n                            ]),\r\n                            transition('active => inactive', [\r\n                                style({\r\n                                    opacity: 0.7,\r\n                                }),\r\n                                animate(250, style({ opacity: 0 }))\r\n                            ])\r\n                        ])\r\n                    ]\r\n                }] }\r\n    ];\r\n    ExtendedNgxTooltipAreaComponent.propDecorators = {\r\n        sizeChanged: [{ type: Input }],\r\n        dataChanged: [{ type: Input }],\r\n        anchorHolder: [{ type: ViewChild, args: ['anchorHolder', { static: true },] }]\r\n    };\r\n    return ExtendedNgxTooltipAreaComponent;\r\n}(TooltipArea));\r\nif (false) {\r\n    /** @type {?} */\r\n    ExtendedNgxTooltipAreaComponent.prototype.lastAnchorPoss;\r\n    /** @type {?} */\r\n    ExtendedNgxTooltipAreaComponent.prototype.dateFormat;\r\n    /** @type {?} */\r\n    ExtendedNgxTooltipAreaComponent.prototype.anchorPosIndex;\r\n    /** @type {?} */\r\n    ExtendedNgxTooltipAreaComponent.prototype.sizeChanged;\r\n    /** @type {?} */\r\n    ExtendedNgxTooltipAreaComponent.prototype.dataChanged;\r\n    /** @type {?} */\r\n    ExtendedNgxTooltipAreaComponent.prototype.anchorHolder;\r\n    /** @type {?} */\r\n    ExtendedNgxTooltipAreaComponent.prototype.anchors;\r\n    /** @type {?} */\r\n    ExtendedNgxTooltipAreaComponent.prototype.maxTooltipLength;\r\n    /** @type {?} */\r\n    ExtendedNgxTooltipAreaComponent.prototype.getToolTipTextDate;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/extended/extended-circle-series.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$6 = momentNS;\r\nvar ExtendedCircleSeriesComponent = /** @class */ (function (_super) {\r\n    __extends(ExtendedCircleSeriesComponent, _super);\r\n    function ExtendedCircleSeriesComponent() {\r\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\r\n        _this_1.collectPins = new EventEmitter();\r\n        _this_1.dateFormat = 'DD MMM YYYY';\r\n        return _this_1;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ExtendedCircleSeriesComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        if (changes && changes.pinnedObject && changes.pinnedObject.currentValue !== changes.pinnedObject.previousValue) {\r\n            // remove existing pinned obj\r\n            select(this.anchorHolderO.nativeElement).selectAll('*').remove();\r\n            this.onResize();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} circle\r\n     * @return {?}\r\n     */\r\n    ExtendedCircleSeriesComponent.prototype.pinTooltip = /**\r\n     * @param {?} circle\r\n     * @return {?}\r\n     */\r\n    function (circle) {\r\n        /** @type {?} */\r\n        var maxLen = circle.seriesName.length + 4;\r\n        /** @type {?} */\r\n        var _that = this;\r\n        _that.pinnedObject['c' + circle.value] = { cx: circle.cx,\r\n            cy: circle.cy,\r\n            seriesName: circle.seriesName,\r\n            value: circle.value,\r\n            label: circle.label,\r\n            color: circle.color };\r\n        // black tooltip rectangle\r\n        select(this.anchorHolderO.nativeElement).append('rect').on('click', (/**\r\n         * @return {?}\r\n         */\r\n        function () { _that.onRemove(this, _that); }))\r\n            .attr('fill', '#000').attr('opacity', 0.7)\r\n            .attr('rx', 3).attr('ry', 3)\r\n            .attr('x', circle.cx - 40).attr('y', circle.cy - 50)\r\n            .attr('class', 'c' + Math.abs(circle.value))\r\n            .attr('height', 40).attr('width', maxLen * 6);\r\n        select(this.anchorHolderO.nativeElement).append('circle').on('click', (/**\r\n         * @return {?}\r\n         */\r\n        function () { _that.onRemove(this, _that); }))\r\n            .attr('fill', circle.color)\r\n            .attr('cx', circle.cx).attr('cy', circle.cy)\r\n            .attr('class', 'c' + Math.abs(circle.value))\r\n            .attr('r', 4);\r\n        select(this.anchorHolderO.nativeElement).append('text').text(circle.seriesName + ' : ' + Math.abs(circle.value))\r\n            .attr('x', circle.cx - 30).attr('y', circle.cy - 35).on('click', (/**\r\n         * @return {?}\r\n         */\r\n        function () { _that.onRemove(this, _that); }))\r\n            .attr('class', 'c' + Math.abs(circle.value))\r\n            .style('fill', '#fff');\r\n        select(this.anchorHolderO.nativeElement).append('text').text(moment$6(circle.label).format(this.dateFormat))\r\n            .attr('x', circle.cx - 30).attr('y', circle.cy - 20).on('click', (/**\r\n         * @return {?}\r\n         */\r\n        function () { _that.onRemove(this, _that); }))\r\n            .attr('class', 'c' + Math.abs(circle.value))\r\n            .style('fill', '#fff').style('font-family', 'apollo');\r\n        this.collectPins.emit(_that.pinnedObject);\r\n    };\r\n    /**\r\n     * @param {?} __0\r\n     * @return {?}\r\n     */\r\n    ExtendedCircleSeriesComponent.prototype.getTooltipText = /**\r\n     * @param {?} __0\r\n     * @return {?}\r\n     */\r\n    function (_a) {\r\n        var label = _a.label, tooltipLabel = _a.tooltipLabel, value = _a.value, seriesName = _a.seriesName, min = _a.min, max = _a.max;\r\n        return \"\\n        <span class=\\\"tooltip-label\\\">\" + seriesName + \" \\u2022 \" + moment$6(label).format(this.dateFormat) + \"</span>\\n        <span class=\\\"tooltip-val\\\">\" + (value < 0 ? value * -1 : value).toLocaleString() + this.getTooltipMinMaxText(min, max) + \"</span>\\n      \";\r\n    };\r\n    /**\r\n     * @param {?} dis\r\n     * @param {?} that\r\n     * @return {?}\r\n     */\r\n    ExtendedCircleSeriesComponent.prototype.onRemove = /**\r\n     * @param {?} dis\r\n     * @param {?} that\r\n     * @return {?}\r\n     */\r\n    function (dis, that) {\r\n        // dis.remove();\r\n        /** @type {?} */\r\n        var className = '';\r\n        for (var i = 0; i < dis.classList.length; i++) {\r\n            if (dis.classList[i].indexOf('c') > -1) {\r\n                className = dis.classList[i];\r\n                break;\r\n            }\r\n        }\r\n        if (className.length > 1) { // presence of className\r\n            select(this.anchorHolderO.nativeElement).selectAll('.' + className).remove();\r\n            delete this.pinnedObject[className];\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedCircleSeriesComponent.prototype.getActiveCircle = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var indexActiveDataPoint = this.data.series.findIndex((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) {\r\n            /** @type {?} */\r\n            var label = d.name;\r\n            return label && _this.visibleValue && label.toString() === _this.visibleValue.toString() && d.value !== undefined;\r\n        }));\r\n        if (indexActiveDataPoint === -1) {\r\n            // No valid point is 'active/hovered over' at this moment.\r\n            return undefined;\r\n        }\r\n        return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedCircleSeriesComponent.prototype.onResize = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _loop_1 = function (prop) {\r\n            if (this_1.data.name === this_1.pinnedObject[prop].seriesName) {\r\n                /** @type {?} */\r\n                var circle = this_1.pinnedObject[prop];\r\n                /** @type {?} */\r\n                var maxLen = circle.seriesName.length + 4;\r\n                /** @type {?} */\r\n                var cx = this_1.xScale(new Date(circle.label));\r\n                /** @type {?} */\r\n                var cy = this_1.yScale(circle.value);\r\n                /** @type {?} */\r\n                var _that_1 = this_1;\r\n                // black tooltip rectangle\r\n                select(this_1.anchorHolderO.nativeElement).append('rect').on('click', (/**\r\n                 * @return {?}\r\n                 */\r\n                function () { _that_1.onRemove(this, _that_1); }))\r\n                    .attr('fill', '#000').attr('opacity', 0.7)\r\n                    .attr('rx', 3).attr('ry', 3)\r\n                    .attr('x', cx - 40).attr('y', cy - 50)\r\n                    .attr('class', 'c' + Math.abs(circle.value))\r\n                    .attr('height', 40).attr('width', maxLen * 6);\r\n                select(this_1.anchorHolderO.nativeElement).append('circle').on('click', (/**\r\n                 * @return {?}\r\n                 */\r\n                function () { _that_1.onRemove(this, _that_1); }))\r\n                    .attr('fill', circle.color)\r\n                    .attr('cx', cx).attr('cy', cy)\r\n                    .attr('class', 'c' + Math.abs(circle.value))\r\n                    .attr('r', 4);\r\n                select(this_1.anchorHolderO.nativeElement).append('text').text(circle.seriesName + ' : ' + Math.abs(circle.value))\r\n                    .attr('x', cx - 30).attr('y', cy - 35).on('click', (/**\r\n                 * @return {?}\r\n                 */\r\n                function () { _that_1.onRemove(this, _that_1); }))\r\n                    .attr('class', 'c' + Math.abs(circle.value))\r\n                    .style('fill', '#fff');\r\n                select(this_1.anchorHolderO.nativeElement).append('text').text(moment$6(circle.label).format(this_1.dateFormat))\r\n                    .attr('x', cx - 30).attr('y', cy - 20).on('click', (/**\r\n                 * @return {?}\r\n                 */\r\n                function () { _that_1.onRemove(this, _that_1); }))\r\n                    .attr('class', 'c' + Math.abs(circle.value))\r\n                    .style('fill', '#fff').style('font-family', 'apollo');\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var prop in this.pinnedObject) {\r\n            _loop_1(prop);\r\n        }\r\n    };\r\n    ExtendedCircleSeriesComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line\r\n                    selector: 'g[app-extended-ngx-charts-circle-series]',\r\n                    template: \"\\n    <svg:g *ngIf=\\\"circle\\\">\\n      <defs>\\n        <svg:g ngx-charts-svg-linear-gradient\\n          orientation=\\\"vertical\\\"\\n          [name]=\\\"gradientId\\\"\\n          [stops]=\\\"circle.gradientStops\\\"\\n        />\\n      </defs>\\n      <svg:rect\\n        *ngIf=\\\"barVisible && type === 'standard'\\\"\\n        [@animationState]=\\\"'active'\\\"\\n        [attr.x]=\\\"circle.cx - circle.radius\\\"\\n        [attr.y]=\\\"circle.cy\\\"\\n        [attr.width]=\\\"circle.radius * 2\\\"\\n        [attr.height]=\\\"circle.height\\\"\\n        [attr.fill]=\\\"gradientFill\\\"\\n        class=\\\"tooltip-bar\\\"\\n      />\\n      <svg:g ngx-charts-circle\\n        class=\\\"circle\\\"\\n        [cx]=\\\"circle.cx\\\"\\n        [cy]=\\\"circle.cy\\\"\\n        [r]=\\\"circle.radius\\\"\\n        [fill]=\\\"circle.color\\\"\\n        [class.active]=\\\"isActive({name: circle.seriesName})\\\"\\n        [pointerEvents]=\\\"circle.value === 0 ? 'none': 'all'\\\"\\n        [data]=\\\"circle.value\\\"\\n        [classNames]=\\\"circle.classNames\\\"\\n        (select)=\\\"pinTooltip(circle)\\\"\\n        (activate)=\\\"activateCircle()\\\"\\n        (deactivate)=\\\"deactivateCircle()\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"'top'\\\"\\n        [tooltipType]=\\\"'tooltip'\\\"\\n        [tooltipTitle]=\\\"tooltipTemplate ? undefined : getTooltipText(circle)\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipContext]=\\\"circle.data\\\"\\n      />\\n    </svg:g>\\n    <svg:g #anchorHolderOne>\\n  </svg:g>\\n  \",\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    animations: [\r\n                        trigger('animationState', [\r\n                            transition(':enter', [\r\n                                style({\r\n                                    opacity: 0,\r\n                                }),\r\n                                animate(250, style({ opacity: 1 }))\r\n                            ])\r\n                        ])\r\n                    ]\r\n                }] }\r\n    ];\r\n    ExtendedCircleSeriesComponent.propDecorators = {\r\n        sizeChanged: [{ type: Input }],\r\n        dataChanged: [{ type: Input }],\r\n        pinnedObject: [{ type: Input }],\r\n        collectPins: [{ type: Output }],\r\n        anchorHolderO: [{ type: ViewChild, args: ['anchorHolderOne', { static: true },] }]\r\n    };\r\n    return ExtendedCircleSeriesComponent;\r\n}(CircleSeriesComponent));\r\nif (false) {\r\n    /** @type {?} */\r\n    ExtendedCircleSeriesComponent.prototype.sizeChanged;\r\n    /** @type {?} */\r\n    ExtendedCircleSeriesComponent.prototype.dataChanged;\r\n    /** @type {?} */\r\n    ExtendedCircleSeriesComponent.prototype.pinnedObject;\r\n    /** @type {?} */\r\n    ExtendedCircleSeriesComponent.prototype.collectPins;\r\n    /** @type {?} */\r\n    ExtendedCircleSeriesComponent.prototype.dateFormat;\r\n    /** @type {?} */\r\n    ExtendedCircleSeriesComponent.prototype.anchorHolderO;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/extended/extended-line-series.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ExtendedLineSeriesComponent = /** @class */ (function (_super) {\r\n    __extends(ExtendedLineSeriesComponent, _super);\r\n    function ExtendedLineSeriesComponent() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedLineSeriesComponent.prototype.update = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.updateGradients();\r\n        /** @type {?} */\r\n        var dis = this;\r\n        /** @type {?} */\r\n        var data = this.sortData(this.data.series);\r\n        /** @type {?} */\r\n        var lineGen = this.getLineGenerator();\r\n        this.path = lineGen(data) || '';\r\n        if (this.data && this.data.series.length === 1) {\r\n            this.getCircleGenerator(dis);\r\n        }\r\n        else if (!this.data) {\r\n            select(this.anchorHolder.nativeElement).selectAll('*').remove();\r\n        }\r\n        /** @type {?} */\r\n        var areaGen = this.getAreaGenerator();\r\n        this.areaPath = areaGen(data) || '';\r\n        if (this.hasRange) {\r\n            /** @type {?} */\r\n            var range = this.getRangeGenerator();\r\n            this.outerPath = range(data) || '';\r\n        }\r\n        if (this.hasGradient) {\r\n            this.stroke = this.gradientUrl;\r\n            /** @type {?} */\r\n            var values = this.data.series.map((/**\r\n             * @param {?} d\r\n             * @return {?}\r\n             */\r\n            function (d) { return d.value; }));\r\n            /** @type {?} */\r\n            var max = Math.max.apply(Math, __spread(values));\r\n            /** @type {?} */\r\n            var min = Math.min.apply(Math, __spread(values));\r\n            if (max === min) {\r\n                this.stroke = this.colors.getColor(max);\r\n            }\r\n        }\r\n        else {\r\n            this.stroke = this.colors.getColor(this.data.name);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedLineSeriesComponent.prototype.getLineGenerator = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return line()\r\n            .x((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) {\r\n            /** @type {?} */\r\n            var label = d.name;\r\n            /** @type {?} */\r\n            var value;\r\n            if (_this.scaleType === 'time') {\r\n                value = _this.xScale(label);\r\n            }\r\n            else if (_this.scaleType === 'linear') {\r\n                value = _this.xScale(Number(label));\r\n            }\r\n            else {\r\n                value = _this.xScale(label);\r\n            }\r\n            return value;\r\n        }))\r\n            .y((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) { return _this.yScale(d.value); }))\r\n            .curve(this.curve);\r\n    };\r\n    /**\r\n     * @param {?} dis\r\n     * @return {?}\r\n     */\r\n    ExtendedLineSeriesComponent.prototype.getCircleGenerator = /**\r\n     * @param {?} dis\r\n     * @return {?}\r\n     */\r\n    function (dis) {\r\n        /** @type {?} */\r\n        var points = dis.data.series;\r\n        select(this.anchorHolder.nativeElement).selectAll('dot')\r\n            .data(points)\r\n            .enter().append('circle') // Uses the enter().append() method\r\n            .attr('class', 'dot') // Assign a class for styling\r\n            .attr('cx', (/**\r\n         * @param {?} d\r\n         * @param {?} i\r\n         * @return {?}\r\n         */\r\n        function (d, i) { return dis.xScale(d['name']); }))\r\n            .attr('cy', (/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) { return dis.yScale(d['value']); }))\r\n            .attr('fill', dis.colors.getColor(dis.data.code))\r\n            .attr('r', 2);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedLineSeriesComponent.prototype.getRangeGenerator = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return area()\r\n            .x((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) {\r\n            /** @type {?} */\r\n            var label = d.name;\r\n            /** @type {?} */\r\n            var value;\r\n            if (_this.scaleType === 'time') {\r\n                value = _this.xScale(label);\r\n            }\r\n            else if (_this.scaleType === 'linear') {\r\n                value = _this.xScale(Number(label));\r\n            }\r\n            else {\r\n                value = _this.xScale(label);\r\n            }\r\n            return value;\r\n        }))\r\n            .y0((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) { return _this.yScale(typeof d.min === 'number' ? d.min : d.value); }))\r\n            .y1((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) { return _this.yScale(typeof d.max === 'number' ? d.max : d.value); }))\r\n            .curve(this.curve);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ExtendedLineSeriesComponent.prototype.getAreaGenerator = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var xProperty = (/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) {\r\n            /** @type {?} */\r\n            var label = d.name;\r\n            return _this.xScale(label);\r\n        });\r\n        return area()\r\n            .x(xProperty)\r\n            .y0((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.yScale.range()[0]; }))\r\n            .y1((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) { return _this.yScale(d.value); }))\r\n            .curve(this.curve);\r\n    };\r\n    /**\r\n     * @param {?} entry\r\n     * @return {?}\r\n     */\r\n    ExtendedLineSeriesComponent.prototype.isActive = /**\r\n     * @param {?} entry\r\n     * @return {?}\r\n     */\r\n    function (entry) {\r\n        if (!this.activeEntries) {\r\n            return false;\r\n        }\r\n        /** @type {?} */\r\n        var item = this.activeEntries.find((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) {\r\n            return entry.name === d.name;\r\n        }));\r\n        return item !== undefined;\r\n    };\r\n    /**\r\n     * @param {?} entry\r\n     * @return {?}\r\n     */\r\n    ExtendedLineSeriesComponent.prototype.isInactive = /**\r\n     * @param {?} entry\r\n     * @return {?}\r\n     */\r\n    function (entry) {\r\n        if (!this.activeEntries || this.activeEntries.length === 0) {\r\n            return false;\r\n        }\r\n        /** @type {?} */\r\n        var item = this.activeEntries.find((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        function (d) {\r\n            return entry.name === d.name;\r\n        }));\r\n        return item === undefined;\r\n    };\r\n    ExtendedLineSeriesComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line\r\n                    selector: 'g[extended-ngx-charts-line-series]',\r\n                    template: \"\\n      <svg:g>\\n        <defs>\\n          <svg:g ngx-charts-svg-linear-gradient *ngIf=\\\"hasGradient\\\"\\n            orientation=\\\"vertical\\\"\\n            [name]=\\\"gradientId\\\"\\n            [stops]=\\\"gradientStops\\\"\\n          />\\n        </defs>\\n        <svg:g ngx-charts-area\\n          class=\\\"line-highlight\\\"\\n          [data]=\\\"data\\\"\\n          [path]=\\\"areaPath\\\"\\n          [fill]=\\\"hasGradient ? gradientUrl : colors.getColor(data.name)\\\"\\n          [opacity]=\\\"0.25\\\"\\n          [startOpacity]=\\\"0\\\"\\n          [gradient]=\\\"true\\\"\\n          [stops]=\\\"areaGradientStops\\\"\\n          [class.active]=\\\"isActive(data)\\\"\\n          [class.inactive]=\\\"isInactive(data)\\\"\\n          [animations]=\\\"animations\\\"\\n        />\\n        <g #anchorHolder class='anchorHolder'>\\n        </g>\\n        <svg:g ngx-charts-line\\n          class=\\\"line-series\\\"\\n          [data]=\\\"data\\\"\\n          [path]=\\\"path\\\"\\n          [stroke]=\\\"stroke\\\"\\n          [animations]=\\\"animations\\\"\\n          [class.active]=\\\"isActive(data)\\\"\\n          [class.inactive]=\\\"isInactive(data)\\\"\\n        />\\n\\n       <svg:g ngx-charts-area\\n          *ngIf=\\\"hasRange\\\"\\n          class=\\\"line-series-range\\\"\\n          [data]=\\\"data\\\"\\n          [path]=\\\"outerPath\\\"\\n          [fill]=\\\"hasGradient ? gradientUrl : colors.getColor(data.name)\\\"\\n          [class.active]=\\\"isActive(data)\\\"\\n          [class.inactive]=\\\"isInactive(data)\\\"\\n          [opacity]=\\\"rangeFillOpacity\\\"\\n          [animations]=\\\"animations\\\"\\n        />\\n      </svg:g>\\n    \",\r\n                    changeDetection: ChangeDetectionStrategy.OnPush\r\n                }] }\r\n    ];\r\n    ExtendedLineSeriesComponent.propDecorators = {\r\n        anchorHolder: [{ type: ViewChild, args: ['anchorHolder', { static: true },] }]\r\n    };\r\n    return ExtendedLineSeriesComponent;\r\n}(LineSeriesComponent));\r\nif (false) {\r\n    /** @type {?} */\r\n    ExtendedLineSeriesComponent.prototype.anchorHolder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/reports/reports.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ReportsService = /** @class */ (function () {\r\n    function ReportsService() {\r\n    }\r\n    /**\r\n     * @param {?} report\r\n     * @param {?} planDetails\r\n     * @param {?} getStudySummary$\r\n     * @param {?} planDetailsService$\r\n     * @param {?} studyKey\r\n     * @param {?} userName\r\n     * @param {?} reportLocaleResources\r\n     * @return {?}\r\n     */\r\n    ReportsService.prototype.generateReport = /**\r\n     * @param {?} report\r\n     * @param {?} planDetails\r\n     * @param {?} getStudySummary$\r\n     * @param {?} planDetailsService$\r\n     * @param {?} studyKey\r\n     * @param {?} userName\r\n     * @param {?} reportLocaleResources\r\n     * @return {?}\r\n     */\r\n    function (report, planDetails, getStudySummary$, planDetailsService$, studyKey, userName, reportLocaleResources) {\r\n        this.getReportsParameters(report, planDetails, getStudySummary$, planDetailsService$, studyKey, userName, reportLocaleResources).then((/**\r\n         * @param {?} params\r\n         * @return {?}\r\n         */\r\n        function (params) {\r\n            if (params) {\r\n                window.open('../report.jsp?'.concat(params), '_blank');\r\n            }\r\n        })).catch((/**\r\n         * @param {?} err\r\n         * @return {?}\r\n         */\r\n        function (err) {\r\n            console.log('There is a problem while rreturning the promise.....');\r\n            console.log(err);\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} report\r\n     * @param {?} planDetails\r\n     * @param {?} getStudySummary$\r\n     * @param {?} planDetailsService$\r\n     * @param {?} studyKey\r\n     * @param {?} userName\r\n     * @param {?} reportLocaleResources\r\n     * @return {?}\r\n     */\r\n    ReportsService.prototype.getReportsParameters = /**\r\n     * @param {?} report\r\n     * @param {?} planDetails\r\n     * @param {?} getStudySummary$\r\n     * @param {?} planDetailsService$\r\n     * @param {?} studyKey\r\n     * @param {?} userName\r\n     * @param {?} reportLocaleResources\r\n     * @return {?}\r\n     */\r\n    function (report, planDetails, getStudySummary$, planDetailsService$, studyKey, userName, reportLocaleResources) {\r\n        var _this = this;\r\n        return new Promise((/**\r\n         * @param {?} resolve\r\n         * @return {?}\r\n         */\r\n        function (resolve) {\r\n            /** @type {?} */\r\n            var combined$ = combineLatest(getStudySummary$, planDetailsService$);\r\n            combined$.subscribe((/**\r\n             * @param {?} __0\r\n             * @return {?}\r\n             */\r\n            function (_a) {\r\n                var _b = __read(_a, 2), study = _b[0], pd = _b[1];\r\n                console.log(study, planDetails);\r\n                /** @type {?} */\r\n                var qs = '';\r\n                report.parameterList.parameterName.forEach((/**\r\n                 * @param {?} param\r\n                 * @return {?}\r\n                 */\r\n                function (param) {\r\n                    switch (param) {\r\n                        case reportLocaleResources['reportCmdName']: {\r\n                            qs += qs.length > 0 ? '&' : '';\r\n                            qs += param + '=' + report.reportId;\r\n                            break;\r\n                        }\r\n                        case reportLocaleResources['reportStudyId']: {\r\n                            qs += qs.length > 0 ? '&' : '';\r\n                            qs += param + '=' + study.id;\r\n                            break;\r\n                        }\r\n                        case reportLocaleResources['PlanReportStudyKey']: {\r\n                            qs += qs.length > 0 ? '&' : '';\r\n                            qs += param + '=' + studyKey;\r\n                            break;\r\n                        }\r\n                        case reportLocaleResources['PlanReportUserName']: {\r\n                            qs += qs.length > 0 ? '&' : '';\r\n                            // qs += param + '=' + this.userDataService.getUserName();\r\n                            qs += param + '=' + userName;\r\n                            break;\r\n                        }\r\n                        case reportLocaleResources['ReportViewName']: {\r\n                            qs += qs.length > 0 ? '&' : '';\r\n                            qs += param + '=PLAN';\r\n                            break;\r\n                        }\r\n                        case reportLocaleResources['ReportingPeriod']: {\r\n                            qs += qs.length > 0 ? '&' : '';\r\n                            qs += param + '=' + _this.getReportingPeriod(report.reportId);\r\n                            break;\r\n                        }\r\n                        case reportLocaleResources['PlanReportKey']: {\r\n                            qs += qs.length > 0 ? '&' : '';\r\n                            qs += param + '=' + planDetails.planProperties.planKey;\r\n                            break;\r\n                        }\r\n                        case reportLocaleResources['ReportPlanName']: {\r\n                            qs += qs.length > 0 ? '&' : '';\r\n                            qs += param + '=' + planDetails.planProperties.name;\r\n                            break;\r\n                        }\r\n                        case reportLocaleResources['ReportPlanStatus']: {\r\n                            /** @type {?} */\r\n                            var status_1 = planDetails.planProperties.planStatus;\r\n                            qs += qs.length > 0 ? '&' : '';\r\n                            qs +=\r\n                                param +\r\n                                    '=' +\r\n                                    (typeof status_1 === 'string' ? status_1 : status_1.value);\r\n                            break;\r\n                        }\r\n                    }\r\n                }));\r\n                console.log(qs);\r\n                resolve(qs);\r\n            }));\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    ReportsService.prototype.isJSONEmpty = /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {?} reportId\r\n     * @return {?}\r\n     */\r\n    ReportsService.prototype.getReportingPeriod = /**\r\n     * @param {?} reportId\r\n     * @return {?}\r\n     */\r\n    function (reportId) {\r\n        /** @type {?} */\r\n        var reportingPeriodKey = reportId.substr(reportId.length - 2, 1);\r\n        switch (reportingPeriodKey) {\r\n            case 'Y': {\r\n                return 'YEARLY';\r\n            }\r\n            case 'Q': {\r\n                return 'QUARTERLY';\r\n            }\r\n            case 'M': {\r\n                return 'MONTHLY';\r\n            }\r\n            default: {\r\n                return 'WEEKLY';\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} resName\r\n     * @param {?} reportLocaleResources\r\n     * @return {?}\r\n     */\r\n    ReportsService.prototype.getLocaleResource = /**\r\n     * @param {?} resName\r\n     * @param {?} reportLocaleResources\r\n     * @return {?}\r\n     */\r\n    function (resName, reportLocaleResources) {\r\n        return reportLocaleResources[resName];\r\n    };\r\n    ReportsService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ReportsService.ctorParameters = function () { return []; };\r\n    return ReportsService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/reports/reports.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ReportsComponent = /** @class */ (function () {\r\n    function ReportsComponent(reportService) {\r\n        this.reportService = reportService;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ReportsComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.approvedPlanReportWarningMsg = this.reportLocaleResources['Approved_Plan_Report_Warning'];\r\n        this.planDetailsService$.subscribe((/**\r\n         * @param {?} pd\r\n         * @return {?}\r\n         */\r\n        function (pd) {\r\n            _this.planDetails = pd;\r\n            _this.isApprovedPlan = _this.planDetails.planProperties.isPlan && _this.planDetails.planProperties.isPlanApproved;\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} reportId\r\n     * @return {?}\r\n     */\r\n    ReportsComponent.prototype.generateReport = /**\r\n     * @param {?} reportId\r\n     * @return {?}\r\n     */\r\n    function (reportId) {\r\n        /** @type {?} */\r\n        var reportClicked = this.reportList.filter((/**\r\n         * @param {?} report\r\n         * @return {?}\r\n         */\r\n        function (report) {\r\n            return report.reportId === reportId;\r\n        }));\r\n        if (reportClicked.length > 0) {\r\n            /** @type {?} */\r\n            var report = reportClicked[0];\r\n            this.reportService.generateReport(report, this.planDetails, this.getStudySummary$, this.planDetailsService$, this.studyKey, this.userName, this.reportLocaleResources);\r\n        }\r\n    };\r\n    ReportsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-reports',\r\n                    template: \"<div *ngIf=\\\"isApprovedPlan\\\" class=\\\"ctos-warning\\\" [innerHTML]=\\\"approvedPlanReportWarningMsg\\\"></div>\\r\\n<!-- <div class=\\\"report-container\\\"> -->\\r\\n<div class=\\\"ctos-card\\\" *ngFor=\\\"let report of reportList; let i = index\\\">\\r\\n  <a class=\\\"ctos-card-header ctos-card-title\\\" [routerLink]=\\\"\\\" (click)=\\\"generateReport(report.reportId)\\\"\\r\\n    [matTooltip]=\\\"'Export Report'\\\">\\r\\n    <!-- <a  for=\\\"properties\\\"> -->\\r\\n    <span>{{ report.name }}</span>\\r\\n  </a>\\r\\n  <p>\\r\\n    {{ report.description }}\\r\\n  </p>\\r\\n</div>\\r\\n<!-- </div> -->\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ReportsComponent.ctorParameters = function () { return [\r\n        { type: ReportsService }\r\n    ]; };\r\n    ReportsComponent.propDecorators = {\r\n        reportLocaleResources: [{ type: Input }],\r\n        reportList: [{ type: Input }],\r\n        getStudySummary$: [{ type: Input }],\r\n        planDetailsService$: [{ type: Input }],\r\n        studyKey: [{ type: Input }],\r\n        userName: [{ type: Input }]\r\n    };\r\n    return ReportsComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    ReportsComponent.prototype.planDetails;\r\n    /** @type {?} */\r\n    ReportsComponent.prototype.reportLocaleResources;\r\n    /** @type {?} */\r\n    ReportsComponent.prototype.reportList;\r\n    /** @type {?} */\r\n    ReportsComponent.prototype.getStudySummary$;\r\n    /** @type {?} */\r\n    ReportsComponent.prototype.planDetailsService$;\r\n    /** @type {?} */\r\n    ReportsComponent.prototype.studyKey;\r\n    /** @type {?} */\r\n    ReportsComponent.prototype.userName;\r\n    /** @type {?} */\r\n    ReportsComponent.prototype.isApprovedPlan;\r\n    /** @type {?} */\r\n    ReportsComponent.prototype.approvedPlanReportWarningMsg;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ReportsComponent.prototype.reportService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/loading-screen.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LoadingScreenService = /** @class */ (function () {\r\n    function LoadingScreenService() {\r\n        this._loading = 0;\r\n        this.loadingStatus = new Subject();\r\n    }\r\n    Object.defineProperty(LoadingScreenService.prototype, \"loading\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._loading;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._loading = value;\r\n            this.loadingStatus.next(value);\r\n            if (this._loading > 0) {\r\n                document.body.classList.add('progress-cursor');\r\n            }\r\n            else {\r\n                document.body.classList.remove('progress-cursor');\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LoadingScreenService.prototype.startLoading = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.loading++;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LoadingScreenService.prototype.stopLoading = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.loading--;\r\n    };\r\n    LoadingScreenService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    return LoadingScreenService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    LoadingScreenService.prototype._loading;\r\n    /** @type {?} */\r\n    LoadingScreenService.prototype.loadingStatus;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/loading-screen/loading-screen.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LoadingScreenComponent = /** @class */ (function () {\r\n    function LoadingScreenComponent(loadingScreenService) {\r\n        this.loadingScreenService = loadingScreenService;\r\n        this.loading = 0;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LoadingScreenComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.loadingSubscription = this.loadingScreenService.loadingStatus.pipe(debounceTime(200)).subscribe((/**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            _this.loading = value;\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LoadingScreenComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.loadingSubscription.unsubscribe();\r\n    };\r\n    LoadingScreenComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-loading-screen',\r\n                    template: \"<div class=\\\"loading-screen-wrapper\\\" *ngIf=\\\"loading > 0\\\">\\r\\n    <div class=\\\"sk-circle\\\">\\r\\n      <div class=\\\"sk-circle1 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle2 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle3 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle4 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle5 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle6 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle7 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle8 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle9 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle10 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle11 sk-child\\\"></div>\\r\\n      <div class=\\\"sk-circle12 sk-child\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    LoadingScreenComponent.ctorParameters = function () { return [\r\n        { type: LoadingScreenService }\r\n    ]; };\r\n    return LoadingScreenComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    LoadingScreenComponent.prototype.loading;\r\n    /** @type {?} */\r\n    LoadingScreenComponent.prototype.loadingSubscription;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    LoadingScreenComponent.prototype.loadingScreenService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/auth-header/auth-header.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AuthHeaderComponent = /** @class */ (function () {\r\n    function AuthHeaderComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AuthHeaderComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    AuthHeaderComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-auth-header',\r\n                    template: \"<ctos-auth-main-header\\r\\n    [logoUrl]=\\\"logoUrl\\\"\\r\\n    [appInfoUrl]=\\\"appInfoUrl\\\"\\r\\n></ctos-auth-main-header>\\r\\n\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    AuthHeaderComponent.ctorParameters = function () { return []; };\r\n    AuthHeaderComponent.propDecorators = {\r\n        logoUrl: [{ type: Input }],\r\n        appInfoUrl: [{ type: Input }]\r\n    };\r\n    return AuthHeaderComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    AuthHeaderComponent.prototype.logoUrl;\r\n    /** @type {?} */\r\n    AuthHeaderComponent.prototype.appInfoUrl;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/worldwide-dropdown/worldwide-dropdown.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar WorldwideDropdownComponent = /** @class */ (function () {\r\n    function WorldwideDropdownComponent(payloadCommandService, baseConnectionService) {\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.SORT_KEY = 'name';\r\n        this.optionClick = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WorldwideDropdownComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.fetchDropdownItems();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    WorldwideDropdownComponent.prototype.fetchDropdownItems = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        // const payload = this.payloadCommandService.getCommandDetails(COMMAND.GET_FILTER_COUNTRY_DATA, null, null, null, null);\r\n        /** @type {?} */\r\n        var params = {};\r\n        // TODO: Make the module as Input\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo('ENRODET', null, 'SITES');\r\n        /** @type {?} */\r\n        var payload = this.payloadCommandService.getApiRequest(COMMAND.GET_FILTER_COUNTRY_DATA, params, null, moduleInfo);\r\n        /** @type {?} */\r\n        var actionParam = {};\r\n        actionParam.url = APIEndPoints.FILTER_COUNTRY_DATA;\r\n        actionParam.endPoint = true;\r\n        actionParam.cacheKey = CacheKey.GetFilterCountryData;\r\n        // this.baseConnectionService.sendRequest(payload, actionParam).subscribe((response: any) => {\r\n        //   if (response.result === COMMON.RESULT_OK) {\r\n        //     this.items = [{\r\n        //       name: 'Worldwide',\r\n        //       code: 'WW',\r\n        //       key: 0,\r\n        //       children: this.getChildren(response.countryRegionMappingList.countryRegionMapping)\r\n        //     }];\r\n        //     this.selectedItem = this.items[0];\r\n        //   }\r\n        // });\r\n        this.baseConnectionService\r\n            .send(payload, actionParam)\r\n            .subscribe((/**\r\n         * @param {?} response\r\n         * @return {?}\r\n         */\r\n        function (response) {\r\n            if (response.result === COMMON.RESULT_OK) {\r\n                if (_this.geoFilters && _this.geoFilters.length > 0) {\r\n                    _this.items = [{\r\n                            name: 'Worldwide',\r\n                            code: 'WW',\r\n                            key: 0,\r\n                            children: _this.getChildren(response.countryRegionMappingList.countryRegionMapping)\r\n                        }];\r\n                }\r\n                else {\r\n                    _this.items = [{\r\n                            name: 'Worldwide',\r\n                            code: 'WW',\r\n                            key: 0\r\n                        }];\r\n                }\r\n                if (_this.selectedOption) {\r\n                    _this.selectedItem = _this.selectedOption;\r\n                }\r\n                else {\r\n                    _this.selectedItem = _this.items[0];\r\n                }\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    WorldwideDropdownComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes.geoFilters && changes.geoFilters.currentValue) {\r\n            this.geoFilters = changes.geoFilters.currentValue;\r\n            this.fetchDropdownItems();\r\n            // if (this.items && this.items.length > 0) {\r\n            //   this.selectedItem = this.items[0];\r\n            // }\r\n        }\r\n        if (changes.selectedOption && changes.selectedOption.currentValue) {\r\n            this.selectedItem = changes.selectedOption.currentValue;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    WorldwideDropdownComponent.prototype.optionClicked = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        this.selectedItem = item;\r\n        this.optionClick.emit(item);\r\n        this.wwList.closeMenu();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} countryRegionMapping\r\n     * @return {?}\r\n     */\r\n    WorldwideDropdownComponent.prototype.getChildren = /**\r\n     * @private\r\n     * @param {?} countryRegionMapping\r\n     * @return {?}\r\n     */\r\n    function (countryRegionMapping) {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var regions = [];\r\n        countryRegionMapping = [].concat(countryRegionMapping);\r\n        /** @type {?} */\r\n        var countryKeys = self.geoFilters.filter((/**\r\n         * @param {?} geoKey\r\n         * @return {?}\r\n         */\r\n        function (geoKey) { return geoKey.level === GEO_LEVELS.COUNTRY; })).map((/**\r\n         * @param {?} geoKey\r\n         * @return {?}\r\n         */\r\n        function (geoKey) { return geoKey.key; }));\r\n        /** @type {?} */\r\n        var regionKeys = self.geoFilters.filter((/**\r\n         * @param {?} geoKey\r\n         * @return {?}\r\n         */\r\n        function (geoKey) { return geoKey.level === GEO_LEVELS.REGION; })).map((/**\r\n         * @param {?} geoKey\r\n         * @return {?}\r\n         */\r\n        function (geoKey) { return geoKey.key; }));\r\n        regions = countryRegionMapping.filter((/**\r\n         * @param {?} mapping\r\n         * @return {?}\r\n         */\r\n        function (mapping) {\r\n            if (regionKeys && regionKeys.indexOf(mapping.regionDetails.regionKey) === -1) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        })).map((/**\r\n         * @param {?} mapping\r\n         * @return {?}\r\n         */\r\n        function (mapping) {\r\n            return {\r\n                name: mapping.regionDetails.regionName,\r\n                code: mapping.regionDetails.regionCode,\r\n                key: mapping.regionDetails.regionKey,\r\n                level: GEO_LEVELS.REGION,\r\n                children: Array.isArray(mapping.countryDataList.countryData)\r\n                    ? self.sortItems(mapping.countryDataList.countryData.filter((/**\r\n                     * @param {?} country\r\n                     * @return {?}\r\n                     */\r\n                    function (country) {\r\n                        if (countryKeys && countryKeys.indexOf(country.countryKey) === -1) {\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            return true;\r\n                        }\r\n                    })).map((/**\r\n                     * @param {?} country\r\n                     * @return {?}\r\n                     */\r\n                    function (country) {\r\n                        return {\r\n                            name: country.countryName,\r\n                            code: country.countryCode,\r\n                            key: country.countryKey,\r\n                            level: GEO_LEVELS.COUNTRY\r\n                        };\r\n                    })))\r\n                    : [{\r\n                            name: mapping.countryDataList.countryData.countryName,\r\n                            code: mapping.countryDataList.countryData.countryCode,\r\n                            key: mapping.countryDataList.countryData.countryKey,\r\n                            level: GEO_LEVELS.COUNTRY\r\n                        }]\r\n            };\r\n        }));\r\n        return this.sortItems(regions);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} items\r\n     * @param {?=} property\r\n     * @return {?}\r\n     */\r\n    WorldwideDropdownComponent.prototype.sortItems = /**\r\n     * @private\r\n     * @param {?} items\r\n     * @param {?=} property\r\n     * @return {?}\r\n     */\r\n    function (items, property) {\r\n        if (property === void 0) { property = this.SORT_KEY; }\r\n        /** @type {?} */\r\n        var itemsCopy = JSON.parse(JSON.stringify(items));\r\n        /** @type {?} */\r\n        var result = itemsCopy.sort((/**\r\n         * @param {?} item1\r\n         * @param {?} item2\r\n         * @return {?}\r\n         */\r\n        function (item1, item2) {\r\n            /** @type {?} */\r\n            var property1 = item1[property];\r\n            /** @type {?} */\r\n            var property2 = item2[property];\r\n            if (typeof property1 === 'string' && typeof property2 === 'string') {\r\n                property1 = property1.toLowerCase();\r\n                property2 = property2.toLowerCase();\r\n            }\r\n            if ((property1 < property2) || (property1 === '')) {\r\n                return -1;\r\n            }\r\n            else if ((property1 > property2) || (property2 === '')) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }));\r\n        return result;\r\n    };\r\n    WorldwideDropdownComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-worldwide-dropdown',\r\n                    template: \"<button mat-button class=\\\"drop-down-button\\\" [matMenuTriggerFor]=\\\"panel.menu\\\" #wwList=\\\"matMenuTrigger\\\">\\r\\n    <span class=\\\"selected-item\\\">{{selectedItem?.name}}</span>\\r\\n    <span class=\\\"mat-select-arrow\\\"></span>\\r\\n</button>\\r\\n<ctos-nested-dropdown (optionClick)=\\\"optionClicked($event)\\\" #panel [items]=\\\"items\\\"></ctos-nested-dropdown>\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    WorldwideDropdownComponent.ctorParameters = function () { return [\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService }\r\n    ]; };\r\n    WorldwideDropdownComponent.propDecorators = {\r\n        geoFilters: [{ type: Input }],\r\n        optionClick: [{ type: Output }],\r\n        selectedOption: [{ type: Input }],\r\n        wwList: [{ type: ViewChild, args: ['wwList', { static: true },] }]\r\n    };\r\n    return WorldwideDropdownComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    WorldwideDropdownComponent.prototype.geoFilters;\r\n    /** @type {?} */\r\n    WorldwideDropdownComponent.prototype.optionClick;\r\n    /** @type {?} */\r\n    WorldwideDropdownComponent.prototype.selectedOption;\r\n    /** @type {?} */\r\n    WorldwideDropdownComponent.prototype.selectedItem;\r\n    /** @type {?} */\r\n    WorldwideDropdownComponent.prototype.SORT_KEY;\r\n    /** @type {?} */\r\n    WorldwideDropdownComponent.prototype.items;\r\n    /** @type {?} */\r\n    WorldwideDropdownComponent.prototype.wwList;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    WorldwideDropdownComponent.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    WorldwideDropdownComponent.prototype.baseConnectionService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/multi-level-dropdown/multi-level-dropdown.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MultiLevelDropdownComponent = /** @class */ (function () {\r\n    function MultiLevelDropdownComponent() {\r\n        this.optionGroups = [];\r\n        this.emitMenuClick = new EventEmitter();\r\n    }\r\n    Object.defineProperty(MultiLevelDropdownComponent.prototype, \"selectedOption\", {\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            this.selectedCohort = data;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MultiLevelDropdownComponent.prototype, \"multiOptionGroups\", {\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            this.optionGroups = data;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MultiLevelDropdownComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MultiLevelDropdownComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    MultiLevelDropdownComponent.prototype.selectionChanged = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.emitMenuClick.emit(event);\r\n    };\r\n    MultiLevelDropdownComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ctos-so-multi-level-dropdown',\r\n                    template: \"<mat-form-field class=\\\"over-threshold-cohort-dropdown\\\">\\r\\n<mat-select panelClass=\\\"multi-level-dropdown-panel ctos-cohort-list-panel\\\" disableOptionCentering [(value)]=\\\"selectedCohort\\\" (selectionChange)=\\\"selectionChanged($event)\\\">\\r\\n    <mat-optgroup *ngFor=\\\"let group of optionGroups\\\" [disabled]=\\\"group.disabled\\\">\\r\\n        <span  [matTooltip]=\\\"group.tooltip\\\">{{group.name}}</span>\\r\\n        <mat-option *ngFor=\\\"let option of group.options\\\" [matTooltip]=\\\"option.tooltip\\\" [value]=\\\"option.value\\\">\\r\\n            <span>{{option.viewValue}}</span>\\r\\n        </mat-option>\\r\\n    </mat-optgroup>\\r\\n</mat-select>\\r\\n</mat-form-field>\\r\\n\",\r\n                    encapsulation: ViewEncapsulation.None\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    MultiLevelDropdownComponent.ctorParameters = function () { return []; };\r\n    MultiLevelDropdownComponent.propDecorators = {\r\n        emitMenuClick: [{ type: Output }],\r\n        selectedOption: [{ type: Input }],\r\n        multiOptionGroups: [{ type: Input }]\r\n    };\r\n    return MultiLevelDropdownComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    MultiLevelDropdownComponent.prototype.selectedCohort;\r\n    /** @type {?} */\r\n    MultiLevelDropdownComponent.prototype.optionGroups;\r\n    /** @type {?} */\r\n    MultiLevelDropdownComponent.prototype.emitMenuClick;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/components.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ComponentsModule = /** @class */ (function () {\r\n    function ComponentsModule() {\r\n    }\r\n    ComponentsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        MatMenuModule,\r\n                        MatButtonModule,\r\n                        MatDialogModule,\r\n                        MatTooltipModule,\r\n                        FormsModule,\r\n                        CommonLibraryModule,\r\n                        CommonAngularMaterialModule,\r\n                        Ng5SliderModule,\r\n                        NgxChartsModule,\r\n                        MatCheckboxModule,\r\n                        RouterModule\r\n                    ],\r\n                    declarations: [\r\n                        HeaderComponent,\r\n                        MilestoneGraphComponent,\r\n                        PlanDropdownListComponent,\r\n                        TrimPipe,\r\n                        CueCardComponent,\r\n                        DropdownComponent,\r\n                        PlanOptionsComponent,\r\n                        ApprovePlanComponent,\r\n                        CopyPlanComponent,\r\n                        CTOSPlanChartComponent,\r\n                        DateCustomPipe,\r\n                        CTOSPlanChartLegendComponent,\r\n                        CTOSPlanChartLegendItemComponent,\r\n                        GojsCanvasComponent,\r\n                        CTOSCustomMultiSelectComponent,\r\n                        ExtendedNgxTooltipAreaComponent,\r\n                        ExtendedCircleSeriesComponent,\r\n                        ExtendedLineSeriesComponent,\r\n                        LoadingScreenComponent,\r\n                        ReportsComponent,\r\n                        AuthHeaderComponent,\r\n                        WorldwideDropdownComponent,\r\n                        MultiLevelDropdownComponent\r\n                    ],\r\n                    providers: [],\r\n                    exports: [\r\n                        HeaderComponent,\r\n                        MilestoneGraphComponent,\r\n                        PlanDropdownListComponent,\r\n                        CueCardComponent,\r\n                        DropdownComponent,\r\n                        PlanOptionsComponent,\r\n                        CTOSPlanChartComponent,\r\n                        CTOSPlanChartLegendComponent,\r\n                        CTOSPlanChartLegendItemComponent,\r\n                        GojsCanvasComponent,\r\n                        CTOSCustomMultiSelectComponent,\r\n                        ExtendedNgxTooltipAreaComponent,\r\n                        ExtendedCircleSeriesComponent,\r\n                        ExtendedLineSeriesComponent,\r\n                        LoadingScreenComponent,\r\n                        ReportsComponent,\r\n                        AuthHeaderComponent,\r\n                        WorldwideDropdownComponent,\r\n                        MultiLevelDropdownComponent\r\n                    ],\r\n                    entryComponents: [CopyPlanComponent, ApprovePlanComponent, CTOSPlanChartComponent]\r\n                },] }\r\n    ];\r\n    return ComponentsModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/milestone-graph/milestone-graph.component.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$7 = momentNS;\r\nvar MilestoneGraphService = /** @class */ (function () {\r\n    function MilestoneGraphService() {\r\n    }\r\n    /**\r\n     * @param {?} milestones\r\n     * @return {?}\r\n     */\r\n    MilestoneGraphService.prototype.rangeFinder = /**\r\n     * @param {?} milestones\r\n     * @return {?}\r\n     */\r\n    function (milestones) {\r\n        /** @type {?} */\r\n        var range = { start: '', end: '', difference: '' };\r\n        milestones.forEach((/**\r\n         * @param {?} milestone\r\n         * @return {?}\r\n         */\r\n        function (milestone) {\r\n            /** @type {?} */\r\n            var milestoneStart;\r\n            /** @type {?} */\r\n            var milestoneEnd;\r\n            if (milestone['TFSI'] && milestone['PFSI'] && moment$7(milestone['TFSI']) > moment$7(milestone['PFSI'])) {\r\n                milestoneStart = 'PFSI';\r\n            }\r\n            else if (milestone['TFSI'] && milestone['PFSI']) {\r\n                milestoneStart = 'TFSI';\r\n            }\r\n            else if (milestone['TFSI']) {\r\n                milestoneStart = 'TFSI';\r\n            }\r\n            else {\r\n                milestoneStart = 'PFSI';\r\n            }\r\n            if (milestone['TLSR'] && milestone['PLSR'] && moment$7(milestone['TLSR']) > moment$7(milestone['PLSR'])) {\r\n                milestoneEnd = 'TLSR';\r\n            }\r\n            else if (milestone['TLSR'] && milestone['PLSR']) {\r\n                milestoneEnd = 'PLSR';\r\n            }\r\n            else if (milestone['TLSR']) {\r\n                milestoneEnd = 'TLSR';\r\n            }\r\n            else {\r\n                milestoneEnd = 'PLSR';\r\n            }\r\n            if (milestone[milestoneStart] && (range.end === '' || moment$7(range.start) > moment$7(milestone[milestoneStart]))) {\r\n                range.start = milestone[milestoneStart];\r\n            }\r\n            // tlsr\r\n            if (milestone[milestoneEnd] && (range.end === '' || moment$7(range.end) < moment$7(milestone[milestoneEnd]))) {\r\n                range.end = milestone[milestoneEnd];\r\n            }\r\n        }));\r\n        /** @type {?} */\r\n        var start = moment$7(range.start, 'YYYY-MM-DD');\r\n        // SO-15417 : Adding extra day to calculate diff in weeks as per requirement\r\n        /** @type {?} */\r\n        var end = moment$7(range.end, 'YYYY-MM-DD').add(1, 'days');\r\n        // Difference in number of weeks\r\n        range.difference = moment$7.duration(end.diff(start)).asWeeks() + ' Weeks';\r\n        return range;\r\n    };\r\n    MilestoneGraphService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    MilestoneGraphService.ctorParameters = function () { return []; };\r\n    return MilestoneGraphService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/configuration.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ConfigurationService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of configuration service.\r\n     * @param encryptionService\r\n     */\r\n    function ConfigurationService(encryptionService) {\r\n        this.encryptionService = encryptionService;\r\n    }\r\n    Object.defineProperty(ConfigurationService.prototype, \"encryptKey\", {\r\n        /**\r\n         * Gets encrypt key\r\n         */\r\n        get: /**\r\n         * Gets encrypt key\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.encryptionKey;\r\n        },\r\n        /**\r\n         * Sets encrypt key\r\n         */\r\n        set: /**\r\n         * Sets encrypt key\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.encryptionKey = v;\r\n            this.encryptionService.setKey(this.encryptionKey);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"cacheMaxAge\", {\r\n        /**\r\n         * Gets cache max age\r\n         */\r\n        get: /**\r\n         * Gets cache max age\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.cacheAge;\r\n        },\r\n        /**\r\n         * Sets cache max age\r\n         */\r\n        set: /**\r\n         * Sets cache max age\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.cacheAge = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"encryptType\", {\r\n        /**\r\n         * Gets encrypt type\r\n         */\r\n        get: /**\r\n         * Gets encrypt type\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.encryptionType;\r\n        },\r\n        /**\r\n         * Sets encrypt type\r\n         */\r\n        set: /**\r\n         * Sets encrypt type\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.encryptionType = v;\r\n            this.encryptionService.setEncryption(this.encryptionType);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"dispatchUrl\", {\r\n        /**\r\n         * Gets dispatch url\r\n         */\r\n        get: /**\r\n         * Gets dispatch url\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.dispatchedUrl;\r\n        },\r\n        /**\r\n         * Sets dispatch url\r\n         */\r\n        set: /**\r\n         * Sets dispatch url\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.dispatchedUrl = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"appUrl\", {\r\n        /**\r\n         * Gets app url\r\n         */\r\n        get: /**\r\n         * Gets app url\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.applicationUrl;\r\n        },\r\n        /**\r\n         * Sets app url\r\n         */\r\n        set: /**\r\n         * Sets app url\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.applicationUrl = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"$loginUrl\", {\r\n        /**\r\n           * Getter $loginUrl\r\n           * @return string\r\n           */\r\n        get: /**\r\n         * Getter $loginUrl\r\n         * @return {?} string\r\n         */\r\n        function () {\r\n            return this.loginUrl;\r\n        },\r\n        /**\r\n         * Setter $loginUrl\r\n         * @param string value\r\n         */\r\n        set: /**\r\n         * Setter $loginUrl\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.loginUrl = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"authUrl\", {\r\n        /**\r\n         * Gets app url\r\n         */\r\n        get: /**\r\n         * Gets app url\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._authUrl;\r\n        },\r\n        /**\r\n         * Sets app url\r\n         */\r\n        set: /**\r\n         * Sets app url\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._authUrl = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationService.prototype, \"soApiUrl\", {\r\n        /**\r\n         * Gets app url\r\n         */\r\n        get: /**\r\n         * Gets app url\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._soApiUrl;\r\n        },\r\n        /**\r\n         * Sets app url\r\n         */\r\n        set: /**\r\n         * Sets app url\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._soApiUrl = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets config\r\n     *\r\n     * Set the application configuration\r\n     * encryptionKey\r\n     * cacheAge\r\n     * encryptionType\r\n     * applicationUrl\r\n     * @param environment\r\n     */\r\n    /**\r\n     * Sets config\r\n     *\r\n     * Set the application configuration\r\n     * encryptionKey\r\n     * cacheAge\r\n     * encryptionType\r\n     * applicationUrl\r\n     * @param {?=} environment\r\n     * @return {?}\r\n     */\r\n    ConfigurationService.prototype.setConfig = /**\r\n     * Sets config\r\n     *\r\n     * Set the application configuration\r\n     * encryptionKey\r\n     * cacheAge\r\n     * encryptionType\r\n     * applicationUrl\r\n     * @param {?=} environment\r\n     * @return {?}\r\n     */\r\n    function (environment) {\r\n        if (environment) {\r\n            if (!this.typeCheck(environment)) {\r\n                throw new Error(\"Invalid environment object\");\r\n            }\r\n            this.encryptKey = environment.clientEncryptionKey;\r\n            this.cacheMaxAge = environment.cacheAge;\r\n            this.encryptType = environment.cryptoJS;\r\n            this.appUrl = environment.app_url;\r\n            this.$loginUrl = environment.login_url;\r\n            this.authUrl = environment.authUrl;\r\n            this.soApiUrl = environment.soApiUrl;\r\n        }\r\n        else {\r\n            throw new Error(\"Environment object is empty\");\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    ConfigurationService.prototype.typeCheck = /**\r\n     * @private\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        return (obj.clientEncryptionKey !== undefined && obj.cacheAge !== undefined\r\n            && obj.cryptoJS !== undefined && obj.app_url !== undefined && obj.login_url !== undefined);\r\n    };\r\n    ConfigurationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ConfigurationService.ctorParameters = function () { return [\r\n        { type: EncryptionService }\r\n    ]; };\r\n    /** @nocollapse */ ConfigurationService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ConfigurationService_Factory() { return new ConfigurationService(ɵɵinject(EncryptionService)); }, token: ConfigurationService, providedIn: \"root\" });\r\n    return ConfigurationService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.encryptionKey;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.cacheAge;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.encryptionType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.dispatchedUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.applicationUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.loginUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype._authUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype._soApiUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ConfigurationService.prototype.encryptionService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/app-bootstrap.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AppBootstrapService = /** @class */ (function (_super) {\r\n    __extends(AppBootstrapService, _super);\r\n    function AppBootstrapService(errorTermsService, serverStatusService, userDataService, appDataService, localeAppResourcesService, baseTermsService, configurationService, windowService, commonConfigurationService, loginTermService, studyListService) {\r\n        var _this = _super.call(this) || this;\r\n        _this.errorTermsService = errorTermsService;\r\n        _this.serverStatusService = serverStatusService;\r\n        _this.userDataService = userDataService;\r\n        _this.appDataService = appDataService;\r\n        _this.localeAppResourcesService = localeAppResourcesService;\r\n        _this.baseTermsService = baseTermsService;\r\n        _this.configurationService = configurationService;\r\n        _this.windowService = windowService;\r\n        _this.commonConfigurationService = commonConfigurationService;\r\n        _this.loginTermService = loginTermService;\r\n        _this.studyListService = studyListService;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AppBootstrapService.prototype.init = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.windowService.redirectAsPerParams();\r\n    };\r\n    /**\r\n     * @param {?} environment\r\n     * @param {?=} serverInfo\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    AppBootstrapService.prototype.call = /**\r\n     * @param {?} environment\r\n     * @param {?=} serverInfo\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (environment, serverInfo, actionParam) {\r\n        this.configurationService.setConfig(environment);\r\n        this.commonConfigurationService.setConfig(environment);\r\n        /** @type {?} */\r\n        var error_params = ERROR_PARAMS;\r\n        /** @type {?} */\r\n        var user_params = USER_PARAMS;\r\n        /** @type {?} */\r\n        var base_terms_params = BASE_TERMS_PARAMS;\r\n        /** @type {?} */\r\n        var locale_app_terms_params = LOCALE_APP_TERMS_PARAMS;\r\n        /** @type {?} */\r\n        var login_app_terms_params = LOGIN_PARAMS$1;\r\n        /** @type {?} */\r\n        var serviceList = [\r\n            this.baseTermsService.getTerm(base_terms_params, actionParam),\r\n            this.localeAppResourcesService.getAppResources(locale_app_terms_params, actionParam),\r\n            this.appDataService.getAppData(actionParam),\r\n            this.errorTermsService.getErrorTerminologies(error_params, actionParam),\r\n            this.serverStatusService.getServerStatus(serverInfo, actionParam)\r\n        ];\r\n        if (actionParam.prelogin) {\r\n            serviceList = __spread(serviceList, [this.loginTermService.getLoginTerminologies(login_app_terms_params, actionParam)]);\r\n        }\r\n        else {\r\n            serviceList = __spread(serviceList, [this.userDataService.getUserData(user_params, actionParam),\r\n                this.studyListService.getStudyTags({ endPoint: true })]);\r\n        }\r\n        return forkJoin(serviceList)\r\n            .toPromise()\r\n            .then();\r\n    };\r\n    AppBootstrapService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    AppBootstrapService.ctorParameters = function () { return [\r\n        { type: ErrorTermsService },\r\n        { type: ServerStatusService },\r\n        { type: UserDataService },\r\n        { type: AppDataService },\r\n        { type: LocaleAppResourcesService },\r\n        { type: BaseTermsService },\r\n        { type: ConfigurationService },\r\n        { type: WindowService },\r\n        { type: ConfigurationService$1 },\r\n        { type: LoginTermsService },\r\n        { type: StudyListService }\r\n    ]; };\r\n    return AppBootstrapService;\r\n}(AppBootstrap));\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.errorTermsService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.serverStatusService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.userDataService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.appDataService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.localeAppResourcesService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.baseTermsService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.configurationService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.windowService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.commonConfigurationService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.loginTermService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AppBootstrapService.prototype.studyListService;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ServerInfo() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ServerInfo.prototype.clientVersion;\r\n    /** @type {?} */\r\n    ServerInfo.prototype.clientBuildID;\r\n    /** @type {?} */\r\n    ServerInfo.prototype.clientBuildDate;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/auth-guard.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AuthGuard = /** @class */ (function () {\r\n    function AuthGuard(router, userDataService) {\r\n        this.router = router;\r\n        this.userDataService = userDataService;\r\n    }\r\n    /**\r\n     * @param {?} route\r\n     * @return {?}\r\n     */\r\n    AuthGuard.prototype.canActivate = /**\r\n     * @param {?} route\r\n     * @return {?}\r\n     */\r\n    function (route) {\r\n        return this.checkLoginAndPrivileges(route);\r\n    };\r\n    /**\r\n     * @param {?} route\r\n     * @return {?}\r\n     */\r\n    AuthGuard.prototype.checkLoginAndPrivileges = /**\r\n     * @param {?} route\r\n     * @return {?}\r\n     */\r\n    function (route) {\r\n        // this.userDataService.getUserData(USER_PARAMS).subscribe((resp) => {\r\n        //     let redirectUrl = '';\r\n        //     let userPrev: any = [];\r\n        //     if (this.userDataService.isLoggedIn) {\r\n        //         if (resp.user && resp.user.privileges && resp.user.privileges.module) {\r\n        //             const moduleId = route.data['moduleId'];\r\n        //             const userPrivileges = [].concat(resp.user.privileges.module);\r\n        //             userPrev = userPrivileges.filter(data => data.id.toString() === moduleId.toString());\r\n        //             if (userPrev.length > 0) {\r\n        //                 return true;\r\n        //             } else {\r\n        //                 redirectUrl = AppUtil.generateFlexUrl(BASE_HREF);\r\n        //                 AppWindow.getWindow().location.href = redirectUrl;\r\n        //             }\r\n        //         }\r\n        //     } else {\r\n        //         sessionStorage.clear();\r\n        //         redirectUrl = route.data['loginUrl']; // environment.login_url;\r\n        //     }\r\n        //     this.router.config.push({ path: 'app' });\r\n        //     this.router.navigate(['app']).then(result => {\r\n        //         AppWindow.getWindow().location.href = redirectUrl;\r\n        //     });\r\n        // });\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {?} route\r\n     * @return {?}\r\n     */\r\n    AuthGuard.prototype.canActivateChild = /**\r\n     * @param {?} route\r\n     * @return {?}\r\n     */\r\n    function (route) {\r\n        return this.canActivate(route);\r\n    };\r\n    AuthGuard.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    AuthGuard.ctorParameters = function () { return [\r\n        { type: Router },\r\n        { type: UserDataService }\r\n    ]; };\r\n    return AuthGuard;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AuthGuard.prototype.router;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AuthGuard.prototype.userDataService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/error-message.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ErrorMessageService = /** @class */ (function () {\r\n    function ErrorMessageService() {\r\n        var _this = this;\r\n        this._Message = '';\r\n        this._ErrorMessageSubscriber = new Observable((/**\r\n         * @param {?} publisher\r\n         * @return {?}\r\n         */\r\n        function (publisher) {\r\n            _this._ErrorMessagePublisher = publisher;\r\n        }));\r\n        this.publishGlobalError = new BehaviorSubject('');\r\n    }\r\n    /**\r\n     * @param {?=} message\r\n     * @return {?}\r\n     */\r\n    ErrorMessageService.prototype.ShowErrorMessage = /**\r\n     * @param {?=} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        if (message === void 0) { message = ''; }\r\n        /** @type {?} */\r\n        var self = this;\r\n        self._Message = message;\r\n        self._ErrorMessagePublisher.next(self._Message);\r\n    };\r\n    /**\r\n     * @param {?=} msg\r\n     * @return {?}\r\n     */\r\n    ErrorMessageService.prototype.PublishError = /**\r\n     * @param {?=} msg\r\n     * @return {?}\r\n     */\r\n    function (msg) {\r\n        if (msg === void 0) { msg = ''; }\r\n        this.publishGlobalError.next(msg);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ErrorMessageService.prototype.GetErrorMessage = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._ErrorMessageSubscriber;\r\n    };\r\n    ErrorMessageService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ErrorMessageService.ctorParameters = function () { return []; };\r\n    return ErrorMessageService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ErrorMessageService.prototype._Message;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ErrorMessageService.prototype._ErrorMessageSubscriber;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ErrorMessageService.prototype._ErrorMessagePublisher;\r\n    /** @type {?} */\r\n    ErrorMessageService.prototype.publishGlobalError;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/GlobalErrorHandler.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar GlobalErrorHandler = /** @class */ (function (_super) {\r\n    __extends(GlobalErrorHandler, _super);\r\n    function GlobalErrorHandler(errorTermsStoreService, errorMessageService) {\r\n        var _this = _super.call(this) || this;\r\n        _this.errorTermsStoreService = errorTermsStoreService;\r\n        _this.errorMessageService = errorMessageService;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} error\r\n     * @return {?}\r\n     */\r\n    GlobalErrorHandler.prototype.handleError = /**\r\n     * @param {?} error\r\n     * @return {?}\r\n     */\r\n    function (error) {\r\n        /** @type {?} */\r\n        var errorMsg;\r\n        /** @type {?} */\r\n        var errorCode;\r\n        if (error.status === ZERO) {\r\n            errorMsg = this.errorTermsStoreService.getErrorMessage(error.status);\r\n            this.errorMessageService.PublishError(errorMsg);\r\n        }\r\n        else if (error instanceof ApplicationError) {\r\n            errorCode = error.errorCode;\r\n            errorMsg = this.errorTermsStoreService.getErrorMessage(errorCode);\r\n            // this.snackBar.openFromComponent(DisplayBannerComponent, {\r\n            //     data: {\r\n            //       message: errorMsg,\r\n            //       icon: ICON_NEGATIVE,\r\n            //       messageType: MESSAGETYPE_NEGATIVE\r\n            //     },\r\n            //     panelClass: [SNACKBAR_NEGATIVE]\r\n            //   });\r\n            // this.errorMessageService.ShowErrorMessage(errorMsg);\r\n        }\r\n        else if (error.rejection instanceof ApplicationError) {\r\n            errorCode = error.rejection.errorCode;\r\n            errorMsg = this.errorTermsStoreService.getErrorMessage(errorCode);\r\n            this.errorMessageService.ShowErrorMessage(errorMsg);\r\n        }\r\n        else {\r\n            _super.prototype.handleError.call(this, error);\r\n        }\r\n    };\r\n    GlobalErrorHandler.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    GlobalErrorHandler.ctorParameters = function () { return [\r\n        { type: ErrorTermsStoreService },\r\n        { type: ErrorMessageService }\r\n    ]; };\r\n    return GlobalErrorHandler;\r\n}(ErrorHandler));\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    GlobalErrorHandler.prototype.errorTermsStoreService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    GlobalErrorHandler.prototype.errorMessageService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/resource.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ResourceService = /** @class */ (function () {\r\n    function ResourceService(localAppResource, serverStatusService, errorTermsStoreService) {\r\n        this.localAppResource = localAppResource;\r\n        this.serverStatusService = serverStatusService;\r\n        this.errorTermsStoreService = errorTermsStoreService;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ResourceService.prototype.getMenuResources = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var menu = { headerMenu: [], subHeaderMenu: [], profileItem: [], ebMenu: {}, logo: {}, appInfo: {} };\r\n        menu.headerMenu.push({\r\n            name: this.localAppResource.getResource(MENU.studyList.name),\r\n            url: MENU.studyList.url, moduleName: MENU.studyList.moduleName\r\n        }, {\r\n            name: this.localAppResource.getResource(MENU.runWay.name),\r\n            url: MENU.runWay.url, moduleName: MENU.runWay.moduleName\r\n        }, {\r\n            name: this.localAppResource.getResource(MENU.ant.name),\r\n            url: MENU.ant.url, moduleName: MENU.ant.moduleName\r\n        });\r\n        menu.ebMenu = {\r\n            name: this.localAppResource.getResource(MENU.eb.name),\r\n            url: MENU.eb.url,\r\n            moduleName: MENU.eb.moduleName\r\n        };\r\n        menu.profileItem.push({\r\n            name: this.localAppResource.getResource(MENU.help.name),\r\n            url: MENU.help.url,\r\n            isVisible: true,\r\n            isEnabled: true\r\n        }, {\r\n            name: this.localAppResource.getResource(MENU.password.name),\r\n            url: MENU.password.url,\r\n            isVisible: true,\r\n            isEnabled: false\r\n        }, {\r\n            name: this.localAppResource.getResource(MENU.about.name),\r\n            url: MENU.about.url,\r\n            isVisible: true,\r\n            isEnabled: true\r\n        }, {\r\n            name: this.localAppResource.getResource(MENU.logout.name),\r\n            url: MENU.logout.url,\r\n            isVisible: true,\r\n            isEnabled: true\r\n        });\r\n        menu.subHeaderMenu.push(\r\n        // {\r\n        //   name: this.localAppResource.getResource(MENU.study.name),\r\n        //   url: MENU.study.url,\r\n        //   moduleName: MENU.study.moduleName\r\n        // },\r\n        // {\r\n        //   name: this.localAppResource.getResource(MENU.countries.name),\r\n        //   url: MENU.countries.url,\r\n        //   moduleName: MENU.countries.moduleName\r\n        // },\r\n        // {\r\n        //   name: this.localAppResource.getResource(MENU.sites.name),\r\n        //   url: MENU.sites.url,\r\n        //   moduleName: MENU.sites.moduleName\r\n        // },\r\n        // {\r\n        //   name: this.localAppResource.getResource(MENU.plans.name),\r\n        //   url: MENU.plans.url,\r\n        //   moduleName: MENU.plans.moduleName\r\n        // },\r\n        {\r\n            name: this.localAppResource.getResource(MENU.newStudy.name),\r\n            url: MENU.newStudy.url,\r\n            moduleName: MENU.newStudy.moduleName\r\n        }, {\r\n            name: this.localAppResource.getResource(MENU.newCountries.name),\r\n            url: MENU.newCountries.url,\r\n            moduleName: MENU.newCountries.moduleName\r\n        }, {\r\n            name: this.localAppResource.getResource(MENU.newSites.name),\r\n            url: MENU.newSites.url,\r\n            moduleName: MENU.newSites.moduleName\r\n        }, {\r\n            name: this.localAppResource.getResource(MENU.newPlans.name),\r\n            url: MENU.newPlans.url,\r\n            moduleName: MENU.newPlans.moduleName\r\n        });\r\n        menu.logo = {\r\n            name: this.localAppResource.getResource(MENU.logo.name)\r\n        };\r\n        menu.appInfo = {\r\n            name: this.localAppResource.getResource(MENU.appInfo.name)\r\n        };\r\n        return menu;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ResourceService.prototype.getPasswordResources = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var password = {\r\n            currentPassword: this.localAppResource.getResource(PASSWORD.currentpsw),\r\n            newPassword: this.localAppResource.getResource(PASSWORD.newpsw),\r\n            confirmPassword: this.localAppResource.getResource(PASSWORD.confirmpsw),\r\n            lengthRule: this.localAppResource.getResource(PASSWORD.lengthRule),\r\n            mixCharRule: this.localAppResource.getResource(PASSWORD.mixCharRule),\r\n            changePassword: this.localAppResource.getResource(PASSWORD.changePassword),\r\n            ok: this.localAppResource.getResource(PASSWORD.ok),\r\n            cancel: this.localAppResource.getResource(PASSWORD.cancel),\r\n            nonEmptyField: this.errorTermsStoreService.getErrorMessage('NonEmptyField'),\r\n            passwordMisMatchMessage: this.errorTermsStoreService.getErrorMessage('PasswordMisMatchMessage')\r\n        };\r\n        return password;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ResourceService.prototype.getAboutResources = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var buildInfoText = this.localAppResource.getResource(ABOUT.aboutBoxVersion);\r\n        /** @type {?} */\r\n        var serverVersion = this.serverStatusService.serverStatus.patch ?\r\n            this.serverStatusService.serverStatus.patch : this.serverStatusService.serverStatus.serverVersion.content;\r\n        /** @type {?} */\r\n        var serverBuildId = this.serverStatusService.serverStatus.serverBuildID;\r\n        buildInfoText = StringUtil.substitute(buildInfoText, [serverVersion, serverBuildId]);\r\n        /** @type {?} */\r\n        var aboutus = {\r\n            aboutBoxTitle: this.localAppResource.getResource(ABOUT.aboutBoxTitle),\r\n            aboutBoxVersion: buildInfoText,\r\n            // aboutBoxPatch: this.localAppResource.getResource(ABOUT.aboutBoxPatch),\r\n            aboutBoxDisclaimer: this.localAppResource.getResource(ABOUT.aboutBoxDisclaimer),\r\n            logoUrl: 'assets/images/poweredByLogo.png'\r\n        };\r\n        return aboutus;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ResourceService.prototype.getConfirmationMessageResource = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var confirmationLabels = {\r\n            okLabel: this.localAppResource.getResource(ALERT_TYPE.OkLabel),\r\n            cancelLabel: this.localAppResource.getResource(ALERT_TYPE.CancelLabel),\r\n        };\r\n        return confirmationLabels;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ResourceService.prototype.getCohortDropDownResource = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var getCohortResouces = {\r\n            mapped_planned_cohort: this.localAppResource.getResource('MAPPED_PLANNED_COHORT'),\r\n            mapped_planned_cohort_tooltip: this.localAppResource.getResource('MAPPED_PLANNED_COHORT_TOOLTIP'),\r\n            mapped_unplanned_cohort: this.localAppResource.getResource('MAPPED_UNPLANNED_COHORT'),\r\n            mapped_unplanned_cohort_tooltip: this.localAppResource.getResource('MAPPED_UNPLANNED_COHORT_TOOLTIP'),\r\n            unmapped_planned_cohort: this.localAppResource.getResource('UNMAPPED_PLANNED_COHORT'),\r\n            unmapped_planned_cohort_tooltip: this.localAppResource.getResource('UNMAPPED_PLANNED_COHORT_TOOLTIP'),\r\n            unmapped_actual_cohort: this.localAppResource.getResource('UNMAPPED_ACTUAL_COHORT'),\r\n            unmapped_actual_cohort_tooltip: this.localAppResource.getResource('UNMAPPED_ACTUAL_COHORT_TOOLTIP'),\r\n            cohort_selectall: this.localAppResource.getResource('COHORT_SELECTALL')\r\n        };\r\n        return getCohortResouces;\r\n    };\r\n    Object.defineProperty(ResourceService.prototype, \"getCohortDropDownOptions\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            /** @type {?} */\r\n            var cohortDropDownResource = this.getCohortDropDownResource();\r\n            return [{\r\n                    name: '',\r\n                    disabled: false,\r\n                    options: [\r\n                        {\r\n                            value: 'All',\r\n                            tooltip: cohortDropDownResource.cohort_selectall,\r\n                            viewValue: cohortDropDownResource.cohort_selectall\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    name: cohortDropDownResource.mapped_planned_cohort,\r\n                    tooltip: cohortDropDownResource.mapped_planned_cohort_tooltip,\r\n                    disabled: false,\r\n                    options: []\r\n                },\r\n                {\r\n                    name: cohortDropDownResource.mapped_unplanned_cohort,\r\n                    tooltip: cohortDropDownResource.mapped_unplanned_cohort_tooltip,\r\n                    disabled: false,\r\n                    options: []\r\n                },\r\n                {\r\n                    name: cohortDropDownResource.unmapped_planned_cohort,\r\n                    tooltip: cohortDropDownResource.unmapped_planned_cohort_tooltip,\r\n                    disabled: false,\r\n                    options: []\r\n                },\r\n                {\r\n                    name: cohortDropDownResource.unmapped_actual_cohort,\r\n                    tooltip: cohortDropDownResource.unmapped_actual_cohort_tooltip,\r\n                    disabled: false,\r\n                    options: []\r\n                }\r\n            ];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ResourceService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ResourceService.ctorParameters = function () { return [\r\n        { type: LocaleAppResourcesService },\r\n        { type: ServerStatusService },\r\n        { type: ErrorTermsStoreService }\r\n    ]; };\r\n    /** @nocollapse */ ResourceService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ResourceService_Factory() { return new ResourceService(ɵɵinject(LocaleAppResourcesService), ɵɵinject(ServerStatusService), ɵɵinject(ErrorTermsStoreService)); }, token: ResourceService, providedIn: \"root\" });\r\n    return ResourceService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ResourceService.prototype.localAppResource;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ResourceService.prototype.serverStatusService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ResourceService.prototype.errorTermsStoreService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/common-header.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CommonHeaderService = /** @class */ (function () {\r\n    function CommonHeaderService(appDataService, localeAppResourcesService, userDataService, resourceService, studyListService) {\r\n        this.appDataService = appDataService;\r\n        this.localeAppResourcesService = localeAppResourcesService;\r\n        this.userDataService = userDataService;\r\n        this.resourceService = resourceService;\r\n        this.studyListService = studyListService;\r\n        this.menu = this.resourceService.getMenuResources();\r\n        this.aboutResource = this.resourceService.getAboutResources();\r\n        this.passwordResource = this.resourceService.getPasswordResources();\r\n        this.logoUrl = this.menu.logo;\r\n        this.appInfoUrl = this.menu.appInfo.name;\r\n    }\r\n    Object.defineProperty(CommonHeaderService.prototype, \"menu\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._menu;\r\n        },\r\n        set: /**\r\n         * @param {?} menuResources\r\n         * @return {?}\r\n         */\r\n        function (menuResources) {\r\n            this._menu = menuResources;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CommonHeaderService.prototype, \"mainHeaderItems\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._mainHeaderItems;\r\n        },\r\n        set: /**\r\n         * @param {?} mainHeaderItems\r\n         * @return {?}\r\n         */\r\n        function (mainHeaderItems) {\r\n            this._mainHeaderItems = mainHeaderItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CommonHeaderService.prototype, \"subHeaderItems\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._subHeaderItems;\r\n        },\r\n        set: /**\r\n         * @param {?} subHeaderItems\r\n         * @return {?}\r\n         */\r\n        function (subHeaderItems) {\r\n            this._subHeaderItems = subHeaderItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CommonHeaderService.prototype, \"aboutResource\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._aboutResource;\r\n        },\r\n        set: /**\r\n         * @param {?} aboutResource\r\n         * @return {?}\r\n         */\r\n        function (aboutResource) {\r\n            this._aboutResource = aboutResource;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CommonHeaderService.prototype, \"passwordResource\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._passwordResource;\r\n        },\r\n        set: /**\r\n         * @param {?} passwordResource\r\n         * @return {?}\r\n         */\r\n        function (passwordResource) {\r\n            this._passwordResource = passwordResource;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CommonHeaderService.prototype, \"userProfile\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._userProfile;\r\n        },\r\n        set: /**\r\n         * @param {?} userProfile\r\n         * @return {?}\r\n         */\r\n        function (userProfile) {\r\n            this._userProfile = userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CommonHeaderService.prototype, \"logoUrl\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._logoUrl;\r\n        },\r\n        set: /**\r\n         * @param {?} LogoName\r\n         * @return {?}\r\n         */\r\n        function (LogoName) {\r\n            this._logoUrl = GSK_LOGO_URL + LogoName;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CommonHeaderService.prototype, \"appInfoUrl\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._appInfoUrl;\r\n        },\r\n        set: /**\r\n         * @param {?} appInfoUrl\r\n         * @return {?}\r\n         */\r\n        function (appInfoUrl) {\r\n            this._appInfoUrl = GSK_LOGO_URL + appInfoUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CommonHeaderService.prototype.getAppData = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.appDataService.getAppData();\r\n    };\r\n    /**\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    CommonHeaderService.prototype.getUserData = /**\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (actionParam) {\r\n        return this.userDataService.getUserData(USER_PARAMS, actionParam);\r\n    };\r\n    Object.defineProperty(CommonHeaderService.prototype, \"alertConfirmUrl\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return ALERT_CONFIRM_URL;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CommonHeaderService.prototype, \"studyRefreshDateLabel\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.localeAppResourcesService.getResource('LastStudyUpdate');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} studyListOptionTemplate\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    CommonHeaderService.prototype.getStudyInputResource = /**\r\n     * @param {?} studyListOptionTemplate\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (studyListOptionTemplate, actionParam) {\r\n        return {\r\n            placeholder: this.localeAppResourcesService.getResource('StudyListSearch'),\r\n            recentListItemsLabel: this.localeAppResourcesService.getResource('MRUStudiesView'),\r\n            allListItemsLabel: this.localeAppResourcesService.getResource('AllStudiesView'),\r\n            optionTemplate: studyListOptionTemplate,\r\n            searchApi: this.getStudyTagListFunction(actionParam),\r\n            selectedItemKey: this.userDataService.getLastVisitedStudyKey(),\r\n            studyListHeaderLabel: this.localeAppResourcesService.getResource('StudyListHeader')\r\n        };\r\n    };\r\n    /**\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    CommonHeaderService.prototype.getStudyTagListFunction = /**\r\n     * @param {?=} actionParam\r\n     * @return {?}\r\n     */\r\n    function (actionParam) {\r\n        var _this = this;\r\n        return (/**\r\n         * @param {?} searchCriteria\r\n         * @return {?}\r\n         */\r\n        function (searchCriteria) { return _this.studyListService.getStudyTagList(searchCriteria, actionParam); });\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    CommonHeaderService.prototype.setHeaderItems = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var headerItems = new Array();\r\n        this.menu.headerMenu.forEach((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        function (item) {\r\n            headerItems.push(new ListItem(item.name, item.url, item.moduleName));\r\n        }));\r\n        if (data.appMetadata.isEBLicensed) {\r\n            headerItems.push(new ListItem(this.menu.ebMenu.name, this.menu.ebMenu.url, this.menu.ebMenu.moduleName));\r\n        }\r\n        this.mainHeaderItems = headerItems;\r\n    };\r\n    /**\r\n     * @param {?} studyRefreshDate\r\n     * @return {?}\r\n     */\r\n    CommonHeaderService.prototype.checkIfAllDataAvailable = /**\r\n     * @param {?} studyRefreshDate\r\n     * @return {?}\r\n     */\r\n    function (studyRefreshDate) {\r\n        return (this.userProfile !== undefined && this.mainHeaderItems !== undefined\r\n            && this.subHeaderItems !== undefined && studyRefreshDate !== undefined);\r\n    };\r\n    /**\r\n     * @param {?} SUB_HEADER_ITEMS\r\n     * @return {?}\r\n     */\r\n    CommonHeaderService.prototype.getSubHeaderItems = /**\r\n     * @param {?} SUB_HEADER_ITEMS\r\n     * @return {?}\r\n     */\r\n    function (SUB_HEADER_ITEMS) {\r\n        /** @type {?} */\r\n        var subHeaderItems = new Array();\r\n        SUB_HEADER_ITEMS.forEach((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        function (item) {\r\n            subHeaderItems.push(new ListItem(item.name, item.url, item.moduleName));\r\n        }));\r\n        this.subHeaderItems = subHeaderItems;\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @param {?} PROFILE_ITEMS\r\n     * @return {?}\r\n     */\r\n    CommonHeaderService.prototype.setUserProfile = /**\r\n     * @param {?} data\r\n     * @param {?} PROFILE_ITEMS\r\n     * @return {?}\r\n     */\r\n    function (data, PROFILE_ITEMS) {\r\n        /** @type {?} */\r\n        var passwordResourceLabel = this.localeAppResourcesService.getResource('HeaderChangePassword');\r\n        if (data.hasOwnProperty('user')\r\n            && data.user.hasOwnProperty('authenticationScheme')\r\n            && data.user.authenticationScheme === 'DB') {\r\n            /** @type {?} */\r\n            var passwordItem = PROFILE_ITEMS.find((/**\r\n             * @param {?} item\r\n             * @return {?}\r\n             */\r\n            function (item) {\r\n                return item.name === passwordResourceLabel;\r\n            }));\r\n            passwordItem.isEnabled = true;\r\n        }\r\n        /** @type {?} */\r\n        var userName = this.userDataService.getUserName();\r\n        /** @type {?} */\r\n        var profileItems = new Array();\r\n        PROFILE_ITEMS.forEach((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        function (item) {\r\n            profileItems.push(new ListItem(item.name, item.url, null, item.isEnabled, item.isVisible));\r\n        }));\r\n        this.userProfile = new UserProfile(userName, profileItems, ' ');\r\n    };\r\n    CommonHeaderService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    CommonHeaderService.ctorParameters = function () { return [\r\n        { type: AppDataService },\r\n        { type: LocaleAppResourcesService },\r\n        { type: UserDataService },\r\n        { type: ResourceService },\r\n        { type: StudyListService }\r\n    ]; };\r\n    /** @nocollapse */ CommonHeaderService.ngInjectableDef = ɵɵdefineInjectable({ factory: function CommonHeaderService_Factory() { return new CommonHeaderService(ɵɵinject(AppDataService), ɵɵinject(LocaleAppResourcesService), ɵɵinject(UserDataService), ɵɵinject(ResourceService), ɵɵinject(StudyListService)); }, token: CommonHeaderService, providedIn: \"root\" });\r\n    return CommonHeaderService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype._menu;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype._aboutResource;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype._passwordResource;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype._mainHeaderItems;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype._subHeaderItems;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype._userProfile;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype._logoUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype._appInfoUrl;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype.appDataService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype.localeAppResourcesService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype.userDataService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype.resourceService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CommonHeaderService.prototype.studyListService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/column-preference.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ColumnPreferenceService = /** @class */ (function () {\r\n    function ColumnPreferenceService(userDataService) {\r\n        this.userDataService = userDataService;\r\n        this.userDataSubject = new BehaviorSubject(null);\r\n        this.getUserData();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColumnPreferenceService.prototype.getUserData = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        // self.userDataService.getUserData(USER_PARAMS, USER_ACTION_PARAMS).pipe(take(1)).subscribe((userData) => {\r\n        //     self.studyHeaderService.initializeHeader(self.studyListOptionTemplate, self.subscriptions);\r\n        //     self.tabItems = self.studyService.getTabItems();\r\n        //     this.studyService.loadStudyData();\r\n        //     this.setStudyGeoListFilters();\r\n        //     // TODO: move into app constants\r\n        //     self.defaultSelectedCohort = DEFAULT_SELECTED_COHORT;\r\n        //     // TODO: check for study change\r\n        //     self.setUpCohortData();\r\n        //   });\r\n        /** @type {?} */\r\n        var userDataSubscription = this.userDataService.getUserData(USER_PARAMS, USER_ACTION_PARAMS)\r\n            .pipe(take(1))\r\n            .subscribe((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            _this.userDataSubject.next(data);\r\n            if (userDataSubscription) {\r\n                console.log('userDataSubscription is defined : ', data);\r\n                userDataSubscription.unsubscribe();\r\n            }\r\n            else {\r\n                console.log('userDataSubscription is undefined : ', data);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColumnPreferenceService.prototype.getPrefForGridColumns = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return JSON.parse(JSON.stringify(this.userDataService.getPreferencesByCategory(PreferenceCategory.PreferenceGridColumns)));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColumnPreferenceService.prototype.refreshPreferenceData = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.getUserData();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColumnPreferenceService.prototype.getGridPreference = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.userDataSubject.asObservable();\r\n    };\r\n    /**\r\n     * @param {?} gridPrefString\r\n     * @param {?} gridToUpdate\r\n     * @param {?=} pageName\r\n     * @param {?=} studyKey\r\n     * @param {?=} module\r\n     * @return {?}\r\n     */\r\n    ColumnPreferenceService.prototype.sendUpdateColumnPrefRequest = /**\r\n     * @param {?} gridPrefString\r\n     * @param {?} gridToUpdate\r\n     * @param {?=} pageName\r\n     * @param {?=} studyKey\r\n     * @param {?=} module\r\n     * @return {?}\r\n     */\r\n    function (gridPrefString, gridToUpdate, pageName, studyKey, module) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var preferences = this.getPrefForGridColumns();\r\n        if (!preferences || preferences === null) {\r\n            preferences = DEFAULT_PREFERENCE_GRID_COLUMN;\r\n        }\r\n        preferences[PreferenceCategory.PreferenceGridColumns][gridToUpdate] = gridPrefString;\r\n        //   const updatePrefSubscription = this.userDataService\r\n        //       .updatePreferencesByCategory(preferences)\r\n        //       .pipe(debounceTime(500))\r\n        //       .subscribe(data => {\r\n        //           if (data) {\r\n        //               this.refreshPreferenceData();\r\n        //           }\r\n        //           if (updatePrefSubscription) {\r\n        //               console.log('updatePrefSubscription is defined : ', data);\r\n        //               updatePrefSubscription.unsubscribe();\r\n        //           } else {\r\n        //               console.log('updatePrefSubscription is undefined : ', data);\r\n        //           }\r\n        //       });\r\n        /** @type {?} */\r\n        var updatePrefSubscription = this.userDataService.updateUserPreference(preferences, UPDATE_USER_PREFERENCE_ACTION_PARAMS).\r\n            pipe(debounceTime(500))\r\n            .subscribe((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (data) {\r\n                _this.refreshPreferenceData();\r\n            }\r\n            if (updatePrefSubscription) {\r\n                console.log('updatePrefSubscription is defined : ', data);\r\n                updatePrefSubscription.unsubscribe();\r\n            }\r\n            else {\r\n                console.log('updatePrefSubscription is undefined : ', data);\r\n            }\r\n        }));\r\n    };\r\n    ColumnPreferenceService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ColumnPreferenceService.ctorParameters = function () { return [\r\n        { type: UserDataService }\r\n    ]; };\r\n    /** @nocollapse */ ColumnPreferenceService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ColumnPreferenceService_Factory() { return new ColumnPreferenceService(ɵɵinject(UserDataService)); }, token: ColumnPreferenceService, providedIn: \"root\" });\r\n    return ColumnPreferenceService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    ColumnPreferenceService.prototype.userDataSubject;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ColumnPreferenceService.prototype.userDataService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/so-common-library.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SoCommonLibraryModule = /** @class */ (function () {\r\n    function SoCommonLibraryModule() {\r\n    }\r\n    SoCommonLibraryModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [ComponentsModule, CommonLibraryModule, CommonAngularMaterialModule],\r\n                    exports: [ComponentsModule],\r\n                    declarations: [],\r\n                    providers: [\r\n                        AppBootstrapService,\r\n                        DecimalPipe,\r\n                        MilestoneGraphService,\r\n                        PlanOptionsService,\r\n                        CTOSPlanChartLegendService,\r\n                        ReportsService,\r\n                        AuthGuard,\r\n                        ErrorMessageService,\r\n                        GlobalErrorHandler,\r\n                        LoadingScreenService,\r\n                        CommonHeaderService,\r\n                        ColumnPreferenceService\r\n                    ],\r\n                    entryComponents: []\r\n                },] }\r\n    ];\r\n    return SoCommonLibraryModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/study-summary.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar StudySummaryService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of study summary service.\r\n     * @param payloadCommandService\r\n     * @param baseConnectionService\r\n     * @param localeAppResourcesService\r\n     */\r\n    function StudySummaryService(payloadCommandService, baseConnectionService) {\r\n        this.payloadCommandService = payloadCommandService;\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.studySummaryData = {};\r\n        this.sourceSummaryData = {};\r\n        console.log('SO COMMON LIB Study Summary service constructor called');\r\n    }\r\n    /**\r\n     * Gets study summary\r\n     * @param studyKey\r\n     * @param [baseParam]\r\n     * @returns study summary\r\n     */\r\n    /**\r\n     * Gets study summary\r\n     * @param {?} studyKey\r\n     * @param {?=} baseParam\r\n     * @return {?} study summary\r\n     */\r\n    StudySummaryService.prototype.getStudySummary = /**\r\n     * Gets study summary\r\n     * @param {?} studyKey\r\n     * @param {?=} baseParam\r\n     * @return {?} study summary\r\n     */\r\n    function (studyKey, baseParam) {\r\n        return this.getStudySummaryDetails(studyKey, baseParam).pipe(map((/**\r\n         * @param {?} resp\r\n         * @return {?}\r\n         */\r\n        function (resp) {\r\n            return resp;\r\n        })));\r\n    };\r\n    /**\r\n     * Gets study summary details\r\n     * @param studyKey\r\n     * @param [baseParam]\r\n     * @returns\r\n     */\r\n    /**\r\n     * Gets study summary details\r\n     * @param {?} studyKey\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    StudySummaryService.prototype.getStudySummaryDetails = /**\r\n     * Gets study summary details\r\n     * @param {?} studyKey\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    function (studyKey, baseParam) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var studyParam = {\r\n            commandName: STUDYSUMMARY_COMMAND.commandName,\r\n            param: {\r\n                studyKey: studyKey\r\n            }\r\n        };\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo('PLANCARD', studyKey);\r\n        // const planListPayLoad = that.payloadCommandService.getCommandDetails(\r\n        //   studyParam.commandName,\r\n        //   studyParam.param,\r\n        //   null,\r\n        //   null,\r\n        //   moduleInfo\r\n        // );\r\n        /** @type {?} */\r\n        var payload = this.payloadCommandService.getApiRequest(studyParam.commandName, studyParam.param, null, moduleInfo);\r\n        /** @type {?} */\r\n        var actionParam = {};\r\n        if (!baseParam) {\r\n            baseParam = actionParam;\r\n        }\r\n        baseParam.url = APIEndPoints.STUDY_SUMMARY;\r\n        // baseParam.cacheKey =\r\n        //   CacheKey.GetStudySummary + '_' + studyParam.param.studyKey;\r\n        // return that.baseConnectionService\r\n        //   .sendRequest(payload, baseParam)\r\n        //   .pipe(\r\n        //     map(resp => {\r\n        //       this.studySummaryData = resp;\r\n        //       return resp.studySummary;\r\n        //     })\r\n        //   );\r\n        return this.baseConnectionService\r\n            .send(payload, baseParam)\r\n            .pipe(map((/**\r\n         * @param {?} response\r\n         * @return {?}\r\n         */\r\n        function (response) {\r\n            _this.studySummaryData = response;\r\n            return response.studySummary;\r\n        })));\r\n    };\r\n    StudySummaryService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    StudySummaryService.ctorParameters = function () { return [\r\n        { type: PayloadCommandService },\r\n        { type: BaseConnectionService }\r\n    ]; };\r\n    return StudySummaryService;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    StudySummaryService.prototype.studySummaryData;\r\n    /** @type {?} */\r\n    StudySummaryService.prototype.sourceSummaryData;\r\n    /** @type {?} */\r\n    StudySummaryService.prototype.planApproved;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StudySummaryService.prototype.payloadCommandService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StudySummaryService.prototype.baseConnectionService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/plan.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PlanService = /** @class */ (function () {\r\n    function PlanService(baseConnectionService, payloadCommandService) {\r\n        this.baseConnectionService = baseConnectionService;\r\n        this.payloadCommandService = payloadCommandService;\r\n    }\r\n    /**\r\n     * @param {?} planParam\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    PlanService.prototype.getPlanList = /**\r\n     * @param {?} planParam\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    function (planParam, baseParam) {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo(null, planParam.param.studyKey);\r\n        /** @type {?} */\r\n        var planListPayLoad = that.payloadCommandService.getCommandDetails(planParam.commandName, planParam.param, null, null, moduleInfo);\r\n        return that.baseConnectionService.sendRequest(planListPayLoad, {\r\n            cacheKey: CacheKey.GetPlanListKey + '_' + planParam.param.studyKey\r\n        }).pipe(map((/**\r\n         * @param {?} resp\r\n         * @return {?}\r\n         */\r\n        function (resp) {\r\n            return resp;\r\n        })));\r\n    };\r\n    /**\r\n     * @param {?} studyParam\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    PlanService.prototype.getStudySummary = /**\r\n     * @param {?} studyParam\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    function (studyParam, baseParam) {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo(null, studyParam.param.studyKey);\r\n        /** @type {?} */\r\n        var planListPayLoad = that.payloadCommandService.getCommandDetails(studyParam.commandName, studyParam.param, null, null, moduleInfo);\r\n        return that.baseConnectionService.sendRequest(planListPayLoad, {\r\n            cacheKey: CacheKey.GetStudySummary + '_' + studyParam.param.studyKey\r\n        }).pipe(map((/**\r\n         * @param {?} resp\r\n         * @return {?}\r\n         */\r\n        function (resp) {\r\n            return resp.studySummary.studyThumbnail;\r\n            // const obj = {\r\n            //   id: 1,\r\n            //   phase: 'mock'\r\n            // };\r\n            // return obj;\r\n        })));\r\n    };\r\n    /**\r\n     * @param {?} planParam\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    PlanService.prototype.getStudyPlan = /**\r\n     * @param {?} planParam\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    function (planParam, baseParam) {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo(null, planParam.param.studyKey);\r\n        /** @type {?} */\r\n        var planListPayLoad = that.payloadCommandService.getCommandDetails(planParam.commandName, planParam.param, null, null, moduleInfo);\r\n        return that.baseConnectionService.sendRequest(planListPayLoad, {\r\n            cacheKey: CacheKey.GetStudyPlanKey + '_' + planParam.param.studyKey + '_' +\r\n                planParam.param.planKey\r\n        }).pipe(map((/**\r\n         * @param {?} resp\r\n         * @return {?}\r\n         */\r\n        function (resp) {\r\n            return resp.studyPlan.studyPlanParams;\r\n        })));\r\n    };\r\n    /**\r\n     * @param {?} planParam\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    PlanService.prototype.updateStudyPlan = /**\r\n     * @param {?} planParam\r\n     * @param {?=} baseParam\r\n     * @return {?}\r\n     */\r\n    function (planParam, baseParam) {\r\n        /** @type {?} */\r\n        var that = this;\r\n        /** @type {?} */\r\n        var moduleInfo = CTOSUtil.getModuleInfo(null, planParam.param.studyKey);\r\n        /** @type {?} */\r\n        var planListPayLoad = that.payloadCommandService.getCommandDetails(planParam.commandName, planParam.param, {}, planParam.commandtags, moduleInfo);\r\n        return that.baseConnectionService.sendRequest(planListPayLoad, {\r\n            cacheKey: CacheKey.updatePlantList + '_' + planParam.param.studyKey + '_' +\r\n                planParam.param.planKey,\r\n            dependencyList: baseParam.dependencyList\r\n        }).pipe(map((/**\r\n         * @param {?} resp\r\n         * @return {?}\r\n         */\r\n        function (resp) {\r\n            return resp.planList.planThumbnail;\r\n        })));\r\n    };\r\n    PlanService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    PlanService.ctorParameters = function () { return [\r\n        { type: BaseConnectionService },\r\n        { type: PayloadCommandService }\r\n    ]; };\r\n    /** @nocollapse */ PlanService.ngInjectableDef = ɵɵdefineInjectable({ factory: function PlanService_Factory() { return new PlanService(ɵɵinject(BaseConnectionService), ɵɵinject(PayloadCommandService)); }, token: PlanService, providedIn: \"root\" });\r\n    return PlanService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanService.prototype.baseConnectionService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PlanService.prototype.payloadCommandService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/environment-param.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction EnvironmentParam() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.clientEncryptionKey;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.cacheAge;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.cryptoJS;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.app_url;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.login_url;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.authUrl;\r\n    /** @type {?} */\r\n    EnvironmentParam.prototype.soApiUrl;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/study-tag.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction StudyTag() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    StudyTag.prototype.key;\r\n    /** @type {?|undefined} */\r\n    StudyTag.prototype.id;\r\n    /** @type {?|undefined} */\r\n    StudyTag.prototype.prescreenInd;\r\n    /** @type {?|undefined} */\r\n    StudyTag.prototype.reportingPeriod;\r\n    /** @type {?|undefined} */\r\n    StudyTag.prototype.cohortInd;\r\n    /** @type {?|undefined} */\r\n    StudyTag.prototype.cohortType;\r\n    /** @type {?|undefined} */\r\n    StudyTag.prototype.newPlanInd;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/user-action.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction UserAction() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    UserAction.prototype.moduleName;\r\n    /** @type {?|undefined} */\r\n    UserAction.prototype.pageName;\r\n    /** @type {?|undefined} */\r\n    UserAction.prototype.studykey;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/milestone-graph/IChartType.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/*\r\n    currently no used but can be standardised to have common interface\r\n    which can be implemented by common components\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IChartType() { }\r\nif (false) {\r\n    /**\r\n     * @return {?}\r\n     */\r\n    IChartType.prototype.render = function () { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    IChartType.prototype.type = function () { };\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/plan-dropdown-list/plan-dropdown-list-item.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction PlanDropdownListItem() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.isDeletable;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.isReadOnly;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.isPlan;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.isAutoDeleted;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.key;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.enrollmentTarget;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.name;\r\n    /** @type {?|undefined} */\r\n    PlanDropdownListItem.prototype.briefAdjustPlanList;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.planImageStatus;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.description;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.planStatus;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.originalPlanKey;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.lastModifiedDate;\r\n    /** @type {?} */\r\n    PlanDropdownListItem.prototype.planType;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/plan-dropdown-list/plan-status.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction PlanStatus$1() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    PlanStatus$1.prototype.value;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/AreaPoint.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AreaPoint = /** @class */ (function () {\r\n    function AreaPoint() {\r\n    }\r\n    return AreaPoint;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    AreaPoint.prototype.y;\r\n    /** @type {?} */\r\n    AreaPoint.prototype.right;\r\n    /** @type {?} */\r\n    AreaPoint.prototype.left;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/AreaPoint1.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AreaPoint1 = /** @class */ (function () {\r\n    function AreaPoint1() {\r\n    }\r\n    return AreaPoint1;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    AreaPoint1.prototype.x;\r\n    /** @type {?} */\r\n    AreaPoint1.prototype.high;\r\n    /** @type {?} */\r\n    AreaPoint1.prototype.low;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/DataPoint.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint(date, subjects) {\r\n        this.name = date;\r\n        this.value = subjects;\r\n    }\r\n    return DataPoint;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    DataPoint.prototype.name;\r\n    /** @type {?} */\r\n    DataPoint.prototype.value;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/ctos-plan-chart/Marker.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar Marker = /** @class */ (function () {\r\n    function Marker(id, code, name, value, date, desc, pname, axis, scalex, scaley, color, did) {\r\n        this.id = id;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.value = value;\r\n        this.date = date;\r\n        this.description = desc;\r\n        this.pname = pname;\r\n        this.axis = axis;\r\n        this.scaleX = scalex;\r\n        this.scaleY = scaley;\r\n        this.color = color;\r\n        this.descriptionId = did;\r\n    }\r\n    return Marker;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    Marker.prototype.name;\r\n    /** @type {?} */\r\n    Marker.prototype.date;\r\n    /** @type {?} */\r\n    Marker.prototype.description;\r\n    /** @type {?} */\r\n    Marker.prototype.value;\r\n    /** @type {?} */\r\n    Marker.prototype.pname;\r\n    /** @type {?} */\r\n    Marker.prototype.id;\r\n    /** @type {?} */\r\n    Marker.prototype.code;\r\n    /** @type {?} */\r\n    Marker.prototype.axis;\r\n    /** @type {?} */\r\n    Marker.prototype.scaleX;\r\n    /** @type {?} */\r\n    Marker.prototype.scaleY;\r\n    /** @type {?} */\r\n    Marker.prototype.color;\r\n    /** @type {?} */\r\n    Marker.prototype.descriptionId;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/plan-details.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction PlanDetails() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    PlanDetails.prototype.geoList;\r\n    /** @type {?} */\r\n    PlanDetails.prototype.studyTargets;\r\n    /** @type {?} */\r\n    PlanDetails.prototype.actuals;\r\n    /** @type {?} */\r\n    PlanDetails.prototype.projections;\r\n    /** @type {?} */\r\n    PlanDetails.prototype.planProperties;\r\n    /** @type {?} */\r\n    PlanDetails.prototype.parentPlanProperties;\r\n    /** @type {?} */\r\n    PlanDetails.prototype.parentPlan;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/plan-reports.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction PlanReport() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    PlanReport.prototype.reportId;\r\n    /** @type {?|undefined} */\r\n    PlanReport.prototype.warningCriteria;\r\n    /** @type {?|undefined} */\r\n    PlanReport.prototype.name;\r\n    /** @type {?|undefined} */\r\n    PlanReport.prototype.description;\r\n    /** @type {?|undefined} */\r\n    PlanReport.prototype.parameterList;\r\n    /** @type {?|undefined} */\r\n    PlanReport.prototype.moduleId;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/study-summary-info.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction StudySummaryInfo() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.id;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.cohortIndicator;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.studyCohortType;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.sdesign;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.name;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.phase;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.sdta;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.medicalCondition;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.targetEnrollment;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.studySummaryMileStone;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.screeningPeriod;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.cohort;\r\n    /** @type {?|undefined} */\r\n    StudySummaryInfo.prototype.tag;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/study-summary-mile-stone.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction StudySummaryMileStone() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    StudySummaryMileStone.prototype.FSI;\r\n    /** @type {?|undefined} */\r\n    StudySummaryMileStone.prototype.LSS;\r\n    /** @type {?|undefined} */\r\n    StudySummaryMileStone.prototype.LSR;\r\n    /** @type {?|undefined} */\r\n    StudySummaryMileStone.prototype.cycleTime;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/geo-filter.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction GeoFilter() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    GeoFilter.prototype.key;\r\n    /** @type {?} */\r\n    GeoFilter.prototype.level;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/utils/ag-grid-constant.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar AGGRIDROWS = '.ag-row';\r\n/** @type {?} */\r\nvar GRIDROWHEIGHT = 48;\r\n/** @enum {string} */\r\nvar DOMLAYOUT = {\r\n    auto: \"autoHeight\",\r\n    normal: \"normal\",\r\n};\r\n/** @enum {string} */\r\nvar DYNAMICGRIDCONTAINER = {\r\n    top: \"-19px\",\r\n    topnone: \"0px\",\r\n};\r\n/** @enum {string} */\r\nvar MEASUREMENT = {\r\n    HEIGHT: \"height\",\r\n    OFFSETHEIGHT: \"offsetHeight\",\r\n    OFFSETTOP: \"offsetTop\",\r\n};\r\n/** @type {?} */\r\nvar GRIDCONFIG = {\r\n    rowHeight: 48,\r\n    headerHeight: 73,\r\n    minHeight: 150,\r\n    margin: 50,\r\n    bufferPixel: 18,\r\n    fixedRowCount: 5\r\n};\r\n/** @enum {string} */\r\nvar GROUP_ACTIONS = {\r\n    EXPAND: \"expand\",\r\n    COLLAPSE: \"collapse\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/ARTBValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$8 = momentNS;\r\n/**\r\n * Validator function to validate the ARTB.\r\n * @param {?} ARTBFieldName - ARTB field name\r\n * @param {?=} FSIFieldName -FSI field name or value\r\n * @param {?=} FSIIsValue - boolean field to indicate if the FSIFieldName is name of the field or value\r\n * @param {?=} FSSFieldName -FSS field name or value\r\n * @param {?=} FSSIsValue - boolean field to indicate if the FSSFieldName is name of the field or value\r\n * @return {?}\r\n */\r\nfunction ARTBValidator(ARTBFieldName, FSIFieldName, FSIIsValue, FSSFieldName, FSSIsValue) {\r\n    if (FSIIsValue === void 0) { FSIIsValue = true; }\r\n    if (FSSIsValue === void 0) { FSSIsValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        // tslint:disable-next-line:prefer-const\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var ARTB;\r\n        /** @type {?} */\r\n        var FSI;\r\n        /** @type {?} */\r\n        var FSS;\r\n        if (ARTBFieldName !== undefined && ARTBFieldName !== null) {\r\n            /** @type {?} */\r\n            var ARTBControl = control.get(ARTBFieldName);\r\n            if (ARTBControl && ARTBControl.enabled &&\r\n                !(ARTBControl.invalid && ARTBControl.errors && ARTBControl.errors.matDatepickerParse)) {\r\n                if (AppUtil.isDefined(ARTBControl.value)) {\r\n                    ARTB = moment$8(ARTBControl.value);\r\n                    if (FSIFieldName !== undefined && FSIFieldName !== null) {\r\n                        // let FSI;\r\n                        if (FSIIsValue) {\r\n                            FSI = FSIFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var FSIControl = control.get(FSIFieldName);\r\n                            if (FSIControl && FSIControl.valid && AppUtil.isDefined(FSIControl.value)) {\r\n                                FSI = moment$8(FSIControl.value);\r\n                            }\r\n                        }\r\n                        // if (FSI !== undefined && FSI !== null) {\r\n                        //     const greaterThanFSI = checkForARTBGreaterThanFSI(ARTB, FSI);\r\n                        //     if (greaterThanFSI) {\r\n                        //         Object.assign(errors, greaterThanFSI);\r\n                        //     }\r\n                        // }\r\n                    }\r\n                    if (FSSFieldName !== undefined && FSSFieldName !== null) {\r\n                        // let FSS;\r\n                        if (FSSIsValue) {\r\n                            FSS = FSSFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var FSSControl = control.get(FSSFieldName);\r\n                            if (FSSControl && (FSSControl.valid || FSSControl.disabled) && AppUtil.isDefined(FSSControl.value)) {\r\n                                FSS = moment$8(FSSControl.value);\r\n                            }\r\n                        }\r\n                        // if (FSS !== undefined && FSS !== null) {\r\n                        //     const greaterThanFSS = checkForARTBGreaterThanFSS(ARTB, FSS);\r\n                        //     if (greaterThanFSS) {\r\n                        //         Object.assign(errors, greaterThanFSS);\r\n                        //     }\r\n                        // }\r\n                    }\r\n                    /** @type {?} */\r\n                    var errorsFromValidator = ValidateARTB(ARTB, FSI, FSS);\r\n                    if (errorsFromValidator) {\r\n                        Object.assign(errors, errorsFromValidator);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (Object.keys(errors).length !== 0) {\r\n            control.get(ARTBFieldName).setErrors(errors);\r\n            returnVal = {};\r\n            returnVal[ARTBFieldName] = errors;\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var ARTBControl = control.get(ARTBFieldName);\r\n            if (ARTBControl) {\r\n                if (!(ARTBControl.invalid && ARTBControl.errors && ARTBControl.errors.matDatepickerParse)) {\r\n                    control.get(ARTBFieldName).setErrors(null);\r\n                }\r\n            }\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} ARTB\r\n * @param {?} FSI\r\n * @param {?} FSS\r\n * @return {?}\r\n */\r\nfunction ValidateARTB(ARTB, FSI, FSS) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (AppUtil.isDefined(ARTB)) {\r\n        ARTB = moment$8(ARTB);\r\n        if (AppUtil.isDefined(FSI)) {\r\n            FSI = moment$8(FSI);\r\n            if (FSI !== undefined && FSI !== null) {\r\n                /** @type {?} */\r\n                var greaterThanFSI = checkForARTBGreaterThanFSI(ARTB, FSI);\r\n                if (greaterThanFSI) {\r\n                    Object.assign(errors, greaterThanFSI);\r\n                }\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(FSS)) {\r\n            FSS = moment$8(FSS);\r\n            if (FSS !== undefined && FSS !== null) {\r\n                /** @type {?} */\r\n                var greaterThanFSS = checkForARTBGreaterThanFSS(ARTB, FSS);\r\n                if (greaterThanFSS) {\r\n                    Object.assign(errors, greaterThanFSS);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} ARTB\r\n * @param {?} FSI\r\n * @return {?}\r\n */\r\nfunction checkForARTBGreaterThanFSI(ARTB, FSI) {\r\n    if (ARTB.isAfter(FSI)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            ARTB_LT_EQ_FSI: { ARTB_LT_EQ_FSI: FSI }\r\n        };\r\n    }\r\n}\r\n/**\r\n * @param {?} ARTB\r\n * @param {?} FSS\r\n * @return {?}\r\n */\r\nfunction checkForARTBGreaterThanFSS(ARTB, FSS) {\r\n    if (ARTB.isAfter(FSS)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            ARTB__LT_EQ_FSS: { ARTB__LT_EQ_FSS: FSS }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/DaysFromFSIValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$9 = momentNS;\r\n/**\r\n * Validator function to validate the days from FSI for a given site against any other site.\r\n * @param {?} daysFieldName - the days from SFI field name for a site to validate\r\n * @param {?=} minValue\r\n * @param {?=} previousSiteDaysFieldName - the days from FSI field name or value for any previous site to validate against\r\n * @param {?=} previousSiteDaysIsValue - boolean field to indicate if the previousSiteDaysFieldName is name of the field or value\r\n * In case of validators with more than two fields the validation to be skipped should be sent as undefined.\r\n * for eg. validator for country FSI would contain parameters for stuyd FSI and TLSS fields.\r\n * if the parameter sequence for FSIValidator is\r\n * (countryFSIFieldName, studyFSIFieldName, studyFSIIsValue, TLSSFieldName, TLSSIsValue)\r\n * and the validation for study FSI needs to be skipped then the calling arguments would be\r\n * (countryFSIFieldName, undefined, false, TLSSFieldName, TLSSIsValue)\r\n * @param {?=} nextSiteDaysFieldName\r\n * @param {?=} nextSiteDaysIsValue\r\n * @param {?=} enddateFieldName\r\n * @param {?=} enddateIsValue\r\n * @param {?=} TLSSFieldName\r\n * @param {?=} TLSSIsValue\r\n * @return {?}\r\n */\r\nfunction DaysFromFSIValidator(daysFieldName, minValue, previousSiteDaysFieldName, previousSiteDaysIsValue, nextSiteDaysFieldName, nextSiteDaysIsValue, enddateFieldName, enddateIsValue, TLSSFieldName, TLSSIsValue) {\r\n    if (previousSiteDaysIsValue === void 0) { previousSiteDaysIsValue = true; }\r\n    if (nextSiteDaysIsValue === void 0) { nextSiteDaysIsValue = true; }\r\n    if (enddateIsValue === void 0) { enddateIsValue = true; }\r\n    if (TLSSIsValue === void 0) { TLSSIsValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        /** @type {?} */\r\n        var previousSiteDays = null;\r\n        /** @type {?} */\r\n        var nextSiteDays = null;\r\n        /** @type {?} */\r\n        var enddate = null;\r\n        /** @type {?} */\r\n        var TLSS = null;\r\n        /** @type {?} */\r\n        var daysControl = null;\r\n        /** @type {?} */\r\n        var errors = null;\r\n        if (daysFieldName !== undefined && daysFieldName !== null) {\r\n            daysControl = (/** @type {?} */ (control.get(daysFieldName)));\r\n            if (daysControl) {\r\n                errors = initializeErrorsObject(errors, daysControl);\r\n                /** @type {?} */\r\n                var days = daysControl.value;\r\n                if (AppUtil.isDefined(days, true)) {\r\n                    if (previousSiteDaysFieldName !== undefined &&\r\n                        previousSiteDaysFieldName !== null) {\r\n                        if (previousSiteDaysIsValue) {\r\n                            previousSiteDays = previousSiteDaysFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var previousSiteDaysControl = control.get(previousSiteDaysFieldName);\r\n                            if (previousSiteDaysControl) {\r\n                                previousSiteDays = previousSiteDaysControl.value;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (nextSiteDaysFieldName !== undefined &&\r\n                        nextSiteDaysIsValue !== null) {\r\n                        if (nextSiteDaysIsValue) {\r\n                            nextSiteDays = nextSiteDaysFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var nextSiteDaysControl = control.get(nextSiteDaysFieldName);\r\n                            if (nextSiteDaysControl) {\r\n                                nextSiteDays = nextSiteDaysControl.value;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (enddateFieldName !== undefined && enddateIsValue !== null) {\r\n                        if (enddateIsValue) {\r\n                            enddate = moment$9(enddateFieldName);\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var enddateControl = control.get(enddateFieldName);\r\n                            if (enddateControl &&\r\n                                (enddateControl.enabled ? enddateControl.valid : true) &&\r\n                                AppUtil.isDefined(enddateControl.value)) {\r\n                                enddate = moment$9(enddateControl.value, VALID_DATE_FORMATS, true);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (TLSSFieldName !== undefined && TLSSIsValue !== null) {\r\n                        if (TLSSIsValue) {\r\n                            TLSS = moment$9(TLSSFieldName);\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var TLSSControl = control.get(TLSSFieldName);\r\n                            if (TLSSControl &&\r\n                                (TLSSControl.enabled ? TLSSControl.valid : true) &&\r\n                                AppUtil.isDefined(TLSSControl.value)) {\r\n                                TLSS = moment$9(TLSSControl.value, VALID_DATE_FORMATS, true);\r\n                            }\r\n                        }\r\n                    }\r\n                    /** @type {?} */\r\n                    var errorsFromValidator = ValidateDaysFromFSI(days, previousSiteDays, nextSiteDays, minValue, enddate, TLSS);\r\n                    if (errorsFromValidator) {\r\n                        Object.assign(errors, errorsFromValidator);\r\n                    }\r\n                    if (Object.keys(errors).length !== 0) {\r\n                        daysControl.setErrors(errors);\r\n                        returnVal = {};\r\n                        returnVal[daysFieldName] = errors;\r\n                    }\r\n                    else {\r\n                        daysControl.setErrors(null);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} errors\r\n * @param {?} daysControl\r\n * @return {?}\r\n */\r\nfunction initializeErrorsObject(errors, daysControl) {\r\n    errors = daysControl.errors;\r\n    if (!errors) {\r\n        errors = {};\r\n    }\r\n    if (errors.ltPrevError) {\r\n        delete errors.ltPrevError;\r\n    }\r\n    if (errors.gtnextError) {\r\n        delete errors.gtnextError;\r\n    }\r\n    if (errors.SIDateError) {\r\n        delete errors.SIDateError;\r\n    }\r\n    if (errors.min) {\r\n        delete errors.min;\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} currentDaysFromFSI\r\n * @param {?} prevDaysFromFSI\r\n * @param {?} nextDaysFromFSI\r\n * @param {?} minValue\r\n * @param {?=} enddate\r\n * @param {?=} TLSS\r\n * @return {?}\r\n */\r\nfunction ValidateDaysFromFSI(currentDaysFromFSI, prevDaysFromFSI, nextDaysFromFSI, minValue, enddate, TLSS) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (AppUtil.isDefined(currentDaysFromFSI, true)) {\r\n        if (AppUtil.isDefined(minValue, true)) {\r\n            /** @type {?} */\r\n            var minValueError = checkForMinValue(currentDaysFromFSI, minValue);\r\n            if (minValueError) {\r\n                Object.assign(errors, minValueError);\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(prevDaysFromFSI, true)) {\r\n            /** @type {?} */\r\n            var greaterThanEqualToPreviousSite = checkForDaysFromFSIGreaterThanEqualToPreviousSite(currentDaysFromFSI, prevDaysFromFSI);\r\n            if (greaterThanEqualToPreviousSite) {\r\n                Object.assign(errors, greaterThanEqualToPreviousSite);\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(nextDaysFromFSI, true)) {\r\n            /** @type {?} */\r\n            var lessThanEqualToNextSite = checkForDaysFromFSILessThanEqualToNextSite(currentDaysFromFSI, nextDaysFromFSI);\r\n            if (lessThanEqualToNextSite) {\r\n                Object.assign(errors, lessThanEqualToNextSite);\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(enddate) && AppUtil.isDefined(TLSS)) {\r\n            enddate = moment$9(enddate);\r\n            TLSS = moment$9(TLSS);\r\n            /** @type {?} */\r\n            var enddateLessThanTLSS = checkForEnddateLessThanTLSS(enddate, TLSS);\r\n            if (enddateLessThanTLSS) {\r\n                Object.assign(errors, enddateLessThanTLSS);\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} days1\r\n * @param {?} days2\r\n * @return {?}\r\n */\r\nfunction checkForDaysFromFSIGreaterThanEqualToPreviousSite(days1, days2) {\r\n    if (Number(days1) >= Number(days2)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            ltPrevError: true\r\n        };\r\n    }\r\n}\r\n/**\r\n * @param {?} days1\r\n * @param {?} days2\r\n * @return {?}\r\n */\r\nfunction checkForDaysFromFSILessThanEqualToNextSite(days1, days2) {\r\n    if (Number(days1) <= Number(days2)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            gtnextError: true\r\n        };\r\n    }\r\n}\r\n/**\r\n * @param {?} days\r\n * @param {?} minValue\r\n * @return {?}\r\n */\r\nfunction checkForMinValue(days, minValue) {\r\n    if (Number(days) < Number(minValue)) {\r\n        return { min: { min: minValue } };\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param {?} enddate\r\n * @param {?} TLSS\r\n * @return {?}\r\n */\r\nfunction checkForEnddateLessThanTLSS(enddate, TLSS) {\r\n    if (enddate.isSameOrBefore(TLSS)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            SIDateError: true\r\n        };\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/EndDateValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$a = momentNS;\r\n/**\r\n * Validator function to validate the End date.\r\n * @param {?} endDateFieldName - end date field name for a site\r\n * @param {?} previousSiteEndDateFieldName - previous site end date field name or value\r\n * @param {?=} previousSiteEndDateIsValue - boolean field to indicate if the previousSiteEndDateFieldName is name of the field or value\r\n * @param {?=} TLSSFieldName - TLSS field name or value\r\n * @param {?=} TLSSIsValue - boolean field to indicate if the TLSSFieldName is name of the field or value\r\n * @param {?=} FSIFieldName - FSI field name or value\r\n * @param {?=} FSIIsValue - boolean field to indicate if the FSIFieldName is name of the field or value\r\n * @param {?=} studyLSRFieldName  -study LSR field name or value\r\n * @param {?=} studyLSRIsValue - boolean field to indicate if the studyLSRFieldName is name of the field or value\r\n * @param {?=} studyFSIFieldName - study FSI field name or value\r\n * @param {?=} studyFSIIsValue - boolean field to indicate if the studyFSIFieldName is name of the field or value\r\n * @param {?=} LSRFieldName - country LSR field name or value\r\n * @param {?=} LSRIsValue - boolean field to indicate if the LSRFieldName is name of the field or value\r\n * @return {?}\r\n */\r\nfunction EndDateValidator(endDateFieldName, previousSiteEndDateFieldName, previousSiteEndDateIsValue, TLSSFieldName, TLSSIsValue, FSIFieldName, FSIIsValue, studyLSRFieldName, studyLSRIsValue, studyFSIFieldName, studyFSIIsValue, LSRFieldName, LSRIsValue) {\r\n    if (previousSiteEndDateIsValue === void 0) { previousSiteEndDateIsValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        /** @type {?} */\r\n        var errors = null;\r\n        if (endDateFieldName !== undefined && endDateFieldName !== null) {\r\n            errors = {};\r\n            /** @type {?} */\r\n            var enddateControl = control.get(endDateFieldName);\r\n            if (enddateControl && enddateControl.valid) {\r\n                /** @type {?} */\r\n                var enddate = moment$a(enddateControl.value);\r\n                if (previousSiteEndDateFieldName !== undefined && previousSiteEndDateFieldName !== null) {\r\n                    /** @type {?} */\r\n                    var previousSiteEndDate = void 0;\r\n                    if (previousSiteEndDateIsValue) {\r\n                        previousSiteEndDate = previousSiteEndDateFieldName;\r\n                    }\r\n                    else {\r\n                        /** @type {?} */\r\n                        var previousSiteEndDateControl = control.get(previousSiteEndDateFieldName);\r\n                        if (previousSiteEndDateControl && previousSiteEndDateControl.valid) {\r\n                            previousSiteEndDate = moment$a(previousSiteEndDateControl.value);\r\n                        }\r\n                    }\r\n                    if (previousSiteEndDate !== undefined && previousSiteEndDate !== null) {\r\n                        /** @type {?} */\r\n                        var greaterThanEqualtoPreviousSite = checkForEnddateGreaterThanEqualtoPreviousSite(enddate, previousSiteEndDate);\r\n                        if (greaterThanEqualtoPreviousSite) {\r\n                            Object.assign(errors, greaterThanEqualtoPreviousSite);\r\n                        }\r\n                    }\r\n                }\r\n                if (FSIFieldName !== undefined && FSIFieldName !== null) {\r\n                    /** @type {?} */\r\n                    var FSI = void 0;\r\n                    if (FSIIsValue) {\r\n                        FSI = FSIFieldName;\r\n                    }\r\n                    else {\r\n                        /** @type {?} */\r\n                        var FSIControl = control.get(FSIFieldName);\r\n                        if (FSIControl && FSIControl.valid) {\r\n                            FSI = moment$a(FSIControl.value);\r\n                        }\r\n                    }\r\n                    if (FSI !== undefined && FSI !== null) {\r\n                        /** @type {?} */\r\n                        var greaterThanFSI = checkForEnddateGreaterThanFSI(enddate, FSI);\r\n                        if (greaterThanFSI) {\r\n                            Object.assign(errors, greaterThanFSI);\r\n                        }\r\n                    }\r\n                }\r\n                if (TLSSFieldName !== undefined && TLSSFieldName !== null) {\r\n                    /** @type {?} */\r\n                    var TLSS = void 0;\r\n                    if (TLSSIsValue) {\r\n                        TLSS = TLSSFieldName;\r\n                    }\r\n                    else {\r\n                        /** @type {?} */\r\n                        var TLSSControl = control.get(TLSSFieldName);\r\n                        if (TLSSControl && TLSSControl.valid) {\r\n                            TLSS = moment$a(TLSSControl.value);\r\n                        }\r\n                    }\r\n                    if (TLSS !== undefined && TLSS !== null) {\r\n                        /** @type {?} */\r\n                        var lessThanTLSS = checkForEnddateLessThanTLSS$1(enddate, TLSS);\r\n                        if (lessThanTLSS) {\r\n                            Object.assign(errors, lessThanTLSS);\r\n                        }\r\n                    }\r\n                }\r\n                if (studyLSRFieldName !== undefined && studyLSRFieldName !== null) {\r\n                    /** @type {?} */\r\n                    var studyLSR = void 0;\r\n                    if (studyLSRIsValue) {\r\n                        studyLSR = studyLSRFieldName;\r\n                    }\r\n                    else {\r\n                        /** @type {?} */\r\n                        var studyLSRControl = control.get(studyLSRFieldName);\r\n                        if (studyLSRControl !== undefined && studyLSRControl !== null) {\r\n                            studyLSR = moment$a(studyLSRControl.value);\r\n                        }\r\n                    }\r\n                    if (studyLSR !== undefined && studyLSR !== null) {\r\n                        /** @type {?} */\r\n                        var lessThanStudyLSR = checkForEnddateLessThanStudyLSR(enddate, studyLSR);\r\n                        if (lessThanStudyLSR) {\r\n                            Object.assign(errors, lessThanStudyLSR);\r\n                        }\r\n                    }\r\n                }\r\n                if (studyFSIFieldName !== undefined && studyFSIFieldName !== null) {\r\n                    /** @type {?} */\r\n                    var studyFSI = void 0;\r\n                    if (studyFSIIsValue) {\r\n                        studyFSI = studyFSIFieldName;\r\n                    }\r\n                    else {\r\n                        /** @type {?} */\r\n                        var studyFSIControl = control.get(studyFSIFieldName);\r\n                        if (studyFSIControl && studyFSIControl.valid) {\r\n                            studyFSI = moment$a(studyFSIControl.value);\r\n                        }\r\n                    }\r\n                    if (studyFSI !== undefined && studyFSI !== null) {\r\n                        /** @type {?} */\r\n                        var greaterThanStudyFSI = checkForEnddateGreaterThanStudyFSI(enddate, studyFSI);\r\n                        if (greaterThanStudyFSI) {\r\n                            Object.assign(errors, greaterThanStudyFSI);\r\n                        }\r\n                    }\r\n                }\r\n                if (LSRFieldName !== undefined && LSRFieldName !== null) {\r\n                    /** @type {?} */\r\n                    var LSR = void 0;\r\n                    if (LSRIsValue) {\r\n                        LSR = LSRFieldName;\r\n                    }\r\n                    else {\r\n                        /** @type {?} */\r\n                        var LSRControl = control.get(LSRFieldName);\r\n                        if (LSRControl && LSRControl.valid) {\r\n                            LSR = moment$a(LSRControl.value);\r\n                        }\r\n                    }\r\n                    if (LSR !== undefined && LSR !== null) {\r\n                        /** @type {?} */\r\n                        var lessThanLSR = checkForEnddateLessThanLSR(enddate, LSR);\r\n                        if (lessThanLSR) {\r\n                            Object.assign(errors, lessThanLSR);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (Object.keys(errors).length !== 0) {\r\n            control.get(endDateFieldName).setErrors(errors);\r\n            returnVal = {};\r\n            returnVal[endDateFieldName] = errors;\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} enddate\r\n * @param {?} previousSiteEndDate\r\n * @return {?}\r\n */\r\nfunction checkForEnddateGreaterThanEqualtoPreviousSite(enddate, previousSiteEndDate) {\r\n    if (enddate.isSameOrAfter(previousSiteEndDate)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            'ltPrevError': true\r\n        };\r\n    }\r\n}\r\n/**\r\n * @param {?} enddate\r\n * @param {?} TLSS\r\n * @return {?}\r\n */\r\nfunction checkForEnddateLessThanTLSS$1(enddate, TLSS) {\r\n    if (enddate.isBefore(TLSS)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            'SIEndDateError2': true\r\n        };\r\n    }\r\n}\r\n// TODO: To verify if this condition will be required\r\n/**\r\n * @param {?} enddate\r\n * @param {?} FSI\r\n * @return {?}\r\n */\r\nfunction checkForEnddateGreaterThanFSI(enddate, FSI) {\r\n    if (enddate.isAfter(FSI)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            // TODO: To confirm message for this from Tejas and add a new message in errorMessages.properties\r\n            'greaterThanFSI': true\r\n        };\r\n    }\r\n}\r\n// TODO: To verify if this condition will be required\r\n/**\r\n * @param {?} enddate\r\n * @param {?} studyLSR\r\n * @return {?}\r\n */\r\nfunction checkForEnddateLessThanStudyLSR(enddate, studyLSR) {\r\n    if (enddate.isBefore(studyLSR)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            // TODO: To confirm message for this from Tejas and add a new message in errorMessages.properties\r\n            'lessThanStudyLSR': true\r\n        };\r\n    }\r\n}\r\n// TODO: To verify if this condition will be required\r\n/**\r\n * @param {?} enddate\r\n * @param {?} studyFSI\r\n * @return {?}\r\n */\r\nfunction checkForEnddateGreaterThanStudyFSI(enddate, studyFSI) {\r\n    if (enddate.isAfter(studyFSI)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            // TODO: To confirm message for this from Tejas and add a new message in errorMessages.properties\r\n            'greaterThanStudyFSI': true\r\n        };\r\n    }\r\n}\r\n// TODO: To verify if this condition will be required\r\n/**\r\n * @param {?} enddate\r\n * @param {?} LSR\r\n * @return {?}\r\n */\r\nfunction checkForEnddateLessThanLSR(enddate, LSR) {\r\n    if (enddate.isBefore(LSR)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            // TODO: To confirm message for this from Tejas and add a new message in errorMessages.properties\r\n            'lessThanLSR': true\r\n        };\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/FSIValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$b = momentNS;\r\n/**\r\n * Validator function to validate the FSI.\r\n * @param {?} countryFSIFieldName - country FSI field name\r\n * @param {?} studyFSIFieldName - study FSI field name or value\r\n * @param {?=} studyFSIIsValue - boolean field to indicate if the studyFSIFieldName is name of the field or value\r\n * @param {?=} TLSSFieldName -TLSS field name or value\r\n * @param {?=} TLSSIsValue - boolean field to indicate if the TLSSFieldName is name of the field or value\r\n * @param {?=} isAdjustmentFieldName - isAdjustment field name or value\r\n * @param {?=} isAdjustmentIsValue - boolean field to indicate if the isAdjustmentFieldName is name of the field or value\r\n * @param {?=} isAdjustableFieldName -isAdjustable field name or value\r\n * @param {?=} isAdjustableIsValue - boolean field to indicate if the isAdjustableFieldName is name of the field or value\r\n * @param {?=} isCohortPlan\r\n * @return {?}\r\n */\r\nfunction FSIValidator(countryFSIFieldName, studyFSIFieldName, studyFSIIsValue, TLSSFieldName, TLSSIsValue, \r\n// TLSRFieldName?: any,\r\n// TLSRIsValue?: boolean,\r\nisAdjustmentFieldName, isAdjustmentIsValue, isAdjustableFieldName, isAdjustableIsValue, isCohortPlan) {\r\n    if (studyFSIIsValue === void 0) { studyFSIIsValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        /** @type {?} */\r\n        var studyFSI;\r\n        /** @type {?} */\r\n        var TLSS;\r\n        // let TLSR;\r\n        /** @type {?} */\r\n        var isAdjustment;\r\n        /** @type {?} */\r\n        var isAdjustable;\r\n        // tslint:disable-next-line:prefer-const\r\n        /** @type {?} */\r\n        var errors = null;\r\n        if (countryFSIFieldName !== undefined && countryFSIFieldName !== null) {\r\n            /** @type {?} */\r\n            var countryFSIControl = (/** @type {?} */ (control.get(countryFSIFieldName)));\r\n            if (countryFSIControl &&\r\n                !(countryFSIControl.invalid &&\r\n                    countryFSIControl.errors &&\r\n                    countryFSIControl.errors.matDatepickerParse)) {\r\n                errors = initializeErrorsObject$1(errors, countryFSIControl);\r\n                if (countryFSIControl.enabled) {\r\n                    /** @type {?} */\r\n                    var countryFSI = countryFSIControl.value;\r\n                    if (studyFSIFieldName !== undefined && studyFSIFieldName !== null) {\r\n                        // let studyFSI;\r\n                        if (studyFSIIsValue) {\r\n                            studyFSI = moment$b(studyFSIFieldName);\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var studyFSIControl = control.get(studyFSIFieldName);\r\n                            if (studyFSIControl &&\r\n                                studyFSIControl.valid &&\r\n                                AppUtil.isDefined(studyFSIControl.value)) {\r\n                                studyFSI = moment$b(studyFSIControl.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (TLSSFieldName !== undefined && TLSSFieldName !== null) {\r\n                        // let TLSS;\r\n                        if (TLSSIsValue) {\r\n                            TLSS = moment$b(TLSSFieldName);\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var TLSSControl = control.get(TLSSFieldName);\r\n                            if (TLSSControl &&\r\n                                TLSSControl.valid &&\r\n                                AppUtil.isDefined(TLSSControl.value)) {\r\n                                TLSS = moment$b(TLSSControl.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (isAdjustmentFieldName !== undefined &&\r\n                        isAdjustmentFieldName !== null &&\r\n                        isAdjustableFieldName !== undefined &&\r\n                        isAdjustableFieldName !== null) {\r\n                        // let isAdjustment, isAdjustable;\r\n                        if (isAdjustmentIsValue) {\r\n                            isAdjustment = isAdjustmentFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var isAdjustmentControl = control.get(isAdjustmentFieldName);\r\n                            if (isAdjustmentControl) {\r\n                                isAdjustment = isAdjustmentControl.value;\r\n                            }\r\n                        }\r\n                        if (isAdjustableIsValue) {\r\n                            isAdjustable = isAdjustableFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var isAdjustableControl = control.get(isAdjustableFieldName);\r\n                            if (isAdjustableControl) {\r\n                                isAdjustable = isAdjustableControl.value;\r\n                            }\r\n                        }\r\n                    }\r\n                    // if (enrollmentParametersFieldName !== undefined && enrollmentParametersFieldName !== null) {\r\n                    //   enrollmentParametersFormGroup = control.get(enrollmentParametersFieldName);\r\n                    // }\r\n                    /** @type {?} */\r\n                    var errorsFromValidator = ValidateFSI(countryFSI, studyFSI, TLSS, isAdjustment, isAdjustable, isCohortPlan);\r\n                    if (errorsFromValidator) {\r\n                        Object.assign(errors, errorsFromValidator);\r\n                    }\r\n                    if (!AppUtil.isDefined(countryFSI)) {\r\n                        /** @type {?} */\r\n                        var NonEmptyField = REQUIRED_ERROR_OBJ;\r\n                        Object.assign(errors, NonEmptyField);\r\n                    }\r\n                }\r\n                if (errors && Object.keys(errors).length !== 0) {\r\n                    control.get(countryFSIFieldName).setErrors(errors);\r\n                    returnVal = {};\r\n                    returnVal[countryFSIFieldName] = errors;\r\n                }\r\n                else {\r\n                    countryFSIControl.setErrors(null);\r\n                }\r\n            }\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} errors\r\n * @param {?} countryFSIControl\r\n * @return {?}\r\n */\r\nfunction initializeErrorsObject$1(errors, countryFSIControl) {\r\n    errors = countryFSIControl.errors;\r\n    if (!errors) {\r\n        errors = {};\r\n    }\r\n    if (errors.FSILT_ERROR) {\r\n        delete errors.FSILT_ERROR;\r\n    }\r\n    if (errors.FSIRedist) {\r\n        delete errors.FSIRedist;\r\n    }\r\n    if (errors.FSI_GT_TLSS) {\r\n        delete errors.FSI_GT_TLSS;\r\n    }\r\n    // if (errors.FSIRequriedForFSS) {\r\n    //   delete errors.FSIRequriedForFSS;\r\n    // }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} countryFSI\r\n * @param {?} studyFSI\r\n * @param {?=} TLSS\r\n * @param {?=} isAdjustment\r\n * @param {?=} isAdjustable\r\n * @param {?=} isCohortPlan\r\n * @return {?}\r\n */\r\nfunction ValidateFSI(countryFSI, studyFSI, TLSS, isAdjustment, isAdjustable, isCohortPlan) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (AppUtil.isDefined(countryFSI)) {\r\n        countryFSI = moment$b(countryFSI);\r\n        if (AppUtil.isDefined(studyFSI)) {\r\n            studyFSI = moment$b(studyFSI);\r\n            if (studyFSI !== undefined && studyFSI !== null) {\r\n                /** @type {?} */\r\n                var greaterThanEqualToStudyFSI = checkForCountryFSIGreaterThanEqualToStudyFSI(countryFSI, studyFSI);\r\n                if (greaterThanEqualToStudyFSI) {\r\n                    Object.assign(errors, greaterThanEqualToStudyFSI);\r\n                }\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(TLSS)) {\r\n            TLSS = moment$b(TLSS);\r\n            if (TLSS !== undefined && TLSS !== null) {\r\n                /** @type {?} */\r\n                var lessThanEqualToTLSS = checkForCountryFSILessThanEqualToTLSS(countryFSI, TLSS);\r\n                if (lessThanEqualToTLSS) {\r\n                    Object.assign(errors, lessThanEqualToTLSS);\r\n                }\r\n            }\r\n        }\r\n        if (isAdjustment !== undefined &&\r\n            isAdjustment !== null &&\r\n            isAdjustable !== undefined &&\r\n            isAdjustable !== null &&\r\n            (isCohortPlan === undefined ||\r\n                isCohortPlan === null ||\r\n                isCohortPlan === false)) {\r\n            /** @type {?} */\r\n            var greaterThanToday = checkForCountryFSIGreaterThanToday(countryFSI, isAdjustment, isAdjustable);\r\n            if (greaterThanToday) {\r\n                Object.assign(errors, greaterThanToday);\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} countryFSI\r\n * @param {?} studyFSI\r\n * @return {?}\r\n */\r\nfunction checkForCountryFSIGreaterThanEqualToStudyFSI(countryFSI, studyFSI) {\r\n    if (countryFSI.isSameOrAfter(studyFSI)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            // FSILTError: true\r\n            FSILT_ERROR: { FSILT_ERROR: studyFSI }\r\n        };\r\n    }\r\n}\r\n/**\r\n * @param {?} countryFSI\r\n * @param {?} TLSS\r\n * @return {?}\r\n */\r\nfunction checkForCountryFSILessThanEqualToTLSS(countryFSI, TLSS) {\r\n    if (countryFSI.isSameOrBefore(TLSS)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            // FSIgtTLSS: true\r\n            FSI_GT_TLSS: { FSI_GT_TLSS: TLSS }\r\n        };\r\n    }\r\n}\r\n/**\r\n * @param {?} countryFSI\r\n * @param {?} isAdjustment\r\n * @param {?} isAdjustable\r\n * @return {?}\r\n */\r\nfunction checkForCountryFSIGreaterThanToday(countryFSI, isAdjustment, isAdjustable) {\r\n    if (isAdjustment && isAdjustable) {\r\n        if (countryFSI.isAfter()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return {\r\n                FSIRedist: true\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/FSSValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$c = momentNS;\r\n/**\r\n * Validator function to validate the FSS.\r\n * @param {?} FSSFieldName - FSS field name\r\n * @param {?} FSIFieldName -FSI field name or value\r\n * @param {?=} FSIIsValue - boolean field to indicate if the FSIFieldName is name of the field or value\r\n * @return {?}\r\n */\r\nfunction FSSValidator(FSSFieldName, FSIFieldName, FSIIsValue) {\r\n    if (FSIIsValue === void 0) { FSIIsValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        // tslint:disable-next-line:prefer-const\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var FSS;\r\n        /** @type {?} */\r\n        var FSI;\r\n        if (FSSFieldName !== undefined && FSSFieldName !== null) {\r\n            // errors = {};\r\n            /** @type {?} */\r\n            var FSSControl = control.get(FSSFieldName);\r\n            if (FSSControl && FSSControl.valid) {\r\n                if (AppUtil.isDefined(FSSControl.value)) {\r\n                    FSS = moment$c(FSSControl.value);\r\n                    if (FSIFieldName !== undefined && FSIFieldName !== null) {\r\n                        // let FSI;\r\n                        if (FSIIsValue) {\r\n                            FSI = FSIFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var FSIControl = control.get(FSIFieldName);\r\n                            if (FSIControl && FSIControl.valid && AppUtil.isDefined(FSIControl.value)) {\r\n                                FSI = moment$c(FSIControl.value);\r\n                            }\r\n                        }\r\n                        // if (FSI !== undefined && FSI !== null) {\r\n                        //     const greaterThanEqualToFSI = checkForFSSGreaterThanEqualToFSI(FSS, FSI);\r\n                        //     if (greaterThanEqualToFSI) {\r\n                        //         Object.assign(errors, greaterThanEqualToFSI);\r\n                        //     }\r\n                        // }\r\n                    }\r\n                    /** @type {?} */\r\n                    var errorsFromValidator = ValidateFSS(FSS, FSI);\r\n                    if (errorsFromValidator) {\r\n                        Object.assign(errors, errorsFromValidator);\r\n                    }\r\n                }\r\n                else {\r\n                    FSSControl.setErrors(null);\r\n                }\r\n            }\r\n        }\r\n        if (Object.keys(errors).length !== 0) {\r\n            control.get(FSSFieldName).setErrors(errors);\r\n            returnVal = {};\r\n            returnVal[FSSFieldName] = errors;\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} FSS\r\n * @param {?} FSI\r\n * @return {?}\r\n */\r\nfunction ValidateFSS(FSS, FSI) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (AppUtil.isDefined(FSS)) {\r\n        FSS = moment$c(FSS);\r\n        if (AppUtil.isDefined(FSI)) {\r\n            FSI = moment$c(FSI);\r\n            if (FSI !== undefined && FSI !== null) {\r\n                /** @type {?} */\r\n                var greaterThanEqualToFSI = checkForFSSGreaterThanEqualToFSI(FSS, FSI);\r\n                if (greaterThanEqualToFSI) {\r\n                    Object.assign(errors, greaterThanEqualToFSI);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} FSS\r\n * @param {?} FSI\r\n * @return {?}\r\n */\r\nfunction checkForFSSGreaterThanEqualToFSI(FSS, FSI) {\r\n    if (FSS.isSameOrAfter(FSI)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return {\r\n            // 'dependencyError': true\r\n            DEPENDENCY_ERROR: { DEPENDENCY_ERROR: FSI }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/AllNotZeroValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Validator function to validate the given fields for all should not be zero.\r\n * @param {?} controlName - name of the control to set errors upon\r\n * @param {?=} fields - array containing the field names or values\r\n * @param {?=} isValue - boolean field to indicate if the fields array contains names of fields or their values\r\n * @return {?}\r\n */\r\nfunction AllNotZeroValidator(controlName, fields, isValue) {\r\n    if (isValue === void 0) { isValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        /** @type {?} */\r\n        var errors = null;\r\n        /** @type {?} */\r\n        var allZero = false;\r\n        if (controlName !== undefined && controlName !== null) {\r\n            /** @type {?} */\r\n            var fieldControl = control.get(controlName);\r\n            if (fieldControl) {\r\n                errors = fieldControl.errors;\r\n                if (!errors) {\r\n                    errors = {};\r\n                }\r\n                if (AppUtil.isDefined(fieldControl.value, true)) {\r\n                    if (fields && fields.length > 0) {\r\n                        fields.forEach((/**\r\n                         * @param {?} field\r\n                         * @param {?} index\r\n                         * @return {?}\r\n                         */\r\n                        function (field, index) {\r\n                            /** @type {?} */\r\n                            var value = isValue ? field : control.get(field.toString()).value;\r\n                            if (index === 0) {\r\n                                allZero = (Number(value) === 0);\r\n                            }\r\n                            else {\r\n                                allZero = allZero && (Number(value) === 0);\r\n                            }\r\n                        }));\r\n                    }\r\n                    if (allZero) {\r\n                        errors = Object.assign({}, {\r\n                            'allZeroError': true\r\n                        }, errors);\r\n                        fieldControl.setErrors(errors);\r\n                        returnVal = {};\r\n                        returnVal[controlName] = errors;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} daysto25\r\n * @param {?} daysto50\r\n * @param {?} daysto90\r\n * @return {?}\r\n */\r\nfunction ValidateAllNotZero(daysto25, daysto50, daysto90) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (AppUtil.isDefined(daysto25, true)\r\n        && AppUtil.isDefined(daysto50, true)\r\n        && AppUtil.isDefined(daysto90, true)) {\r\n        if (daysto25 === 0 && daysto50 === 0 && daysto90 === 0) {\r\n            Object.assign(errors, {\r\n                'allZeroError': true\r\n            });\r\n        }\r\n    }\r\n    return errors;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/RangeValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Validator function to validate the specified range.\r\n * @param {?} fieldName - name of the field to validate\r\n * @param {?=} minFieldName - lower bound field name or value\r\n * @param {?=} minIsValue - boolean field to indicate if the minFieldName is name of the field or value\r\n * @param {?=} maxFieldName -upper bound field name or value\r\n * @param {?=} maxIsValue - boolean field to indicate if the maxFieldName is name of the field or value\r\n * @return {?}\r\n */\r\nfunction RangeValidator(fieldName, minFieldName, minIsValue, maxFieldName, maxIsValue) {\r\n    if (minIsValue === void 0) { minIsValue = true; }\r\n    if (maxIsValue === void 0) { maxIsValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        // tslint:disable-next-line:prefer-const\r\n        /** @type {?} */\r\n        var errors = null;\r\n        /** @type {?} */\r\n        var fieldValue;\r\n        /** @type {?} */\r\n        var minValue;\r\n        /** @type {?} */\r\n        var maxValue;\r\n        /** @type {?} */\r\n        var fieldNameControl = null;\r\n        if (fieldName !== undefined && fieldName !== null) {\r\n            fieldNameControl = control.get(fieldName);\r\n            errors = initializeErrorsObject$2(errors, fieldNameControl);\r\n            if (fieldNameControl && fieldNameControl.enabled) {\r\n                fieldValue = fieldNameControl.value;\r\n                if (AppUtil.isDefined(fieldValue)) {\r\n                    if (minFieldName !== undefined && minFieldName !== null) {\r\n                        // let minValue;\r\n                        if (minIsValue) {\r\n                            minValue = minFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var minControl = control.get(minFieldName);\r\n                            if (minControl && minControl.valid) {\r\n                                minValue = minControl.value;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (maxFieldName !== undefined && maxFieldName !== null) {\r\n                        // let maxValue;\r\n                        if (maxIsValue) {\r\n                            maxValue = maxFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var maxControl = control.get(maxFieldName);\r\n                            if (maxControl) {\r\n                                maxValue = maxControl.value;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            /** @type {?} */\r\n            var errorsFromValidator = ValidateRange(fieldValue, minValue, maxValue);\r\n            if (errorsFromValidator) {\r\n                Object.assign(errors, errorsFromValidator);\r\n            }\r\n            fieldNameControl = control.get(fieldName);\r\n            if (fieldNameControl && errors) {\r\n                if (Object.keys(errors).length !== 0) {\r\n                    fieldNameControl.setErrors(errors);\r\n                    returnVal = {};\r\n                    returnVal[fieldName] = errors;\r\n                }\r\n                else {\r\n                    fieldNameControl.setErrors(null);\r\n                }\r\n            }\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} errors\r\n * @param {?} fieldNameControl\r\n * @return {?}\r\n */\r\nfunction initializeErrorsObject$2(errors, fieldNameControl) {\r\n    if (fieldNameControl) {\r\n        errors = fieldNameControl.errors;\r\n    }\r\n    if (!errors) {\r\n        errors = {};\r\n    }\r\n    if (errors.min) {\r\n        delete errors.min;\r\n    }\r\n    if (errors.max) {\r\n        delete errors.max;\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} fieldValue\r\n * @param {?} minValue\r\n * @param {?} maxValue\r\n * @param {?=} errorCode\r\n * @param {?=} strictChecking\r\n * @return {?}\r\n */\r\nfunction ValidateRange(fieldValue, minValue, maxValue, errorCode, strictChecking) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (AppUtil.isDefined(fieldValue)) {\r\n        if (AppUtil.isDefined(minValue)) {\r\n            /** @type {?} */\r\n            var lessThanMin = checkForValueLessThanMinValue(fieldValue, minValue, errorCode, strictChecking);\r\n            if (lessThanMin) {\r\n                Object.assign(errors, lessThanMin);\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(maxValue)) {\r\n            /** @type {?} */\r\n            var greaterThanMaxValue = checkForValueGreaterThanMaxValue(fieldValue, maxValue);\r\n            if (greaterThanMaxValue) {\r\n                Object.assign(errors, greaterThanMaxValue);\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} value\r\n * @param {?} minValue\r\n * @param {?=} errorCode\r\n * @param {?=} strictChecking\r\n * @return {?}\r\n */\r\nfunction checkForValueLessThanMinValue(value, minValue, errorCode, strictChecking) {\r\n    var _a, _b;\r\n    if (strictChecking) {\r\n        if (Number(value) <= Number(minValue)) {\r\n            if (errorCode) {\r\n                return _a = {}, _a[errorCode] = minValue, _a;\r\n            }\r\n            else {\r\n                return { 'minNumRequiredError': true };\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    if (Number(value) < Number(minValue)) {\r\n        if (errorCode) {\r\n            return _b = {}, _b[errorCode] = minValue, _b;\r\n        }\r\n        else {\r\n            return { min: { min: minValue } };\r\n        }\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @param {?} value\r\n * @param {?} maxValue\r\n * @return {?}\r\n */\r\nfunction checkForValueGreaterThanMaxValue(value, maxValue) {\r\n    if (Number(value) > Number(maxValue)) {\r\n        return { max: { max: maxValue } };\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/SASValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Validator function to validate the sites actvely screening field.\r\n * @param {?} sasFieldName - name of the SAS field to validate\r\n * @param {?=} activeSitesFieldName - active sites field name or value\r\n * @param {?=} activeSitesIsValue - boolean field to indicate if the activeSitesFieldName is name of the field or value\r\n * @param {?=} maxValue\r\n * @return {?}\r\n */\r\nfunction SASValidator(sasFieldName, activeSitesFieldName, activeSitesIsValue, maxValue) {\r\n    if (activeSitesIsValue === void 0) { activeSitesIsValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        // tslint:disable-next-line:prefer-const\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var activeSites;\r\n        /** @type {?} */\r\n        var fieldValue;\r\n        if (sasFieldName !== undefined && sasFieldName !== null) {\r\n            /** @type {?} */\r\n            var sasFieldNameControl = control.get(sasFieldName);\r\n            if (sasFieldNameControl && sasFieldNameControl.enabled) {\r\n                fieldValue = sasFieldNameControl.value;\r\n                if (AppUtil.isDefined(fieldValue, true)) {\r\n                    if (activeSitesFieldName !== undefined && activeSitesFieldName !== null) {\r\n                        // let activeSites;\r\n                        if (activeSitesIsValue) {\r\n                            activeSites = activeSitesFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var activeSitesControl = control.get(activeSitesFieldName);\r\n                            if (activeSitesControl) {\r\n                                activeSites = activeSitesControl.value;\r\n                            }\r\n                        }\r\n                        // if (AppUtil.isDefined(activeSites, true)) {\r\n                        //     const activeSitesEqualZero = checkForActiveSitesEqualZero(activeSites);\r\n                        //     if (activeSitesEqualZero) {\r\n                        //         Object.assign(errors, activeSitesEqualZero);\r\n                        //     }\r\n                        // }\r\n                    }\r\n                    /** @type {?} */\r\n                    var errorsFromValidator = ValidateSAS(fieldValue, activeSites, maxValue);\r\n                    if (errorsFromValidator) {\r\n                        Object.assign(errors, errorsFromValidator);\r\n                    }\r\n                }\r\n                else {\r\n                    Object.assign(errors, REQUIRED_ERROR_OBJ);\r\n                }\r\n            }\r\n        }\r\n        if (Object.keys(errors).length !== 0) {\r\n            if (control.get(sasFieldName)) {\r\n                control.get(sasFieldName).setErrors(errors);\r\n            }\r\n            returnVal = {};\r\n            returnVal[sasFieldName] = errors;\r\n        }\r\n        else {\r\n            if (control.get(sasFieldName)) {\r\n                control.get(sasFieldName).setErrors(null);\r\n            }\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} SAS\r\n * @param {?} activeSites\r\n * @param {?=} maxValue\r\n * @return {?}\r\n */\r\nfunction ValidateSAS(SAS, activeSites, maxValue) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (AppUtil.isDefined(SAS, true)) {\r\n        if (AppUtil.isDefined(activeSites, true)) {\r\n            /** @type {?} */\r\n            var activeSitesEqualZero = checkForActiveSitesEqualZero(activeSites);\r\n            if (activeSitesEqualZero) {\r\n                Object.assign(errors, activeSitesEqualZero);\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(maxValue, true)) {\r\n            /** @type {?} */\r\n            var maxValueError = checkForMaxValue(SAS, maxValue);\r\n            if (maxValueError) {\r\n                Object.assign(errors, maxValueError);\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} activeSites\r\n * @return {?}\r\n */\r\nfunction checkForActiveSitesEqualZero(activeSites) {\r\n    if (Number(activeSites) === 0) {\r\n        return { 'ActiveSitesZeroError': true };\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @param {?} days\r\n * @param {?} maxValue\r\n * @return {?}\r\n */\r\nfunction checkForMaxValue(days, maxValue) {\r\n    if (Number(days) > Number(maxValue)) {\r\n        return { max: { max: maxValue } };\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/RRValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Validator function to validate the RR.\r\n * @param {?} RRFieldName - RR field name\r\n * @param {?} maxRRValue -maximum RR value\r\n * @param {?} SRFieldName - SR field name or value\r\n * @param {?=} SRIsValue - boolean field to indicate if the SRFieldName is name of the field or value\r\n * @param {?=} maxSRValue -maximum SR value\r\n * @return {?}\r\n */\r\nfunction RRValidator(RRFieldName, maxRRValue, SRFieldName, SRIsValue, maxSRValue) {\r\n    if (SRIsValue === void 0) { SRIsValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        // tslint:disable-next-line:prefer-const\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var RR;\r\n        /** @type {?} */\r\n        var SR;\r\n        if (RRFieldName !== undefined && RRFieldName !== null) {\r\n            /** @type {?} */\r\n            var RRControl = control.get(RRFieldName);\r\n            if (RRControl && RRControl.enabled) {\r\n                if (AppUtil.isDefined(RRControl.value, true)) {\r\n                    RR = Number(RRControl.value);\r\n                    if (SRFieldName !== undefined && SRFieldName !== null) {\r\n                        // let FSI;\r\n                        if (SRIsValue) {\r\n                            SR = SRFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var SRControl = control.get(SRFieldName);\r\n                            if (SRControl && AppUtil.isDefined(SRControl.value, true)) {\r\n                                SR = Number(SRControl.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    /** @type {?} */\r\n                    var errorsFromValidator = ValidateRR(RR, maxRRValue, SR, maxSRValue);\r\n                    if (errorsFromValidator) {\r\n                        Object.assign(errors, errorsFromValidator);\r\n                    }\r\n                }\r\n                else {\r\n                    Object.assign(errors, REQUIRED_ERROR_OBJ);\r\n                }\r\n            }\r\n        }\r\n        if (Object.keys(errors).length !== 0) {\r\n            if (control.get(RRFieldName)) {\r\n                control.get(RRFieldName).setErrors(errors);\r\n            }\r\n            returnVal = {};\r\n            returnVal[RRFieldName] = errors;\r\n        }\r\n        else {\r\n            if (control.get(RRFieldName)) {\r\n                control.get(RRFieldName).setErrors(null);\r\n            }\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} RR\r\n * @param {?} maxRRValue\r\n * @param {?} SR\r\n * @param {?} maxSRValue\r\n * @return {?}\r\n */\r\nfunction ValidateRR(RR, maxRRValue, SR, maxSRValue) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (AppUtil.isDefined(RR, true)) {\r\n        if (AppUtil.isDefined(maxRRValue, true)) {\r\n            /** @type {?} */\r\n            var maxValueError = checkForMaxValue$1(RR, maxRRValue);\r\n            if (maxValueError) {\r\n                Object.assign(errors, maxValueError);\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(SR, true) && AppUtil.isDefined(maxSRValue, true)) {\r\n            /** @type {?} */\r\n            var SRGreaterThanMaxSR = checkForSRGreaterThanMaxSR(SR, maxSRValue);\r\n            if (SRGreaterThanMaxSR) {\r\n                Object.assign(errors, SRGreaterThanMaxSR);\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} SR\r\n * @param {?} maxSRValue\r\n * @return {?}\r\n */\r\nfunction checkForSRGreaterThanMaxSR(SR, maxSRValue) {\r\n    if (Number(SR) > Number(maxSRValue)) {\r\n        return { 'maxSrExceedError': true };\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param {?} value\r\n * @param {?} maxValue\r\n * @return {?}\r\n */\r\nfunction checkForMaxValue$1(value, maxValue) {\r\n    if (Number(value) > Number(maxValue)) {\r\n        return { max: { max: maxValue } };\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/SFRValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Validator function to validate the SFR.\r\n * @param {?} SFRFieldName - RR field name\r\n * @param {?} minSFRValue -minimum SFR value\r\n * @param {?} maxSFRValue -maximum SFR value\r\n * @param {?} SRFieldName - SR field name or value\r\n * @param {?=} SRIsValue - boolean field to indicate if the SRFieldName is name of the field or value\r\n * @param {?=} maxSRValue -maximum SR value\r\n * @return {?}\r\n */\r\nfunction SFRValidator(SFRFieldName, minSFRValue, maxSFRValue, SRFieldName, SRIsValue, maxSRValue) {\r\n    if (SRIsValue === void 0) { SRIsValue = true; }\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        // tslint:disable-next-line:prefer-const\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var SFR;\r\n        /** @type {?} */\r\n        var SR;\r\n        if (SFRFieldName !== undefined && SFRFieldName !== null) {\r\n            /** @type {?} */\r\n            var SFRControl = control.get(SFRFieldName);\r\n            if (SFRControl && SFRControl.enabled) {\r\n                if (AppUtil.isDefined(SFRControl.value, true)) {\r\n                    SFR = Number(SFRControl.value);\r\n                    if (SRFieldName !== undefined && SRFieldName !== null) {\r\n                        // let FSI;\r\n                        if (SRIsValue) {\r\n                            SR = SRFieldName;\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var SRControl = control.get(SRFieldName);\r\n                            if (SRControl && SRControl.disabled && AppUtil.isDefined(SRControl.value, true)) {\r\n                                SR = Number(SRControl.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    /** @type {?} */\r\n                    var errorsFromValidator = ValidateSFR(SFR, minSFRValue, maxSFRValue, SR, maxSRValue);\r\n                    if (errorsFromValidator) {\r\n                        Object.assign(errors, errorsFromValidator);\r\n                    }\r\n                }\r\n                else {\r\n                    Object.assign(errors, REQUIRED_ERROR_OBJ);\r\n                }\r\n            }\r\n        }\r\n        if (Object.keys(errors).length !== 0) {\r\n            if (control.get(SFRFieldName)) {\r\n                control.get(SFRFieldName).setErrors(errors);\r\n            }\r\n            returnVal = {};\r\n            returnVal[SFRFieldName] = errors;\r\n        }\r\n        else {\r\n            if (control.get(SFRFieldName)) {\r\n                control.get(SFRFieldName).setErrors(null);\r\n            }\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} SFR\r\n * @param {?} minSFRValue\r\n * @param {?} maxSFRValue\r\n * @param {?} SR\r\n * @param {?} maxSRValue\r\n * @return {?}\r\n */\r\nfunction ValidateSFR(SFR, minSFRValue, maxSFRValue, SR, maxSRValue) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (AppUtil.isDefined(SFR, true)) {\r\n        if (AppUtil.isDefined(minSFRValue, true)) {\r\n            /** @type {?} */\r\n            var minValueError = checkForMinValue$1(SFR, minSFRValue);\r\n            if (minValueError) {\r\n                Object.assign(errors, minValueError);\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(maxSFRValue, true)) {\r\n            /** @type {?} */\r\n            var maxValueError = checkForMaxValue$2(SFR, maxSFRValue);\r\n            if (maxValueError) {\r\n                Object.assign(errors, maxValueError);\r\n            }\r\n        }\r\n        if (AppUtil.isDefined(SR, true) && AppUtil.isDefined(maxSRValue, true)) {\r\n            /** @type {?} */\r\n            var SRGreaterThanMaxSR = checkForSRGreaterThanMaxSR$1(SR, maxSRValue);\r\n            if (SRGreaterThanMaxSR) {\r\n                Object.assign(errors, SRGreaterThanMaxSR);\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} SR\r\n * @param {?} maxSRValue\r\n * @return {?}\r\n */\r\nfunction checkForSRGreaterThanMaxSR$1(SR, maxSRValue) {\r\n    if (Number(SR) > Number(maxSRValue)) {\r\n        return { 'maxSrExceedError': true };\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param {?} value\r\n * @param {?} maxValue\r\n * @return {?}\r\n */\r\nfunction checkForMaxValue$2(value, maxValue) {\r\n    if (Number(value) > Number(maxValue)) {\r\n        return { max: { max: maxValue } };\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param {?} value\r\n * @param {?} minValue\r\n * @return {?}\r\n */\r\nfunction checkForMinValue$1(value, minValue) {\r\n    if (Number(value) < Number(minValue)) {\r\n        return { min: { min: minValue } };\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/paste-date-ranger.validator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$d = momentNS;\r\n/**\r\n * @record\r\n */\r\nfunction PasteDateRangerValidatorMsgs() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    PasteDateRangerValidatorMsgs.prototype.REQUIRED;\r\n    /** @type {?} */\r\n    PasteDateRangerValidatorMsgs.prototype.MAX_ROWS;\r\n    /** @type {?} */\r\n    PasteDateRangerValidatorMsgs.prototype.MAX_ROWS_EXTRA_1;\r\n    /** @type {?} */\r\n    PasteDateRangerValidatorMsgs.prototype.MAX_ROWS_EXTRA_2;\r\n    /** @type {?} */\r\n    PasteDateRangerValidatorMsgs.prototype.MAX_ROWS_EXTRA_3;\r\n    /** @type {?} */\r\n    PasteDateRangerValidatorMsgs.prototype.MAX_ROWS_EXTRA_PLU_2;\r\n    /** @type {?} */\r\n    PasteDateRangerValidatorMsgs.prototype.MAX_ROWS_EXTRA_PLU_3;\r\n    /** @type {?} */\r\n    PasteDateRangerValidatorMsgs.prototype.INVALID_ROW_PART_1;\r\n    /** @type {?} */\r\n    PasteDateRangerValidatorMsgs.prototype.INVALID_ROW_PART_2;\r\n}\r\n/**\r\n * @param {?} pasteDateRangersName\r\n * @param {?} message\r\n * @param {?} maxRowsAllowed\r\n * @param {?} maxRowsAllowedForPasteDate\r\n * @return {?}\r\n */\r\nfunction PasteDateRangerValidator(pasteDateRangersName, message, maxRowsAllowed, maxRowsAllowedForPasteDate) {\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var rangeString = control.get(pasteDateRangersName).value;\r\n        if (rangeString && typeof rangeString === 'string') {\r\n            /** @type {?} */\r\n            var rangeArray = rangeString.split('\\n');\r\n            rangeArray = removeEmptyRowsForValidation(rangeArray);\r\n            if (rangeArray.length < 0 ||\r\n                rangeArray.length > maxRowsAllowedForPasteDate) {\r\n                addError(errors, control, pasteDateRangersName, message, maxRowsAllowed, maxRowsAllowedForPasteDate, null, true);\r\n            }\r\n            else {\r\n                /** @type {?} */\r\n                var invalidRows_1 = [];\r\n                /** @type {?} */\r\n                var allEmpty_1 = true;\r\n                rangeArray.forEach((/**\r\n                 * @param {?} rangeObject\r\n                 * @param {?} index\r\n                 * @return {?}\r\n                 */\r\n                function (rangeObject, index) {\r\n                    /** @type {?} */\r\n                    var rangeDatesandSites = rangeObject.trim().split(/\\s+/);\r\n                    if (rangeDatesandSites.length !== 3) {\r\n                        if (rangeDatesandSites.length === 1 &&\r\n                            rangeDatesandSites[0] === '') {\r\n                            allEmpty_1 = allEmpty_1 && true;\r\n                        }\r\n                        else {\r\n                            invalidRows_1.push(index + 1);\r\n                            allEmpty_1 = allEmpty_1 && false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        allEmpty_1 = allEmpty_1 && false;\r\n                        /** @type {?} */\r\n                        var slotStartDate = moment$d(rangeDatesandSites[0], 'DD-MMM-YYYY', true);\r\n                        /** @type {?} */\r\n                        var slotEndDate = moment$d(rangeDatesandSites[1], 'DD-MMM-YYYY', true);\r\n                        /** @type {?} */\r\n                        var noOfCenters = parseFloat(rangeDatesandSites[2]);\r\n                        /** @type {?} */\r\n                        var isValidNoOfCenters = AppUtil.isValidNumber(rangeDatesandSites[2]) &&\r\n                            AppUtil.isValidNumber(noOfCenters) &&\r\n                            Number.isInteger(noOfCenters) &&\r\n                            noOfCenters >= 0;\r\n                        if (!slotStartDate.isValid() ||\r\n                            !slotEndDate.isValid() ||\r\n                            !isValidNoOfCenters) {\r\n                            invalidRows_1.push(index + 1);\r\n                        }\r\n                    }\r\n                }));\r\n                if (invalidRows_1.length !== 0) {\r\n                    addError(errors, control, pasteDateRangersName, message, maxRowsAllowed, maxRowsAllowedForPasteDate, invalidRows_1);\r\n                }\r\n                else if (allEmpty_1) {\r\n                    addError(errors, control, pasteDateRangersName, message, maxRowsAllowed, maxRowsAllowedForPasteDate);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            addError(errors, control, pasteDateRangersName, message, maxRowsAllowed, maxRowsAllowedForPasteDate);\r\n        }\r\n        return errors;\r\n    });\r\n}\r\n/**\r\n * @param {?} errors\r\n * @param {?} controlForm\r\n * @param {?} controlName\r\n * @param {?} message\r\n * @param {?} maxRowsAllowed\r\n * @param {?} maxRowsAllowedForPasteDate\r\n * @param {?=} invalidRows\r\n * @param {?=} invalidLength\r\n * @return {?}\r\n */\r\nfunction addError(errors, controlForm, controlName, message, maxRowsAllowed, maxRowsAllowedForPasteDate, invalidRows, invalidLength) {\r\n    if (invalidLength) {\r\n        /** @type {?} */\r\n        var resultError = void 0;\r\n        resultError = message.MAX_ROWS + ' ' + maxRowsAllowed + '.';\r\n        if (maxRowsAllowedForPasteDate !== maxRowsAllowed) {\r\n            resultError =\r\n                resultError +\r\n                    message.MAX_ROWS_EXTRA_1 +\r\n                    maxRowsAllowedForPasteDate +\r\n                    ' ';\r\n            if (maxRowsAllowedForPasteDate === 1) {\r\n                resultError =\r\n                    resultError +\r\n                        message.MAX_ROWS_EXTRA_2 +\r\n                        (maxRowsAllowed - maxRowsAllowedForPasteDate) +\r\n                        ' ' +\r\n                        message.MAX_ROWS_EXTRA_PLU_3;\r\n            }\r\n            else if (maxRowsAllowedForPasteDate === maxRowsAllowed - 1) {\r\n                resultError =\r\n                    resultError +\r\n                        message.MAX_ROWS_EXTRA_PLU_2 +\r\n                        (maxRowsAllowed - maxRowsAllowedForPasteDate) +\r\n                        ' ' +\r\n                        message.MAX_ROWS_EXTRA_3;\r\n            }\r\n            else {\r\n                resultError =\r\n                    resultError +\r\n                        message.MAX_ROWS_EXTRA_PLU_2 +\r\n                        (maxRowsAllowed - maxRowsAllowedForPasteDate) +\r\n                        ' ' +\r\n                        message.MAX_ROWS_EXTRA_PLU_3;\r\n            }\r\n        }\r\n        Object.assign(errors, {\r\n            pastedateRangers: resultError // 'Maximum allowed rows are 50'\r\n        });\r\n    }\r\n    else if (invalidRows) {\r\n        /** @type {?} */\r\n        var invalidRowsString = invalidRows.join(', ');\r\n        Object.assign(errors, {\r\n            pastedateRangers: message.INVALID_ROW_PART_1 + // 'The following rows contain errors or invalid data: ' +\r\n                invalidRowsString +\r\n                message.INVALID_ROW_PART_2 // '. Click Cancel or Reset, correct the data in the Excel file, and try again.'\r\n        });\r\n    }\r\n    else {\r\n        Object.assign(errors, {\r\n            pastedateRangers: message.REQUIRED // 'Please enter valid ranges.'\r\n        });\r\n    }\r\n    controlForm.get(controlName).setErrors(errors);\r\n}\r\n/**\r\n * @param {?} rangeArray\r\n * @return {?}\r\n */\r\nfunction removeEmptyRowsForValidation(rangeArray) {\r\n    return ((/** @type {?} */ (rangeArray))).filter((/**\r\n     * @param {?} rangeObject\r\n     * @return {?}\r\n     */\r\n    function (rangeObject) {\r\n        return rangeObject !== '' ? rangeObject : null;\r\n    }));\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/sites-validator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} totalNoOfSitesControlName\r\n * @param {?} formArrayName\r\n * @param {?} controlName\r\n * @param {?} message\r\n * @return {?}\r\n */\r\nfunction Sites(totalNoOfSitesControlName, formArrayName, controlName, message) {\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var allZero = false;\r\n        /** @type {?} */\r\n        var allValues = control.get(formArrayName).getRawValue();\r\n        if (allValues &&\r\n            allValues.length > 0 &&\r\n            control.get(totalNoOfSitesControlName) &&\r\n            control.get(totalNoOfSitesControlName).value) {\r\n            /** @type {?} */\r\n            var totalNoOfSites = parseInt(control.get(totalNoOfSitesControlName).value, 10);\r\n            allValues.forEach((/**\r\n             * @param {?} value\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (value, index) {\r\n                if (index === 0 && AppUtil.isDefined(value[controlName])) {\r\n                    allZero = Number(value[controlName]) === 0;\r\n                }\r\n                else {\r\n                    allZero = allZero && Number(value[controlName]) === 0;\r\n                }\r\n            }));\r\n            if (checkSumOfSitesEuqalsTotalSites(totalNoOfSites, allValues)) {\r\n                updateValueAndValidity(control, formArrayName, controlName);\r\n            }\r\n            else {\r\n                addError$1('totalNotEqual', errors, control, formArrayName, controlName, message.totalNotEqual);\r\n            }\r\n            if (allZero) {\r\n                addError$1('allZero', errors, control, formArrayName, controlName, message.allZero);\r\n            }\r\n        }\r\n        else {\r\n            updateValueAndValidity(control, formArrayName, controlName);\r\n        }\r\n        return errors;\r\n    });\r\n}\r\n/**\r\n * @param {?} totalNoOfSites\r\n * @param {?} allValues\r\n * @return {?}\r\n */\r\nfunction checkSumOfSitesEuqalsTotalSites(totalNoOfSites, allValues) {\r\n    return (parseInt(totalNoOfSites, 10) || 0) -\r\n        allValues\r\n            .map((/**\r\n         * @param {?} itemValue\r\n         * @return {?}\r\n         */\r\n        function (itemValue) { return parseInt(itemValue.noOfCenters, 10) || 0; }))\r\n            .reduce((/**\r\n         * @param {?} acc\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (acc, value) { return acc + value; }), 0) !==\r\n        0\r\n        ? false\r\n        : true;\r\n}\r\n/**\r\n * @param {?} errorType\r\n * @param {?} errors\r\n * @param {?} control\r\n * @param {?} formArrayName\r\n * @param {?} controlName\r\n * @param {?} message\r\n * @return {?}\r\n */\r\nfunction addError$1(errorType, errors, control, formArrayName, controlName, message) {\r\n    switch (errorType) {\r\n        case 'totalNotEqual':\r\n            Object.assign(errors, {\r\n                totalNotEqual: message\r\n            });\r\n            break;\r\n        case 'allZero':\r\n            Object.assign(errors, {\r\n                allZero: message\r\n            });\r\n            break;\r\n    }\r\n    ((/** @type {?} */ (control.get(formArrayName)))).controls.forEach((/**\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        element.get(controlName).setErrors(errors);\r\n    }));\r\n}\r\n/**\r\n * @param {?} control\r\n * @param {?} formArrayName\r\n * @param {?} controlName\r\n * @return {?}\r\n */\r\nfunction updateValueAndValidity(control, formArrayName, controlName) {\r\n    ((/** @type {?} */ (control.get(formArrayName)))).controls.forEach((/**\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var siteErrors = element.get(controlName).errors;\r\n        if (element.get(controlName).hasError('totalNotEqual')) {\r\n            delete element.get(controlName).errors.totalNotEqual;\r\n            Object.assign(errors, siteErrors);\r\n        }\r\n        errors = Object.keys(errors).length === 0 ? null : errors;\r\n        element.get(controlName).setErrors(errors === {} ? null : errors);\r\n    }));\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/custom-site-initiation-dates.validator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$e = momentNS;\r\n/** @type {?} */\r\nvar PRECISION = 'day';\r\n/**\r\n * @record\r\n */\r\nfunction CSIDatesValidationMessages() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    CSIDatesValidationMessages.prototype.beforeCurrStartDate;\r\n    /** @type {?} */\r\n    CSIDatesValidationMessages.prototype.afterPrevEndDate;\r\n    /** @type {?} */\r\n    CSIDatesValidationMessages.prototype.afterNextStartDate;\r\n    /** @type {?} */\r\n    CSIDatesValidationMessages.prototype.beforeFSIDate;\r\n    /** @type {?} */\r\n    CSIDatesValidationMessages.prototype.afterLSSDate;\r\n}\r\n/**\r\n * @param {?} formArrayName\r\n * @param {?} startDateControlName\r\n * @param {?} endDateControlName\r\n * @param {?} FSIDateControlName\r\n * @param {?} LSSDateControlName\r\n * @param {?} message\r\n * @param {?} isCohortPlan\r\n * @return {?}\r\n */\r\nfunction CustomSiteInitiationDates(formArrayName, startDateControlName, endDateControlName, FSIDateControlName, LSSDateControlName, message, isCohortPlan) {\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var error = {};\r\n        /** @type {?} */\r\n        var currSlotStartDate;\r\n        /** @type {?} */\r\n        var currSlotEndDate;\r\n        /** @type {?} */\r\n        var prevSlotStartDate;\r\n        /** @type {?} */\r\n        var prevSlotEndDate;\r\n        /** @type {?} */\r\n        var allValues = ((/** @type {?} */ ((control.get(formArrayName))))).getRawValue();\r\n        /** @type {?} */\r\n        var FSIDate = control.get(FSIDateControlName).value\r\n            ? moment$e(control.get(FSIDateControlName).value)\r\n            : '';\r\n        /** @type {?} */\r\n        var TLSSDate = control.get(LSSDateControlName).value\r\n            ? moment$e(control.get(LSSDateControlName).value)\r\n            : '';\r\n        if (allValues && allValues.length > 0) {\r\n            if (allValues.length === 1) {\r\n                /** @type {?} */\r\n                var endDateErrors = {};\r\n                /** @type {?} */\r\n                var currValue = allValues[0];\r\n                validateSameSlotDates(FSIDate, TLSSDate, moment$e(currValue[startDateControlName]), moment$e(currValue[endDateControlName]), {}, endDateErrors, control, formArrayName, startDateControlName, endDateControlName, message, 0);\r\n            }\r\n            else {\r\n                allValues.reduce((/**\r\n                 * @param {?} prevValue\r\n                 * @param {?} currValue\r\n                 * @param {?} index\r\n                 * @return {?}\r\n                 */\r\n                function (prevValue, currValue, index) {\r\n                    /** @type {?} */\r\n                    var firstRowEndDateErrors = {};\r\n                    /** @type {?} */\r\n                    var otherRowEndDateErrors = {};\r\n                    /** @type {?} */\r\n                    var firstRowStartDateErrors = {};\r\n                    /** @type {?} */\r\n                    var otherRowStartDateErrors = {};\r\n                    currSlotStartDate = moment$e(currValue[startDateControlName]);\r\n                    currSlotEndDate = moment$e(currValue[endDateControlName]);\r\n                    validateSameSlotDates(FSIDate, TLSSDate, currSlotStartDate, currSlotEndDate, otherRowStartDateErrors, otherRowEndDateErrors, control, formArrayName, startDateControlName, endDateControlName, message, index);\r\n                    if (prevValue) {\r\n                        prevSlotStartDate = moment$e(prevValue[startDateControlName]);\r\n                        prevSlotEndDate = moment$e(prevValue[endDateControlName]);\r\n                        if (index === 1) {\r\n                            validateSameSlotDates(FSIDate, TLSSDate, prevSlotStartDate, prevSlotEndDate, firstRowStartDateErrors, firstRowEndDateErrors, control, formArrayName, startDateControlName, endDateControlName, message, 0);\r\n                        }\r\n                        if (currSlotEndDate && !isCohortPlan) {\r\n                            if (currSlotStartDate.isSameOrBefore(prevSlotEndDate, PRECISION)) {\r\n                                /** @type {?} */\r\n                                var startDateErrors = index === 1\r\n                                    ? firstRowStartDateErrors\r\n                                    : otherRowStartDateErrors;\r\n                                addError$2('afterPrevEndDate', startDateErrors, control, formArrayName, startDateControlName, message.afterPrevEndDate, index);\r\n                                /** @type {?} */\r\n                                var endDateErrors = index === 1 ? firstRowEndDateErrors : otherRowEndDateErrors;\r\n                                addError$2('afterNextStartDate', endDateErrors, control, formArrayName, endDateControlName, message.afterNextStartDate, index - 1);\r\n                            }\r\n                            else {\r\n                                /** @type {?} */\r\n                                var startDateFieldControl = (/** @type {?} */ (((/** @type {?} */ ((control.get(formArrayName)))))\r\n                                    .at(index)\r\n                                    .get(startDateControlName)));\r\n                                updateValueAndValidityDiffSlotSD(startDateFieldControl);\r\n                                /** @type {?} */\r\n                                var endDateFieldControl = (/** @type {?} */ (((/** @type {?} */ ((control.get(formArrayName)))))\r\n                                    .at(index - 1)\r\n                                    .get(endDateControlName)));\r\n                                updateValueAndValidityDiffSlotED(endDateFieldControl);\r\n                            }\r\n                        }\r\n                    }\r\n                    return currValue;\r\n                }));\r\n            }\r\n        }\r\n        return error;\r\n    });\r\n}\r\n/**\r\n * @param {?} FSIDate\r\n * @param {?} TLSSDate\r\n * @param {?} slotStartDate\r\n * @param {?} slotEndDate\r\n * @param {?} startDatePreexistingErrors\r\n * @param {?} endDatePreexistingErrors\r\n * @param {?} control\r\n * @param {?} formArrayName\r\n * @param {?} startDateControlName\r\n * @param {?} endDateControlName\r\n * @param {?} message\r\n * @param {?} index\r\n * @return {?}\r\n */\r\nfunction validateSameSlotDates(FSIDate, TLSSDate, slotStartDate, slotEndDate, startDatePreexistingErrors, endDatePreexistingErrors, control, formArrayName, startDateControlName, endDateControlName, message, index) {\r\n    // If Start date is after LSS date or before entered FSI date\r\n    if (isSDBeforeFSIOrAfterLSS(FSIDate, TLSSDate, slotStartDate)) {\r\n        addError$2('beforeFSIDate', startDatePreexistingErrors, control, formArrayName, startDateControlName, message.beforeFSIDate, index);\r\n    }\r\n    else {\r\n        /** @type {?} */\r\n        var startDateFieldControl = (/** @type {?} */ (((/** @type {?} */ ((control.get(formArrayName)))))\r\n            .at(index)\r\n            .get(startDateControlName)));\r\n        updateValueAndValiditySameSlot(startDateFieldControl, null, 'beforeFSIDate');\r\n    }\r\n    // If End date is after LSS date\r\n    if (TLSSDate !== '' && isEDAfterLSSDate(TLSSDate, slotEndDate)) {\r\n        addError$2('afterLSSDate', endDatePreexistingErrors, control, formArrayName, endDateControlName, message.afterLSSDate, index);\r\n    }\r\n    else {\r\n        /** @type {?} */\r\n        var endDateFieldControl = (/** @type {?} */ (((/** @type {?} */ ((control.get(formArrayName)))))\r\n            .at(index)\r\n            .get(endDateControlName)));\r\n        updateValueAndValiditySameSlot(null, endDateFieldControl, 'afterLSSDate');\r\n    }\r\n    if (slotEndDate.isBefore(slotStartDate, PRECISION)) {\r\n        addError$2('beforeCurrStartDate', endDatePreexistingErrors, control, formArrayName, endDateControlName, message.beforeCurrStartDate, index);\r\n    }\r\n    else {\r\n        /** @type {?} */\r\n        var endDateFieldControl = (/** @type {?} */ (((/** @type {?} */ ((control.get(formArrayName)))))\r\n            .at(index)\r\n            .get(endDateControlName)));\r\n        updateValueAndValiditySameSlot(null, endDateFieldControl, 'beforeCurrStartDate');\r\n    }\r\n}\r\n/**\r\n * @param {?} errorType\r\n * @param {?} errors\r\n * @param {?} control\r\n * @param {?} formArrayName\r\n * @param {?} controlName\r\n * @param {?} message\r\n * @param {?} index\r\n * @return {?}\r\n */\r\nfunction addError$2(errorType, errors, control, formArrayName, controlName, message, index) {\r\n    switch (errorType) {\r\n        case 'beforeCurrStartDate':\r\n            Object.assign(errors, {\r\n                beforeCurrStartDate: message\r\n            });\r\n            break;\r\n        case 'afterPrevEndDate':\r\n            Object.assign(errors, {\r\n                afterPrevEndDate: message\r\n            });\r\n            break;\r\n        case 'afterNextStartDate':\r\n            Object.assign(errors, {\r\n                afterNextStartDate: message\r\n            });\r\n            break;\r\n        case 'beforeFSIDate':\r\n            Object.assign(errors, {\r\n                beforeFSIDate: message\r\n            });\r\n            break;\r\n        case 'afterLSSDate':\r\n            Object.assign(errors, {\r\n                afterLSSDate: message\r\n            });\r\n            break;\r\n    }\r\n    /** @type {?} */\r\n    var dateControl = ((/** @type {?} */ (control.get(formArrayName))))\r\n        .at(index)\r\n        .get(controlName);\r\n    if (!dateControl.hasError(errorType)) {\r\n        dateControl.setErrors(errors);\r\n    }\r\n}\r\n/**\r\n * @param {?} startDateControl\r\n * @param {?} endDateControl\r\n * @param {?} errorType\r\n * @return {?}\r\n */\r\nfunction updateValueAndValiditySameSlot(startDateControl, endDateControl, errorType) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    /** @type {?} */\r\n    var endErrors = endDateControl ? endDateControl.errors : null;\r\n    /** @type {?} */\r\n    var startErrors = startDateControl ? startDateControl.errors : null;\r\n    switch (errorType) {\r\n        case 'beforeCurrStartDate':\r\n            if (endErrors && endDateControl.hasError('beforeCurrStartDate')) {\r\n                delete endErrors.beforeCurrStartDate;\r\n                Object.assign(errors, endErrors);\r\n                errors = Object.keys(errors).length === 0 ? null : errors;\r\n                endDateControl.setErrors(errors);\r\n            }\r\n            break;\r\n        case 'beforeFSIDate':\r\n            if (startErrors && startDateControl.hasError('beforeFSIDate')) {\r\n                delete startErrors.beforeFSIDate;\r\n                Object.assign(errors, startErrors);\r\n                errors = Object.keys(errors).length === 0 ? null : errors;\r\n                startDateControl.setErrors(errors);\r\n            }\r\n            break;\r\n        case 'afterLSSDate':\r\n            if (endErrors && endDateControl.hasError('afterLSSDate')) {\r\n                delete endErrors.afterLSSDate;\r\n                Object.assign(errors, endErrors);\r\n                errors = Object.keys(errors).length === 0 ? null : errors;\r\n                endDateControl.setErrors(errors);\r\n            }\r\n            break;\r\n    }\r\n}\r\n/**\r\n * @param {?} startDateControl\r\n * @return {?}\r\n */\r\nfunction updateValueAndValidityDiffSlotSD(startDateControl) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (startDateControl) {\r\n        /** @type {?} */\r\n        var startErrors = startDateControl.errors;\r\n        if (startErrors && startDateControl.hasError('afterPrevEndDate')) {\r\n            delete startErrors.afterPrevEndDate;\r\n            Object.assign(errors, startErrors);\r\n            errors = Object.keys(errors).length === 0 ? null : errors;\r\n            startDateControl.setErrors(errors === {} ? null : errors);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {?} endDateControl\r\n * @return {?}\r\n */\r\nfunction updateValueAndValidityDiffSlotED(endDateControl) {\r\n    /** @type {?} */\r\n    var errors = {};\r\n    if (endDateControl) {\r\n        /** @type {?} */\r\n        var endErrors = endDateControl.errors;\r\n        if (endErrors && endDateControl.hasError('afterNextStartDate')) {\r\n            delete endErrors.afterNextStartDate;\r\n            Object.assign(errors, endErrors);\r\n            errors = Object.keys(errors).length === 0 ? null : errors;\r\n            endDateControl.setErrors(errors === {} ? null : errors);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {?} TLSSDate\r\n * @param {?} currSlotEndDate\r\n * @return {?}\r\n */\r\nfunction isEDAfterLSSDate(TLSSDate, currSlotEndDate) {\r\n    return TLSSDate.isValid() && currSlotEndDate.isAfter(TLSSDate, PRECISION);\r\n}\r\n/**\r\n * @param {?} FSIDate\r\n * @param {?} TLSSDate\r\n * @param {?} currSlotStartDate\r\n * @return {?}\r\n */\r\nfunction isSDBeforeFSIOrAfterLSS(FSIDate, TLSSDate, currSlotStartDate) {\r\n    /** @type {?} */\r\n    var result = false;\r\n    if (TLSSDate !== '') {\r\n        result =\r\n            TLSSDate.isValid() && currSlotStartDate.isAfter(TLSSDate, PRECISION);\r\n    }\r\n    if (FSIDate !== '') {\r\n        result =\r\n            result ||\r\n                (FSIDate.isValid() && currSlotStartDate.isBefore(FSIDate, PRECISION));\r\n    }\r\n    return result;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/FSISitesValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar moment$f = momentNS;\r\n/** @type {?} */\r\nvar EMPTY$1 = '';\r\n/**\r\n * @param {?} ValidatefieldName\r\n * @param {?} siteInitiationMethod\r\n * @param {?} siMethodPercentValue\r\n * @param {?} fieldCollections\r\n * @param {?=} fieldDateCollections\r\n * @return {?}\r\n */\r\nfunction FSISitesValidator(ValidatefieldName, siteInitiationMethod, siMethodPercentValue, fieldCollections, fieldDateCollections) {\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        /** @type {?} */\r\n        var errors = null;\r\n        if (control.get(siteInitiationMethod) && control.get(siteInitiationMethod).value === siMethodPercentValue) {\r\n            if (control !== undefined && control !== null) {\r\n                /** @type {?} */\r\n                var validateControl = (/** @type {?} */ (control.get(ValidatefieldName)));\r\n                errors = initializeErrorsObject$3(validateControl.errors, validateControl);\r\n            }\r\n            if (fieldCollections && fieldCollections.length > 0) {\r\n                if (fieldCollections.length === 3) {\r\n                    if (fieldCollections[0] &&\r\n                        fieldCollections[1] &&\r\n                        fieldCollections[2]) {\r\n                        /** @type {?} */\r\n                        var fieldCollFirst = fieldCollections[0].toString();\r\n                        /** @type {?} */\r\n                        var fieldCollSecond = fieldCollections[1].toString();\r\n                        /** @type {?} */\r\n                        var fieldCollThird = fieldCollections[2].toString();\r\n                        /** @type {?} */\r\n                        var fieldControlFirst = control.get(fieldCollFirst);\r\n                        /** @type {?} */\r\n                        var fieldControlSecond = control.get(fieldCollSecond);\r\n                        /** @type {?} */\r\n                        var fieldControlThird = control.get(fieldCollThird);\r\n                        if (fieldControlFirst &&\r\n                            fieldControlSecond && fieldControlThird) {\r\n                            /** @type {?} */\r\n                            var fieldFirstVal = fieldControlFirst.value;\r\n                            /** @type {?} */\r\n                            var fieldSecondVal = fieldControlSecond.value;\r\n                            /** @type {?} */\r\n                            var fieldThirdVal = fieldControlThird.value;\r\n                            if (AppUtil.isDefined(fieldFirstVal, true) ||\r\n                                AppUtil.isDefined(fieldSecondVal, true) ||\r\n                                AppUtil.isDefined(fieldThirdVal, true)) {\r\n                                if (ValidatefieldName) {\r\n                                    /** @type {?} */\r\n                                    var validatFieldControl = control.get(ValidatefieldName);\r\n                                    if (validatFieldControl) {\r\n                                        /** @type {?} */\r\n                                        var validateFieldVal = validatFieldControl.value;\r\n                                        /** @type {?} */\r\n                                        var emptyValidator = checkForEmpty(validateFieldVal);\r\n                                        if (emptyValidator) {\r\n                                            Object.assign(errors, emptyValidator);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (fieldDateCollections && fieldDateCollections.length > 0) {\r\n                if (fieldDateCollections.length === 3) {\r\n                    if (fieldDateCollections[0] &&\r\n                        fieldDateCollections[1] &&\r\n                        fieldDateCollections[2]) {\r\n                        /** @type {?} */\r\n                        var fieldCollFirst = fieldDateCollections[0].toString();\r\n                        /** @type {?} */\r\n                        var fieldCollSecond = fieldDateCollections[1].toString();\r\n                        /** @type {?} */\r\n                        var fieldCollThird = fieldDateCollections[2].toString();\r\n                        /** @type {?} */\r\n                        var fieldControlFirst = control.get(fieldCollFirst);\r\n                        /** @type {?} */\r\n                        var fieldControlSecond = control.get(fieldCollSecond);\r\n                        /** @type {?} */\r\n                        var fieldControlThird = control.get(fieldCollThird);\r\n                        if (fieldControlFirst &&\r\n                            fieldControlSecond && fieldControlThird) {\r\n                            /** @type {?} */\r\n                            var fieldFirstVal = fieldControlFirst.value;\r\n                            /** @type {?} */\r\n                            var fieldSecondVal = fieldControlSecond.value;\r\n                            /** @type {?} */\r\n                            var fieldThirdVal = fieldControlThird.value;\r\n                            if ((fieldFirstVal !== undefined &&\r\n                                fieldFirstVal !== null &&\r\n                                fieldFirstVal !== EMPTY$1) ||\r\n                                (fieldSecondVal !== undefined &&\r\n                                    fieldSecondVal !== null &&\r\n                                    fieldSecondVal !== EMPTY$1) ||\r\n                                (fieldThirdVal !== undefined &&\r\n                                    fieldThirdVal !== null &&\r\n                                    fieldThirdVal !== EMPTY$1)) {\r\n                                if (ValidatefieldName) {\r\n                                    /** @type {?} */\r\n                                    var validatFieldControl = control.get(ValidatefieldName);\r\n                                    if (validatFieldControl) {\r\n                                        /** @type {?} */\r\n                                        var validateFieldVal = validatFieldControl.value;\r\n                                        /** @type {?} */\r\n                                        var emptyValidator = checkForEmpty(validateFieldVal);\r\n                                        if (emptyValidator) {\r\n                                            Object.assign(errors, emptyValidator);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (Object.keys(errors).length !== 0) {\r\n                control.get(ValidatefieldName).setErrors(errors);\r\n                returnVal = {};\r\n                returnVal[ValidatefieldName] = errors;\r\n            }\r\n            else {\r\n                control.get(ValidatefieldName).setErrors(null);\r\n            }\r\n        }\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} errors\r\n * @param {?} sitesControl\r\n * @return {?}\r\n */\r\nfunction initializeErrorsObject$3(errors, sitesControl) {\r\n    errors = sitesControl.errors;\r\n    if (!errors) {\r\n        errors = {};\r\n    }\r\n    if (errors.NonEmptyField) {\r\n        delete errors.NonEmptyField;\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} val\r\n * @return {?}\r\n */\r\nfunction checkForEmpty(val) {\r\n    if (AppUtil.isDefined(val)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return { NonEmptyField: true };\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/csi-blank.validator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} controlNamesTobeChecked\r\n * @param {?} message\r\n * @return {?}\r\n */\r\nfunction CSIBlank(controlNamesTobeChecked, message) {\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var allValues = control.getRawValue();\r\n        if (allValues && allValues.length > 0) {\r\n            allValues.forEach((/**\r\n             * @param {?} value\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (value, index) {\r\n                /** @type {?} */\r\n                var noOfblankFields = 0;\r\n                controlNamesTobeChecked.forEach((/**\r\n                 * @param {?} controlName\r\n                 * @return {?}\r\n                 */\r\n                function (controlName) {\r\n                    if (!AppUtil.isDefined(value[controlName])) {\r\n                        noOfblankFields++;\r\n                    }\r\n                }));\r\n                if (noOfblankFields &&\r\n                    noOfblankFields !== 0 &&\r\n                    noOfblankFields !== controlNamesTobeChecked.length) {\r\n                    controlNamesTobeChecked.forEach((/**\r\n                     * @param {?} controlName\r\n                     * @return {?}\r\n                     */\r\n                    function (controlName) {\r\n                        if (!AppUtil.isDefined(value[controlName])) {\r\n                            addError$3(errors, control, index, controlName, message.BLANK_FIELD);\r\n                        }\r\n                        else {\r\n                            updateValueAndValidityOfSlot(control, controlName, index);\r\n                        }\r\n                    }));\r\n                }\r\n                else {\r\n                    updateValueAndValidityOfAllSlotField(control, controlNamesTobeChecked, index);\r\n                }\r\n            }));\r\n        }\r\n        if (errors) {\r\n            errors = Object.keys(errors).length === 0 ? null : errors;\r\n        }\r\n        return errors;\r\n    });\r\n}\r\n/**\r\n * @param {?} errors\r\n * @param {?} control\r\n * @param {?} index\r\n * @param {?} controlName\r\n * @param {?} message\r\n * @return {?}\r\n */\r\nfunction addError$3(errors, control, index, controlName, message) {\r\n    Object.assign(errors, {\r\n        blankField: message\r\n    });\r\n    /** @type {?} */\r\n    var dateControl = ((/** @type {?} */ (control))).at(index).get(controlName);\r\n    if (!dateControl.hasError('matDatepickerParse')) {\r\n        if (!dateControl.hasError('blankField')) {\r\n            dateControl.setErrors(errors);\r\n        }\r\n    }\r\n    else {\r\n        updateValueAndValidityOfSlot(control, controlName, index);\r\n    }\r\n}\r\n/**\r\n * @param {?} slotControl\r\n * @param {?} controlNamesTobeChecked\r\n * @param {?} index\r\n * @return {?}\r\n */\r\nfunction updateValueAndValidityOfAllSlotField(slotControl, controlNamesTobeChecked, index) {\r\n    controlNamesTobeChecked.forEach((/**\r\n     * @param {?} controlName\r\n     * @return {?}\r\n     */\r\n    function (controlName) {\r\n        updateValueAndValidityOfSlot(slotControl, controlName, index);\r\n    }));\r\n}\r\n/**\r\n * @param {?} slotControl\r\n * @param {?} controlName\r\n * @param {?} index\r\n * @return {?}\r\n */\r\nfunction updateValueAndValidityOfSlot(slotControl, controlName, index) {\r\n    if (slotControl && slotControl.at(index)) {\r\n        /** @type {?} */\r\n        var control = slotControl.at(index).get(controlName);\r\n        /** @type {?} */\r\n        var errors = slotControl.at(index).get(controlName).errors;\r\n        if (errors) {\r\n            if (control && control.hasError('blankField')) {\r\n                delete errors.blankField;\r\n            }\r\n            errors =\r\n                errors !== null\r\n                    ? Object.keys(errors).length === 0\r\n                        ? null\r\n                        : errors\r\n                    : errors;\r\n            control.setErrors(errors);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/SiteInitiationValidator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar EMPTY$2 = '';\r\n/**\r\n * @param {?} sitesCollections\r\n * @return {?}\r\n */\r\nfunction SiteInitiationValidator(sitesCollections) {\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var returnVal = null;\r\n        /** @type {?} */\r\n        var error1 = null;\r\n        /** @type {?} */\r\n        var error2 = null;\r\n        /** @type {?} */\r\n        var error3 = null;\r\n        /** @type {?} */\r\n        var firstCntrlVal = false;\r\n        /** @type {?} */\r\n        var secondCntrlVal = false;\r\n        /** @type {?} */\r\n        var thirdCntrlVal = false;\r\n        if (control !== null && control !== undefined) {\r\n            if (sitesCollections && sitesCollections.length > 0) {\r\n                if (sitesCollections.length === 3) {\r\n                    /** @type {?} */\r\n                    var fieldColFirst = sitesCollections[0].toString();\r\n                    /** @type {?} */\r\n                    var fieldColSecond = sitesCollections[1].toString();\r\n                    /** @type {?} */\r\n                    var fieldColThird = sitesCollections[2].toString();\r\n                    /** @type {?} */\r\n                    var fieldControlFirst = (/** @type {?} */ (control.get(fieldColFirst)));\r\n                    /** @type {?} */\r\n                    var fieldControlSecond = (/** @type {?} */ (control.get(fieldColSecond)));\r\n                    /** @type {?} */\r\n                    var fieldControlThird = (/** @type {?} */ (control.get(fieldColThird)));\r\n                    //  initatilizationRootControlErrors(control, fieldColFirst, fieldColSecond, fieldColThird);\r\n                    if (fieldControlFirst && !(fieldControlFirst.invalid && fieldControlFirst.errors)\r\n                        && (fieldControlFirst.value != null && fieldControlFirst.value !== undefined && fieldControlFirst.value !== EMPTY$2)) {\r\n                        firstCntrlVal = true;\r\n                    }\r\n                    else if (fieldControlSecond && !(fieldControlSecond.invalid && fieldControlSecond.errors)\r\n                        && (fieldControlSecond.value != null && fieldControlSecond.value !== undefined\r\n                            && fieldControlSecond.value !== EMPTY$2)) {\r\n                        secondCntrlVal = true;\r\n                    }\r\n                    else if (fieldControlThird && !(fieldControlThird.invalid && fieldControlThird.errors)\r\n                        && (fieldControlThird.value != null && fieldControlThird.value !== undefined\r\n                            && fieldControlThird.value !== EMPTY$2)) {\r\n                        thirdCntrlVal = true;\r\n                    }\r\n                    if (firstCntrlVal) {\r\n                        error2 = initializeErrorsObject$4(error2, fieldControlSecond);\r\n                        error3 = initializeErrorsObject$4(error3, fieldControlThird);\r\n                        error1 = initializeErrorsObject$4(error1, fieldControlFirst);\r\n                        /** @type {?} */\r\n                        var validateSecond = fieldControlSecond.value;\r\n                        /** @type {?} */\r\n                        var emptyValidator2 = checkForEmpty$1(validateSecond);\r\n                        if (emptyValidator2) {\r\n                            Object.assign(error2, emptyValidator2);\r\n                        }\r\n                        /** @type {?} */\r\n                        var validateThird = fieldControlThird.value;\r\n                        /** @type {?} */\r\n                        var emptyValidator3 = checkForEmpty$1(validateThird);\r\n                        if (emptyValidator3) {\r\n                            Object.assign(error3, emptyValidator3);\r\n                        }\r\n                        returnVal = {};\r\n                        if (Object.keys(error2).length !== 0) {\r\n                            control.get(fieldColSecond).setErrors(error2);\r\n                            returnVal[fieldColSecond] = error2;\r\n                        }\r\n                        else {\r\n                            control.get(fieldColSecond).setErrors(null);\r\n                        }\r\n                        if (Object.keys(error3).length !== 0) {\r\n                            control.get(fieldColThird).setErrors(error3);\r\n                            returnVal[fieldColThird] = error3;\r\n                        }\r\n                        else {\r\n                            control.get(fieldColThird).setErrors(null);\r\n                        }\r\n                    }\r\n                    else if (secondCntrlVal) {\r\n                        error2 = initializeErrorsObject$4(error2, fieldControlSecond);\r\n                        error3 = initializeErrorsObject$4(error3, fieldControlThird);\r\n                        error1 = initializeErrorsObject$4(error1, fieldControlFirst);\r\n                        /** @type {?} */\r\n                        var validateFirst = fieldControlFirst.value;\r\n                        /** @type {?} */\r\n                        var emptyValidator1 = checkForEmpty$1(validateFirst);\r\n                        if (emptyValidator1) {\r\n                            Object.assign(error1, emptyValidator1);\r\n                        }\r\n                        /** @type {?} */\r\n                        var validateThird = fieldControlThird.value;\r\n                        /** @type {?} */\r\n                        var emptyValidator3 = checkForEmpty$1(validateThird);\r\n                        if (emptyValidator3) {\r\n                            Object.assign(error3, emptyValidator3);\r\n                        }\r\n                        returnVal = {};\r\n                        if (Object.keys(error1).length !== 0) {\r\n                            control.get(fieldColFirst).setErrors(error1);\r\n                            returnVal[fieldColFirst] = error1;\r\n                        }\r\n                        else {\r\n                            control.get(fieldColFirst).setErrors(null);\r\n                        }\r\n                        if (Object.keys(error3).length !== 0) {\r\n                            control.get(fieldColThird).setErrors(error3);\r\n                            returnVal[fieldColThird] = error3;\r\n                        }\r\n                        else {\r\n                            control.get(fieldColThird).setErrors(null);\r\n                        }\r\n                    }\r\n                    else if (thirdCntrlVal) {\r\n                        error2 = initializeErrorsObject$4(error2, fieldControlSecond);\r\n                        error3 = initializeErrorsObject$4(error3, fieldControlThird);\r\n                        error1 = initializeErrorsObject$4(error1, fieldControlFirst);\r\n                        /** @type {?} */\r\n                        var validateFirst = fieldControlFirst.value;\r\n                        /** @type {?} */\r\n                        var emptyValidator1 = checkForEmpty$1(validateFirst);\r\n                        if (emptyValidator1) {\r\n                            Object.assign(error1, emptyValidator1);\r\n                        }\r\n                        /** @type {?} */\r\n                        var validateSecond = fieldControlSecond.value;\r\n                        /** @type {?} */\r\n                        var emptyValidator2 = checkForEmpty$1(validateSecond);\r\n                        if (emptyValidator2) {\r\n                            Object.assign(error2, emptyValidator2);\r\n                        }\r\n                        returnVal = {};\r\n                        if (Object.keys(error1).length !== 0) {\r\n                            control.get(fieldColFirst).setErrors(error1);\r\n                            returnVal[fieldColFirst] = error1;\r\n                        }\r\n                        else {\r\n                            control.get(fieldColFirst).setErrors(null);\r\n                        }\r\n                        if (Object.keys(error2).length !== 0) {\r\n                            control.get(fieldColSecond).setErrors(error2);\r\n                            returnVal[fieldColSecond] = error2;\r\n                        }\r\n                        else {\r\n                            control.get(fieldColSecond).setErrors(null);\r\n                        }\r\n                    }\r\n                    if (firstCntrlVal === false && secondCntrlVal === false && thirdCntrlVal === false) {\r\n                        error2 = initializeErrorsObject$4(error2, fieldControlSecond);\r\n                        error3 = initializeErrorsObject$4(error3, fieldControlThird);\r\n                        error1 = initializeErrorsObject$4(error1, fieldControlFirst);\r\n                        returnVal = {};\r\n                        if (Object.keys(error2).length !== 0) {\r\n                            control.get(fieldColSecond).setErrors(error2);\r\n                            returnVal[fieldColSecond] = error2;\r\n                        }\r\n                        else {\r\n                            control.get(fieldColSecond).setErrors(null);\r\n                        }\r\n                        if (Object.keys(error3).length !== 0) {\r\n                            control.get(fieldColThird).setErrors(error3);\r\n                            returnVal[fieldColThird] = error3;\r\n                        }\r\n                        else {\r\n                            control.get(fieldColThird).setErrors(null);\r\n                        }\r\n                        if (Object.keys(error1).length !== 0) {\r\n                            control.get(fieldColFirst).setErrors(error1);\r\n                            returnVal[fieldColFirst] = error1;\r\n                        }\r\n                        else {\r\n                            control.get(fieldColFirst).setErrors(null);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        returnVal = (returnVal !== null && returnVal !== undefined) ?\r\n            (Object.keys(returnVal).length === 0 ? null : returnVal) : null;\r\n        return returnVal;\r\n    });\r\n}\r\n/**\r\n * @param {?} errors\r\n * @param {?} sitesControl\r\n * @return {?}\r\n */\r\nfunction initializeErrorsObject$4(errors, sitesControl) {\r\n    errors = sitesControl.errors;\r\n    if (!errors) {\r\n        errors = {};\r\n    }\r\n    if (errors.NonEmptyField) {\r\n        delete errors.NonEmptyField;\r\n    }\r\n    return errors;\r\n}\r\n/**\r\n * @param {?} control\r\n * @param {?} fieldColFirst\r\n * @param {?} fieldColSecond\r\n * @param {?} fieldColThird\r\n * @return {?}\r\n */\r\nfunction initatilizationRootControlErrors(control, fieldColFirst, fieldColSecond, fieldColThird) {\r\n    /** @type {?} */\r\n    var errors = control.errors;\r\n    if (errors !== undefined && errors !== null) {\r\n        if (errors[fieldColFirst]) {\r\n            if (errors[fieldColFirst].NonEmptyField) {\r\n                delete errors[fieldColFirst];\r\n                //  control.errors.setErrors(null);\r\n            }\r\n        }\r\n        if (errors[fieldColSecond]) {\r\n            if (errors[fieldColSecond].NonEmptyField) {\r\n                delete errors[fieldColSecond];\r\n                //  control.errors.setErrors(null);\r\n            }\r\n        }\r\n        if (errors[fieldColThird]) {\r\n            if (errors[fieldColThird].NonEmptyField) {\r\n                delete errors[fieldColThird];\r\n                //  control.errors.setErrors(null);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {?} val\r\n * @return {?}\r\n */\r\nfunction checkForEmpty$1(val) {\r\n    if (AppUtil.isDefined(val)) {\r\n        return null;\r\n    }\r\n    else {\r\n        return { 'NonEmptyField': true };\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/custom-required.validator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} totalNoOfSitesFieldName\r\n * @param {?} sitesToRedistributeFieldName\r\n * @param {?} parentNoOfSites\r\n * @param {?} validationRequired\r\n * @return {?}\r\n */\r\nfunction CustomRequired(totalNoOfSitesFieldName, sitesToRedistributeFieldName, parentNoOfSites, validationRequired) {\r\n    return (/**\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        if (control.get(totalNoOfSitesFieldName) &&\r\n            control.get(totalNoOfSitesFieldName).value &&\r\n            validationRequired) {\r\n            if (control.get(totalNoOfSitesFieldName).value > parentNoOfSites) {\r\n                /** @type {?} */\r\n                var isInvalidRedist = Validators.required(control.get(sitesToRedistributeFieldName));\r\n                if (isInvalidRedist) {\r\n                    addError$4((/** @type {?} */ (control.get(sitesToRedistributeFieldName))), isInvalidRedist);\r\n                }\r\n                else {\r\n                    removeError((/** @type {?} */ (control.get(sitesToRedistributeFieldName))), isInvalidRedist);\r\n                }\r\n            }\r\n            else if (parentNoOfSites && control.get(totalNoOfSitesFieldName).value < parentNoOfSites) {\r\n                /** @type {?} */\r\n                var isInvalidRedist = Validators.required(control.get(sitesToRedistributeFieldName));\r\n                if (isInvalidRedist) {\r\n                    removeError((/** @type {?} */ (control.get(sitesToRedistributeFieldName))), isInvalidRedist);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    });\r\n}\r\n/**\r\n * @param {?} sitesToRedistributeControl\r\n * @param {?} isInvalidRedist\r\n * @return {?}\r\n */\r\nfunction addError$4(sitesToRedistributeControl, isInvalidRedist) {\r\n    sitesToRedistributeControl.setErrors(isInvalidRedist);\r\n}\r\n/**\r\n * @param {?} sitesToRedistributeControl\r\n * @param {?} isInvalidRedist\r\n * @return {?}\r\n */\r\nfunction removeError(sitesToRedistributeControl, isInvalidRedist) {\r\n    /** @type {?} */\r\n    var errors = sitesToRedistributeControl.errors;\r\n    if (errors) {\r\n        if (sitesToRedistributeControl &&\r\n            sitesToRedistributeControl.hasError('required')) {\r\n            delete errors.required;\r\n        }\r\n        errors =\r\n            errors !== null\r\n                ? Object.keys(errors).length === 0\r\n                    ? null\r\n                    : errors\r\n                : errors;\r\n        sitesToRedistributeControl.setErrors(errors);\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/enums/pref-grid-columns-keys.enum.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * If there is any new grid added in preference (Refer PreferenceCategory Enum) then\r\n * please add corresponding key of grid in this enum.\r\n */\r\n/** @enum {string} */\r\nvar PrefGridColumnsKeys = {\r\n    MCE_GRID: \"MCEGrid\",\r\n    MCE_GRID_ORDER: \"MCEGridOrder\",\r\n    MANAGECOUNTRIES_GRID: \"ManageCountriesGrid\",\r\n    MANAGECOUNTRIES_GRID_ORDER: \"ManageCountriesGridOrder\",\r\n    SITE_ENROLLMENT_GRID: \"SiteEnrollementGrid\",\r\n    SITE_DATA_MANAGEMENT_GRID: \"newSiteDataManagement\",\r\n    STUDY_ENROLLMENT_OVERVIEW_GRID: \"newStudyEnrollmentOverviewGrid\",\r\n    STUDY_MILESTONES_GRID: \"newStudyMilestonesGrid\",\r\n    COUNTRY_COMPARISON_GRID: \"newCountryComparisonGrid\",\r\n    COUNTRY_DETAILS_GRID: \"newCountryDetailsGrid\",\r\n    COUNTRY_COHORT_COMPARISON_GRID: \"newCountryCohortComparisonGrid\",\r\n    COUNTRY_COHORT_DETAILS_GRID: \"newCountryCohortDetailsGrid\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: so-common-library.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { ABOUT, AGGRIDROWS, ALERT_CONFIRM_URL, ALERT_TYPE, APPROVE, APP_DATA, ARTBValidator, AllNotZeroValidator, AppBootstrapService, AppDataService, AreaPoint, AreaPoint1, AuthGuard, COMMAND, CSIBlank, CTOSCustomMultiSelectComponent, CTOSPlanChartComponent, CTOSPlanChartLegendComponent, CTOSPlanChartLegendItemComponent, CTOSPlanChartLegendService, CTOSUtil, CUE_CARD_HEADER_LABELS, ColumnPreferenceService, CommonHeaderService, ComponentsModule, ConfigurationService, CurveData, CustomRequired, CustomSiteInitiationDates, DEFAULT_PREFERENCE_GRID_COLUMN, DIALOG_ACIONS, DIALOG_CONFIG, DISPATCH_URL, DOMLAYOUT, DYNAMICGRIDCONTAINER, DataPoint, DaysFromFSIValidator, DropdownComponent, EDIT, EMPTY, ERROR_PARAMS, EndDateValidator, ErrorMessageService, FILTER_PARAMS, FSISitesValidator, FSIValidator, FSSValidator, FilterDataService, GEO_LEVELS, GRIDCONFIG, GRIDROWHEIGHT, GROUP_ACTIONS, GSK_LOGO_URL, GlobalErrorHandler, ICON_NEGATIVE, ICON_POSITIVE, INVALID_URL, LABEL_ACTUAL, LOGIN_PARAMS, LoadingScreenComponent, LoadingScreenService, MEASUREMENT, MENU, MESSAGETYPE_NEGATIVE, MESSAGETYPE_POSITIVE, MILESTONE_GRAPHS, MIN_MAX_RANGE, MODULE_CONSTANTS, Marker, MileStonesData, MilestoneGraphComponent, MilestoneGraphService, MultiLevelDropdownComponent, NA_TOOLTIP, NEWPLANTAB, NOVALUE, PAGE_CONSTANTS, PAGE_CONSTANTS_NEW, PASSWORD, PRECISION, PasteDateRangerValidator, PlanOptionsComponent, PlanOptionsService, PlanService, PrefGridColumnsKeys, PreferenceCategory, REF_CARD_HEAD, REQUIRED_ERROR_OBJ, RRValidator, RangeValidator, ReportsComponent, ReportsService, ResourceService, SASValidator, SFRValidator, SNACKBAR_NEGATIVE, SNACKBAR_POSITIVE, STUDYSUMMARY_COMMAND, STUDYSUMMARY_TARGET, SingleStudy, SiteInitiationValidator, Sites, SoCommonLibraryModule, StudyListInput, StudyListService, StudySummaryService, TargetMilestone, UNIQUE, UNIQUECOHORT, UPDATE_CHART_PREFERNCE, UPDATE_USER_PREFERENCE_ACTION_PARAMS, USER_ACTION_PARAMS, USER_PARAMS, USER_PREFERENCES, UserDataService, VIEW, ValidateARTB, ValidateAllNotZero, ValidateDaysFromFSI, ValidateFSI, ValidateFSS, ValidateRR, ValidateRange, ValidateSAS, ValidateSFR, WEEKS, WindowService, WorldwideDropdownComponent, ZERO, mapping, mappingPref, reversemapping, HeaderComponent as ɵa, PlanDropdownListComponent as ɵb, TrimPipe as ɵc, CueCardComponent as ɵd, CueCardService as ɵe, ApprovePlanComponent as ɵf, CopyPlanComponent as ɵg, DateCustomPipe as ɵh, GojsCanvasComponent as ɵi, ExtendedNgxTooltipAreaComponent as ɵj, ExtendedCircleSeriesComponent as ɵk, ExtendedLineSeriesComponent as ɵl, AuthHeaderComponent as ɵm };\n//# sourceMappingURL=so-common-library.js.map\n","import { CryptoJSEncryption } from 'common-library';\r\n\r\n// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\n// const mainUrl = 'http://10.44.29.23:7070'; // shrikesh\r\n// const mainUrl = 'http://10.44.74.11:7070'; // Gaurav\r\n// const mainUrl = 'http://10.44.75.5:7070'; // Vipin\r\n// const mainUrl = 'http://10.44.74.20:8090';\r\nconst mainUrl = window.location.protocol + '//' +\r\n  window.location.hostname + ':' +\r\n  window.location.port;\r\nexport const environment = {\r\n  production: true,\r\n  clientEncryptionKey: 'TEST1234',\r\n  cacheAge: 30000,\r\n  app_url: window.location.protocol + '//' +\r\n    window.location.hostname + ':' +\r\n    window.location.port + '/app1/index.html',\r\n  login_url: window.location.protocol + '//' +\r\n    window.location.hostname + ':' +\r\n    window.location.port + '/dv/StudyOptimizer/so-main.html',\r\n  cryptoJS: new CryptoJSEncryption(),\r\n\r\n  authUrl: `${mainUrl}/api/`,\r\n  soApiUrl: `${mainUrl}/studyoptimizer/api/`,\r\n  toSuppressContextMenu: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","var map = {\n\t\"./af\": \"../../node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"../../node_modules/moment/locale/af.js\",\n\t\"./ar\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./az\": \"../../node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"../../node_modules/moment/locale/az.js\",\n\t\"./be\": \"../../node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"../../node_modules/moment/locale/be.js\",\n\t\"./bg\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./br\": \"../../node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"../../node_modules/moment/locale/br.js\",\n\t\"./bs\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./da\": \"../../node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"../../node_modules/moment/locale/da.js\",\n\t\"./de\": \"../../node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../node_modules/moment/locale/de.js\",\n\t\"./dv\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./el\": \"../../node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"../../node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"../../node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"../../node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./es\": \"../../node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"../../node_modules/moment/locale/es.js\",\n\t\"./et\": \"../../node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"../../node_modules/moment/locale/et.js\",\n\t\"./eu\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./he\": \"../../node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"../../node_modules/moment/locale/he.js\",\n\t\"./hi\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"../../node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"../../node_modules/moment/locale/id.js\",\n\t\"./is\": \"../../node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"../../node_modules/moment/locale/is.js\",\n\t\"./it\": \"../../node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"../../node_modules/moment/locale/it.js\",\n\t\"./ja\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./km\": \"../../node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"../../node_modules/moment/locale/km.js\",\n\t\"./kn\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./me\": \"../../node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"../../node_modules/moment/locale/me.js\",\n\t\"./mi\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./my\": \"../../node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"../../node_modules/moment/locale/my.js\",\n\t\"./nb\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./se\": \"../../node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"../../node_modules/moment/locale/se.js\",\n\t\"./si\": \"../../node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"../../node_modules/moment/locale/si.js\",\n\t\"./sk\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./te\": \"../../node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"../../node_modules/moment/locale/te.js\",\n\t\"./tet\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./th\": \"../../node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"../../node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"../../node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\r\\n  <div class=\\\"navbar-brand d-flex align-items-center\\\">\\r\\n    <label class=\\\"study-o-text\\\">IQVIA <sup>TM</sup> StudyOptimizer</label>\\r\\n    <div class=\\\"v-divider\\\"></div>\\r\\n    <img class=\\\"logo\\\" [src]=\\\"logoUrl\\\" alt=\\\"\\\" (error)=\\\"hideImage($event)\\\" [ngClass]=\\\"{ hideImage: hideCustomerLogo }\\\" />\\r\\n  </div>\\r\\n  <!-- <div class=\\\"collapse navbar-collapse d-flex justify-content-end full-height\\\" id=\\\"navbarSupportedContent\\\">\\r\\n\\r\\n    <ul class=\\\"navbar-nav full-height\\\">\\r\\n    </ul>\\r\\n  </div> -->\\r\\n</nav>\"","export default \"<div class=\\\"col-12\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <nav aria-label=\\\"breadcrumb\\\">\\r\\n      <ol class=\\\"breadcrumb\\\">        \\r\\n        <li class=\\\"breadcrumb-item\\\" *ngFor=\\\"let breadcrumb of breadcrumbs\\\">\\r\\n          <a [routerLink]=\\\"[breadcrumb.url, breadcrumb.params]\\\">{{ breadcrumb.label }}</a>\\r\\n        </li>\\r\\n      </ol>\\r\\n    </nav>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"dialog-heading\\\">\\r\\n  <div *ngIf=\\\"data && data.prefixImageUrl\\\" class=\\\"col-sm-3\\\">\\r\\n    <img [src]=\\\"data?.prefixImageUrl\\\" alt=\\\"\\\" />\\r\\n  </div>\\r\\n  <div\\r\\n    [ngClass]=\\\"{\\r\\n      'col-sm-6': data.prefixImageUrl && data.postfixImageUrl ? true : false,\\r\\n      'col-sm-9': data.prefixImageUrl || data.postfixImageUrl ? true : false,\\r\\n      'col-sm-12': !data.prefixImageUrl && !data.postfixImageUrl ? true : false\\r\\n    }\\\"\\r\\n  >\\r\\n    <h1 mat-dialog-title *ngIf=\\\"data.heading\\\">{{ data?.heading }}</h1>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"data && data.postfixImageUrl\\\" class=\\\"col-sm-3\\\">\\r\\n    <img [src]=\\\"data?.postfixImageUrl\\\" alt=\\\"\\\" />\\r\\n  </div>\\r\\n</div>\\r\\n<div mat-dialog-content class=\\\"dialog-content-container\\\">\\r\\n  <div class=\\\"col-sm-3\\\" *ngIf=\\\"data && data.prefixMaterialIcon\\\">\\r\\n    <i\\r\\n      class=\\\"material-icons\\\"\\r\\n      [ngStyle]=\\\"{\\r\\n        color: data?.prefixMaterialIcon?.color,\\r\\n        'font-size': data?.prefixMaterialIcon?.size\\r\\n      }\\\"\\r\\n    >\\r\\n      {{ data?.prefixMaterialIcon?.name }}\\r\\n    </i>\\r\\n  </div>\\r\\n  <div\\r\\n    class=\\\"html-data-container\\\"\\r\\n    [class]=\\\"data.contentClass\\\"\\r\\n    [ngClass]=\\\"{\\r\\n      'col-sm-6':\\r\\n        data.postfixMaterialIcon && data.prefixMaterialIcon ? true : false,\\r\\n      'col-sm-9':\\r\\n        data.prefixMaterialIcon || data.postfixMaterialIcon ? true : false,\\r\\n      'col-sm-12':\\r\\n        !data.prefixMaterialIcon && !data.postfixMaterialIcon ? true : false\\r\\n    }\\\"\\r\\n  >\\r\\n    <div [innerHtml]=\\\"data?.message\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngIf=\\\"data && data.postfixMaterialIcon\\\">\\r\\n    <i\\r\\n      class=\\\"material-icons\\\"\\r\\n      [ngStyle]=\\\"{\\r\\n        color: data?.postfixMaterialIcon?.color,\\r\\n        'font-size': data?.postfixMaterialIcon?.size\\r\\n      }\\\"\\r\\n    >\\r\\n      {{ data?.postfixMaterialIcon?.name }}\\r\\n    </i>\\r\\n  </div>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button\\r\\n    mat-button\\r\\n    class=\\\"cancel-btn\\\"\\r\\n    *ngIf=\\\"showCancel()\\\"\\r\\n    (click)=\\\"cancel(data.cancelLabel)\\\"\\r\\n  >\\r\\n    {{ data?.cancelLabel }}\\r\\n  </button>\\r\\n  <button mat-button class=\\\"ok-btn\\\" (click)=\\\"ok(data.okLabel)\\\" cdkFocusInitial>\\r\\n    {{ data?.okLabel }}\\r\\n  </button>\\r\\n</div>\\r\\n\"","export default \"<ng-content></ng-content>\\r\\n<mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" [class]=\\\"'context-menu ' + contextMenuClass\\\" [xPosition]=\\\"xPosition\\\"\\r\\n  [yPosition]=\\\"yPosition\\\">\\r\\n  <h5 class=\\\"heading\\\" *ngIf=\\\"heading\\\" [matTooltipClass]=\\\"'ctos-tooltip'\\\" [matTooltip]=\\\"heading\\\"\\r\\n    matTooltipPosition=\\\"above\\\" [innerHTML]=\\\"heading\\\"></h5>\\r\\n  <div *ngFor=\\\"let item of options\\\" [matTooltip]=\\\"item.tooltipMsg\\\" matTooltipPosition=\\\"right\\\"\\r\\n    [matTooltipDisabled]=\\\"item.isEnabled || !item.tooltipMsg\\\">\\r\\n    <button mat-menu-item [disabled]=\\\"!item.isEnabled\\\" (click)=\\\"menuClick(item.name)\\\">\\r\\n      <span>{{ item.name }}</span>\\r\\n      <hr />\\r\\n    </button>\\r\\n  </div>\\r\\n</mat-menu>\"","export default \"  <div  [ngClass]='data.messageType'>\\r\\n    <p class=\\\"position-text\\\">\\r\\n      <img [src]='data.icon'>\\r\\n      <!-- <span  class=\\\"positive-icon\\\"></span> -->\\r\\n      <span class=\\\"data\\\">{{data.message}}</span> \\r\\n    </p>\\r\\n    \\r\\n    <a (click)='close()' class=\\\"closeBanner\\\">&times;</a>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n\"","export default \"\"","export default \"<h5>{{message}}</h5>\"","export default \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\r\\n  <div class=\\\"navbar-brand d-flex align-items-center\\\">\\r\\n    <label class=\\\"study-o-text\\\">IQVIA <sup>TM</sup> StudyOptimizer</label>\\r\\n    <div class=\\\"v-divider\\\"></div>\\r\\n    <img class=\\\"logo\\\" [src]=\\\"logoUrl\\\" alt=\\\"\\\" (error)=\\\"hideImage($event)\\\" [ngClass]=\\\"{ hideImage: hideCustomerLogo }\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"collapse navbar-collapse d-flex justify-content-end full-height\\\" id=\\\"navbarSupportedContent\\\">\\r\\n\\r\\n    <ul class=\\\"navbar-nav full-height\\\">\\r\\n      <li class=\\\"nav-item text-truncate\\\" *ngFor=\\\"let item of items\\\" (click)=\\\"onTabClick(item.$moduleName)\\\">\\r\\n        <a class=\\\"nav-link text-truncate\\\" [innerHTML]=\\\"item.$name\\\"> </a>\\r\\n      </li>\\r\\n\\r\\n      <div id=\\\"my-widget\\\" class=\\\"nav-item\\\">\\r\\n        <div class=\\\"appcues-widget-icon\\\">\\r\\n          <img [src]=\\\"appInfoUrl\\\" width=\\\"30px\\\" height=\\\"30px\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <li class=\\\"nav-item divider-menu-item\\\">\\r\\n        <div class=\\\"v-divider\\\"></div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <div class=\\\"profile-wrapper\\\">\\r\\n          <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"menu\\\">\\r\\n            <div class=\\\"profile-config\\\">\\r\\n              <span [innerHTML]=\\\"userInitials\\\"></span>\\r\\n            </div>\\r\\n          </button>\\r\\n          <!-- Add below code to implement requirement of SO-19533 -->\\r\\n          <mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" [class]=\\\"'context-menu ' + contextMenuClass\\\"\\r\\n            [xPosition]=\\\"'before'\\\" [yPosition]=\\\"'below'\\\">\\r\\n            <h5 class=\\\"heading\\\" *ngIf=\\\"UserNameToolTip\\\" [matTooltipClass]=\\\"'ctos-tooltip'\\\" [matTooltip]=\\\"UserNameToolTip\\\"\\r\\n              matTooltipPosition=\\\"above\\\">\\r\\n              <div class=\\\"fullname_subheader\\\" [innerHTML]=\\\"firstName\\\"></div>\\r\\n              <div class=\\\"fullname_subheader\\\" [innerHTML]=\\\"lastName\\\"></div>\\r\\n            </h5>\\r\\n            <div *ngFor=\\\"let item of profileItems\\\" [matTooltip]=\\\"item.tooltipMsg\\\" matTooltipPosition=\\\"right\\\"\\r\\n              [matTooltipDisabled]=\\\"item.isEnabled || !item.tooltipMsg\\\">\\r\\n              <button mat-menu-item [disabled]=\\\"!item.isEnabled\\\" (click)=\\\"onClickAction(item.name)\\\">\\r\\n                <span>{{ item.name }}</span>\\r\\n                <hr />\\r\\n              </button>\\r\\n             </div> \\r\\n          </mat-menu>\\r\\n          </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\"","export default \"<mat-menu #menu class=\\\"nested-dropdown-menu world-wide-nested-dropdown-panel\\\">\\r\\n    <ng-container *ngFor=\\\"let item of items\\\">\\r\\n        <button *ngIf=\\\"!item.children; else branch\\\" mat-menu-item (click)=\\\"optionClicked(item)\\\">{{item.name}}</button>\\r\\n        <ng-template #branch>\\r\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"innerPanel.menu\\\"\\r\\n                (click)=\\\"optionClicked(item)\\\">{{item.name}}</button>\\r\\n            <ctos-nested-dropdown #innerPanel [items]=\\\"item.children\\\" (optionClick)=\\\"optionClicked($event)\\\">\\r\\n            </ctos-nested-dropdown>\\r\\n        </ng-template>\\r\\n    </ng-container>\\r\\n</mat-menu>\"","export default \"<!-- <h3 mat-dialog-title> {{countryNotesProp?.resources?.TITLE}} {{countryNotesProp?.countryName}}</h3> -->\\r\\n<h3 mat-dialog-title> {{countryNotesProp?.titleLabel}} {{countryNotesProp?.titleValue}}</h3>\\r\\n<div mat-dialog-content class=\\\"country-notes-container\\\">\\r\\n    <!-- <ng-container *ngIf=\\\"!countryNotesProp?.isMCGrid\\\"> -->\\r\\n    <ng-container *ngIf=\\\"countryNotesProp?.areNotesEditable\\\">\\r\\n        <textarea rows=\\\"3\\\" cols=\\\"50\\\" class=\\\"form-control\\\" maxlength=\\\"1024\\\" (ngModelChange)=\\\"onContentChange($event)\\\"\\r\\n            [disabled]=\\\"!areNotesEditable\\\" [(ngModel)]=\\\"noteTemplate.content\\\" #content=\\\"ngModel\\\" id=\\\"content\\\"\\r\\n            name=\\\"content\\\" placeholder=\\\"{{countryNotesProp?.resources?.TYPE_TO_ADD_COMMENT}}\\\"></textarea>\\r\\n        <div class=\\\"row action-btn-container\\\">\\r\\n            <button mat-button class=\\\"btn-add-comment\\\" *ngIf=\\\"isEditMode\\\" [disableRipple]=\\\"true\\\" (click)=\\\"resetNote()\\\">\\r\\n                Cancel\\r\\n            </button>\\r\\n            <button mat-button class=\\\"btn-add-comment\\\" [disabled]=\\\"!isEnabled()\\\" [disableRipple]=\\\"true\\\"\\r\\n                (click)=\\\"addComment()\\\">\\r\\n                <i *ngIf=\\\"!isEditMode\\\" class=\\\"material-icons\\\">\\r\\n                    add_circle_outline\\r\\n                </i> {{ isEditMode ? 'Save Comment' : countryNotesProp?.resources?.ADD_COMMENT}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <div class=\\\"note-list-container\\\">\\r\\n        <div class=\\\"row note-list-header\\\">\\r\\n            <!-- <div *ngIf=\\\"!countryNotesProp?.isMCGrid\\\" class=\\\"col-sm-1\\\"></div> -->\\r\\n            <div *ngIf=\\\"countryNotesProp?.areNotesEditable\\\" class=\\\"col-sm-1\\\"></div>\\r\\n            <div class=\\\"col-sm-11 row\\\">\\r\\n                <div class=\\\"col-sm-3\\\">{{countryNotesProp?.resources?.MODIFIED_DATE}}</div>\\r\\n                <div class=\\\"col-sm-3\\\">{{countryNotesProp?.resources?.USER_NAME}}</div>\\r\\n                <div class=\\\"col-sm-6\\\">{{countryNotesProp?.resources?.CONTENT}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"note-list-data\\\">\\r\\n            <div class=\\\"row  note-row\\\" *ngFor=\\\"let note of countryNotesProp.noteList; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"!isDeletedNote(note)\\\">\\r\\n                    <!-- <ng-container *ngIf=\\\"!countryNotesProp?.isMCGrid\\\"> -->\\r\\n                    <ng-container *ngIf=\\\"countryNotesProp?.areNotesEditable\\\">\\r\\n                        <div class=\\\"col-sm-1 btn-remove-note\\\"\\r\\n                            [ngClass]=\\\"(countryNotesProp.areNotesEditable === false) ? 'disable' : ''\\\"\\r\\n                            (click)=\\\"removeNote(i)\\\">\\r\\n                            <i class=\\\"material-icons\\\"> clear </i>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <div class=\\\"col-sm-11 row\\\" (click)=\\\"onNoteSelected(note, i)\\\">\\r\\n                        <div class=\\\"col-sm-3\\\">{{note.lastModifiedDate | date: 'dd-MMM-yyyy'}}</div>\\r\\n                        <div class=\\\"col-sm-3\\\">{{note.userId}}</div>\\r\\n                        <div class=\\\"col-sm-6 txt-content\\\">{{note.content}}</div>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <!-- <ng-container *ngIf=\\\"!countryNotesProp?.isMCGrid\\\"> -->\\r\\n    <ng-container *ngIf=\\\"countryNotesProp?.areNotesEditable\\\">\\r\\n        <button mat-button class=\\\"ctos-btn-secondary\\\"\\r\\n            (click)=\\\"cancel()\\\">{{countryNotesProp?.resources?.CANCEL}}</button>\\r\\n        <button mat-button class=\\\"ctos-btn-primary offset-2\\\" [disabled]=\\\"!areNotesEditable\\\" (click)=\\\"ok()\\\"\\r\\n            cdkFocusInitial>{{countryNotesProp?.resources?.SAVE}}</button>\\r\\n    </ng-container>\\r\\n    <!-- <ng-container *ngIf=\\\"countryNotesProp?.isMCGrid\\\"> -->\\r\\n    <ng-container *ngIf=\\\"!countryNotesProp?.areNotesEditable\\\">\\r\\n        <button mat-button class=\\\"ctos-btn-primary\\\" (click)=\\\"cancel()\\\">{{countryNotesProp?.resources?.OK}}</button>\\r\\n    </ng-container>\\r\\n</div>\"","export default \"<h1 mat-dialog-title>{{ data?.heading }}</h1>\\r\\n<div mat-dialog-content class=\\\"row password-dialog-container\\\">\\r\\n  <div class=\\\"col-6 left-side\\\">\\r\\n    <form class=\\\"form-horizontal\\\" #changePasswordForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"control-label col-4 no-padding\\\" for=\\\"currentPassword\\\">{{\\r\\n          data?.currentPassword\\r\\n        }}</label>\\r\\n        <div class=\\\"backGround col-8\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"currentPassword\\\" [(ngModel)]=\\\"currentPassword\\\"\\r\\n            #currentPasswordText=\\\"ngModel\\\" name=\\\"currentPassword\\\" (click)=\\\"hideSuccessMessage()\\\" required\\r\\n            [matTooltipClass]=\\\"'warn ctos-tooltip'\\\" [matTooltip]=\\\"data?.nonEmptyField\\\" matTooltipPosition=\\\"right\\\"\\r\\n            [matTooltipDisabled]=\\\"\\r\\n              !(currentPasswordText.touched && currentPasswordText.invalid)\\r\\n            \\\" [class.is-invalid]=\\\"\\r\\n              currentPasswordText.touched && currentPasswordText.invalid\\r\\n            \\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"control-label col-4 no-padding\\\" for=\\\"newPassword\\\">{{\\r\\n          data?.newPassword\\r\\n        }}</label>\\r\\n        <div class=\\\"backGround col-8\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"newPassword\\\" [(ngModel)]=\\\"newPassword\\\"\\r\\n            #newPasswordText=\\\"ngModel\\\" name=\\\"newPassword\\\" (input)=\\\"confirmPasswordText.control.updateValueAndValidity()\\\"\\r\\n            (click)=\\\"hideSuccessMessage()\\\" required [matTooltipClass]=\\\"'warn ctos-tooltip'\\\"\\r\\n            [matTooltip]=\\\"data?.nonEmptyField\\\" matTooltipPosition=\\\"right\\\" [matTooltipDisabled]=\\\"\\r\\n              !(newPasswordText.touched && newPasswordText.invalid)\\r\\n            \\\" [class.is-invalid]=\\\"\\r\\n              newPasswordText.touched && newPasswordText.invalid\\r\\n            \\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"control-label col-4 no-padding\\\" for=\\\"confirmPassword\\\">{{\\r\\n          data?.confirmPassword\\r\\n        }}</label>\\r\\n        <div class=\\\"backGround col-8\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" [(ngModel)]=\\\"confirmPassword\\\"\\r\\n            #confirmPasswordText=\\\"ngModel\\\" name=\\\"confirmPassword\\\" ctosConfirmEqualValidator=\\\"newPassword\\\"\\r\\n            (click)=\\\"hideSuccessMessage()\\\" required [matTooltipClass]=\\\"'warn ctos-tooltip'\\\" [matTooltip]=\\\"\\r\\n              (confirmPasswordText.touched || confirmPasswordText.dirty) &&\\r\\n              !confirmPasswordText.value\\r\\n                ? data?.nonEmptyField\\r\\n                : confirmPasswordText.errors?.notEqual &&\\r\\n                  confirmPasswordText.dirty\\r\\n                ? data?.passwordMisMatchMessage\\r\\n                : ''\\r\\n            \\\" matTooltipPosition=\\\"right\\\" [matTooltipDisabled]=\\\"\\r\\n              !(confirmPasswordText.touched && confirmPasswordText.invalid)\\r\\n            \\\" [class.is-invalid]=\\\"\\r\\n              confirmPasswordText.touched && confirmPasswordText.invalid\\r\\n            \\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <mat-error *ngIf=\\\"validationMessage\\\">{{ validationMessage }}</mat-error>\\r\\n  </div>\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div class=\\\"para\\\">\\r\\n      <span>The password must meet the following criteria:</span>\\r\\n      <ol>\\r\\n        <li>{{ data.lengthRule }}</li>\\r\\n        <li>{{ mixruleSplitHeader }}\\r\\n          <ul>\\r\\n            <li *ngFor=\\\"let point of this.mixruleSplit\\\">{{point}}</li>\\r\\n          </ul>\\r\\n        </li>\\r\\n      </ol>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button class=\\\"cancel-btn\\\" (click)=\\\"cancel(data.cancelLabel)\\\">\\r\\n    {{ data?.cancelLabel }}\\r\\n  </button>\\r\\n  <button mat-button class=\\\"ok-btn\\\" [ngClass]=\\\"{'disabled-button': !changePasswordForm.valid}\\\" [disabled]=\\\"!changePasswordForm.valid\\\"\\r\\n    (click)=\\\"ok(data.okLabel, changePasswordForm)\\\" cdkFocusInitial>\\r\\n    {{ data?.okLabel }}\\r\\n  </button>\\r\\n</div>\"","export default \"\"","export default \"<!-- customized for So-Study dropdown -->\\r\\n\\r\\n<div *ngIf=\\\"isSearchListOn\\\" class=\\\"search-list-container\\\" [formGroup]=\\\"searchListFormGroupName\\\" matAutocompleteOrigin #origin=\\\"matAutocompleteOrigin\\\">\\r\\n  <label class=\\\"study-label\\\">{{searchListInput.studyListHeaderLabel}}</label>\\r\\n  <i class=\\\"material-icons arrow-mat-icon\\\" [ngClass]=\\\"toggleArrowFlag ? 'rotate-arrow-icon-ninty-degree' : 'rotate-arrow-icon-zero-degree'\\\">play_arrow</i>\\r\\n  <input \\r\\n  #searchbox \\r\\n  type=\\\"button\\\" \\r\\n  aria-label=\\\"Search\\\" \\r\\n  formControlName=\\\"searchListControl\\\" \\r\\n  class=\\\"dropdownArrow form-control study-and-study-name\\\" \\r\\n  [matAutocomplete]=\\\"searchList\\\" \\r\\n  [matAutocompleteConnectedTo]=\\\"origin\\\" \\r\\n  (click)='click()'\\r\\n  (blur)=\\\"onBlur()\\\" \\r\\n  />\\r\\n  <mat-autocomplete \\r\\n    #searchList=\\\"matAutocomplete\\\" \\r\\n    [displayWith]=\\\"formatItem\\\" \\r\\n    (optionSelected)=\\\"itemSelected($event)\\\" \\r\\n    showPanel=\\\"true\\\" \\r\\n    [class]=\\\"'search-list'\\\"\\r\\n    (opened)=\\\"open()\\\"\\r\\n    (closed)=\\\"close()\\\"\\r\\n  >\\r\\n  <i class=\\\"material-icons search-mat-icon\\\">search</i>\\r\\n  <input \\r\\n  type=\\\"text\\\" \\r\\n  [placeholder]=\\\"searchListInput.placeholder\\\" \\r\\n  aria-label=\\\"Search\\\" \\r\\n  formControlName=\\\"filterListControl\\\" \\r\\n  class=\\\"dropdownArrow form-control\\\" \\r\\n  #autoCompleteInput \\r\\n  (blur)=\\\"onBlur()\\\" \\r\\n  [matTooltip]=\\\"labels?.required\\\" \\r\\n  [matTooltipClass]=\\\"'warn ctos-tooltip'\\\"\\r\\n  matTooltipPosition=\\\"right\\\" \\r\\n  [matTooltipDisabled]=\\\"!(searchListFormGroupName.get('searchListControl').touched &&\\r\\n  searchListFormGroupName.get('searchListControl').hasError('required'))\\\" \\r\\n  />\\r\\n  <mat-optgroup *ngFor=\\\"let group of $searchGroups\\\" [label]=\\\"group.name\\\">\\r\\n      <mat-option *ngFor=\\\"let item of (group.list | async)\\\" [value]=\\\"item\\\" matTooltip=\\\"{{ item.name }}\\\">\\r\\n          <ng-template [ngTemplateOutlet]=\\\"searchListInput.optionTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: item }\\\">\\r\\n            </ng-template>\\r\\n          </mat-option>\\r\\n      </mat-optgroup>\\r\\n  </mat-autocomplete>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Orginial component  -->\\r\\n\\r\\n<div *ngIf=\\\"!isSearchListOn\\\" class=\\\"search-list-container\\\" [formGroup]=\\\"searchListFormGroupName\\\">\\r\\n  <input\\r\\n    type=\\\"text\\\"\\r\\n    [placeholder]=\\\"searchListInput.placeholder\\\"\\r\\n    aria-label=\\\"Search\\\"\\r\\n    formControlName=\\\"searchListControl\\\"\\r\\n    class=\\\"dropdownArrow form-control\\\"\\r\\n    [matAutocomplete]=\\\"searchList\\\"\\r\\n    #autoCompleteInput\\r\\n    (blur)=\\\"onBlur()\\\"\\r\\n    [required]=\\\"required\\\"\\r\\n    [matTooltipClass]=\\\"'warn ctos-tooltip'\\\"\\r\\n    [matTooltip]=\\\"labels?.required\\\"\\r\\n    matTooltipPosition=\\\"right\\\"\\r\\n    [matTooltipDisabled]=\\\"!(searchListFormGroupName.get('searchListControl').touched &&\\r\\n    searchListFormGroupName.get('searchListControl').hasError('required'))\\\"\\r\\n  />\\r\\n  <!-- <mat-error\\r\\n    *ngIf=\\\"\\r\\n    searchListFormGroupName?.get('searchListControl').touched &&\\r\\n    searchListFormGroupName?.get('searchListControl').hasError('required')\\r\\n    \\\"\\r\\n    >This field is mendatory.</mat-error\\r\\n  > -->\\r\\n  <mat-autocomplete\\r\\n    #searchList=\\\"matAutocomplete\\\"\\r\\n    [displayWith]=\\\"formatItem\\\"\\r\\n    (optionSelected)=\\\"itemSelected($event)\\\"\\r\\n    showPanel=\\\"true\\\"\\r\\n    [class]=\\\"'search-list'\\\"\\r\\n  >\\r\\n    <mat-optgroup *ngFor=\\\"let group of $searchGroups\\\" [label]=\\\"group.name\\\">\\r\\n      <mat-option\\r\\n        *ngFor=\\\"let item of (group.list | async)\\\"\\r\\n        [value]=\\\"item\\\"\\r\\n        matTooltip=\\\"{{ item.name }}\\\"\\r\\n      >\\r\\n        <ng-template\\r\\n          [ngTemplateOutlet]=\\\"searchListInput.optionTemplate\\\"\\r\\n          [ngTemplateOutletContext]=\\\"{ $implicit: item }\\\"\\r\\n        >\\r\\n        </ng-template>\\r\\n      </mat-option>\\r\\n    </mat-optgroup>\\r\\n  </mat-autocomplete>\\r\\n</div>\"","export default \"<div class=\\\"subnav\\\">\\r\\n  <!-- <select>\\r\\n    <option>CCD984</option>\\r\\n    <option>BAD984</option>\\r\\n    <option>CPK284</option>\\r\\n  </select> -->\\r\\n  <ctos-search-list [required]=\\\"false\\\" [searchListFormGroupName]=\\\"searchListFormGroupName\\\"\\r\\n    [searchListInput]=\\\"studyListInput\\\" (itemSelect)=\\\"itemSelected($event)\\\" (selectionChange)=\\\"onStudyChange($event)\\\"\\r\\n    [isSearchListOn]=\\\"isSearchListOn\\\">\\r\\n  </ctos-search-list>\\r\\n  <div *ngFor=\\\"let item of subHeaders; let i = index\\\" (click)=\\\"onTabClick(item.$moduleName, $event)\\\">\\r\\n    <!-- The check for disabled link in below ngClass directive needs to be modified when new added tabs are also to be disabled based on the criteria -->\\r\\n    <a [ngClass]=\\\"{ 'active': isTabActive(item) === true, 'disabled': disableLink === true}\\\"\\r\\n      href=\\\"javascript:void();\\\">{{ item.$name }}\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"float-right study-refresh-date\\\" *ngIf=\\\"studyRefreshDate\\\">\\r\\n    <span [innerHTML]=\\\"studyRefreshDateLabel\\\"></span> <span>:&nbsp;</span>\\r\\n    <span><strong>{{ studyRefreshDate | date: 'dd-MMM-yyyy' }}</strong></span>\\r\\n  </div>\\r\\n</div>\"","export default \"<ul>\\r\\n  <li *ngFor=\\\"let item of items\\\" [matTooltip]=\\\"'For a cohort plan, you must define one or more cohorts on the Cohort Design tab to enable the Countries tab.'\\\" matTooltipPosition=\\\"left\\\" [matTooltipClass]=\\\"'warn ctos-tooltip'\\\"\\r\\n    [matTooltipDisabled]=\\\"!showTooltip\\\" (mouseover)=\\\"getMouseEvent(item.label, item.enable)\\\" [ngClass]=\\\"{'active': selectedTab.label === item.label}\\\">\\r\\n    <span [innerHTML]=\\\"item.label\\\" (click)=\\\"selectTab(item)\\\" [ngClass]=\\\"{'disabled':item.enable===false}\\\"></span>\\r\\n  </li>\\r\\n</ul>\"","export default \"<router-outlet></router-outlet>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const BUILD_type = 'production';\r\nexport const BUILD_id = '600121';\r\nexport const BUILD_date = 'FEB-26-2020 11:17:14';\r\nexport const BUILD_version = '6.1';\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatProgressSpinnerModule,\r\n  MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,\r\n  MAT_SELECT_SCROLL_STRATEGY,\r\n  MatIconModule,\r\n  MatTreeModule,\r\n  MatNativeDateModule,\r\n  MatTableModule,\r\n  MatDialogModule,\r\n  MatTabsModule,\r\n  MAT_DIALOG_DEFAULT_OPTIONS,\r\n  MatPaginatorModule\r\n} from '@angular/material';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { MatAutocompleteModule, MAT_AUTOCOMPLETE_SCROLL_STRATEGY } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule, MAT_MENU_SCROLL_STRATEGY } from '@angular/material/menu';\r\nimport {\r\n  MAT_SNACK_BAR_DEFAULT_OPTIONS,\r\n  MatSnackBarModule\r\n} from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport { CTOS_DATE_FORMATS, CTOSDateAdapter } from './ctos-date-adapter';\r\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\r\nimport { MAT_SCROLL_STRATEGY_FACTORY } from './scroll';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatAutocompleteModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatTreeModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    OverlayModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatSlideToggleModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\r\n      useValue: { duration: 2000, verticalPosition: 'top' }\r\n    },\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: CTOSDateAdapter,\r\n      deps: [MAT_DATE_LOCALE]\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: CTOS_DATE_FORMATS },\r\n    {\r\n      provide: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,\r\n      useValue: { _forceAnimations: true, diameter: 100, strokeWidth: 6 }\r\n    },\r\n    {\r\n      provide: MAT_SELECT_SCROLL_STRATEGY,\r\n      useFactory: MAT_SCROLL_STRATEGY_FACTORY,\r\n      deps: [Overlay]\r\n    },\r\n    {\r\n      provide: MAT_MENU_SCROLL_STRATEGY,\r\n      useFactory: MAT_SCROLL_STRATEGY_FACTORY,\r\n      deps: [Overlay]\r\n    },\r\n    {\r\n      provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\r\n      useFactory: MAT_SCROLL_STRATEGY_FACTORY,\r\n      deps: [Overlay]\r\n    },\r\n    {\r\n      provide: MAT_DIALOG_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        hasBackdrop: true,\r\n        disableClose: true,\r\n        backdropClass: 'backdrop'\r\n      }\r\n    }\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatTreeModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    OverlayModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatSlideToggleModule\r\n  ]\r\n})\r\nexport class CommonAngularMaterialModule { }\r\n","import { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport * as momentNS from 'moment';\r\n\r\nimport { VALID_DATE_FORMATS } from '../utils/service-constant';\r\n\r\nconst moment = momentNS;\r\n\r\nexport const CTOS_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: VALID_DATE_FORMATS\r\n    },\r\n    display: {\r\n        dateInput: 'DD-MMM-YYYY',\r\n        monthYearLabel: 'MMM-YYYY',\r\n        dateA11yLabel: 'DD-MMM-YYYY',\r\n        monthYearA11yLabel: 'MMM-YYYY',\r\n    },\r\n};\r\n\r\nexport class CTOSDateAdapter extends MomentDateAdapter {\r\n    parse(value: any, parseFormat: string | string[]): momentNS.Moment | null {\r\n        if (value && typeof value === 'string') {\r\n            return moment(value, parseFormat, true);\r\n        }\r\n        return value ? moment(value) : null;\r\n    }\r\n\r\n    /**\r\n     * This is needed to override the default behaviour as invalid values are also considered as null\r\n     * and empty values are also considered as null, so to verify if both are null that is previous value\r\n     * and current value then the value change should be triggered.\r\n     *\r\n     * param first\r\n     * param second\r\n     * returns\r\n     * memberof CTOSDateAdapter\r\n     */\r\n    sameDate(first, second) {\r\n        if (first && second) {\r\n            const firstValid = this.isValid(first);\r\n            const secondValid = this.isValid(second);\r\n            if (firstValid && secondValid) {\r\n                return !this.compareDate(first, second);\r\n            }\r\n            return firstValid === secondValid;\r\n        } else {\r\n            return first !== null && second !== null && first === second;\r\n        }\r\n    }\r\n}\r\n","import { ScrollStrategy, Overlay } from '@angular/cdk/overlay';\r\n\r\nexport function MAT_SCROLL_STRATEGY_FACTORY(\r\n  overlay: Overlay\r\n): () => ScrollStrategy {\r\n  return (): ScrollStrategy => overlay.scrollStrategies.close();\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { PCEService } from './services/pce.service';\r\nimport { SpinnerService } from './services/spinner.service';\r\n\r\n@NgModule({\r\n  imports: [ComponentsModule],\r\n  exports: [ComponentsModule],\r\n  declarations: [],\r\n  providers: [\r\n    PCEService,\r\n    SpinnerService\r\n  ],\r\n  entryComponents: []\r\n})\r\nexport class CommonLibraryModule { }\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'ctos-auth-main-header',\r\n  templateUrl: './auth-main-header.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AuthMainHeaderComponent implements OnInit {\r\n\r\n  @Input() logoUrl: string;\r\n  @Input() appInfoUrl: string;\r\n\r\n  hideCustomerLogo = false;\r\n\r\n  constructor(\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Hides image\r\n   * @param event\r\n   */\r\n  hideImage(event) {\r\n    this.hideCustomerLogo = true;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Breadcrumb } from './../../models/breadcrumb';\r\nimport { BreadcrumbService } from './breadcrumb.service';\r\n\r\n@Component({\r\n  selector: 'ctos-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html'\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n\r\n  /**\r\n   * Stores the breadcrumb values to render\r\n   *\r\n   * @memberof BreadcrumbComponent\r\n   */\r\n  public breadcrumbs: Breadcrumb[];\r\n\r\n  /**\r\n   *Creates an instance of BreadcrumbComponent.\r\n   * @param breadcrumbsService\r\n   * @memberof BreadcrumbComponent\r\n   * subscribes to the breadcrumb observable of breadcrumb service for changes in breadcrumbs\r\n   */\r\n  constructor(\r\n    private breadcrumbsService: BreadcrumbService) {\r\n    // subscribe to the breadcrumb observable in service to update the view on change of subject\r\n    this.breadcrumbsService.breadcrumbs$.subscribe(\r\n      (breadcrumbs) => {\r\n        this.breadcrumbs = breadcrumbs;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Event, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { Breadcrumb } from './../../models/breadcrumb';\r\nimport { AppUtil } from './../../utils/AppUtil';\r\nimport { StringUtil } from './../../utils/string-util';\r\n\r\n@Injectable()\r\nexport class BreadcrumbService {\r\n\r\n  breadcrumbsSubject: Subject<Breadcrumb[]>;\r\n  breadcrumbs$: Observable<Breadcrumb[]>;\r\n\r\n  /**\r\n   *Creates an instance of BreadcrumbService.\r\n   * @param activatedRoute\r\n   * @memberof BreadcrumbService\r\n   */\r\n  constructor(private activatedRoute: ActivatedRoute) {\r\n    this.breadcrumbsSubject = new Subject<Breadcrumb[]>();\r\n    this.breadcrumbs$ = this.breadcrumbsSubject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Updates the breadcrumb observable with new breadcrumb values\r\n   *\r\n   * @param event\r\n   * @memberof BreadcrumbService\r\n   */\r\n  setBreadCrumb(event: Event) {\r\n    // check if navigation has ended\r\n    if (event instanceof NavigationEnd) {\r\n      const root: ActivatedRoute = this.activatedRoute.root;\r\n      let breadcrumbs: Breadcrumb[];\r\n      // extract the breadcrumbs from the route object\r\n      breadcrumbs = this.getBreadcrumbs(root);\r\n      // update the observable with new breadcrumbs\r\n      this.breadcrumbsSubject.next(breadcrumbs);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts breadcrumbs from the route object using\r\n   * the data if passed in the route or the path segment in absence of data\r\n   *\r\n   * @param route\r\n   * @param [url='']\r\n   * @param [breadcrumbs=[]]\r\n   * @returns Breadcrumb[]\r\n   * @memberof BreadcrumbService\r\n   */\r\n  private getBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: Breadcrumb[] = []): Breadcrumb[] {\r\n    const ROUTE_DATA_BREADCRUMB = 'breadcrumb';\r\n\r\n    // get the child routes\r\n    const children: ActivatedRoute[] = route.children;\r\n\r\n    // return if there are no more children\r\n    if (children.length === 0) {\r\n      return breadcrumbs;\r\n    }\r\n\r\n    // iterate over each children\r\n    for (const child of children) {\r\n      // verify primary route\r\n      if (child.outlet !== PRIMARY_OUTLET) {\r\n        continue;\r\n      }\r\n\r\n      // verify the custom data property \"breadcrumb\" is specified on the route\r\n      // if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\r\n      //   return this.getBreadcrumbs(child, url, breadcrumbs);\r\n      // }\r\n\r\n      // get the route's URL segment\r\n\r\n      const routeURL: string = AppUtil.extractPathFromUrl(child.snapshot.url);\r\n\r\n      // append route URL to URL\r\n      url += `/${routeURL}`;\r\n\r\n      // extract the label for the breadcrumb from data if provided else set it as the url segment path\r\n      let breadcrumbLabel;\r\n      if (child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\r\n        breadcrumbLabel = child.snapshot.data[ROUTE_DATA_BREADCRUMB];\r\n      } else {\r\n        breadcrumbLabel = StringUtil.camelize(routeURL);\r\n      }\r\n\r\n      // add breadcrumb\r\n      const breadcrumb: Breadcrumb = {\r\n        label: breadcrumbLabel,\r\n        params: child.snapshot.params,\r\n        url: url\r\n      };\r\n\r\n      breadcrumbs.push(breadcrumb);\r\n\r\n      // recursive\r\n      return this.getBreadcrumbs(child, url, breadcrumbs);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSpinner } from '@angular/material';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { LabelControlDirective } from '../directives/label-control.directive';\r\nimport { SignedDecimalDirective } from '../directives/signed-decimal.directive';\r\nimport { SignedIntegerDirective } from '../directives/signed-integer.directive';\r\nimport { CommonAngularMaterialModule } from './../common-angular-material/common-angular-material.module';\r\nimport { ConfirmEqualValidatorDirective } from './../directives/confirm-equal-validator.directive';\r\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\r\nimport { BreadcrumbService } from './breadcrumb/breadcrumb.service';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\r\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\r\nimport { DisplayBannerComponent } from './display-banner/display-banner.component';\r\nimport { ExportComponent } from './export/export.component';\r\nimport { InfoComponent } from './info/info.component';\r\nimport { MainHeaderComponent } from './main-header/main-header.component';\r\nimport { PasswordComponent } from './password/password.component';\r\nimport { RedirectComponent } from './redirect/redirect.component';\r\nimport { SearchListComponent } from './search-list/search-list.component';\r\nimport { SubHeaderComponent } from './sub-header/sub-header.component';\r\nimport { TabComponent } from './tab/tab.component';\r\nimport { NotesComponent } from '../components/notes/notes.component';\r\nimport { AuthMainHeaderComponent } from './auth-main-header/auth-main-header.component';\r\nimport { NestedDropdownComponent } from './nested-dropdown/nested-dropdown.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    CommonAngularMaterialModule,\r\n    FormsModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDialogModule\r\n  ],\r\n  declarations: [\r\n    BreadcrumbComponent,\r\n    MainHeaderComponent,\r\n    SubHeaderComponent,\r\n    SearchListComponent,\r\n    PasswordComponent,\r\n    ConfirmEqualValidatorDirective,\r\n    ConfirmationDialogComponent,\r\n    ExportComponent,\r\n    RedirectComponent,\r\n    DisplayBannerComponent,\r\n    ContextMenuComponent,\r\n    TabComponent,\r\n    InfoComponent,\r\n    AuthMainHeaderComponent,\r\n    SignedIntegerDirective,\r\n    SignedDecimalDirective,\r\n    LabelControlDirective,\r\n    NotesComponent,\r\n    NestedDropdownComponent\r\n  ],\r\n  providers: [BreadcrumbService],\r\n  exports: [\r\n    BreadcrumbComponent,\r\n    MainHeaderComponent,\r\n    SubHeaderComponent,\r\n    SearchListComponent,\r\n    ConfirmEqualValidatorDirective,\r\n    ConfirmationDialogComponent,\r\n    ExportComponent,\r\n    DisplayBannerComponent,\r\n    ContextMenuComponent,\r\n    TabComponent,\r\n    InfoComponent,\r\n    AuthMainHeaderComponent,\r\n    SignedIntegerDirective,\r\n    SignedDecimalDirective,\r\n    LabelControlDirective,\r\n    NotesComponent,\r\n    NestedDropdownComponent\r\n  ],\r\n  entryComponents: [\r\n    PasswordComponent,\r\n    RedirectComponent,\r\n    DisplayBannerComponent,\r\n    ConfirmationDialogComponent,\r\n    MatSpinner,\r\n    NotesComponent\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ctos-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html'\r\n})\r\nexport class ConfirmationDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data\r\n  ) {\r\n    if (!data.okLabel) {\r\n      data.okLabel = 'Ok';\r\n    }\r\n    if (!data.cancelLabel) {\r\n      data.cancelLabel = 'Cancel';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels confirmation dialog component\r\n   * @param btnLabel\r\n   */\r\n  cancel(btnLabel) {\r\n    this.dialogRef.close({ action: btnLabel });\r\n  }\r\n\r\n  /**\r\n   * confirmation dialog component\r\n   * @param btnLabel\r\n   */\r\n  ok(btnLabel) {\r\n    this.dialogRef.close({ action: btnLabel });\r\n  }\r\n\r\n  /**\r\n   * Shows cancel\r\n   * @returns true if cancel\r\n   */\r\n  showCancel(): boolean {\r\n    const data: any = this.data;\r\n    if (data && data.hasOwnProperty('showCancel')) {\r\n      return data.showCancel;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // isDataHtml() {\r\n  //   const data: any = this.data;\r\n  //   if (data && data.hasOwnProperty('isDataHtml')) {\r\n  //     return data.isDataHtml;\r\n  //   }\r\n  //   return false;\r\n  // }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  ViewChild,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { MatMenu, MenuPositionX, MenuPositionY } from '@angular/material';\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ctos-context-menu',\r\n  templateUrl: './context-menu.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ContextMenuComponent implements OnInit {\r\n  /**\r\n   * Creates an instance of context menu component.\r\n   */\r\n  constructor() { }\r\n  private _options;\r\n  @ViewChild('menu', { static: true }) matMenu: MatMenu;\r\n  @Output() fireEvent: EventEmitter<string> = new EventEmitter();\r\n  @Input() contextMenuClass?: string;\r\n  @Input() xPosition?: MenuPositionX;\r\n  @Input() yPosition?: MenuPositionY;\r\n  @Input() heading?: string;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @Input()\r\n  set options(optionList: any[]) {\r\n    this._options = optionList;\r\n  }\r\n\r\n  /**\r\n   * Gets options\r\n   */\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  /**\r\n   * Menus click\r\n   * @param name\r\n   */\r\n  menuClick(name) {\r\n    this.fireEvent.emit(name);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'ctos-display-banner',\r\n  templateUrl: './display-banner.component.html'\r\n})\r\nexport class DisplayBannerComponent implements OnInit {\r\n  /**\r\n   * Creates an instance of display banner component.\r\n   * @param data\r\n   * @param snackBarRef\r\n   */\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any,\r\n    private snackBarRef: MatSnackBarRef<DisplayBannerComponent>) {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  /**\r\n   * Closes display banner component\r\n   */\r\n  close() {\r\n    this.snackBarRef.dismiss();\r\n  }\r\n}\r\n","import { AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\r\n\r\nimport { PCEService } from '../../services/pce.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ctos-export',\r\n  templateUrl: './export.component.html'\r\n})\r\nexport class ExportComponent implements OnChanges, AfterViewInit {\r\n\r\n  @Input() startExport;\r\n  @Input() exportToExcelObj: any;\r\n  public headerCells: any = {\r\n    background: '#ffffff',\r\n    color: '#ffffff'\r\n  };\r\n  public cellAlignment: any = {\r\n    textAlign: 'left'\r\n  };\r\n\r\n  exportToExcelObj1: any;\r\n  @ViewChild('excelexportdata', { static: true }) excelexportdata;\r\n  @ViewChild('excelexportheader', { static: true }) excelexportheader;\r\n  @ViewChild('excelexportfooter', { static: true }) excelexportfooter;\r\n\r\n  count = 0;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.count = this.count + 1;\r\n    if (this.startExport && this.count > 1) {\r\n      if (changes.exportToExcelObj.currentValue.data) {\r\n        this.excelexportdata.data = changes.exportToExcelObj.currentValue.data;\r\n      }\r\n      this.pceService.exportData([this.excelexportheader, this.excelexportdata, this.excelexportfooter]);\r\n    }\r\n  }\r\n\r\n  constructor(private pceService: PCEService) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.startExport) {\r\n      this.pceService.exportData([this.excelexportheader, this.excelexportdata, this.excelexportfooter]);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ctos-info',\r\n  templateUrl: './info.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class InfoComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Message  of info component\r\n   */\r\n  message: string;\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.message = this.route.snapshot.data['info-message'];\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.message = null;\r\n  }\r\n\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { MatDialog, MatSnackBar, MatMenu } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription, Observable, of } from 'rxjs';\r\n\r\nimport { PasswordResource } from '../../models/password-resource';\r\nimport { HelpService } from '../../services/help.service';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\nimport { DisplayBannerComponent } from '../display-banner/display-banner.component';\r\nimport { AboutResource } from './../../models/about-resource';\r\nimport { AppWindow } from './../../models/appWindow';\r\nimport { ListItem } from './../../models/list-item';\r\nimport { UserProfile } from './../../models/user-profile';\r\nimport { ConfigurationService } from './../../services/configuration.service';\r\nimport { ErrorTermsStoreService } from './../../services/error-terms-store.service';\r\nimport { LocaleAppResourcesService } from './../../services/locale-app-resources.service';\r\nimport { LogoutService } from './../../services/logout.service';\r\nimport { AppUtil } from './../../utils/AppUtil';\r\nimport { COMMON, DIALOG_CONFIG } from './../../utils/service-constant';\r\nimport { PasswordComponent } from './../password/password.component';\r\nimport { DialogService } from '../../services/dialog.service';\r\nimport { ServerStatusService } from '../../services/server-status.service';\r\nimport { HeaderClickAction } from './header-click.action';\r\nimport { Action } from '../../models/action';\r\n\r\n@Component({\r\n  selector: 'ctos-main-header',\r\n  templateUrl: './main-header.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MainHeaderComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n  @Input() items: ListItem[];\r\n  @Input() userProfile: UserProfile;\r\n  @Input() logoUrl: string;\r\n  @Input() appInfoUrl: string;\r\n  @Input() alertConfirmUrl: string;\r\n  @Input() aboutResource: AboutResource;\r\n  @Input() passwordResource: PasswordResource;\r\n  @Output() headerTabClicked: EventEmitter<string>;\r\n  contextMenuClass = 'main-header-context-menu';\r\n\r\n  toShowOverlay: Boolean = false;\r\n  passwordComponent: PasswordComponent;\r\n  hideCustomerLogo = false;\r\n\r\n  userInitials: string;\r\n  show: boolean;\r\n  firstName: string;\r\n  lastName: string;\r\n  UserNameToolTip: string;\r\n  profileItems: ListItem[];\r\n  LogoutMessage1: string;\r\n  LogoutMessage2: string;\r\n  OkLabel: string;\r\n  CancelLabel: string;\r\n  toConfirmLogout: boolean;\r\n  toAbout: boolean;\r\n  toConfirmPassowrd: boolean;\r\n  successPasswordmessage: boolean;\r\n  passwordResetSuccessful: string;\r\n\r\n  subscriptions: Subscription[];\r\n  @ViewChild('menu', { static: true }) matMenu: MatMenu;\r\n  @ViewChild('profile', { static: true }) public profileAnchor: ElementRef;\r\n  @ViewChild('profilePopup', { read: ElementRef, static: true })\r\n  public profilePopup: ElementRef;\r\n\r\n  /**\r\n   * Creates an instance of main header component.\r\n   * @param configurationService\r\n   * @param router\r\n   * @param errorTermsStoreService\r\n   * @param localeAppResourcesService\r\n   * @param dialog\r\n   * @param snackBar\r\n   * @param helpService\r\n   * @param logoutService\r\n   * @param dialogService\r\n   * @param serverStatusService\r\n   */\r\n  constructor(\r\n    private logoutService: LogoutService,\r\n    private configurationService: ConfigurationService,\r\n    private router: Router,\r\n    private errorTermsStoreService: ErrorTermsStoreService,\r\n    private localeAppResourcesService: LocaleAppResourcesService,\r\n    private dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private helpService: HelpService,\r\n    private dialogService: DialogService,\r\n    private serverStatusService: ServerStatusService\r\n  ) {\r\n    this.headerTabClicked = new EventEmitter();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscriptions = [];\r\n    this.setUserProfile();\r\n    this.show = false;\r\n    this.toConfirmLogout = false;\r\n    this.toAbout = false;\r\n    this.successPasswordmessage = false;\r\n    this.LogoutMessage1 = this.errorTermsStoreService.getErrorMessage(\r\n      'LogoutMessage1'\r\n    );\r\n    this.LogoutMessage2 = this.errorTermsStoreService.getErrorMessage(\r\n      'LogoutMessage2'\r\n    );\r\n    this.passwordResetSuccessful = this.errorTermsStoreService.getErrorMessage(\r\n      'PasswordResetSuccessful'\r\n    );\r\n    this.OkLabel = this.localeAppResourcesService.getResource('OkLabel');\r\n    this.CancelLabel = this.localeAppResourcesService.getResource(\r\n      'CancelLabel'\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const widget = (<any>window).AppcuesWidget((<any>window).Appcues.user());\r\n    widget.init('#my-widget', {\r\n      position: 'left'\r\n      // Optionally add a header and/or footer.\r\n      // header: '<h2>Study Optimizer</h2>',\r\n      // footer: '<p>Sample Footer</p>'\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.userProfile) {\r\n      this.setUserProfile();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets user profile\r\n   */\r\n  private setUserProfile() {\r\n    if (this.userProfile !== undefined) {\r\n      this.userInitials = AppUtil.getNameInitials(\r\n        this.userProfile.$name,\r\n        this.userProfile.$nameSeparator\r\n      );\r\n      /** Add below code to implement requirement of SO-19533 **/\r\n      const UserArr = this.userProfile.$name.split(' ');\r\n      this.UserNameToolTip = UserArr.join('\\n');\r\n      if (UserArr.length > 1) {\r\n        this.firstName = UserArr[0];\r\n        delete UserArr[0];\r\n        this.lastName = UserArr.join(' ');\r\n      } else {\r\n        this.firstName = UserArr.join(' ');\r\n      }\r\n      this.profileItems = this.userProfile.$items;\r\n    } else {\r\n      this.userInitials = '';\r\n      this.UserNameToolTip = '';\r\n      this.profileItems = [];\r\n    }\r\n  }\r\n\r\n  // toggleProfile(value?: boolean) {\r\n  //   if (value !== undefined) {\r\n  //     this.show = value;\r\n  //   } else {\r\n  //     this.show = !this.show;\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * Determines whether tab click on\r\n   * @param moduleName\r\n   */\r\n  onTabClick(moduleName: string) {\r\n    this.canDeactivate().subscribe(res => {\r\n      if (res === true) {\r\n        this.headerTabClicked.emit(moduleName);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Determines whether deactivate can\r\n   * @param [isReset]\r\n   * @returns deactivate\r\n   */\r\n  canDeactivate(isReset?: boolean): Observable<boolean> {\r\n    if (isReset === true) {\r\n      return of(true);\r\n    }\r\n    if (this.dialogService.isStatusChanged === true) {\r\n      return this.dialogService.confirm();\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  /**\r\n   * Gets resource\r\n   * @param key\r\n   * @returns resource\r\n   */\r\n  private getResource(key: string): string {\r\n    return this.localeAppResourcesService.getResource(key);\r\n  }\r\n\r\n  /**\r\n   * Gets action app resource\r\n   * @returns action app resource\r\n   */\r\n  private getActionAppResource(): HeaderClickAction {\r\n    return {\r\n      about: this.getResource('HeaderAboutStudyOptimizer'),\r\n      logout: this.getResource('HeaderLogout'),\r\n      help: this.getResource('HeaderProfileHelp'),\r\n      password: this.getResource('HeaderChangePassword')\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Determines whether click action on\r\n   * @param item\r\n   */\r\n  onClickAction(item: string) {\r\n    if (item) {\r\n      // this.toggleProfile();\r\n      if (this.getActionAppResource().logout === item) {\r\n        this.openConfirmLogoutDialog();\r\n      } else if (this.getActionAppResource().about === item) {\r\n        this.openAboutDialog();\r\n      } else if (this.getActionAppResource().password === item) {\r\n        this.openPasswordDialog();\r\n      } else if (this.getActionAppResource().help === item) {\r\n        this.helpService.openHelp();\r\n      } else {\r\n        this.router.navigate([item.toLowerCase()]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens confirm logout dialog\r\n   */\r\n  openConfirmLogoutDialog() {\r\n    const logoutDialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      width: DIALOG_CONFIG.LOGOUT.WIDTH,\r\n      data: this.getLogoutDialogProp(),\r\n      panelClass: DIALOG_CONFIG.LOGOUT.PANEL_CLASS,\r\n      id: DIALOG_CONFIG.LOGOUT.ID\r\n    });\r\n    this.subscriptions.push(\r\n      logoutDialogRef.afterClosed().subscribe(eventObject => {\r\n        if (eventObject && eventObject.action === this.getLogoutDialogProp().okLabel) {\r\n          this.logout();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets logout dialog prop\r\n   * @returns\r\n   */\r\n  getLogoutDialogProp() {\r\n    const logoutMsg =\r\n      this.errorTermsStoreService.getErrorMessage('LogoutMessage1') +\r\n      '<br>' +\r\n      this.errorTermsStoreService.getErrorMessage('LogoutMessage2') +\r\n      '<br>';\r\n    return {\r\n      heading: '',\r\n      message: logoutMsg,\r\n      prefixMaterialIcon: {\r\n        name: 'help',\r\n        color: '#0e6ca9',\r\n        size: '65px'\r\n      },\r\n      okLabel: this.localeAppResourcesService.getResource('OkLabel'),\r\n      cancelLabel: this.localeAppResourcesService.getResource('CancelLabel')\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Logouts main header component\r\n   */\r\n  logout() {\r\n    const actionParam: Action = {};\r\n    // TODO\r\n    const subscription = this.logoutService.logout().subscribe(data => {\r\n      if (data.result === COMMON.RESULT_OK) {\r\n        if (this.serverStatusService.serverStatus) {\r\n          if (this.serverStatusService.serverStatus.loginRequired) {\r\n            const loginUrl = this.configurationService.$loginUrl;\r\n            if (loginUrl) {\r\n              AppWindow.getWindow().location.href = loginUrl;\r\n            }\r\n          } else {\r\n            AppWindow.getWindow().location.href = this.serverStatusService.serverStatus.ssoRedirectURL;\r\n          }\r\n        }\r\n      } else if (data.result === COMMON.RESULT_ERROR) {\r\n        console.log(data.error.message);\r\n        throw new Error(data.error.message);\r\n      }\r\n    });\r\n    this.subscriptions.push(subscription);\r\n  }\r\n\r\n  /**\r\n   * Opens about dialog\r\n   */\r\n  openAboutDialog() {\r\n    const logoutDialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      width: DIALOG_CONFIG.ABOUT.WIDTH,\r\n      data: this.getAboutDialogProp(),\r\n      panelClass: DIALOG_CONFIG.ABOUT.PANEL_CLASS,\r\n      id: DIALOG_CONFIG.ABOUT.ID\r\n    });\r\n  }\r\n\r\n  getAboutDialogProp() {\r\n    return {\r\n      heading: this.aboutResource.aboutBoxTitle,\r\n      message:\r\n        this.aboutResource.aboutBoxVersion +\r\n        '<br><br>' +\r\n        this.aboutResource.aboutBoxDisclaimer,\r\n      postfixImageUrl: this.aboutResource.logoUrl,\r\n      okLabel: this.localeAppResourcesService.getResource('OkLabel'),\r\n      showCancel: false\r\n    };\r\n  }\r\n\r\n  openPasswordDialog() {\r\n    const passwordDialogRef = this.dialog.open(PasswordComponent, {\r\n      width: DIALOG_CONFIG.PASSWORD.WIDTH,\r\n      data: this.getPasswordDialogProp(),\r\n      panelClass: DIALOG_CONFIG.PASSWORD.PANEL_CLASS,\r\n      id: DIALOG_CONFIG.PASSWORD.ID\r\n    });\r\n    this.subscriptions.push(\r\n      passwordDialogRef.afterClosed().subscribe(eventObject => {\r\n        if (eventObject) {\r\n          console.log(eventObject.data);\r\n          this.showBanner(\r\n            'positive',\r\n            'positive-snackbar',\r\n            'assets/images/manageplans/icon-positive.png',\r\n            'PasswordResetSuccessful'\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets password dialog prop\r\n   * @returns\r\n   */\r\n  getPasswordDialogProp() {\r\n    return {\r\n      heading: this.passwordResource.changePassword,\r\n      currentPassword: this.passwordResource.currentPassword,\r\n      nonEmptyField: this.passwordResource.nonEmptyField,\r\n      newPassword: this.passwordResource.newPassword,\r\n      confirmPassword: this.passwordResource.confirmPassword,\r\n      passwordMisMatchMessage: this.passwordResource.passwordMisMatchMessage,\r\n      lengthRule: this.passwordResource.lengthRule,\r\n      mixCharRule: this.passwordResource.mixCharRule,\r\n      okLabel: this.localeAppResourcesService.getResource('OkLabel'),\r\n      cancelLabel: this.localeAppResourcesService.getResource('CancelLabel')\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Shows banner\r\n   * @param messageType\r\n   * @param panelClass\r\n   * @param iconPath\r\n   * @param messageCode\r\n   */\r\n  showBanner(messageType, panelClass, iconPath, messageCode) {\r\n    this.snackBar.openFromComponent(DisplayBannerComponent, {\r\n      data: {\r\n        message: this.errorTermsStoreService.getErrorMessage(messageCode),\r\n        icon: iconPath,\r\n        messageType: messageType\r\n      },\r\n      panelClass: [panelClass]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Onclicks window\r\n   */\r\n  onclickWindow() {\r\n    console.log('clicked');\r\n  }\r\n\r\n  /**\r\n   * Hides image\r\n   * @param event\r\n   */\r\n  hideImage(event) {\r\n    this.hideCustomerLogo = true;\r\n  }\r\n\r\n  // @HostListener('keydown', ['$event'])\r\n  // public keydown(event: any): void {\r\n  //   if (event.keyCode === 27) {\r\n  //     this.toggleProfile(false);\r\n  //   }\r\n  // }\r\n\r\n  // @HostListener('document:click', ['$event'])\r\n  // public documentClick(event: any): void {\r\n  //   if (!this.contains(event.target)) {\r\n  //     this.toggleProfile(false);\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * Contains main header component\r\n   * @param target\r\n   * @returns true if contains\r\n   */\r\n  private contains(target: any): boolean {\r\n    return (\r\n      this.profileAnchor.nativeElement.contains(target) ||\r\n      (this.profilePopup\r\n        ? this.profilePopup.nativeElement.contains(target)\r\n        : false)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.items = null;\r\n    this.userProfile = null;\r\n    this.passwordComponent = null;\r\n    this.profileItems = null;\r\n    this.subscriptions.forEach(subscription => {\r\n      subscription.unsubscribe();\r\n    });\r\n    this.subscriptions = null;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9jb21tb24tbGlicmFyeS9zcmMvbGliL2NvbXBvbmVudHMvbmVzdGVkLWRyb3Bkb3duL25lc3RlZC1kcm9wZG93bi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatMenu } from '@angular/material';\r\nimport { NestedItem } from '../../models/nested-item';\r\n\r\n@Component({\r\n  selector: 'ctos-nested-dropdown',\r\n  templateUrl: './nested-dropdown.component.html',\r\n  styleUrls: ['./nested-dropdown.component.scss']\r\n})\r\nexport class NestedDropdownComponent implements OnInit {\r\n  @Output() optionClick: EventEmitter<NestedItem>;\r\n  @ViewChild('menu', { static: true }) menu: MatMenu;\r\n  @Input() items: Array<NestedItem>;\r\n\r\n  constructor() {\r\n    this.optionClick = new EventEmitter();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  optionClicked(item: NestedItem) {\r\n    this.optionClick.emit(item);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Note } from '../../models/Notes';\r\nimport { NotesData } from '../../models/notes-data';\r\nimport { AppUtil } from '../../utils/AppUtil';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { INDICATOR, DATE_FORMAT } from '../../utils/service-constant';\r\n\r\n@Component({\r\n  selector: 'ctos-notes',\r\n  templateUrl: './notes.component.html'\r\n})\r\nexport class NotesComponent implements OnInit {\r\n\r\n  isEditMode = false;\r\n  selectionIndex: number = null;\r\n  isNoteContentEnabled = false;\r\n  isNoteEditAccess = false;\r\n  selectedNote: Note;\r\n  areNotesEditable: boolean;\r\n  noteTemplate: Note = {\r\n    'indicator': '',\r\n    'lastModifiedDate': '',\r\n    'userId': '',\r\n    'userName': '',\r\n    'content': ''\r\n  };\r\n  constructor(public dialogRef: MatDialogRef<NotesComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public countryNotesProp: NotesData\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.noteTemplate = this.getEmptyNote();\r\n    // this.isNoteContentEnabled = this.countryNotesProp.hasEditAccess && this.countryNotesProp.isEditablePlan;\r\n    // this.isNoteEditAccess = this.countryNotesProp.hasEditAccess && this.countryNotesProp.isEditablePlan;\r\n    // this.isNoteContentEnabled = false;\r\n    this.areNotesEditable = this.countryNotesProp.areNotesEditable;\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ok() {\r\n    this.countryNotesProp.noteList.forEach(note => {\r\n      if (!note.indicator) {\r\n        note.indicator = INDICATOR.INSERT;\r\n      }\r\n    });\r\n    this.dialogRef.close({ action: this.countryNotesProp.resources.SAVE, noteList: this.countryNotesProp.noteList });\r\n  }\r\n\r\n  addComment() {\r\n    this.noteTemplate.userId = this.countryNotesProp.userId;\r\n    this.noteTemplate.userName = this.countryNotesProp.userName;\r\n\r\n    this.noteTemplate.lastModifiedDate = AppUtil.formatDate(new Date(), DATE_FORMAT.NOTE_API_DATE_FORMAT_SMALL);\r\n    if (!this.isEditMode) {\r\n      this.countryNotesProp.noteList.push(this.noteTemplate);\r\n    } else {\r\n      this.noteTemplate.oldUserId = this.selectedNote.userId;\r\n      this.noteTemplate.isModified = true;\r\n      this.countryNotesProp.noteList[this.selectionIndex] = this.noteTemplate;\r\n      this.isEditMode = false;\r\n      this.selectionIndex = null;\r\n    }\r\n    this.isNoteContentEnabled = true;\r\n    this.noteTemplate = this.getEmptyNote();\r\n  }\r\n\r\n  getEmptyNote(): Note {\r\n    return {\r\n      'indicator': '',\r\n      'lastModifiedDate': AppUtil.formatDate(new Date(), DATE_FORMAT.NOTE_API_DATE_FORMAT_SMALL), // 'Dec-24-2018 10:01:52'\r\n      'userId': this.countryNotesProp.userId,\r\n      'userName': this.countryNotesProp.userName,\r\n      'content': ''\r\n    };\r\n  }\r\n\r\n  onContentChange(event: any) {\r\n    if (this.noteTemplate) {\r\n      if (this.noteTemplate.indicator) {\r\n        this.noteTemplate.indicator = INDICATOR.UPDATE;\r\n      }\r\n    }\r\n  }\r\n\r\n  isEnabled(): Boolean {\r\n    if (this.countryNotesProp.areNotesEditable) {\r\n      if (this.noteTemplate.content && this.noteTemplate.content.trim().length !== 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onNoteSelected(selectedNote: Note, index: number) {\r\n    this.selectionIndex = index;\r\n    this.isEditMode = true;\r\n    this.selectedNote = { ...selectedNote };\r\n    this.noteTemplate = JSON.parse(JSON.stringify(selectedNote));\r\n  }\r\n\r\n  resetNote() {\r\n    this.isEditMode = false;\r\n    this.selectionIndex = null;\r\n    this.noteTemplate = this.getEmptyNote();\r\n  }\r\n\r\n  removeNote(index: number) {\r\n    if (this.countryNotesProp && this.countryNotesProp.noteList) {\r\n      if (index > -1 && index < this.countryNotesProp.noteList.length) {\r\n        if (!this.countryNotesProp.noteList[index].indicator) {\r\n          this.countryNotesProp.noteList.splice(index, 1);\r\n        } else {\r\n          this.selectedNote = { ...this.countryNotesProp.noteList[index] };\r\n          this.countryNotesProp.noteList[index].indicator = INDICATOR.DELETE;\r\n          this.countryNotesProp.noteList[index].oldUserId = this.selectedNote.userId;\r\n          this.countryNotesProp.noteList[index].isModified = true;\r\n          this.isNoteContentEnabled = true;\r\n        }\r\n        if (index === this.selectionIndex) {\r\n          this.resetNote();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isDeletedNote(note: Note) {\r\n    return note.indicator === INDICATOR.DELETE;\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\nimport { ResetPassword } from '../../models/reset-password';\r\nimport { ErrorTermsStoreService } from '../../services/error-terms-store.service';\r\nimport { ResetPasswordService } from '../../services/reset-password.service';\r\n\r\n@Component({\r\n  selector: 'ctos-password',\r\n  templateUrl: './password.component.html'\r\n})\r\nexport class PasswordComponent implements OnInit {\r\n  // count = 1;\r\n  // passwordRules: String;\r\n  currentPassword: string;\r\n  newPassword: string;\r\n  confirmPassword: string;\r\n  // passWordPolicyList: Array<string> = ['LENGHTHRULE', 'MIXCHARRULE'];\r\n\r\n  // nonEmptyField: string;\r\n  // passwordMisMatchMessage: string;\r\n  validationMessage = '';\r\n  // pointsSplit: string[];\r\n  // mixruleSplitPoints: string[];\r\n  mixruleSplit: string[];\r\n  mixruleSplitHeader: string;\r\n  // rules: string[];\r\n  showSuccessMessage = false;\r\n  showError = false;\r\n\r\n  /**\r\n   * Creates an instance of password component.\r\n   * @param dialogRef\r\n   * @param data\r\n   * @param resetPasswordService\r\n   * @param errorTermsStoreService\r\n   */\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PasswordComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private resetPasswordService: ResetPasswordService,\r\n    private errorTermsStoreService: ErrorTermsStoreService\r\n  ) {\r\n    if (!data.okLabel) {\r\n      data.okLabel = 'Ok';\r\n    }\r\n    if (!data.cancelLabel) {\r\n      data.cancelLabel = 'Cancel';\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPasswordRulesList();\r\n  }\r\n\r\n  /**\r\n   * Cancels password component\r\n   * @param btnLabel\r\n   */\r\n  cancel(btnLabel) {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  /**\r\n   * password component\r\n   * @param btnLabel\r\n   * @param form\r\n   */\r\n  ok(btnLabel, form) {\r\n    if (form.valid) {\r\n      const passowordInfo: ResetPassword = {\r\n        currentPassword: form.value.currentPassword,\r\n        newPassword: form.value.newPassword\r\n      };\r\n      this.changePassword(passowordInfo);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Changes password\r\n   * @param payload\r\n   */\r\n  changePassword(payload: ResetPassword) {\r\n    this.resetPasswordService\r\n      .changeCurrUserPassword(payload)\r\n      .subscribe(data => {\r\n        if (data.result !== 'OK') {\r\n          this.validationMessage = this.errorTermsStoreService.getErrorMessage(\r\n            data.error.errorCode\r\n          );\r\n          // this.showBanner(\r\n          //   'positive',\r\n          //   'positive-snackbar',\r\n          //   'assets/images/manageplans/icon-positive.png',\r\n          //   'PasswordResetSuccessful'\r\n          // );\r\n        } else {\r\n          this.dialogRef.close({ data: data });\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Hides success message\r\n   */\r\n  hideSuccessMessage() {\r\n    this.showSuccessMessage = false;\r\n    this.validationMessage = '';\r\n  }\r\n\r\n  /**\r\n   * Gets password rules list\r\n   */\r\n  getPasswordRulesList() {\r\n    this.data.lengthRule = this.data.lengthRule;\r\n    const mixruleSplit = this.data.mixCharRule.split('\\n');\r\n    this.mixruleSplitHeader = mixruleSplit[0];\r\n    this.mixruleSplit = mixruleSplit.splice(1, (mixruleSplit.length - 1));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { AppWindow } from '../../models/appWindow';\r\nimport { AppUtil } from '../../utils/AppUtil';\r\nimport { BASE_HREF } from '../../utils/service-constant';\r\n\r\n@Component({\r\n  selector: 'ctos-redirect',\r\n  templateUrl: './redirect.component.html'\r\n})\r\nexport class RedirectComponent implements OnInit {\r\n\r\n  /**\r\n   * Creates an instance of redirect component.\r\n   * @param route\r\n   */\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    const queryParams: {} = this.route.snapshot.queryParams;\r\n    let url = AppUtil.generateUrl(BASE_HREF, (this.route.snapshot.data as any).externalUrlFragment);\r\n    let addque = true;\r\n    for (const i in queryParams) {\r\n      if (queryParams[i] !== undefined) {\r\n        if (addque) {\r\n          url += '?';\r\n          addque = false;\r\n        } else {\r\n          url += '&';\r\n        }\r\n        url += i + '=' + queryParams[i];\r\n      }\r\n    }\r\n    AppWindow.getWindow().location.href = url;\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { Observable, of, Subject, Subscription } from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  map,\r\n  mergeMap,\r\n  startWith\r\n} from 'rxjs/operators';\r\n\r\nimport { SearchListInput } from './../../models/search-list-input';\r\nimport { DEBOUNCE_TIME } from './../../utils/service-constant';\r\nimport { DialogService } from '../../services/dialog.service';\r\nimport { MatAutocompleteTrigger } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'ctos-search-list',\r\n  templateUrl: './search-list.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SearchListComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input()\r\n  isSearchListOn: Boolean;\r\n  @Input()\r\n  searchListInput: SearchListInput;\r\n  @Input()\r\n  required: Boolean;\r\n  searchListFormGroup: FormGroup;\r\n  @Input()\r\n  set searchListFormGroupName(value: FormGroup) {\r\n    this.searchListFormGroup = value;\r\n  }\r\n  get searchListFormGroupName(): FormGroup {\r\n    return this.searchListFormGroup;\r\n  }\r\n  @Input() labels: {\r\n    required?: string;\r\n  } = {};\r\n  @Output()\r\n  itemSelect: EventEmitter<any>;\r\n  @Output()\r\n  selectionChange: EventEmitter<any>;\r\n  @ViewChild('searchbox', { static: false }) searchbox: ElementRef;\r\n  recentlistItemsSubject: Subject<any[]>;\r\n  allListItemsSubject: Subject<any[]>;\r\n  isFirstFilterCall: boolean;\r\n  subscriptions: Map<string, Subscription>;\r\n  toggleArrowFlag = false;\r\n\r\n  /**\r\n   * Creates an instance of search list component.\r\n   * @param searchListFB\r\n   * @param dialogService\r\n   */\r\n  constructor(\r\n    private searchListFB: FormBuilder,\r\n    private dialogService: DialogService\r\n  ) {\r\n    this.itemSelect = new EventEmitter();\r\n    this.selectionChange = new EventEmitter();\r\n  }\r\n\r\n  private searchGroups: Array<any>;\r\n\r\n  /**\r\n   * Getter $searchGroups\r\n   * @return Array<any>\r\n   */\r\n  public get $searchGroups(): Array<any> {\r\n    return this.searchGroups;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscriptions = new Map<string, Subscription>();\r\n    this.initializeSubjects();\r\n    this.setFilter();\r\n    this.setSearchGroups();\r\n  }\r\n\r\n  /**\r\n   * on changes\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (\r\n      changes &&\r\n      changes.searchListFormGroupName &&\r\n      this.searchListFormGroupName.get('searchListControl') &&\r\n      this.searchListFormGroupName.get('searchListControl').value\r\n    ) {\r\n      this.removeSubscription();\r\n      this.subscriptions = new Map<string, Subscription>();\r\n      this.setFilter(\r\n        this.searchListFormGroupName.get('searchListControl').value\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets selected item\r\n   * @param selectedItemkey\r\n   * @param list\r\n   * @returns selected item\r\n   */\r\n  private getSelectedItem(selectedItemkey, list): any {\r\n    let selectedItem;\r\n    if (\r\n      selectedItemkey !== undefined &&\r\n      selectedItemkey !== null &&\r\n      list !== undefined &&\r\n      list !== null\r\n    ) {\r\n      selectedItem =\r\n        list.find(item => {\r\n          if (typeof selectedItemkey === 'string') {\r\n            return (\r\n              item.id.toLowerCase() === <string>selectedItemkey.toLowerCase()\r\n            );\r\n          } else {\r\n            return item.key === selectedItemkey;\r\n          }\r\n        }) || '';\r\n    } else {\r\n      selectedItem = '';\r\n    }\r\n    if (\r\n      this.dialogService.selectedStudyKey === undefined ||\r\n      this.dialogService.selectedStudyKey === null ||\r\n      this.dialogService.selectedStudyKey === ''\r\n    ) {\r\n      this.dialogService.selectedStudyKey = selectedItem;\r\n    }\r\n    return selectedItem;\r\n  }\r\n\r\n  private initializeSubjects() {\r\n    this.recentlistItemsSubject = new Subject<any[]>();\r\n    this.allListItemsSubject = new Subject<any[]>();\r\n  }\r\n\r\n  /**\r\n   * Setter setSearchGroups\r\n   */\r\n  public setSearchGroups() {\r\n    if (\r\n      this.recentlistItemsSubject === undefined ||\r\n      this.allListItemsSubject === undefined\r\n    ) {\r\n      this.initializeSubjects();\r\n    }\r\n    // tslint:disable-next-line:prefer-const\r\n    let searchGroups = [];\r\n    // recentListItemsLabel condition is checked for not showing most recently list In copy plan\r\n    if (this.searchListInput.recentListItemsLabel) {\r\n      searchGroups.push({\r\n        name: this.searchListInput.recentListItemsLabel,\r\n        list: this.recentlistItemsSubject.asObservable()\r\n      });\r\n    }\r\n    searchGroups.push({\r\n      name: this.searchListInput.allListItemsLabel,\r\n      list: this.allListItemsSubject.asObservable()\r\n    });\r\n    this.searchGroups = searchGroups;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sets filter\r\n   * @param [initialValue]\r\n   */\r\n  private setFilter(initialValue?: string) {\r\n    this.isFirstFilterCall = true;\r\n    if (!this.subscriptions.has('valueChangeSubscription')) {\r\n      const listControl = this.isSearchListOn ? 'filterListControl' : 'searchListControl';\r\n      if (this.searchListFormGroupName\r\n        .get(listControl)) {\r\n        const valueChangeSubscription = this.searchListFormGroupName\r\n          .get(listControl)\r\n          .valueChanges.pipe(\r\n            startWith<string | any>(initialValue || ''),\r\n            debounceTime(DEBOUNCE_TIME),\r\n            map(value => {\r\n              return typeof value === 'string' ? value : value.id;\r\n            }),\r\n            distinctUntilChanged((oldValue, newValue) => {\r\n              return oldValue === newValue;\r\n            }),\r\n            mergeMap(item => {\r\n              return this.filterItems(\r\n                item,\r\n                initialValue || this.searchListInput.selectedItemKey\r\n              );\r\n            })\r\n          )\r\n          .subscribe(data => { });\r\n        this.subscriptions.set(\r\n          'valueChangeSubscription',\r\n          valueChangeSubscription\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filters items\r\n   * @param value\r\n   * @param [selectedItemKey]\r\n   * @returns items\r\n   */\r\n  private filterItems(\r\n    value: string,\r\n    selectedItemKey?: number | string\r\n  ): Observable<any[]> {\r\n    const self = this;\r\n    if (self.searchListInput.searchApi !== undefined) {\r\n      const searchApiSubscription = self.searchListInput\r\n        .searchApi(value)\r\n        .subscribe(resp => {\r\n          if (resp.allListItems && resp.allListItems.length > 0) {\r\n            self.recentlistItemsSubject.next(resp.recentListItems);\r\n            self.allListItemsSubject.next(resp.allListItems);\r\n          } else if (resp.allListItems && resp.allListItems.length <= 0) {\r\n            self.recentlistItemsSubject.next([this.searchListInput.recentListItemsLabel]);\r\n            self.allListItemsSubject.next([this.searchListInput.allListItemsLabel]);\r\n          }\r\n          const selectedItem: any = self.getSelectedItem(selectedItemKey, resp.recentListItems);\r\n          if (this.isFirstFilterCall) {\r\n            self.searchListFormGroupName\r\n              .get('searchListControl')\r\n              .setValue(selectedItem);\r\n            this.isFirstFilterCall = false;\r\n          }\r\n          this.selectionChange.emit(selectedItem);\r\n        });\r\n      this.subscriptions.set('searchApiSubscription', searchApiSubscription);\r\n    }\r\n    return of(self.searchGroups);\r\n  }\r\n\r\n  /**\r\n   * Formats item\r\n   * @param [item]\r\n   * @returns item\r\n   */\r\n  formatItem(item?: any): string | undefined {\r\n    let ret: string;\r\n    if (!item) {\r\n      return;\r\n    } else if (typeof item === 'string') {\r\n      ret = item;\r\n    } else {\r\n      ret = item.id;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Clicks search list component\r\n   */\r\n  click() {\r\n    this.searchListFormGroup.get('filterListControl').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Determines whether blur on\r\n   */\r\n  onBlur() {\r\n    let newValue = '';\r\n    if (this.searchListFormGroup.get('searchListControl') &&\r\n      this.searchListFormGroup.get('searchListControl').value) {\r\n      if (this.searchListFormGroup.get('searchListControl').value.hasOwnProperty('searchListControl')) {\r\n        newValue = this.searchListFormGroup.get('searchListControl').value.searchListControl;\r\n      } else {\r\n        newValue = this.searchListFormGroup.get('searchListControl').value;\r\n      }\r\n    }\r\n    this.searchListFormGroup.get('searchListControl').setValue(newValue);\r\n  }\r\n\r\n  /**\r\n   * Opens search list component\r\n   */\r\n  open() {\r\n    this.toggleArrowFlag = true;\r\n    if (this.searchListFormGroup.get('filterListControl') &&\r\n      this.searchListFormGroup.get('filterListControl').value) {\r\n      this.searchListFormGroup.get('filterListControl').setValue('');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes search list component\r\n   */\r\n  close() {\r\n    if (this.searchListFormGroup.get('filterListControl') &&\r\n      this.searchListFormGroup.get('filterListControl').value) {\r\n      this.searchListFormGroup.get('filterListControl').setValue('');\r\n    }\r\n    this.toggleArrowFlag = false;\r\n  }\r\n\r\n  /**\r\n   * Items selected\r\n   * @param event\r\n   */\r\n  itemSelected(event) {\r\n    const isReset =\r\n      this.dialogService.isProceed !== undefined\r\n        ? this.dialogService.isProceed\r\n        : false;\r\n    this.canDeactivate(isReset).subscribe(res => {\r\n      if (res === true) {\r\n        this.dialogService.isStatusChanged = false;\r\n        this.selectionChange.emit(event.option.value);\r\n        this.itemSelect.emit(event);\r\n        this.searchbox.nativeElement.expanded = false;\r\n        this.searchbox.nativeElement.blur();\r\n      } else {\r\n        const values = this.dialogService.selectedStudyKey;\r\n        this.searchListFormGroupName.get('searchListControl').setValue(values);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Determines whether deactivate can\r\n   * @param [isReset]\r\n   * @returns deactivate\r\n   */\r\n  canDeactivate(isReset?: boolean): Observable<boolean> {\r\n    if (isReset === true) {\r\n      return of(true);\r\n    }\r\n    if (this.dialogService.isStatusChanged === true) {\r\n      return this.dialogService.confirm();\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.searchListInput = null;\r\n    this.itemSelect = null;\r\n    this.selectionChange = null;\r\n    this.searchListFormGroupName = null;\r\n    this.recentlistItemsSubject = null;\r\n    this.allListItemsSubject = null;\r\n    this.searchGroups = null;\r\n    this.removeSubscription();\r\n  }\r\n\r\n  /**\r\n   * Removes subscription\r\n   */\r\n  removeSubscription() {\r\n    this.subscriptions.forEach(subscription => {\r\n      subscription.unsubscribe();\r\n    });\r\n    this.subscriptions = null;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\n\r\nimport { ListItem } from './../../models/list-item';\r\nimport { SearchListInput } from './../../models/search-list-input';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { DialogService } from '../../services/dialog.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ctos-sub-header',\r\n  templateUrl: './sub-header.component.html'\r\n})\r\nexport class SubHeaderComponent implements OnInit, OnDestroy {\r\n  isSearchListOn = true;\r\n  @Input()\r\n  subHeaders: ListItem[];\r\n  @Input()\r\n  studyRefreshDate: string;\r\n  @Input()\r\n  studyRefreshDateLabel: string;\r\n  @Input() studyListInput: SearchListInput;\r\n  @Output()\r\n  itemSelect: EventEmitter<any>;\r\n  @Output() headerTabClicked: EventEmitter<string>;\r\n  searchListFormGroup: FormGroup;\r\n  disableLink = false;\r\n  @Input() disablePlansTab: boolean;\r\n  @Input()\r\n  set searchListFormGroupName(value: FormGroup) {\r\n    this.searchListFormGroup = value;\r\n  }\r\n  get searchListFormGroupName(): FormGroup {\r\n    return this.searchListFormGroup;\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of sub header component.\r\n   * @param dialogService\r\n   */\r\n  constructor(private dialogService: DialogService,\r\n    private router: Router) {\r\n    this.itemSelect = new EventEmitter();\r\n    this.headerTabClicked = new EventEmitter();\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  /**\r\n   * Determines whether tab click on\r\n   * @param moduleName\r\n   * @param $event\r\n   */\r\n  onTabClick(moduleName: string, $event) {\r\n    const that = this;\r\n    that.canDeactivate().subscribe(res => {\r\n      if (that.disableLink === true && moduleName === 'MODULE_PLANNING') {\r\n        $event.stopPropagation();\r\n        $event.preventDefault();\r\n      } else if (res === true) {\r\n        this.headerTabClicked.emit(moduleName);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Items selected\r\n   * @param event\r\n   */\r\n  itemSelected(event) {\r\n    this.itemSelect.emit(event);\r\n  }\r\n\r\n  /**\r\n   * Determines whether study change on\r\n   * @param studyTag\r\n   */\r\n  onStudyChange(studyTag) {\r\n    if (this.disablePlansTab === true && studyTag && studyTag.newPlanInd === true) {\r\n      this.disableLink = true;\r\n    } else {\r\n      this.disableLink = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determines whether deactivate can\r\n   * @param [isReset]\r\n   * @returns deactivate\r\n   */\r\n  canDeactivate(isReset?: boolean): Observable<boolean> {\r\n    if (isReset === true) {\r\n      return of(true);\r\n    }\r\n    if (this.dialogService.isStatusChanged === true) {\r\n      return this.dialogService.confirm();\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  isTabActive(item: ListItem): boolean {\r\n    let tabActive = false;\r\n    const url = this.router.url.split('/');\r\n    if (url.length > 1) {\r\n      const currentUrl = url[1];\r\n      tabActive = item.$name.toLowerCase() === currentUrl.toLowerCase();\r\n    }\r\n    return tabActive;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subHeaders = null;\r\n    this.studyListInput = null;\r\n    this.itemSelect = null;\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { TabItem } from '../../models/tab-item';\r\n\r\n@Component({\r\n  selector: 'ctos-tab',\r\n  templateUrl: './tab.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TabComponent implements OnInit, OnDestroy, OnChanges {\r\n  showTooltip: boolean;\r\n  @Input() isCohortPlan: string;\r\n  @Input() items: Array<TabItem>;\r\n  @Output() tabClicked: EventEmitter<TabItem>;\r\n  @Input() selectedTabItem: TabItem;\r\n\r\n  selectedTab: TabItem;\r\n\r\n  /**\r\n   * Creates an instance of tab component.\r\n   * @param activatedRoute\r\n   */\r\n  constructor(private activatedRoute: ActivatedRoute) {\r\n    this.tabClicked = new EventEmitter<TabItem>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const currentRoutePath = this.activatedRoute.snapshot.firstChild.url[0]\r\n      .path;\r\n    if (this.items) {\r\n      this.selectedTab = this.items.find(i => {\r\n        return i.routePath === currentRoutePath;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects tab\r\n   * @param item\r\n   * @returns\r\n   */\r\n  selectTab(item: TabItem) {\r\n    if (!item.enable) {\r\n      return;\r\n    }\r\n    this.selectedTab = item;\r\n    this.tabClicked.emit(item);\r\n  }\r\n  /**\r\n   * Gets mouse event\r\n   * @param tabName\r\n   * @param enability\r\n   */\r\n  getMouseEvent(tabName, enability) {\r\n    this.showTooltip = false;\r\n    if (tabName === 'Countries' && !enability && this.isCohortPlan === 'Y') {\r\n      this.showTooltip = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * on destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    this.selectedTab = null;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.items && changes.items.currentValue) {\r\n      this.items = changes.items.currentValue;\r\n    }\r\n    if (changes.selectedTabItem && changes.selectedTabItem.currentValue) {\r\n      this.selectedTab = changes.selectedTabItem.currentValue;\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[ctosConfirmEqualValidator]',\r\n  providers: [{\r\n    provide: NG_VALIDATORS,\r\n    useExisting: ConfirmEqualValidatorDirective,\r\n    multi: true\r\n  }]\r\n})\r\nexport class ConfirmEqualValidatorDirective implements Validator {\r\n\r\n  @Input() ctosConfirmEqualValidator: string;\r\n  constructor() { }\r\n\r\n  /**\r\n   * Validates confirm equal validator directive\r\n   * @param control\r\n   * @returns validate\r\n   */\r\n  validate(control: AbstractControl): { [key: string]: any } | null {\r\n    const controlToCompare = control.parent.get(this.ctosConfirmEqualValidator);\r\n    if (controlToCompare && controlToCompare.value !== control.value) {\r\n      return { 'notEqual': true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Directive, HostBinding, Input, Optional } from '@angular/core';\r\nimport { ControlContainer } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: 'label[ctosControlName]',\r\n})\r\nexport class LabelControlDirective {\r\n    @Input() ctosControlName: string;\r\n\r\n    constructor(@Optional() private parent: ControlContainer) { }\r\n\r\n    /**\r\n     * Gets host binding\r\n     */\r\n    @HostBinding('textContent')\r\n    get controlValue() {\r\n        return this.parent ? this.parent.control.get(this.ctosControlName).value : '';\r\n    }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\nconst signedDecimalRegex = '^-?\\\\d*\\\\.{0,1}\\\\d+$';\r\nconst unsignedDecimalRegex = '^\\\\d*\\\\.{0,1}\\\\d+$';\r\n\r\n@Directive({\r\n    selector: 'input[ctosSignedDecimal]'\r\n})\r\nexport class SignedDecimalDirective {\r\n    inputElement: HTMLElement;\r\n    @Input() isSigned = false;\r\n    constructor(public el: ElementRef) {\r\n        this.inputElement = el.nativeElement;\r\n    }\r\n\r\n    /**\r\n     * Hosts listener\r\n     * @param e\r\n     * @returns\r\n     */\r\n    /**\r\n     * Params signed decimal directive\r\n     * @param e\r\n     * @returns\r\n     */\r\n    @HostListener('keydown', ['$event'])\r\n\r\n    onKeyDown(e: KeyboardEvent) {\r\n        if (\r\n            [46, 8, 9, 27, 13, 190, 110].indexOf(e.keyCode) !== -1 || // Allow: Delete, Backspace, Tab, Escape, Enter, Decimal Point\r\n            (e.keyCode === 65 && e.ctrlKey === true) || // Allow: Ctrl+A\r\n            (e.keyCode === 67 && e.ctrlKey === true) || // Allow: Ctrl+C\r\n            (e.keyCode === 86 && e.ctrlKey === true) || // Allow: Ctrl+V\r\n            (e.keyCode === 88 && e.ctrlKey === true) || // Allow: Ctrl+X\r\n            (e.keyCode === 65 && e.metaKey === true) || // Allow: Cmd+A (Mac)\r\n            (e.keyCode === 67 && e.metaKey === true) || // Allow: Cmd+C (Mac)\r\n            (e.keyCode === 86 && e.metaKey === true) || // Allow: Cmd+V (Mac)\r\n            (e.keyCode === 88 && e.metaKey === true) || // Allow: Cmd+X (Mac)\r\n            (e.keyCode >= 35 && e.keyCode <= 39) // Allow: Home, End, Left, Right\r\n        ) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        if (this.isSigned && [189, 109].indexOf(e.keyCode) !== -1) {\r\n            return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if (\r\n            (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\r\n            (e.keyCode < 96 || e.keyCode > 105)\r\n        ) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    @HostListener('paste', ['$event'])\r\n    onPaste(event: ClipboardEvent) {\r\n        event.preventDefault();\r\n        let decimalRegex = unsignedDecimalRegex;\r\n        if (this.isSigned) {\r\n            decimalRegex = signedDecimalRegex;\r\n        }\r\n        const pastedInput: string = event.clipboardData\r\n            .getData('text/plain');\r\n        const valid = (new RegExp(decimalRegex)).test(pastedInput);\r\n        let value = '';\r\n        if (valid) {\r\n            value = pastedInput;\r\n        }\r\n        document.execCommand('insertText', false, value);\r\n    }\r\n\r\n    @HostListener('drop', ['$event'])\r\n    onDrop(event: DragEvent) {\r\n        event.preventDefault();\r\n        let decimalRegex = unsignedDecimalRegex;\r\n        if (this.isSigned) {\r\n            decimalRegex = signedDecimalRegex;\r\n        }\r\n        const textData = event.dataTransfer.getData('text');\r\n        const valid = (new RegExp(decimalRegex)).test(textData);\r\n        let value = '';\r\n        if (valid) {\r\n            value = textData;\r\n        }\r\n        this.inputElement.focus();\r\n        document.execCommand('insertText', false, value);\r\n    }\r\n\r\n    @HostListener('change', ['$event'])\r\n    onChange(e: Event) {\r\n        let decimalRegex = unsignedDecimalRegex;\r\n        if (this.isSigned) {\r\n            decimalRegex = signedDecimalRegex;\r\n        }\r\n        const inputValue = (<any>e.target).value;\r\n        const valid = (new RegExp(decimalRegex)).test(inputValue);\r\n        if (!valid) {\r\n            (<any>this.inputElement).value = '';\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\nconst signedIntegerRegex = '^[+-]?[0-9]+$';\r\nconst unsignedIntegerRegex = '^[0-9]+$';\r\n\r\n@Directive({\r\n    selector: 'input[ctosSignedInteger]'\r\n})\r\nexport class SignedIntegerDirective {\r\n    inputElement: HTMLElement;\r\n    @Input() isSigned = false;\r\n    constructor(public el: ElementRef) {\r\n        this.inputElement = el.nativeElement;\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(e: KeyboardEvent) {\r\n        if (\r\n            [46, 8, 9, 27, 13].indexOf(e.keyCode) !== -1 || // Allow: Delete, Backspace, Tab, Escape, Enter\r\n            (e.keyCode === 65 && e.ctrlKey === true) || // Allow: Ctrl+A\r\n            (e.keyCode === 67 && e.ctrlKey === true) || // Allow: Ctrl+C\r\n            (e.keyCode === 86 && e.ctrlKey === true) || // Allow: Ctrl+V\r\n            (e.keyCode === 88 && e.ctrlKey === true) || // Allow: Ctrl+X\r\n            (e.keyCode === 65 && e.metaKey === true) || // Allow: Cmd+A (Mac)\r\n            (e.keyCode === 67 && e.metaKey === true) || // Allow: Cmd+C (Mac)\r\n            (e.keyCode === 86 && e.metaKey === true) || // Allow: Cmd+V (Mac)\r\n            (e.keyCode === 88 && e.metaKey === true) || // Allow: Cmd+X (Mac)\r\n            (e.keyCode >= 35 && e.keyCode <= 39) // Allow: Home, End, Left, Right\r\n        ) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        if (this.isSigned && [189, 109].indexOf(e.keyCode) !== -1) {\r\n            return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if (\r\n            (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\r\n            (e.keyCode < 96 || e.keyCode > 105)\r\n        ) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    @HostListener('paste', ['$event'])\r\n    onPaste(event: ClipboardEvent) {\r\n        event.preventDefault();\r\n        let integerRegex = unsignedIntegerRegex;\r\n        if (this.isSigned) {\r\n            integerRegex = signedIntegerRegex;\r\n        }\r\n        const pastedInput: string = event.clipboardData\r\n            .getData('text/plain');\r\n        const valid = (new RegExp(integerRegex)).test(pastedInput);\r\n        let value = '';\r\n        if (valid) {\r\n            value = pastedInput;\r\n        }\r\n        document.execCommand('insertText', false, value);\r\n    }\r\n\r\n    @HostListener('drop', ['$event'])\r\n    onDrop(event: DragEvent) {\r\n        event.preventDefault();\r\n        let integerRegex = unsignedIntegerRegex;\r\n        if (this.isSigned) {\r\n            integerRegex = signedIntegerRegex;\r\n        }\r\n        const textData = event.dataTransfer.getData('text');\r\n        const valid = (new RegExp(integerRegex)).test(textData);\r\n        let value = '';\r\n        if (valid) {\r\n            value = textData;\r\n        }\r\n        this.inputElement.focus();\r\n        document.execCommand('insertText', false, value);\r\n    }\r\n\r\n    @HostListener('change', ['$event'])\r\n    onChange(e: Event) {\r\n        let integerRegex = unsignedIntegerRegex;\r\n        if (this.isSigned) {\r\n            integerRegex = signedIntegerRegex;\r\n        }\r\n        const inputValue = (<any>e.target).value;\r\n        const valid = (new RegExp(integerRegex)).test(inputValue);\r\n        if (!valid) {\r\n            (<any>this.inputElement).value = '';\r\n        }\r\n    }\r\n}\r\n","\r\n/**\r\n * Application error\r\n */\r\nexport class ApplicationError extends Error {\r\n\r\n    errorCode: number;\r\n    message: string;\r\n\r\n    /**\r\n     * Creates an instance of application error.\r\n     * @param message\r\n     * @param errorCode\r\n     */\r\n    constructor(message: string, errorCode: number) {\r\n        super(message);\r\n        this.message = message;\r\n        this.errorCode = errorCode;\r\n        this.name = ApplicationError.name;\r\n        Object.setPrototypeOf(this, ApplicationError.prototype);\r\n    }\r\n}\r\n","export enum APIEndPoints {\r\n    LOGIN = 'login',\r\n    LOGOUT = 'logout',\r\n    USER_DATA = 'user/data',\r\n    STUDY_TAGS = 'study/tags',\r\n    STUDY_TAGS_LIST = 'study/tagsList',\r\n    BASE_TERMS = 'prelogin/terms',\r\n    APP_DATA = 'prelogin/appdata',\r\n    SERVER_STATUS = 'prelogin/serverstatus',\r\n    USER_PREFERENCE = 'user/preference',\r\n    STUDY_DETAILS = 'study/details',\r\n    STUDY_SETTINGS = 'study/settings',\r\n    COHORT_DETAILS = 'cohorts/details',\r\n    STUDY_SUMMARY = 'study/summary',\r\n    FILTER_COUNTRY_DATA = 'filter/countrydata',\r\n    UPDATE_COUNTRY_NOTES = 'study/country/notes',\r\n    GETALLCURVES = 'study/all-curves',\r\n    GETALLMILESTONES = 'getAllMileStones'\r\n}\r\n","import { ModuleInfo } from './module-info';\r\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n/**\r\n * API Payload\r\n */\r\nexport class APIPayload {\r\n\r\n    constructor(\r\n        public command: string,\r\n        public queryParams: {} = null,\r\n        public headers: {} = null,\r\n        public moduleInfo: ModuleInfo = null,\r\n        public jsonRequest?: {},\r\n    ) {\r\n        this.command = command;\r\n        this.queryParams = this.getQueryParams(queryParams);\r\n        this.headers = this.getHeaders(headers);\r\n        this.moduleInfo = moduleInfo;\r\n        this.jsonRequest = this.getJSONReq(jsonRequest);\r\n    }\r\n\r\n    private getHeaders(headers: {}) {\r\n        const httpHeaders = {};\r\n        for (const key in headers) {\r\n            if (headers.hasOwnProperty(key)) {\r\n                const element = headers[key];\r\n                httpHeaders[key] = element;\r\n            }\r\n        }\r\n\r\n        httpHeaders['Content-Type'] = 'application/json; charset=utf-8';\r\n\r\n        // local time header\r\n        httpHeaders['localTime'] = new Date().toString();\r\n\r\n        // tenant id\r\n        httpHeaders['tenantID'] = 'tenant1';\r\n\r\n        // command header\r\n        if (this.command) {\r\n            httpHeaders['command'] = this.command;\r\n        }\r\n\r\n        if (this.moduleInfo) {\r\n            // module header\r\n            if (this.moduleInfo.moduleName) {\r\n                httpHeaders['module'] = this.moduleInfo.moduleName;\r\n            }\r\n            // page name\r\n            if (this.moduleInfo.pageName) {\r\n                httpHeaders['page'] = this.moduleInfo.pageName;\r\n            }\r\n\r\n            // study key\r\n            if (this.moduleInfo.studykey) {\r\n                httpHeaders['studykey'] = this.moduleInfo.studykey.toString();\r\n            }\r\n\r\n            if (this.moduleInfo.plankey) {\r\n                httpHeaders['plankey'] = this.moduleInfo.plankey.toString();\r\n            }\r\n        }\r\n\r\n        return new HttpHeaders(httpHeaders);\r\n    }\r\n\r\n    private getQueryParams(params: {}) {\r\n        const queryParams = {};\r\n        for (const key in params) {\r\n            if (params.hasOwnProperty(key)) {\r\n                const element = params[key];\r\n                queryParams[key] = element;\r\n            }\r\n        }\r\n        return new HttpParams({\r\n            fromObject: queryParams\r\n        });\r\n    }\r\n\r\n    private getJSONReq(jsonRequest: {}) {\r\n        try {\r\n            return jsonRequest ? JSON.stringify(jsonRequest) : null;\r\n        } catch (error) {\r\n            console.error('JSON stringify error', error);\r\n            throw new Error('APIPayload: Error passing request object to JSON string');\r\n        }\r\n    }\r\n}\r\n","import { ServerInfo } from './server-info';\r\nimport { Action } from './action';\r\n\r\nexport abstract class AppBootstrap {\r\n    init() {\r\n    }\r\n    call(environment: any, serverInfo?: ServerInfo, actionParam?: Action) {\r\n    }\r\n}\r\n","export class AppWindow {\r\n    static getWindow() {\r\n        return window;\r\n    }\r\n}\r\n","import { EncryptionService } from './../../services/cache/encryption.service';\r\nimport { InMemoryService } from './../../services/cache/in-memory.service';\r\nimport { ConfigurationService } from './../../services/configuration.service';\r\nimport { StoreType } from './../../utils/cache/store-type.enum';\r\nimport { Factory } from './factory';\r\nimport { SessionStore } from './session-store';\r\n\r\n\r\n/**\r\n * Cache factory\r\n */\r\nexport class CacheFactory implements Factory {\r\n    createStore(storeType: StoreType, encryptionService?: EncryptionService, config?: ConfigurationService,\r\n        inMemory?: InMemoryService) {\r\n        switch (storeType) {\r\n            case StoreType.InMemory:\r\n                return inMemory;\r\n            case StoreType.Session:\r\n                return new SessionStore(encryptionService, config);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n","import * as CryptoJS from 'crypto-js';\r\n\r\nimport { Encryption } from './encryption';\r\n\r\n/**\r\n * Crypto jsencryption\r\n */\r\nexport class CryptoJSEncryption implements Encryption {\r\n    encrypt(obj: Object, key: string): string {\r\n        const text = JSON.stringify(obj);\r\n        // const key = CryptoJS.enc.Base64.parse('TEST1234');\r\n        const encrypted = CryptoJS.AES.encrypt(text, key);\r\n        return encrypted.toString();\r\n    }\r\n    decrypt(text: Object, key: string): Object {\r\n        // const key = CryptoJS.enc.Base64.parse('TEST1234');\r\n        const decrypted = CryptoJS.AES.decrypt(text.toString(), key);\r\n        const obj = JSON.parse(decrypted.toString(CryptoJS.enc.Utf8));\r\n        return obj;\r\n    }\r\n}\r\n","import { Observable, of, throwError } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { EncryptionService } from './../../services/cache/encryption.service';\r\nimport { ConfigurationService } from './../../services/configuration.service';\r\nimport { EncryptionAction } from './../../utils/cache/encryption-action.enum';\r\nimport { Store } from './store';\r\n\r\nexport class SessionStore implements Store {\r\n  maxAge: number;\r\n  isEncrypt: boolean;\r\n  constructor(private encryptionService: EncryptionService,\r\n    private config: ConfigurationService) {\r\n    this.maxAge = config.cacheMaxAge;\r\n  }\r\n  // constructor() {\r\n  //  }\r\n\r\n  /**\r\n   * Gets session store\r\n   *\r\n   * This method will check if cache key is available in cache\r\n   * then it will check the encryption flag if it is false then\r\n   * return the value in observable form. If it is true then decrypt the value\r\n   * and return in observable form\r\n   * If key not present in cache then execute the this.post method\r\n   * after the successful exection of  this.post observable method (which return the observable)\r\n   * set the key and value in cache\r\n   * @param key\r\n   * @param [callback]\r\n   * @returns\r\n   */\r\n  get(key: string,\r\n    callback?: Observable<any>) {\r\n    if (this.hasValidCachedValue(key)) {\r\n      if (this.isEncrypt) {\r\n        return of(this.encryptionService.decrypt(sessionStorage.getItem(key)));\r\n      } else {\r\n        return of(JSON.parse(sessionStorage.getItem(key)));\r\n      }\r\n      //  return of(JSON.parse(sessionStorage.getItem(key)));\r\n    }\r\n    if (callback && callback instanceof Observable) {\r\n      console.log(`%c Calling api for ${key}`, 'color: purple');\r\n      return callback.pipe(tap((value) => {\r\n        this.set(key, value);\r\n      }));\r\n    } else {\r\n      return throwError('Requested key is not available in Cache');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets session store\r\n   * Check the encryption flag if it true then store the value in encrypted format\r\n   * other wise store the value in JSON.stringify format.\r\n   * @param key\r\n   * @param value\r\n   */\r\n  set(key: string, value: string) {\r\n    // const encryptedValue = this.encryptionService.encrypt(value);\r\n    // sessionStorage.setItem(key, JSON.stringify(value));\r\n    // sessionStorage.setItem(key, encryptedValue);\r\n    if (this.isEncrypt) {\r\n      const encryptedValue = this.encryptionService.encrypt(value);\r\n      sessionStorage.setItem(key, encryptedValue);\r\n    } else {\r\n      sessionStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calls session store\r\n   * @param [fallback]\r\n   * @param [maxAge]\r\n   * @returns call\r\n   */\r\n  call(fallback?: Observable<any>, maxAge?: number): Observable<any> {\r\n    if (fallback && fallback instanceof Observable) {\r\n      return fallback.pipe(tap(value => value));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes session store\r\n   * @param key\r\n   */\r\n  remove(key: string) {\r\n    if (this.hasValidCachedValue(key)) {\r\n      sessionStorage.removeItem(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determines whether valid cached value has\r\n   * @param key\r\n   * @returns true if valid cached value\r\n   */\r\n  private hasValidCachedValue(key: string): boolean {\r\n    let returnVal = false;\r\n    if (sessionStorage.getItem(key) === null) {\r\n      returnVal = false;\r\n    } else {\r\n      returnVal = true;\r\n\r\n    }\r\n    return returnVal;\r\n  }\r\n\r\n  /**\r\n   * Keys exist\r\n   * @param key\r\n   * @returns\r\n   */\r\n  keyExist(key: string) {\r\n    return of(this.hasValidCachedValue(key));\r\n  }\r\n\r\n  /**\r\n   * Sets cache age\r\n   * @param [age]\r\n   */\r\n  setCacheAge(age: number = 0) {\r\n    this.maxAge = age;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets encryption\r\n   * set the encryption flag\r\n   * @param [encrypt]\r\n   */\r\n  setEncryption(encrypt?: EncryptionAction) {\r\n    this.isEncrypt = (encrypt === EncryptionAction.encrypt) ? true : false;\r\n  }\r\n}\r\n","import { Observable, of } from 'rxjs';\r\nimport { AppWindow } from './appWindow';\r\n\r\nexport abstract class CtosWindow {\r\n    getParameterByName(name: any) {\r\n        const url = AppWindow.getWindow().location.href;\r\n        name = name.replace(/[[]]/g, '\\$&');\r\n        const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\r\n        const results = regex.exec(url);\r\n        if (!results) { return null; }\r\n        if (!results[2]) { return ''; }\r\n        return decodeURIComponent(results[2].replace('/+/g', ' '));\r\n    }\r\n    redirectAsPerParams() {\r\n    }\r\n    userHasPrivilegesForModule(moduleId: any): Observable<any> {\r\n        return of('');\r\n    }\r\n    navigateToModule(moduleName: string) {\r\n    }\r\n}\r\n","export enum HttpVerbs {\r\n    get = 'get',\r\n    post = 'post',\r\n    put = 'put',\r\n    delete = 'delete',\r\n    patch = 'patch'\r\n}\r\n","export class ListItem {\r\n    private name: string;\r\n    private url: string;\r\n    private moduleName: string;\r\n    private isEnabled: string;\r\n    private isVisible: string;\r\n\r\n    constructor($name: string, $url: string, $moduleName?: string,\r\n        $isEnabled?: string, $isVisible?: string) {\r\n        this.name = $name;\r\n        this.url = $url;\r\n        this.moduleName = $moduleName;\r\n        this.isEnabled = $isEnabled;\r\n        this.isVisible = $isVisible;\r\n    }\r\n\r\n    /**\r\n     * Getter $name\r\n     * @return string\r\n     */\r\n    public get $name(): string {\r\n        return this.name;\r\n    }\r\n\r\n    /**\r\n     * Setter $name\r\n     * @param string value\r\n     */\r\n    public set $name(value: string) {\r\n        this.name = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter $url\r\n     * @return string\r\n     */\r\n    public get $url(): string {\r\n        return this.url;\r\n    }\r\n\r\n    /**\r\n     * Setter $url\r\n     * @param string value\r\n     */\r\n    public set $url(value: string) {\r\n        this.url = value;\r\n    }\r\n\r\n    /**\r\n    * Getter $moduleName\r\n    * @return string\r\n    */\r\n    public get $moduleName(): string {\r\n        return this.moduleName;\r\n    }\r\n\r\n    /**\r\n     * Setter $moduleName\r\n     * @param string value\r\n     */\r\n    public set $moduleName(value: string) {\r\n        this.moduleName = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter $isEnabled\r\n     * @return string\r\n     */\r\n    public get $isEnabled(): string {\r\n        return this.isEnabled;\r\n    }\r\n\r\n    /**\r\n     * Setter $isEnabled\r\n     * @param string value\r\n     */\r\n    public set $isEnabled(value: string) {\r\n        this.isEnabled = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter $isVisible\r\n     * @return string\r\n     */\r\n    public get $isVisible(): string {\r\n        return this.isVisible;\r\n    }\r\n\r\n    /**\r\n     * Setter $isVisible\r\n     * @param string value\r\n     */\r\n    public set $isVisible(value: string) {\r\n        this.isVisible = value;\r\n    }\r\n\r\n\r\n}\r\n","\r\n/**\r\n * Payload\r\n */\r\nexport class Payload {\r\n    public command: string;\r\n    public params: {};\r\n    public xmlRequest: string;\r\n\r\n/**\r\n * Creates an instance of payload.\r\n * @param command\r\n * @param params\r\n * @param xmlRequest\r\n */\r\nconstructor(command: string, params: {}, xmlRequest: string) {\r\n        this.command = command;\r\n        this.params = params;\r\n        this.xmlRequest = xmlRequest;\r\n    }\r\n}\r\n","export class UserIdleConfig {\r\n  /**\r\n   * Idle value in seconds.\r\n   */\r\n  idle: number;\r\n  /**\r\n   * Timeout value in seconds.\r\n   */\r\n  timeout: number;\r\n  /**\r\n   * Ping value in seconds.\r\n   */\r\n  ping: number;\r\n}\r\n","import { ListItem } from './list-item';\r\n\r\nexport class UserProfile {\r\n    private name: string;\r\n    private items: ListItem[];\r\n    private nameSeparator: string;\r\n\r\n    constructor($name: string, $items: ListItem[], $nameSeparator: string) {\r\n        this.name = $name;\r\n        this.items = $items;\r\n        this.nameSeparator = $nameSeparator;\r\n    }\r\n\r\n    /**\r\n     * Getter $name\r\n     * @return string\r\n     */\r\n    public get $name(): string {\r\n        return this.name;\r\n    }\r\n\r\n    /**\r\n     * Setter $name\r\n     * @param string value\r\n     */\r\n    public set $name(value: string) {\r\n        this.name = value;\r\n    }\r\n\r\n    /**\r\n     * Getter $items\r\n     * @return ListItem[]\r\n     */\r\n    public get $items(): ListItem[] {\r\n        return this.items;\r\n    }\r\n\r\n    /**\r\n     * Setter $items\r\n     * @param ListItem[] value\r\n     */\r\n    public set $items(value: ListItem[]) {\r\n        this.items = value;\r\n    }\r\n\r\n    /**\r\n     * Getter $nameSeparator\r\n     * @return string\r\n     */\r\n    public get $nameSeparator(): string {\r\n        return this.nameSeparator;\r\n    }\r\n\r\n    /**\r\n     * Setter $nameSeparator\r\n     * @param string value\r\n     */\r\n    public set $nameSeparator(value: string) {\r\n        this.nameSeparator = value;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Action } from './../models/action';\r\nimport { EndPoints } from '../models/end-points';\r\nimport { BaseConnection } from './../models/base-connection';\r\nimport { CacheType } from './../utils/cache/cache-type.enum';\r\nimport { EncryptionAction } from './../utils/cache/encryption-action.enum';\r\nimport { StoreType } from './../utils/cache/store-type.enum';\r\nimport { DISPATCH_URL } from './../utils/service-constant';\r\nimport { DependencyManagerService } from './dependency-manager.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BaseConnectionService implements BaseConnection {\r\n\r\n    /**\r\n     * Creates an instance of base connection service.\r\n     * @param dependencyManagerService\r\n     */\r\n    constructor(private dependencyManagerService: DependencyManagerService) { }\r\n\r\n    /**\r\n     * Sends request\r\n     *\r\n     * It call the dependencyManagerService get method which return the api result.\r\n     * It contains the payloadObj (xmlRequest which pass in api call)\r\n     * and action interface parameter.\r\n     * It call the setDefault method and setting the default values.\r\n     *\r\n     * @param payloadObj\r\n     * @param [baseParam]\r\n     * @returns data\r\n     */\r\n    sendRequest(payloadObj: any, baseParam?: Action): Observable<any> {\r\n        if (!payloadObj) {\r\n            throw new Error('PayloadObj can not be undefined or empty');\r\n        }\r\n        let xmlRequest;\r\n        if (typeof payloadObj === 'string') {\r\n            xmlRequest = payloadObj;\r\n        } else {\r\n            xmlRequest = payloadObj.xmlRequest;\r\n        }\r\n        console.warn('BaseConnection ->sendRequest [DEPRECATED]:' +\r\n            ' Directly passing XMLRequest as string is no longer supported!  XMLRequest :: ', xmlRequest);\r\n        const cmdName = xmlRequest.match(/<command name=\\\"(\\w+)\\\"/i)[1];\r\n        const actionParam: Action = {};\r\n        if (!baseParam) {\r\n            baseParam = actionParam;\r\n        }\r\n        baseParam = this.setDefault(baseParam);\r\n        if (!baseParam.xmlRequest) {\r\n            baseParam.xmlRequest = xmlRequest;\r\n        }\r\n        if (!baseParam.cmdName) {\r\n            baseParam.cmdName = cmdName;\r\n        }\r\n        return this.dependencyManagerService.get(baseParam\r\n        ).pipe(map((data) => {\r\n            return data;\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Sends request\r\n     *\r\n     * It call the dependencyManagerService get method which return the api result.\r\n     * It contains the payloadObj (jsonRequest which pass in api call)\r\n     * and action interface parameter.\r\n     * It call the setDefault method and setting the default values.\r\n     *\r\n     * @param payloadObj\r\n     * @param [actionParam]\r\n     * @returns res\r\n     */\r\n    send(payloadObj: any, actionParam?: Action): Observable<any> {\r\n        if (!payloadObj) {\r\n            throw new Error('PayloadObj can not be undefined or empty');\r\n        }\r\n\r\n        console.warn('BaseConnection ->sendRequest:', payloadObj.jsonRequest);\r\n        const cmdName = payloadObj.command;\r\n\r\n        actionParam = !actionParam ? {} as Action : actionParam;\r\n\r\n        actionParam = this.setDefault(actionParam);\r\n\r\n        if (!actionParam.cmdName) {\r\n            actionParam.cmdName = cmdName;\r\n        }\r\n        return this.dependencyManagerService.setDependencies(payloadObj, actionParam)\r\n            .pipe(map((res) => {\r\n                return res;\r\n            }));\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets default\r\n     * sendRequest function is caller of setDefault method.\r\n     *\r\n     * Default value\r\n     * reportError=true\r\n     * storeType=InMemory\r\n     * cacheType=nonSticky\r\n     * encryption=false\r\n     * isSelf= false\r\n     *\r\n     * @param [baseParam]\r\n     * @returns\r\n     */\r\n    setDefault(baseParam?: Action) {\r\n        if (!baseParam.url) {\r\n            baseParam.url = DISPATCH_URL;\r\n        }\r\n        if (baseParam.reportError === undefined || baseParam.reportError === null) {\r\n            baseParam.reportError = true;\r\n        }\r\n        if (!baseParam.cacheType) {\r\n            baseParam.cacheType = CacheType.nonsticky;\r\n        }\r\n        if (!baseParam.storeType) {\r\n            baseParam.storeType = StoreType.InMemory;\r\n        }\r\n        if (!baseParam.encryption) {\r\n            baseParam.encryption = EncryptionAction.noencrypt;\r\n        }\r\n        if (baseParam.isSelf === undefined || baseParam.isSelf === null) {\r\n            baseParam.isSelf = false;\r\n        }\r\n        // to call studyoptimizer app by default(after login)\r\n        if (!baseParam.isSSOEndPoint) {\r\n            baseParam.isSSOEndPoint = false;\r\n        }\r\n\r\n        /* if (!baseParam.endPoint) {\r\n            baseParam.endPoint = true;\r\n        } */\r\n\r\n        if (!baseParam.prelogin) {\r\n            baseParam.prelogin = false;\r\n        }\r\n\r\n        return baseParam;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Payload } from './../models/payload';\r\nimport { StringUtil } from './../utils/string-util';\r\n\r\nimport { APIPayload } from '../models/api-payload';\r\nimport { ModuleInfo } from '../models/module-info';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BasePayloadCommandService {\r\n\r\n  /**\r\n   * Creates an instance of base payload command service.\r\n   */\r\n  constructor() { }\r\n\r\n  /**\r\n   * Gets xmltag\r\n   * @param tags\r\n   * @returns the xml elements\r\n   */\r\n  private getXMLTag(tags: any) {\r\n    // If the content is not an Object or an Array return the value\r\n    if (typeof tags !== 'object') {\r\n      if (typeof tags === 'string') {\r\n        tags = StringUtil.escapeHTML(tags);\r\n      }\r\n      return tags;\r\n    }\r\n    let req = '';\r\n    // For each Value that you have in the object or an Array process it for a new tag\r\n    for (const key in tags) {\r\n      if (!tags.hasOwnProperty(key)) {\r\n        continue;\r\n      }\r\n\r\n      // If The Data is not in the form of an Array parse the OBject for parameters and tags\r\n      if (Object.prototype.toString.call(tags) !== '[object Array]') {\r\n        if (key !== 'params' && key !== 'value') {\r\n          req += `<${key}`;\r\n          if (tags[key] && tags[key].params !== undefined) {\r\n            // console.log('Params:', tags[key].params);\r\n            for (const value in tags[key].params) {\r\n              // req += ' ' + value + '=\\'' + tags[key].params[value] + '\\'';\r\n              if (value) {\r\n                req += ` ${value}=\"${tags[key].params[value]}\"`;\r\n              }\r\n            }\r\n          }\r\n          req += `>`;\r\n        }\r\n      }\r\n      if (key !== 'params') {\r\n        req += this.getXMLTag(tags[key]);\r\n      }\r\n\r\n\r\n      if (Object.prototype.toString.call(tags) !== '[object Array]') {\r\n        if (key !== 'params' && key !== 'value') {\r\n          req += `</${key}>`;\r\n        }\r\n      }\r\n\r\n    }\r\n    return req;\r\n  }\r\n\r\n\r\n  /**\r\n   * Builds request\r\n   *\r\n   * It will generate the xmlRequest\r\n   * Create the serviceRequest xml root tag\r\n   * Based on command parameter value, create the command xml tag\r\n   * If params parameter value is not null then iterate it and\r\n   * create the parameter tag under the command xml tag\r\n   * check the commandTags parameter if it is not null then call the getXMLTag method and set\r\n   * the output in request variable.\r\n   * create the UserAction xml tag and add module, page and localtime xml tag.\r\n   * e.g.\r\n   * const params = categories: {\r\n        category: 'login'\r\n    }\r\n   * buildRequest('GetTerms',params.categories);\r\n   * Output\r\n   *  <serviceRequest xmlns=\"http://www.coprindm.com\">\r\n      <command name=\"GetTerms\">\r\n        <parameter name=\"category\">login</parameter>\r\n      </command>\r\n      <userAction>\r\n      <module>STDLST</module>\r\n      <page>MNGHILST</page>\r\n        <localTime>Thu Jun 21 10:21:46 GMT+0530 2018</localTime>\r\n      </userAction>\r\n    </serviceRequest>\r\n   * If the commandTags paramter is not null then call the getXMLTag method\r\n   * e.g. const tempObject = {\r\n      criteriaList: {\r\n        value: [ {\r\n\t\t  criterionVal: {\r\n          params: {\r\n            criterionId: 'THERAPY'\r\n          },\r\n          value: 'All1'\r\n        }},\r\n        {\r\n\t\t  criterionVal: {\r\n          params: {\r\n            criterionId: 'ASSET'\r\n          },\r\n          value: 'All2'\r\n        }}\r\n        ]\r\n      }\r\n    };\r\n   * buildRequest('GetTerms',{},{},tempObject);\r\n   * Output\r\n   *<serviceRequest xmlns=\"http://www.coprindm.com\">\r\n      <command name=\"GetStudyList\">\r\n        <criteriaList>\r\n          <criterionVal criterionId=\"THERAPY\">All1</criterionVal>\r\n             <criterionVal criterionId=\"ASSET\">All2</criterionVal>\r\n        </criteriaList>\r\n      </command>\r\n      <userAction>\r\n        <localTime>Thu Jun 21 12:25:23 GMT+0530 2018</localTime>\r\n      </userAction>\r\n    </serviceRequest>\r\n   * @param command\r\n   * @param [params]\r\n   * @param [tags]\r\n   * @param [commandTags]\r\n   * @param [moduleInfo]\r\n   * @returns xmlRequest\r\n   */\r\n  buildRequest(command: string, params: {} = {}, tags: any = null, commandTags: any = null,\r\n    moduleInfo: { moduleName: string, pageName: string, studykey?: string } = null) {\r\n    // let cacheResponse = (!!params && !!params.cacheResponse),\r\n    // cacheId = command;\r\n    let req = `<serviceRequest xmlns=\"http://www.coprindm.com\">`;\r\n    let key;\r\n    req += `<command name=\"${command}\">`;\r\n    if (params !== null) {\r\n      // if (cacheResponse) {\r\n      // delete cacheResponse prop from params as it's used flagging BaseConnection.sendRequest to cache response or not.\r\n      // delete params.cacheResponse;\r\n      // }\r\n      for (key in params) {\r\n        if (key) {\r\n          let paramsVal = '';\r\n          if (typeof params[key] === 'string') {\r\n            paramsVal = StringUtil.escapeHTML(params[key]);\r\n          } else {\r\n            paramsVal = params[key];\r\n          }\r\n          req += `<parameter name=\"${key}\">${paramsVal}</parameter>`;\r\n          // cacheId += '_' + key + '-' + params[key];\r\n        }\r\n        // @NOTE should we consider truncating cache id as it might get really long for long list of parameters!\r\n      }\r\n    }\r\n    if (null !== commandTags && undefined !== commandTags) {\r\n      req += this.getXMLTag(commandTags);\r\n    }\r\n    req += `</command>`;\r\n    req += `<userAction>`;\r\n    // To add module and page detail parameters\r\n    if (moduleInfo) {\r\n      if (moduleInfo.moduleName) {\r\n        req += `<module>${moduleInfo.moduleName}</module>`;\r\n      }\r\n      if (moduleInfo.pageName) {\r\n        req += `<page>${moduleInfo.pageName}</page>`;\r\n      }\r\n      if (moduleInfo.studykey) {\r\n        req += `<studykey>${moduleInfo.studykey}</studykey>`;\r\n      }\r\n    }\r\n    req += `<localTime>${(new Date()).toString()}</localTime>`;\r\n    req += `</userAction>`;\r\n\r\n    if (null !== tags) {\r\n      for (key in tags) {\r\n        if (key) {\r\n          req += `<${key}>${tags[key]}</${key}>`;\r\n        }\r\n      }\r\n    }\r\n    req += `</serviceRequest>`;\r\n\r\n    return new Payload(command, params, req);\r\n  }\r\n\r\n  public buildAPIRequest(command: string, params: {} = {}, tags: any = null, commandTags: any = null,\r\n    moduleInfo: ModuleInfo = null) {\r\n      return new APIPayload(command, params, moduleInfo);\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\n\r\nimport { EncryptionAction } from '../utils/cache/encryption-action.enum';\r\nimport { Action } from './../models/action';\r\nimport { TermsParam } from './../models/terms-param';\r\nimport { CacheKey } from './../utils/cache-key.enum';\r\nimport { CacheType } from './../utils/cache/cache-type.enum';\r\nimport { StoreType } from './../utils/cache/store-type.enum';\r\nimport { BaseConnectionService } from './base-connection.service';\r\nimport { PayloadCommandService } from './payload-command.service';\r\nimport { APIEndPoints } from '../models/api-end-points.enum';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BaseTermsService {\r\n\r\n    private appResources = null;\r\n    private appPropertyList = {};\r\n\r\n    /**\r\n     * Creates an instance of base terms service.\r\n     * @param baseConnectionService\r\n     * @param payloadCommandService\r\n     */\r\n    constructor(private baseConnectionService: BaseConnectionService,\r\n        private payloadCommandService: PayloadCommandService) {\r\n    }\r\n\r\n    /**\r\n     * Common terms of base terms service\r\n     */\r\n    _commonTerms = null;\r\n\r\n    /**\r\n     * Load Term Service\r\n     *\r\n     * The first api call will load the GetTerms data of terms category.\r\n     * Based on parameter the second api call will load the Getterms data of login or error category.\r\n     * e.g.\r\n     *\r\n       ProductName available in  terms api call\r\n        {\r\n          \"name\": \"ProductName\",\r\n          \"value\": \"IQVIA StudyOptimizer\"\r\n        }\r\n     *  login api call\r\n     *  {\r\n          \"name\": \"LoginWelcome\",\r\n          \"value\": \"<font color='#333333'>Welcome to !ProductName!<\\/font>\"\r\n        }\r\n     * Since productname is available in terms api hence first call the terms api and set the information in\r\n     * _commonTerms variable and then call the login api.\r\n     *\r\n     * @param params\r\n     * @param [actionParam]\r\n     * @returns login or error terminology information\r\n     */\r\n    loadData(params: TermsParam, actionParam?: Action): Observable<any> {\r\n        if (!params) {\r\n            throw new Error(`Params can not be empty or undefined in base term servie`);\r\n        }\r\n        if (!this.typeCheck(params)) {\r\n            throw new Error(`Invalid params object`);\r\n        }\r\n        const that = this;\r\n        let termsPayload = this.payloadCommandService.getCommandDetails(params.commandName, params.category);\r\n        let baseParam: Action = {};\r\n        baseParam = Object.assign({}, actionParam);\r\n        baseParam.cacheKey = CacheKey.TermKey;\r\n        return that.baseConnectionService.sendRequest(termsPayload,\r\n            baseParam)\r\n            .pipe(map((res: any) => res),\r\n                mergeMap((data: any) => {\r\n                    if (data.terminologies.term) {\r\n                        that._commonTerms = [];\r\n                        Object.assign(that._commonTerms, data.terminologies);\r\n                        termsPayload = that.payloadCommandService.getCommandDetails(params.commandName, params.category);\r\n                        const param: Action = {};\r\n                        if (!actionParam) {\r\n                            actionParam = param;\r\n                        }\r\n                        return that.baseConnectionService.sendRequest(termsPayload,\r\n                            actionParam)\r\n                            .pipe(map((response: any) => {\r\n                                if (response.terminologies) {\r\n                                    const rTerms = response.terminologies;\r\n                                    return rTerms;\r\n                                }\r\n                            })\r\n                            );\r\n                    }\r\n                }));\r\n    }\r\n\r\n    load(params: TermsParam, actionParam?: Action) {\r\n\r\n        if (!params) {\r\n            throw new Error(`Params can not be empty or undefined in base term servie`);\r\n        }\r\n        if (!this.typeCheck(params)) {\r\n            throw new Error(`Invalid params object`);\r\n        }\r\n        const that = this;\r\n        const baseParam: Action = {};\r\n        if (!actionParam) {\r\n            actionParam = baseParam;\r\n        }\r\n\r\n        let termsPayload;\r\n        if (actionParam.endPoint) {\r\n            termsPayload = that.payloadCommandService.getApiRequest(params.commandName, params.category);\r\n            return that.baseConnectionService.send(termsPayload,\r\n                actionParam)\r\n                .pipe(map((response: any) => {\r\n                    if (response.terminologies) {\r\n                        const rTerms = response.terminologies;\r\n                        return rTerms;\r\n                    }\r\n                }));\r\n        } else {\r\n            termsPayload = that.payloadCommandService.getCommandDetails(params.commandName, params.category);\r\n            return that.baseConnectionService.sendRequest(termsPayload,\r\n                actionParam)\r\n                .pipe(map((response: any) => {\r\n                    if (response.terminologies) {\r\n                        const rTerms = response.terminologies;\r\n                        return rTerms;\r\n                    }\r\n                }));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resolves value\r\n     *\r\n     * It returns the value from Terms.\r\n     * e.g. Pass the 'ProductName' as input for the resolveValue method.\r\n     * It search the information in terms and return the value like 'IQVIA StudyOptimizer'\r\n     * _commonTerms.term - Terms data.\r\n     *\r\n     * @param str\r\n     * @returns\r\n     */\r\n    resolveValue(str: string) {\r\n        if (!str) {\r\n            return;\r\n        }\r\n        const terms = this._commonTerms.term;\r\n        str = str.toString().replace(/!(.*?)!/g, function (match, token) {\r\n            const term = terms.find(function (x) {\r\n                return x.name === token;\r\n            });\r\n            return term ? term.value : match;\r\n        });\r\n        return str;\r\n    }\r\n\r\n\r\n    /**\r\n     * Gets term\r\n     * @param termParam\r\n     * @param [actionParam]\r\n     * @returns term\r\n     * get the term information.\r\n     */\r\n    getTerm(termParam: TermsParam, actionParam?: Action): Observable<any> {\r\n        if (!termParam) {\r\n            throw Error(`term param can not be empty or undefined in base term servie`);\r\n        }\r\n        if (!this.typeCheck(termParam)) {\r\n            throw Error(`Invalid params object`);\r\n        }\r\n\r\n        const that = this;\r\n        actionParam = !actionParam ? {} as Action : actionParam;\r\n\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n\r\n        actionParam.cacheKey = CacheKey.TermKey;\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.BASE_TERMS;\r\n        }\r\n\r\n        let termsPayload;\r\n        if (actionParam.endPoint) {\r\n            termsPayload = this.payloadCommandService.getApiRequest(termParam.commandName, termParam.category);\r\n            return that.baseConnectionService.send(termsPayload, actionParam).pipe(map((data) => {\r\n                let result: any = null;\r\n                if (data.terminologies && data.terminologies.term) {\r\n                    that._commonTerms = [];\r\n                    Object.assign(that._commonTerms, data.terminologies);\r\n                    result = data.terminologies;\r\n                }\r\n                return result;\r\n            }));\r\n        } else {\r\n            termsPayload = this.payloadCommandService.getCommandDetails(termParam.commandName, termParam.category);\r\n            return that.baseConnectionService.sendRequest(termsPayload, actionParam).pipe(map((data) => {\r\n                let result: any = null;\r\n                if (data.terminologies && data.terminologies.term) {\r\n                    that._commonTerms = [];\r\n                    Object.assign(that._commonTerms, data.terminologies);\r\n                    result = data.terminologies;\r\n                }\r\n                return result;\r\n            }));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets property base list\r\n     * Creating appPropertyList map for application properties to avoid loop\r\n     */\r\n    setPropertyBaseList() {\r\n        if (!this.appResources) {\r\n            return;\r\n        }\r\n        const iLen = this.appResources.term.length;\r\n        for (let i = 0; i < iLen; i++) {\r\n            this.appPropertyList[this.appResources.term[i].name] = this.appResources.term[i].value;\r\n        }\r\n    }\r\n\r\n    private typeCheck(obj: any): obj is TermsParam {\r\n        return (obj.category !== undefined && obj.commandName !== undefined);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { CacheFactory } from './../../models/cache/cache.factory';\r\nimport { Store } from './../../models/cache/store';\r\nimport { ConfigurationService } from './../../services/configuration.service';\r\nimport { EncryptionAction } from './../../utils/cache/encryption-action.enum';\r\nimport { StoreType } from './../../utils/cache/store-type.enum';\r\nimport { EncryptionService } from './encryption.service';\r\nimport { InMemoryService } from './in-memory.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CacheStoreManagerService implements Store {\r\n  factory: CacheFactory = null;\r\n  cachingStore: Store;\r\n  maxAge: number;\r\n\r\n  /**\r\n   * Creates an instance of cache store manager service.\r\n   * @param encryptionService\r\n   * @param config\r\n   * @param inMemory\r\n   */\r\n  constructor(private encryptionService: EncryptionService,\r\n    private config: ConfigurationService\r\n    , private inMemory: InMemoryService\r\n  ) {\r\n    this.factory = new CacheFactory();\r\n  }\r\n\r\n  /**\r\n   * Gets cache store manager service\r\n   *\r\n   * This method will call the get method of cache classes (session, inmemory etc.)\r\n   * @param key\r\n   * @param [callback]\r\n   * @returns\r\n   */\r\n  get(key: string,\r\n    callback?: Observable<any>) {\r\n    return this.cachingStore.get(key, callback);\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets cache store manager service\r\n   *\r\n   * This method will set the value on cache classes (session, inmemory etc.)\r\n   * @param key\r\n   * @param value\r\n   */\r\n  set(key: string, value: any) {\r\n    this.cachingStore.set(key, value);\r\n  }\r\n\r\n  /**\r\n   * Removes cache store manager service\r\n   *\r\n   * This method will remove the key and value from cache (session, inmemory etc.)\r\n   * @param [key]\r\n   */\r\n  remove(key?: string) {\r\n    this.cachingStore.remove(key);\r\n  }\r\n\r\n\r\n  /**\r\n   * Calls cache store manager service\r\n   * @param [callback]\r\n   * @returns\r\n   */\r\n  call(callback?: Observable<any>) {\r\n    return this.cachingStore.call(callback);\r\n  }\r\n\r\n  /**\r\n   * Keys exist\r\n   *\r\n   * It will check the key exist in cache.\r\n   *\r\n   * @param [key]\r\n   * @returns\r\n   */\r\n  keyExist(key?: string) {\r\n    return this.cachingStore.keyExist(key);\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets caching store\r\n   *\r\n   * This method will call the factory method and set the instance\r\n   * of cache classes (session, localstorage etc) in\r\n   * cachingStore variable.\r\n   * If the storeType is in memory then the factory method will return the\r\n   * singleton instance of inMemoryService to cachingStore variable.\r\n   * Set the caching age.\r\n   * If the storeType is not in memory then the cachingStore will call the setEncryption mehtod\r\n   * to set the encryption.\r\n   * @param storeType\r\n   * @param [encryptionAction]\r\n   * @param [age]\r\n   */\r\n  setCachingStore(storeType: StoreType,\r\n    encryptionAction?: EncryptionAction, age?: number) {\r\n    this.cachingStore = this.factory.createStore(storeType, this.encryptionService,\r\n      this.config, this.inMemory);\r\n    this.cachingStore.setCacheAge(age);\r\n    if (storeType !== StoreType.InMemory) {\r\n      this.cachingStore.setEncryption(encryptionAction);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Encryption } from '../../models/cache/encryption';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class EncryptionService implements Encryption {\r\n    private key: string;\r\n    private encryption: Encryption;\r\n    private encryptionUndefinedErrorMessage: string;\r\n    constructor() { }\r\n\r\n    /**\r\n     * Sets encryption\r\n     * @param encryption\r\n     */\r\n    setEncryption(encryption: Encryption) {\r\n        this.encryption = encryption;\r\n    }\r\n\r\n    /**\r\n     * Sets key\r\n     * @param key\r\n     */\r\n    setKey(key: string) {\r\n        this.key = key;\r\n    }\r\n\r\n\r\n    /**\r\n     * Encrypts encryption service\r\n     * @param obj\r\n     * @param [key]\r\n     * @returns encrypt\r\n     */\r\n    encrypt(obj: Object, key: string = this.key): string {\r\n        let ret = null;\r\n        if (this.encryption !== undefined && key !== undefined) {\r\n            ret = this.encryption.encrypt(obj, key);\r\n        } else {\r\n            throw new Error('Encryption object or key not set');\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    /**\r\n     * Decrypts encryption service\r\n     * @param text\r\n     * @param [key]\r\n     * @returns decrypt\r\n     */\r\n    decrypt(text: Object, key: string = this.key): Object {\r\n        let ret = null;\r\n        if (this.encryption !== undefined && key !== undefined) {\r\n            ret = this.encryption.decrypt(text, key);\r\n        } else {\r\n            throw new Error('Encryption object or key not set');\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, Subject, throwError } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { CacheContent } from '../../models/cache/cache-content';\r\nimport { Store } from '../../models/cache/store';\r\nimport { ConfigurationService } from '../configuration.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InMemoryService implements Store {\r\n  private cache: Map<string, CacheContent> = new Map<string, CacheContent>();\r\n  private inFlightObservables: Map<string, Subject<any>> = new Map<\r\n    string,\r\n    Subject<any>\r\n  >();\r\n  maxAge: number;\r\n\r\n  /**\r\n   * Creates an instance of in memory service.\r\n   * @param config\r\n   */\r\n  constructor(private config: ConfigurationService) {\r\n    this.maxAge = config.cacheMaxAge;\r\n  }\r\n\r\n  /**\r\n   * Gets in memory service\r\n   *\r\n   * This method will check if cache key is available in cache\r\n   * then it will return the value in observable form.\r\n   * If key not present in cache then execute the this.post method\r\n   * after the successful exection of  this.post observable method (which return the observable)\r\n   * set the key and value in cache\r\n   *\r\n   * @param key\r\n   * @param [callback]\r\n   * @returns get\r\n   */\r\n  get(key: string, callback?: Observable<any>): Observable<any> | Subject<any> {\r\n    if (this.hasValidCachedValue(key)) {\r\n      return of(this.cache.get(key).value);\r\n    }\r\n    /*\r\n    if (this.inFlightObservables.has(key)) {\r\n      return this.inFlightObservables.get(key);\r\n    } else if (callback && callback instanceof Observable) {\r\n      this.inFlightObservables.set(key, new Subject());\r\n      console.log(`%c Calling api in memory for ${key}`, 'color: purple');\r\n      return callback.pipe(tap((value) => { this.set(key, value); }));\r\n    } else {\r\n      return throwError('Requested key is not available in Cache');\r\n    }\r\n   */\r\n    if (callback && callback instanceof Observable) {\r\n      console.log(`%c Calling api for ${key}`, 'color: purple');\r\n      return callback.pipe(\r\n        tap(value => {\r\n          this.set(key, value);\r\n        })\r\n      );\r\n    } else {\r\n      return throwError('Requested key is not available in Cache');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets in memory service\r\n   * @param key\r\n   * @param value\r\n   */\r\n  set(key: string, value: any): void {\r\n    // this.cache.set(key, { value: value, expiry: Date.now() + this.maxAge });\r\n    this.cache.set(key, { value: value, expiry: 0 });\r\n    // this.notifyInFlightObservers(key, value);\r\n    /**Testing */\r\n    console.log(`%c In Memory data`, `color: green`);\r\n    console.log(this.cache);\r\n  }\r\n\r\n  /**\r\n   * Has in memory service\r\n   * @param key\r\n   * @returns true if has\r\n   */\r\n  has(key: string): boolean {\r\n    return this.cache.has(key);\r\n  }\r\n\r\n  /**\r\n   * Calls in memory service\r\n   * @param [fallback]\r\n   * @returns call\r\n   */\r\n  call(fallback?: Observable<any>): Observable<any> | Subject<any> {\r\n    if (fallback && fallback instanceof Observable) {\r\n      return fallback.pipe(tap(value => value));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determines whether valid cached value has\r\n   * @param key\r\n   * @returns true if valid cached value\r\n   */\r\n  private hasValidCachedValue(key: string): boolean {\r\n    /*\r\n    if (this.cache.has(key)) {\r\n      if (this.cache.get(key).expiry < Date.now()) {\r\n        this.cache.delete(key);\r\n        return false;\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }*/\r\n    let returnVal = false;\r\n    if (this.cache.get(key)) {\r\n      returnVal = true;\r\n    } else {\r\n      returnVal = false;\r\n    }\r\n    return returnVal;\r\n  }\r\n\r\n  /**\r\n   * Notifys in flight observers\r\n   * @param key\r\n   * @param value\r\n   */\r\n  private notifyInFlightObservers(key: string, value: any): void {\r\n    if (this.inFlightObservables.has(key)) {\r\n      const inFlight = this.inFlightObservables.get(key);\r\n      const observersCount = inFlight.observers.length;\r\n      if (observersCount) {\r\n        console.log(\r\n          `%cNotifying ${\r\n            inFlight.observers.length\r\n          } flight subscribers for ${key}`,\r\n          'color: Swap'\r\n        );\r\n        inFlight.next(value);\r\n      }\r\n      inFlight.complete();\r\n      this.inFlightObservables.delete(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes in memory service\r\n   * @param key\r\n   */\r\n  remove(key: string) {\r\n    //  this.cache.clear();\r\n    //  this.inFlightObservables.clear();\r\n    if (this.cache.has(key)) {\r\n      this.cache.delete(key);\r\n    } else {\r\n      this.cache.forEach((value, actualKey) => {\r\n        if (actualKey.search(key)) {\r\n          this.cache.delete(actualKey);\r\n        }\r\n      });\r\n    }\r\n    console.log(`%c In memory remove key ${key}`, `color:purple`);\r\n    console.log(`%c Current In Memory data`, `color: green`);\r\n    console.log(this.cache);\r\n  }\r\n\r\n  /**\r\n   * Sets cache age\r\n   * @param [age]\r\n   */\r\n  setCacheAge(age: number = 0) {\r\n    this.maxAge = age;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Encryption } from '../models/cache/encryption';\r\nimport { EnvironmentParam } from './../models/environment-param';\r\nimport { EncryptionService } from './cache/encryption.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigurationService {\r\n\r\n  private encryptionKey: string;\r\n  private cacheAge: number;\r\n  private encryptionType: Encryption;\r\n  private dispatchedUrl: string;\r\n  private applicationUrl: string;\r\n  private loginUrl: string;\r\n  private _authUrl: string;\r\n  private _soApiUrl: string;\r\n\r\n\r\n  /**\r\n   * Gets encrypt key\r\n   */\r\n  get encryptKey(): string {\r\n    return this.encryptionKey;\r\n  }\r\n\r\n  /**\r\n   * Sets encrypt key\r\n   */\r\n  set encryptKey(v: string) {\r\n    this.encryptionKey = v;\r\n    this.encryptionService.setKey(this.encryptionKey);\r\n  }\r\n\r\n  /**\r\n   * Gets cache max age\r\n   */\r\n  get cacheMaxAge(): number {\r\n    return this.cacheAge;\r\n  }\r\n\r\n  /**\r\n   * Sets cache max age\r\n   */\r\n  set cacheMaxAge(v: number) {\r\n    this.cacheAge = v;\r\n  }\r\n\r\n  /**\r\n   * Gets encrypt type\r\n   */\r\n  get encryptType(): Encryption {\r\n    return this.encryptionType;\r\n  }\r\n\r\n  /**\r\n   * Sets encrypt type\r\n   */\r\n  set encryptType(v: Encryption) {\r\n    this.encryptionType = v;\r\n    this.encryptionService.setEncryption(this.encryptionType);\r\n  }\r\n\r\n  /**\r\n   * Gets dispatch url\r\n   */\r\n  get dispatchUrl(): string {\r\n    return this.dispatchedUrl;\r\n  }\r\n\r\n  /**\r\n   * Sets dispatch url\r\n   */\r\n  set dispatchUrl(v: string) {\r\n    this.dispatchedUrl = v;\r\n  }\r\n\r\n  /**\r\n   * Gets app url\r\n   */\r\n  get appUrl(): string {\r\n    return this.applicationUrl;\r\n  }\r\n\r\n  /**\r\n   * Sets app url\r\n   */\r\n  set appUrl(v: string) {\r\n    this.applicationUrl = v;\r\n  }\r\n\r\n  /**\r\n     * Getter $loginUrl\r\n     * @return string\r\n     */\r\n  public get $loginUrl(): string {\r\n    return this.loginUrl;\r\n  }\r\n\r\n  /**\r\n   * Setter $loginUrl\r\n   * @param string value\r\n   */\r\n  public set $loginUrl(value: string) {\r\n    this.loginUrl = value;\r\n  }\r\n\r\n  /**\r\n   * Gets app url\r\n   */\r\n  get authUrl(): string {\r\n    return this._authUrl;\r\n  }\r\n\r\n  /**\r\n   * Sets app url\r\n   */\r\n  set authUrl(v: string) {\r\n    this._authUrl = v;\r\n  }\r\n\r\n  /**\r\n   * Gets app url\r\n   */\r\n  get soApiUrl(): string {\r\n    return this._soApiUrl;\r\n  }\r\n\r\n  /**\r\n   * Sets app url\r\n   */\r\n  set soApiUrl(v: string) {\r\n    this._soApiUrl = v;\r\n  }\r\n\r\n\r\n  /**\r\n   * Creates an instance of configuration service.\r\n   * @param encryptionService\r\n   */\r\n  constructor(private encryptionService: EncryptionService) {\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets config\r\n   *\r\n   * Set the application configuration\r\n   * encryptionKey\r\n   * cacheAge\r\n   * encryptionType\r\n   * applicationUrl\r\n   * @param environment\r\n   */\r\n  setConfig(environment?: any | EnvironmentParam) {\r\n    if (environment) {\r\n      if (!this.typeCheck(environment)) {\r\n        throw new Error(`Invalid environment object`);\r\n      }\r\n      this.encryptKey = environment.clientEncryptionKey;\r\n      this.cacheMaxAge = environment.cacheAge;\r\n      this.encryptType = environment.cryptoJS;\r\n      this.appUrl = environment.app_url;\r\n      this.$loginUrl = environment.login_url;\r\n      this.authUrl = environment.authUrl;\r\n      this.soApiUrl = environment.soApiUrl;\r\n    } else {\r\n      throw new Error(`Environment object is empty`);\r\n    }\r\n  }\r\n\r\n  private typeCheck(obj: any): obj is EnvironmentParam {\r\n    return (obj.clientEncryptionKey !== undefined && obj.cacheAge !== undefined\r\n      && obj.cryptoJS !== undefined && obj.app_url !== undefined && obj.login_url !== undefined);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { COMMON, DISPATCH_URL } from './../utils/service-constant';\r\nimport { EndPoints } from '../models/end-points';\r\nimport { HttpVerbs } from '../models/http-verbs';\r\nimport { Action } from '../models/action';\r\nimport { ConfigurationService } from './configuration.service';\r\nimport { RestApiService } from './rest-api.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataService extends RestApiService {\r\n\r\n    /**\r\n     * Creates an instance of data service.\r\n     * @param httpClient\r\n     */\r\n    constructor(\r\n        protected httpClient: HttpClient,\r\n        private configService: ConfigurationService\r\n    ) {\r\n        super(httpClient);\r\n    }\r\n\r\n\r\n    /**\r\n     * Posts data service\r\n     * It call the server api using httpClient\r\n     * @param payload\r\n     * @returns Data\r\n     */\r\n    private postData(payload: string | EndPoints, redirectUrl: string = DISPATCH_URL): Observable<any> {\r\n\r\n        const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n        return this.httpClient.post(\r\n            redirectUrl,\r\n            'payload=' + encodeURIComponent(<string>payload) + '&output=json',\r\n            { headers: headers, withCredentials: true }\r\n        ).pipe(\r\n            catchError(this.handleError('post', []))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Handles error\r\n     * @param [operation]\r\n     * @param [result]\r\n     * @returns\r\n     */\r\n    protected handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * It call the dataService.postData method which return the data in form of observable\r\n     * @param cmdName\r\n     * @param [xmlRequest]\r\n     * @param [reportError]\r\n     * @returns of(data)\r\n     */\r\n    post(cmdName: string, xmlRequest?: string | EndPoints,\r\n        reportError: boolean = true, redirectUrl?: string): Observable<any> {\r\n        if (!cmdName) {\r\n            throw new Error(`Command name can not be empty`);\r\n        }\r\n        return this.postData(xmlRequest, redirectUrl).pipe(map((data) => {\r\n            if (!data.serviceResponse) {\r\n                console.log('Could not find serviceResponse object.' +\r\n                    'Trying to parse response as XML string for xml request :: XMLRequest: %s', xmlRequest);\r\n                let xmlParsed = false,\r\n                    errStr = '';\r\n                try {\r\n                    const dom = (new DOMParser()).parseFromString(data, 'text/xml');\r\n                    data = JSON.parse((<any>window).xml2json(dom, '', ''));\r\n                    xmlParsed = true;\r\n                    console.log('Parse XML String', data);\r\n                } catch (error) {\r\n                    console.error('Response XML data parsing error ', error);\r\n                    errStr = 'Failed to parse response data!' + error;\r\n                    throw Error(`Failed to parse response data!`);\r\n                }\r\n                if (!xmlParsed) {\r\n                    console.log(errStr);\r\n                    return errStr;\r\n                }\r\n            }\r\n            //\r\n            if (data.serviceResponse.result === COMMON.RESULT_OK || !data.serviceResponse.result) {\r\n                // TODO:: Implement add to cache mechanism here\r\n            } else if (data.serviceResponse.result.toUpperCase() === COMMON.RESULT_ERROR) {\r\n                if (reportError) {\r\n                    let error = {\r\n                        desc: data.serviceResponse.error.errorCode + ' : ' + data.serviceResponse.error.message,\r\n                        text: '----------------------------------------------' +\r\n                            '--------------------------\\nError Stack for command **' + cmdName + '**\\n------' +\r\n                            '------------------------------------------------------------------\\n' + data.serviceResponse.error.stack\r\n                    };\r\n                    error = Object.assign({}, error, data.serviceResponse.error);\r\n                    console.error('BaseConnection -> error', data.serviceResponse);\r\n                    // TODO:: Implement raising exception or error here\r\n                }\r\n            } else {\r\n                console.error('BaseConnection -> error2', data.serviceResponse);\r\n            }\r\n            return data.serviceResponse;\r\n        }));\r\n    }\r\n\r\n    /**\r\n    *This method is used to give an http get call\r\n    *\r\n    * @param url\r\n    * @param headers\r\n    * @returns Observable<any>\r\n    * @memberof DataService\r\n    */\r\n    get(url: string, headers: any): Observable<any> {\r\n        return this.httpClient.get(url, headers);\r\n    }\r\n\r\n\r\n    /**\r\n     * Rest Api End point Integration\r\n     */\r\n\r\n    /**\r\n     *\r\n     * It call the dataService.postData method which return the data in form of observable\r\n     * @param cmdName\r\n     * @param [payload]\r\n     * @param [reportError]\r\n     * @returns of(data)\r\n     */\r\n    sendData(cmdName: string, payload: any, baseParam: Action, reportError: boolean = true): Observable<any> {\r\n        if (!cmdName) {\r\n            throw new Error(`Command name can not be empty`);\r\n        }\r\n        return this.sendRequestToServer(payload, baseParam).pipe(map((data) => {\r\n            console.log(data);\r\n            if (!data.serviceResponse) {\r\n                const error = {\r\n                    status: 200,\r\n                    message: 'No content found or No records found'\r\n                };\r\n                console.error(error.message);\r\n                throw error;\r\n            }\r\n\r\n            if (data.serviceResponse.result === COMMON.RESULT_OK || !data.serviceResponse.result) {\r\n                // TODO:: Implement add to cache mechanism here\r\n            } else if (data.serviceResponse.result.toUpperCase() === COMMON.RESULT_ERROR) {\r\n                if (reportError) {\r\n                    let error = {\r\n                        desc: data.serviceResponse.error.errorCode + ' : ' + data.serviceResponse.error.message,\r\n                        text: '----------------------------------------------' +\r\n                            '--------------------------\\nError Stack for command **' + cmdName + '**\\n------' +\r\n                            '------------------------------------------------------------------\\n' + data.serviceResponse.error.stack\r\n                    };\r\n                    error = Object.assign({}, error, data.serviceResponse.error);\r\n                    console.error('BaseConnection -> error', data.serviceResponse);\r\n                    // TODO:: Implement raising exception or error here\r\n                }\r\n            } else {\r\n                console.error('BaseConnection -> error2', data.serviceResponse);\r\n            }\r\n            return data.serviceResponse;\r\n        }));\r\n    }\r\n\r\n    private getHttpOptions(payload: any, baseParam: Action) {\r\n        let httpOptions = { headers: payload.headers, params: payload.queryParams, withCredentials: false };\r\n        if (!baseParam.prelogin) {\r\n            httpOptions = { ...httpOptions, withCredentials: true };\r\n        }\r\n        return httpOptions;\r\n    }\r\n\r\n    private getEndPointUrl(baseParam: Action): string {\r\n        let endPointUrl = '';\r\n        if (baseParam.isSSOEndPoint) {\r\n            endPointUrl = this.configService.authUrl;\r\n        } else {\r\n            endPointUrl = this.configService.soApiUrl;\r\n        }\r\n\r\n        return endPointUrl;\r\n    }\r\n\r\n    private sendRequestToServer(payload: any, baseParam: Action): Observable<any> {\r\n\r\n        if (!baseParam.httpMethod) {\r\n            baseParam.httpMethod = HttpVerbs.get;\r\n        }\r\n\r\n        if (!baseParam.url) {\r\n            throw new Error('Rest end point url can not be empty, please set Action Url.');\r\n        }\r\n\r\n        const httpOptions = this.getHttpOptions(payload, baseParam);\r\n        const endPointUrl = this.getEndPointUrl(baseParam);\r\n\r\n        if (!endPointUrl) {\r\n            throw new Error('Rest end point url can not be empty.');\r\n        }\r\n\r\n        switch (baseParam.httpMethod) {\r\n            case HttpVerbs.get:\r\n                return this.getMethod(endPointUrl, baseParam, httpOptions); // will rename - affects on app1\r\n\r\n            case HttpVerbs.post:\r\n                return this.postMethod(endPointUrl, baseParam, httpOptions, payload.jsonRequest); // will rename - affects on app1\r\n\r\n            case HttpVerbs.put:\r\n                return this.put(endPointUrl, baseParam, httpOptions, payload.jsonRequest);\r\n\r\n            case HttpVerbs.delete:\r\n                return this.delete(endPointUrl, baseParam, httpOptions, payload.id);\r\n\r\n            default:\r\n                // return of([]);\r\n                throw new Error('Http method not found!');\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { CacheType } from '../utils/cache/cache-type.enum';\r\nimport { StoreType } from '../utils/cache/store-type.enum';\r\nimport { Action } from './../models/action';\r\nimport { CacheStoreManagerService } from './cache/cache-store-manager.service';\r\nimport { DataService } from './data.service';\r\n\r\ndeclare var require: any;\r\n// const dependencyList: any = <any>require('../assets/data/getDependencyList.json');\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DependencyManagerService {\r\n    /**\r\n     * Creates an instance of dependency manager service.\r\n     * @param cacheStoreManagerService\r\n     * @param dataService\r\n     */\r\n    constructor(private cacheStoreManagerService: CacheStoreManagerService,\r\n        private dataService: DataService) {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Gets dependency manager service\r\n     *\r\n     * Check the cacheKey in action parameter\r\n     * if it is undefined then call the post method. On success of the call, clear if any dependencies specified.\r\n     * If it is not null or defined then check cacheType, if cacheType is non sticky then\r\n     * set the storeType is in-memory. If no storeType information pass in parameter\r\n     * then the default value of storeType is in-memory.\r\n     * If no encryption information pass in parameter then the default value of encryption is false.\r\n     * Set the reference of cache classes (session, in-memory etc) by calling the cacheStoreManagerService.SetCachingStore() function.\r\n     * Call the cacheStoreManager get method, It will check if cache key available in cache\r\n     * then it will return the value in observable form. If not then\r\n     * execute the this.post method and set the response in cache and return the value in observable form\r\n     * if there are dependency list then purge the dependency list means remove the key from cache.\r\n     * @param baseParam\r\n     * @returns get\r\n     */\r\n    get(baseParam: Action): Observable<any> {\r\n        if (!baseParam.cacheKey) {\r\n            return this.dataService.post(baseParam.cmdName, baseParam.xmlRequest, baseParam.reportError, baseParam.url)\r\n                .pipe(tap(() => {\r\n                    this.cacheStoreManagerService.setCachingStore(baseParam.storeType);\r\n                    this.clearDependencies(baseParam.dependencyList);\r\n                }));\r\n        } else {\r\n            baseParam.storeType = (baseParam.cacheType === CacheType.nonsticky) ? StoreType.InMemory : baseParam.storeType;\r\n            this.cacheStoreManagerService.setCachingStore(baseParam.storeType, baseParam.encryption);\r\n            if (baseParam.isSelf === true) { this.clearDependencies(baseParam.dependencyList); }\r\n            return this.cacheStoreManagerService.get(baseParam.cacheKey,\r\n                this.dataService.post(baseParam.cmdName, baseParam.xmlRequest, baseParam.reportError, baseParam.url))\r\n                .pipe(tap(() => {\r\n                    if (baseParam.isSelf === false) {\r\n                        this.clearDependencies(baseParam.dependencyList);\r\n                    }\r\n                }));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets dependency manager service\r\n     *\r\n     * Check the cacheKey in action parameter\r\n     * if it is undefined then call the post method. On success of the call, clear if any dependencies specified.\r\n     * If it is not null or defined then check cacheType, if cacheType is non sticky then\r\n     * set the storeType is in-memory. If no storeType information pass in parameter\r\n     * then the default value of storeType is in-memory.\r\n     * If no encryption information pass in parameter then the default value of encryption is false.\r\n     * Set the reference of cache classes (session, in-memory etc) by calling the cacheStoreManagerService.SetCachingStore() function.\r\n     * Call the cacheStoreManager get method, It will check if cache key available in cache\r\n     * then it will return the value in observable form. If not then\r\n     * execute the this.post method and set the response in cache and return the value in observable form\r\n     * if there are dependency list then purge the dependency list means remove the key from cache.\r\n     * @param baseParam\r\n     * @returns get\r\n     */\r\n    setDependencies(payload: any, baseParam: Action): Observable<any> {\r\n        if (!baseParam.cacheKey) {\r\n            return this.dataService.sendData(baseParam.cmdName, payload, baseParam, baseParam.reportError)\r\n                .pipe(tap(() => {\r\n                    this.cacheStoreManagerService.setCachingStore(baseParam.storeType);\r\n                    this.clearDependencies(baseParam.dependencyList);\r\n                }));\r\n        } else {\r\n            baseParam.storeType = (baseParam.cacheType === CacheType.nonsticky) ? StoreType.InMemory : baseParam.storeType;\r\n            this.cacheStoreManagerService.setCachingStore(baseParam.storeType, baseParam.encryption);\r\n            if (baseParam.isSelf === true) { this.clearDependencies(baseParam.dependencyList); }\r\n            return this.cacheStoreManagerService.get(baseParam.cacheKey,\r\n                this.dataService.sendData(baseParam.cmdName, payload, baseParam, baseParam.reportError))\r\n                .pipe(tap(() => {\r\n                    if (baseParam.isSelf === false) {\r\n                        this.clearDependencies(baseParam.dependencyList);\r\n                    }\r\n                }));\r\n        }\r\n    }\r\n\r\n    clearDependencies(dependencies: any) {\r\n        if (dependencies && dependencies.length > 0) {\r\n            dependencies.map((key) => {\r\n                this.cacheStoreManagerService.remove(key);\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { map, } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { ALERT_TYPE, DIALOG_CONFIG } from '../utils/service-constant';\r\nimport { LocaleAppResourcesService } from './locale-app-resources.service';\r\nimport { ConfirmationDialogComponent } from '../components/confirmation-dialog/confirmation-dialog.component';\r\n\r\nexport interface DialogsProp {\r\n  heading?: string;\r\n  message?: string;\r\n  okLabel?: string;\r\n  cancelLabel?: string;\r\n  showCancel?: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n  private _isStatusChanged: boolean;\r\n\r\n  public get isStatusChanged(): boolean {\r\n    return (this._isStatusChanged === undefined ? false : this._isStatusChanged);\r\n  }\r\n\r\n  public set isStatusChanged(v: boolean) {\r\n    this._isStatusChanged = v;\r\n  }\r\n\r\n  private _selectedStudyKey: any;\r\n\r\n  public get selectedStudyKey(): any {\r\n    return this._selectedStudyKey;\r\n  }\r\n\r\n  private _isProceed: boolean;\r\n\r\n\r\n  public get isProceed(): boolean {\r\n    return this._isProceed;\r\n  }\r\n\r\n\r\n  public set isProceed(v: boolean) {\r\n    this._isProceed = v;\r\n  }\r\n\r\n\r\n\r\n  public set selectedStudyKey(v: any) {\r\n    this._selectedStudyKey = v;\r\n  }\r\n\r\n  constructor(private localeAppResourcesService: LocaleAppResourcesService,\r\n    private dialog: MatDialog) {\r\n  }\r\n\r\n  confirm(): Observable<boolean> {\r\n    let confirmation = false;\r\n    const dialogRef = this.showUnsavedDataConfirmation();\r\n    return dialogRef.afterClosed().pipe(map(res => {\r\n      const eventObject = res;\r\n      if (eventObject && eventObject.action === this.getConfirmProp().okLabel) {\r\n        confirmation = true;\r\n      } else if (eventObject && eventObject.action === this.getConfirmProp().cancelLabel) {\r\n        confirmation = false;\r\n      }\r\n      return confirmation;\r\n    }));\r\n  }\r\n\r\n  private showUnsavedDataConfirmation(data?: any) {\r\n    data = data || this.getConfirmProp();\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      width: DIALOG_CONFIG.CONFIRM_UNSAVED_DATA.WIDTH,\r\n      data: data,\r\n      panelClass: DIALOG_CONFIG.DELETE_PLAN.PANEL_CLASS,\r\n      id: 'warnDataLossOnNavDialog'\r\n    });\r\n    return dialogRef;\r\n  }\r\n\r\n  private getConfirmProp() {\r\n    return {\r\n      heading: this.localeAppResourcesService.getResource('unsavedTitle'),\r\n      message: this.localeAppResourcesService.getResource('unsavedMessage'),\r\n      okLabel: this.localeAppResourcesService.getResource(ALERT_TYPE.OkLabel),\r\n      cancelLabel: this.localeAppResourcesService.getResource(\r\n        ALERT_TYPE.CancelLabel\r\n      )\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { CUSTOM_ERROR_CODES } from '../utils/service-constant';\r\nimport { StringUtil } from '../utils/string-util';\r\nimport { AppUtil } from '../utils/AppUtil';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ErrorTermsStoreService {\r\n\r\n    /**\r\n     * Creates an instance of error terms store service.\r\n     */\r\n    constructor() { }\r\n\r\n    errorTerminologies = null;\r\n    private errorCodeBase = {};\r\n\r\n\r\n    /**\r\n     * Creates error code base\r\n     * @param errorTerminologies\r\n     */\r\n    createErrorCodeBase(errorTerminologies: any) {\r\n        const that = this;\r\n        that.errorTerminologies = errorTerminologies;\r\n        const iLen = that.errorTerminologies.term.length;\r\n        for (let i = 0; i < iLen; i++) {\r\n            that.errorCodeBase[that.errorTerminologies.term[i].name] = that.errorTerminologies.term[i].value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets error message\r\n     * @param name\r\n     * @returns\r\n     */\r\n    getErrorMessage(name) {\r\n        const that = this;\r\n        if (!isNaN(name)) {\r\n            return that.errorCodeBase['E' + name];\r\n        } else {\r\n            return that.errorCodeBase[name];\r\n        }\r\n    }\r\n\r\n    /**\r\n   * Method to extract the error messages from error store and concat all messages into one\r\n   * @param errors\r\n   * @returns consolidated error message\r\n   * @memberof ErrorTermsStoreService\r\n   */\r\n    consolidateValidationErrors(errors: any, fsiDate?: any, fssDate?: any): string {\r\n        let errorMessage = '';\r\n        if (errors) {\r\n            // tslint:disable-next-line:prefer-const\r\n            let errorMessages = [];\r\n            Object.keys(errors).forEach(errorCode => {\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                let errorMessage = this.getErrorMessage(\r\n                    errorCode\r\n                );\r\n                if (!errorMessage) {\r\n                    if (errorCode === CUSTOM_ERROR_CODES.MAX.error) {\r\n                        errorMessage =\r\n                            this.getErrorMessage(CUSTOM_ERROR_CODES.MAX.message) +\r\n                            ' ' +\r\n                            errors.max.max + '.';\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.MIN.error) {\r\n                        errorMessage =\r\n                            this.getErrorMessage(CUSTOM_ERROR_CODES.MIN.message) +\r\n                            ' ' +\r\n                            errors.min.min + '.';\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.MAT_DATEPICKER_PARSE.error) {\r\n                        errorMessage = this.getErrorMessage(\r\n                            CUSTOM_ERROR_CODES.MAT_DATEPICKER_PARSE.message\r\n                        );\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.DAYS_TO_SI_AFTER_ARTB.error) {\r\n                        errorMessage = this.getErrorMessage(\r\n                            CUSTOM_ERROR_CODES.DAYS_TO_SI_AFTER_ARTB.message\r\n                        );\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.FSI_REQUIRED_FOR_FSS.error) {\r\n                        errorMessage = this.getErrorMessage(CUSTOM_ERROR_CODES.FSI_REQUIRED_FOR_FSS.message);\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.REQUIRED.error) {\r\n                        errorMessage = this.getErrorMessage(CUSTOM_ERROR_CODES.REQUIRED.message);\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.ARTB_LT_EQ_FSI.error) {\r\n                        errorMessage = StringUtil.interpolate(\r\n                            this.getErrorMessage(CUSTOM_ERROR_CODES.ARTB_LT_EQ_FSI.message),\r\n                            [AppUtil.formatDateStrict(errors.ARTB_LT_EQ_FSI.ARTB_LT_EQ_FSI)]);\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.ARTB__LT_EQ_FSS.error) {\r\n                        errorMessage = StringUtil.interpolate(\r\n                            this.getErrorMessage(CUSTOM_ERROR_CODES.ARTB__LT_EQ_FSS.message),\r\n                            [AppUtil.formatDateStrict(errors.ARTB__LT_EQ_FSS.ARTB__LT_EQ_FSS)]);\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.FSI_GT_TLSS.error) {\r\n                        errorMessage = StringUtil.interpolate(\r\n                            this.getErrorMessage(CUSTOM_ERROR_CODES.FSI_GT_TLSS.message),\r\n                            [AppUtil.formatDateStrict(errors.FSI_GT_TLSS.FSI_GT_TLSS)]);\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.FSILT_ERROR.error) {\r\n                        errorMessage = StringUtil.interpolate(\r\n                            this.getErrorMessage(CUSTOM_ERROR_CODES.FSILT_ERROR.message),\r\n                            [AppUtil.formatDateStrict(errors.FSILT_ERROR.FSILT_ERROR)]);\r\n                    } else if (errorCode === CUSTOM_ERROR_CODES.DEPENDENCY_ERROR.error) {\r\n                        errorMessage = StringUtil.interpolate(\r\n                            this.getErrorMessage(CUSTOM_ERROR_CODES.DEPENDENCY_ERROR.message),\r\n                            [AppUtil.formatDateStrict(errors.DEPENDENCY_ERROR.DEPENDENCY_ERROR)]);\r\n                    }\r\n                }\r\n                errorMessages.push(errorMessage);\r\n            });\r\n            errorMessage = errorMessages.join('\\n');\r\n        }\r\n        return errorMessage;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { EncryptionAction } from '../utils/cache/encryption-action.enum';\r\nimport { StoreType } from '../utils/cache/store-type.enum';\r\nimport { Action } from './../models/action';\r\nimport { CacheKey } from './../utils/cache-key.enum';\r\nimport { CacheType } from './../utils/cache/cache-type.enum';\r\nimport { COMMON } from './../utils/service-constant';\r\nimport { BaseConnectionService } from './base-connection.service';\r\nimport { ErrorTermsStoreService } from './error-terms-store.service';\r\nimport { PayloadCommandService } from './payload-command.service';\r\nimport { APIEndPoints } from '../models/api-end-points.enum';\r\n\r\nexport interface TermsErrorParam {\r\n    commandName: string;\r\n    categoriesTerms: string;\r\n    categoriesError: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ErrorTermsService {\r\n\r\n    /**\r\n     * Creates an instance of error terms service.\r\n     * @param baseConnectionService\r\n     * @param payloadCommandService\r\n     * @param errorTermsStoreService\r\n     */\r\n    constructor(private baseConnectionService: BaseConnectionService, private payloadCommandService: PayloadCommandService\r\n        , private errorTermsStoreService: ErrorTermsStoreService) { }\r\n\r\n\r\n    /**\r\n     * Gets error terminologies\r\n     * @param params\r\n     * @param [cacheType]\r\n     * @returns error terminologies\r\n     */\r\n    getErrorTerminologies(params, actionParam?: Action): Observable<any> {\r\n        if (!params) {\r\n            throw new Error(`params can not be empty or undefined`);\r\n        } if (!this.typeCheck(params)) {\r\n            throw new Error(`Invalid params object`);\r\n        }\r\n\r\n        actionParam = !actionParam ? {} as Action : actionParam;\r\n\r\n        actionParam.cacheKey = CacheKey.TermErrorKey;\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n\r\n        const moduleInfo = {\r\n            moduleName: 'NEWPLANTAB'\r\n        };\r\n\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.BASE_TERMS;\r\n        }\r\n\r\n        const that = this;\r\n        let errorTermsPayload;\r\n        if (actionParam.endPoint) {\r\n            errorTermsPayload = that.payloadCommandService.getApiRequest(params.commandName, params.categoriesError,\r\n                null, moduleInfo);\r\n\r\n            if (!that.errorTermsStoreService.errorTerminologies) {\r\n                return that.baseConnectionService.send(errorTermsPayload, actionParam)\r\n                    .pipe(map((response) => {\r\n                        if (response.result === COMMON.RESULT_OK) {\r\n                            that.errorTermsStoreService.createErrorCodeBase(response.terminologies);\r\n                            return 'ok';\r\n                        } else {\r\n                            return 'failed';\r\n                        }\r\n                    }));\r\n            } else {\r\n                return Observable.create('ok');\r\n            }\r\n        } else {\r\n            errorTermsPayload = that.payloadCommandService.getCommandDetails(params.commandName, params.categoriesError,\r\n                null, null, moduleInfo);\r\n\r\n            if (!that.errorTermsStoreService.errorTerminologies) {\r\n                return that.baseConnectionService.sendRequest(errorTermsPayload, actionParam)\r\n                    .pipe(map((response) => {\r\n                        if (response.result === COMMON.RESULT_OK) {\r\n                            that.errorTermsStoreService.createErrorCodeBase(response.terminologies);\r\n                            return 'ok';\r\n                        } else {\r\n                            return 'failed';\r\n                        }\r\n                    }));\r\n            } else {\r\n                return Observable.create('ok');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private typeCheck(obj: any): obj is TermsErrorParam {\r\n        return (obj.categoriesError !== undefined && obj.commandName !== undefined);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AppWindow } from '../models/appWindow';\r\nimport { DEFAULT_HELP_ID, HOSTED_HELP_COMMAND, HOSTED_HELP_URL } from '../utils/help-constants';\r\nimport { COMMON } from '../utils/service-constant';\r\nimport { BaseConnectionService } from './base-connection.service';\r\nimport { PayloadCommandService } from './payload-command.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HelpService {\r\n    constructor(private route: ActivatedRoute,\r\n        private payloadCommandService: PayloadCommandService,\r\n        private baseConnectionService: BaseConnectionService) {\r\n    }\r\n\r\n    openHelp() {\r\n        const windowObj = AppWindow.getWindow();\r\n        // let url =\r\n        //     windowObj.location.protocol +\r\n        //     '//' +\r\n        //     windowObj.location.hostname +\r\n        //     ':' +\r\n        //     windowObj.location.port +\r\n        //     '/';\r\n        // if (BASE_HREF) {\r\n        //     url += BASE_HREF + '/';\r\n        // }\r\n        // url += HELP_INDEX_PAGE_PATH;\r\n        let activeRoute = this.route;\r\n        if (activeRoute) {\r\n            while (activeRoute.firstChild) {\r\n                activeRoute = activeRoute.firstChild;\r\n            }\r\n            const activeRouteHelpId = (<any>activeRoute.snapshot && <any>activeRoute.snapshot.data\r\n                && (<any>activeRoute.snapshot.data).helpId) ? (<any>activeRoute.snapshot.data).helpId : DEFAULT_HELP_ID;\r\n            // url += HELP_MAP[activeRouteHelpId];\r\n            // windowObj.open(url, '_blank', 'width=1100,height=500');\r\n\r\n            const params = {\r\n                pagecontext: activeRouteHelpId\r\n            };\r\n            const moduleInfo = {\r\n                moduleName: 'NEWPLANTAB'\r\n            };\r\n            const hostedHelpPayload = this.payloadCommandService.getCommandDetails(HOSTED_HELP_COMMAND, params, null, null, moduleInfo);\r\n            this.baseConnectionService.sendRequest(hostedHelpPayload, { url: HOSTED_HELP_URL }).pipe(\r\n                map(resp => {\r\n                    if (resp.result === COMMON.RESULT_OK) {\r\n                        return resp.helpUrl;\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                })\r\n            ).subscribe((helpUrl) => {\r\n                if (helpUrl) {\r\n                    windowObj.open(helpUrl, '_blank', 'width=1100,height=500');\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { TermsParam } from '../models/terms-param';\r\nimport { EncryptionAction } from '../utils/cache/encryption-action.enum';\r\nimport { Action } from './../models/action';\r\nimport { CacheKey } from './../utils/cache-key.enum';\r\nimport { CacheType } from './../utils/cache/cache-type.enum';\r\nimport { StoreType } from './../utils/cache/store-type.enum';\r\nimport { BaseTermsService } from './base-terms.service';\r\nimport { APIEndPoints } from '../models/api-end-points.enum';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LocaleAppResourcesService {\r\n\r\n    /**\r\n     * Creates an instance of locale app resources service.\r\n     * @param baseTermsService\r\n     */\r\n    constructor(private baseTermsService: BaseTermsService) { }\r\n\r\n    appResources = null;\r\n    appPropertyList = {};\r\n\r\n\r\n    /**\r\n     * Gets app resources\r\n     *\r\n     * Get the application resource information\r\n     *\r\n     * @param [cacheType]\r\n     * @returns\r\n     */\r\n    getAppResources(params: TermsParam, actionParam?: Action): Observable<any> {\r\n\r\n        actionParam = !actionParam ? {} as Action : actionParam;\r\n\r\n        actionParam.cacheKey = CacheKey.TermApplicationKey;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.BASE_TERMS;\r\n        }\r\n\r\n        const that = this;\r\n        if (that.appResources === null) {\r\n            return this.baseTermsService.load(params, actionParam)\r\n                .pipe(map((response) => {\r\n                    that.appResources = response;\r\n                    that.setPropertyBaseList();\r\n                    return response;\r\n                }));\r\n        } else {\r\n            return of(that.appResources);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets property base list\r\n     * Creating appPropertyList map for application properties to avoid loop\r\n     */\r\n    setPropertyBaseList() {\r\n        if (!this.appResources) {\r\n            return;\r\n        }\r\n        const iLen = this.appResources.term.length;\r\n        for (let i = 0; i < iLen; i++) {\r\n            this.appPropertyList[this.appResources.term[i].name] = this.appResources.term[i].value;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Gets resource\r\n     * To get application property value by passing name\r\n     *\r\n     * @param name\r\n     * @returns\r\n     */\r\n    getResource(name) {\r\n        let resourcesValue = '';\r\n        if (this.appPropertyList) {\r\n            resourcesValue = this.baseTermsService.resolveValue(this.appPropertyList[name]);\r\n        }\r\n        return resourcesValue;\r\n    }\r\n\r\n\r\n    /**\r\n     * Gets res\r\n     * @param arrRes\r\n     * @returns res\r\n     */\r\n    getRes(arrRes): {} {\r\n        const obj = {};\r\n        if (this.appResources) {\r\n            for (let i = 0, total = this.appResources.term.length; i < total; i++) {\r\n                for (let j = 0; j < arrRes.length; j++) {\r\n                    if (this.appResources.term[i].name === arrRes[j]) {\r\n                        obj['' + this.appResources.term[i].name + ''] = this.baseTermsService.resolveValue(this.appResources.term[i].value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Action } from './../models/action';\r\nimport { TermsParam } from './../models/terms-param';\r\nimport { CacheKey } from './../utils/cache-key.enum';\r\nimport { CacheType } from './../utils/cache/cache-type.enum';\r\nimport { EncryptionAction } from './../utils/cache/encryption-action.enum';\r\nimport { StoreType } from './../utils/cache/store-type.enum';\r\nimport { BaseTermsService } from './base-terms.service';\r\nimport { APIEndPoints } from '../models/api-end-points.enum';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoginTermsService {\r\n\r\n    /**\r\n     * Login terminologies of login terms service\r\n     */\r\n    _loginTerminologies = null;\r\n    terms = null;\r\n\r\n    /**\r\n     * Creates an instance of login terms service.\r\n     * @param baseTermsService\r\n     */\r\n    constructor(private baseTermsService: BaseTermsService) { }\r\n\r\n    /**\r\n     * Gets login terminologies\r\n     * @param params\r\n     * @param [cacheType]\r\n     * @returns login terminology information\r\n     */\r\n    getLoginTerminologies(params, actionParam?: Action): Observable<any> {\r\n        if (!params) {\r\n            throw new Error(`Params can not be empty or undefined`);\r\n        }\r\n        if (!this.typeCheck(params)) {\r\n            throw new Error(`Invalid params object`);\r\n        }\r\n\r\n        const that = this;\r\n        actionParam = !actionParam ? {} as Action : actionParam;\r\n\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cacheKey = CacheKey.TermLoginKey;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.BASE_TERMS;\r\n        }\r\n\r\n        if (that._loginTerminologies === null) {\r\n            return that.baseTermsService.load(params, actionParam).pipe(map(response => {\r\n                that._loginTerminologies = response;\r\n                return response;\r\n            }));\r\n        } else {\r\n            return of([]);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Gets term\r\n     * get the login term value according to input\r\n     * e.g.\r\n     * getTerm(LoginWelcome);\r\n     * Ouptput\r\n     * <font color='#333333'>Welcome to IQVIA<\\/font>\r\n     * @param name\r\n     * @returns\r\n     */\r\n    getTerm(name) {\r\n        let termValue = '';\r\n        /* if (!this._loginTerminologies) {\r\n            return termValue;\r\n        } */\r\n        for (let i = 0, iLen = this._loginTerminologies.term.length; i < iLen; i++) {\r\n            if (this._loginTerminologies.term[i].name === name) {\r\n                termValue = this.baseTermsService.resolveValue(this._loginTerminologies.term[i].value);\r\n                break;\r\n            }\r\n        }\r\n        return termValue;\r\n    }\r\n\r\n    private typeCheck(obj: any): obj is TermsParam {\r\n        return (obj.category !== undefined && obj.commandName !== undefined);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { COMMON, LOGOUT_PARAMS } from './../utils/service-constant';\r\nimport { BaseConnectionService } from './base-connection.service';\r\nimport { PayloadCommandService } from './payload-command.service';\r\nimport { Action } from '../models/action';\r\nimport { APIEndPoints } from '../models/api-end-points.enum';\r\nimport { HttpVerbs } from '../models/http-verbs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LogoutService {\r\n    constructor(private payloadCommandService: PayloadCommandService,\r\n        private baseConnectionService: BaseConnectionService) {\r\n\r\n    }\r\n\r\n    logout(): Observable<any> {\r\n        // const that = this;\r\n        // const moduleInfo = {\r\n        //     moduleName: 'NEWPLANTAB'\r\n        // };\r\n        // const logoutPayload = that.payloadCommandService.getCommandDetails(LOGOUT_PARAMS.commandName, null, null, null, moduleInfo);\r\n        // return that.baseConnectionService.sendRequest(logoutPayload).pipe(map((resp) => {\r\n        //     if (resp.result === COMMON.RESULT_OK) {\r\n        //         sessionStorage.clear();\r\n        //     }\r\n        //     return resp;\r\n        // }));\r\n        const payload = this.payloadCommandService.getApiRequest(LOGOUT_PARAMS.commandName, null, null, null);\r\n        const actionParam: Action = {};\r\n        actionParam.url = APIEndPoints.LOGOUT; // compulsory\r\n        actionParam.isSSOEndPoint = true;\r\n        actionParam.httpMethod = HttpVerbs.get;\r\n        actionParam.prelogin = false; // passing withCredential true\r\n        return this.baseConnectionService.send(payload, actionParam).pipe(map((resp) => {\r\n            if (resp.result === COMMON.RESULT_OK) {\r\n                sessionStorage.clear();\r\n            }\r\n            return resp;\r\n        }));\r\n\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Payload } from '../models/payload';\r\nimport { BasePayloadCommandService } from './base-payload-command.service';\r\nimport { APIPayload } from '../models/api-payload';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PayloadCommandService {\r\n\r\n    /**\r\n     * Creates an instance of payload command service.\r\n     * @param basePayloadCommand\r\n     */\r\n    constructor(private basePayloadCommand: BasePayloadCommandService) { }\r\n\r\n    /**\r\n     * Gets command details\r\n     * It called the basePayloadCommand.buildRequest method which returns the xmlRequest\r\n     * @param [command]\r\n     * @param [params]\r\n     * @param [tags]\r\n     * @param [commandtags]\r\n     * @param [moduleInfo]\r\n     * @returns xmlRequest\r\n     */\r\n    getCommandDetails(command: string,\r\n        params: any = null,\r\n        tags: any = null,\r\n        commandtags: any = null,\r\n        moduleInfo: any = null): Payload {\r\n        if (!command) {\r\n            throw new Error(`Command name can not be empty`);\r\n        }\r\n        return this.basePayloadCommand.buildRequest(command,\r\n            params,\r\n            tags,\r\n            commandtags,\r\n            moduleInfo);\r\n    }\r\n\r\n    /**\r\n     * Gets command details\r\n     * It called the basePayloadCommand.buildRequest method which returns the xmlRequest\r\n     * @param [command]\r\n     * @param [queryParams]\r\n     * @param [headers]\r\n     * @param [moduleInfo]\r\n     * @param [req]\r\n     */\r\n    getApiRequest(\r\n        command: string,\r\n        queryParams: any = null,\r\n        headers: any = null,\r\n        moduleInfo: any = null,\r\n        req?: any\r\n    ): APIPayload {\r\n        if (!command) {\r\n            throw new Error(`Command name can not be empty`);\r\n        }\r\n        return new APIPayload(command, queryParams, headers, moduleInfo, req);\r\n    }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport * as XLSX from 'xlsx';\r\n\r\nimport { LocaleAppResourcesService } from '../services/locale-app-resources.service';\r\nimport { Index } from '../utils/index.enum';\r\nimport { Observable } from 'rxjs';\r\nimport { empty } from 'rxjs';\r\nimport { saveAs } from 'file-saver';\r\nimport { EMPTY } from 'rxjs';\r\ndeclare const html2canvas: any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PCEService {\r\n  private exportObj: any = {};\r\n\r\n  header: any;\r\n  constructor(\r\n    private datePipe: DatePipe,\r\n    private localAppResource: LocaleAppResourcesService\r\n  ) {}\r\n\r\n  // copy\r\n  setDataForCopy(dataArray) {\r\n    const headerData = this.jsonfyPlanCardHeaderData(this.header);\r\n    let copyString = this.convertArrayToString(headerData, true);\r\n    copyString += this.convertArrayToString(dataArray);\r\n    copyString += this.appendFooter(copyString);\r\n    this.setTextToCopy(copyString);\r\n  }\r\n  jsonfyPlanCardHeaderData(data) {\r\n    const result = [];\r\n    for (const key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        result.push({\r\n          A: key,\r\n          B: data[key]\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  planCardHeaderData(header?) {\r\n    if (header) {\r\n      this.header = header;\r\n    }\r\n  }\r\n  convertArrayToString(data, hideTopRow = false) {\r\n    let copystring = '';\r\n    if (!hideTopRow) {\r\n      copystring += this.setRowHeader(data[0]);\r\n    }\r\n    for (let j = 0; j < data.length; j++) {\r\n      for (const key in data[j]) {\r\n        if (data[j].hasOwnProperty(key)) {\r\n          copystring += '\"' + data[j][key] + '\"\\t';\r\n        }\r\n      }\r\n      copystring += '\\r\\n';\r\n    }\r\n    copystring += '\\r\\n';\r\n    return copystring;\r\n  }\r\n  setRowHeader(data) {\r\n    let str = '';\r\n    for (const key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        str += '\"' + key + '\"\\t';\r\n      }\r\n    }\r\n    str += '\\n';\r\n    return str;\r\n  }\r\n  appendFooter(copystring) {\r\n    return '\\r\\n' + this.getFooter();\r\n  }\r\n  getFooter() {\r\n    const FOOTER = this.localAppResource.getResource('FooterForReports');\r\n    return FOOTER;\r\n  }\r\n  setTextToCopy(data) {\r\n    let success = false;\r\n    let tmpElem = document.createElement('textarea');\r\n    tmpElem.style.position = 'fixed';\r\n    tmpElem.style.top = '0px';\r\n    tmpElem.style.left = '-99999px';\r\n    tmpElem.setAttribute('readonly', '');\r\n    tmpElem.value = data;\r\n    document.body.appendChild(tmpElem);\r\n    tmpElem.select();\r\n    tmpElem.focus();\r\n    tmpElem.setSelectionRange(0, tmpElem.value.length);\r\n    let succeeded;\r\n    try {\r\n      succeeded = window.document.execCommand('copy');\r\n      success = true;\r\n      console.warn('copy success status:', succeeded);\r\n      if (!succeeded) {\r\n        throw succeeded;\r\n      }\r\n    } catch (err) {\r\n      success = false;\r\n    }\r\n    document.body.removeChild(tmpElem);\r\n    tmpElem = null;\r\n    return success;\r\n  }\r\n\r\n  // export\r\n  exportData(components?: any) {\r\n    if (components.length > 0) {\r\n      Promise.all([\r\n        components[Index.FIRST].workbookOptions(),\r\n        components[Index.SECOND].workbookOptions(),\r\n        components[Index.THIRD].workbookOptions()\r\n      ]).then(workbooks => {\r\n        workbooks[Index.FIRST].sheets[Index.FIRST].rows = workbooks[\r\n          Index.FIRST\r\n        ].sheets[Index.FIRST].rows.concat(\r\n          [{}],\r\n          workbooks[Index.SECOND].sheets[Index.FIRST].rows,\r\n          workbooks[Index.THIRD].sheets[Index.FIRST].rows\r\n        );\r\n        components[Index.FIRST].save(workbooks[Index.FIRST]);\r\n      });\r\n    }\r\n  }\r\n\r\n  exportExcelData(data?: any, fileName?: string) {\r\n    const header = this.header;\r\n    const tempHeader = this.jsonfyPlanCardHeaderData(header);\r\n    const tempFooterArray = [];\r\n    const footerData = this.getFooter();\r\n    tempFooterArray.push({ ' ': footerData });\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(tempHeader, {\r\n      skipHeader: true\r\n    });\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    const headerCount = Object.keys(header).length + 2;\r\n    XLSX.utils.sheet_add_json(worksheet, data, { origin: 'A' + headerCount });\r\n    XLSX.utils.sheet_add_json(worksheet, tempFooterArray, {\r\n      skipHeader: true,\r\n      origin: -1\r\n    });\r\n    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n    XLSX.writeFile(wb, fileName);\r\n  }\r\n\r\n  // print\r\n  setDataForPrint(dataArray) {\r\n    const dataHtml = this.createDataTableForPrint(dataArray);\r\n    const fntz = '10px';\r\n    const htmlstr =\r\n      this.getPlanCardHeaderForPrint(fntz) +\r\n      dataHtml +\r\n      this.getPlanCardFooterForPrint(fntz);\r\n    this.doPrintFrame(htmlstr);\r\n  }\r\n  execPCECommand(command, eleW, name): Observable<any> {\r\n    switch (command.action) {\r\n      case 'ExportGraph':\r\n        return this.exportGraph(command, eleW, name);\r\n      case 'PrintGraph':\r\n        return this.printGraph(command);\r\n      case 'CopyGraph':\r\n        return this.copyGraph(command, name);\r\n      case 'copyCohortData':\r\n        return this.copyCohort(command);\r\n    }\r\n    return EMPTY;\r\n  }\r\n  copyGraph(cmd, name): Observable<any> {\r\n    return new Observable(observer => {\r\n      if (name === 'copy') {\r\n        let headerData = this.jsonfyPlanCardHeaderData(cmd.header);\r\n        let copyString = this.convertArrayToString(headerData, true);\r\n        copyString += 'Milestones\\t\\r\\n\\r\\n';\r\n        headerData = this.jsonfyPlanCardHeaderData(cmd.metaData.milestone);\r\n        copyString += this.convertArrayToString(headerData, true);\r\n        copyString += 'Chart Data:\\t\\r\\n\\r\\n';\r\n        copyString += this.convertArrayToString(cmd.metaData.curve);\r\n        copyString += this.appendFooter(copyString);\r\n        this.setTextToCopy(copyString);\r\n        cmd.copyString = copyString;\r\n        observer.next(cmd);\r\n      }\r\n    });\r\n  }\r\n\r\n  copyCohort(cmd): Observable<any> {\r\n    return new Observable(observer => {\r\n      const headerData = this.jsonfyPlanCardHeaderData(cmd.header);\r\n      let copyString = this.convertArrayToString(headerData, true);\r\n      if (cmd.metaData.cohortData.length > 0) {\r\n        copyString += 'Cohort\\t\\r\\n\\r\\n';\r\n        copyString += this.convertArrayToString(cmd.metaData.cohortData);\r\n      }\r\n      if (cmd.metaData.dependencyData.length > 0) {\r\n        copyString += 'Dependency\\t\\r\\n\\r\\n';\r\n        copyString += this.convertArrayToString(cmd.metaData.dependencyData);\r\n      }\r\n      copyString += this.appendFooter(copyString);\r\n      this.setTextToCopy(copyString);\r\n      observer.next(cmd);\r\n    });\r\n  }\r\n\r\n  printGraph(cmd): Observable<any> {\r\n    return new Observable(observer => {\r\n      html2canvas(cmd.domElement).then(canvas => {\r\n        const dataHtml = '<img src=\"' + canvas.toDataURL() + '\">';\r\n        const headerStr = this.getHeaderAsHtmlStr(cmd.header);\r\n        const fntz = '10px';\r\n        const htmlstr =\r\n          headerStr + dataHtml + this.getPlanCardFooterForPrint(fntz);\r\n        this.doPrintFrame(htmlstr);\r\n        observer.next(cmd);\r\n      });\r\n    });\r\n  }\r\n  exportGraph(cmd, eleW, name): Observable<any> {\r\n    return new Observable(observer => {\r\n      html2canvas(cmd.domElement).then(canvas => {\r\n        const fntz = '10px';\r\n        const imgsrc = this.getHeaderAsHtmlStr(cmd.header);\r\n        let windowContent = '<div >';\r\n        windowContent += imgsrc;\r\n        windowContent += '<div><img src=\"' + canvas.toDataURL() + '\"></div>';\r\n        windowContent += this.getPlanCardFooterForPrint(fntz);\r\n        windowContent += '</div>';\r\n        const tmpDiv = document.createElement('div');\r\n        tmpDiv.setAttribute('id', 'dummyexportDiv');\r\n        tmpDiv.innerHTML = windowContent;\r\n        // style the div so that html2canvas can find it...\r\n        console.log('html2canvas', windowContent);\r\n        tmpDiv.style.position = 'absolute';\r\n        tmpDiv.style.left = '0px';\r\n        tmpDiv.style.top = '0px';\r\n        tmpDiv.style.zIndex = '-1';\r\n        tmpDiv.style.backgroundColor = 'white';\r\n        tmpDiv.style.padding = '45px';\r\n        document.body.appendChild(tmpDiv);\r\n        html2canvas(tmpDiv).then(cnvs => {\r\n          console.log(canvas.toDataURL());\r\n          this.downloadCanvas(cnvs, 'png', name, this.save);\r\n          observer.next(cmd);\r\n        });\r\n      });\r\n    });\r\n  }\r\n  downloadCanvas(canvas, format, name, callback) {\r\n    canvas.toBlob(function(blob) {\r\n      const filesize = Math.round(blob[length] / 1024) + ' KB';\r\n      if (callback) {\r\n        callback(blob, filesize, name);\r\n      }\r\n    });\r\n  }\r\n  save(dataBlob, filesize, name) {\r\n    saveAs(dataBlob, name + '.png'); // FileSaver.js function\r\n    const ref = document.getElementById('dummyexportDiv');\r\n    ref.parentNode.removeChild(ref);\r\n  }\r\n  createDataTableForPrint(data) {\r\n    let tempstring = '<div style=\"margin-top:20px;\"><table>';\r\n    tempstring += this.createHeaderForPrint(data[0]);\r\n    tempstring += '<tbody>';\r\n    for (let j = 0; j < data.length; j++) {\r\n      tempstring += '<tr>';\r\n      for (const key in data[j]) {\r\n        if (data[j].hasOwnProperty(key)) {\r\n          tempstring += '<td>' + data[j][key] + '</td>';\r\n        }\r\n      }\r\n      tempstring += '</tr>';\r\n    }\r\n    tempstring += '</tbody></table></div>';\r\n    return tempstring;\r\n  }\r\n  createHeaderForPrint(data) {\r\n    let str = '<thead><tr>';\r\n    for (const key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        str += '<th>' + key + '</th>';\r\n      }\r\n    }\r\n    str += '</tr></thead>';\r\n    return str;\r\n  }\r\n  getHeaderAsHtmlStr(data) {\r\n    let str =\r\n      '<div class=\"header\" style=\"font: 11pt sans-serif;color:\"#000\" font-size:${fntz}\">' +\r\n      '<table>';\r\n    for (const key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        str +=\r\n          '<tr>' +\r\n          '  <td> ' +\r\n          key +\r\n          '</td>' +\r\n          '<td>' +\r\n          data[key] +\r\n          '</td>' +\r\n          '</tr>';\r\n      }\r\n    }\r\n    str += '</table></div>';\r\n    return str;\r\n  }\r\n  getPlanCardHeaderForPrint(fntz) {\r\n    const headerData = this.header;\r\n    console.log(headerData);\r\n    let headerStr = '';\r\n\r\n    for (const key in headerData) {\r\n      if (headerData.hasOwnProperty(key)) {\r\n        headerStr +=\r\n          '<tr>' + `<td>${key}</td>` + ` <td>${headerData[key]}</td>` + '</tr>';\r\n      }\r\n    }\r\n    return (\r\n      '<div class=\"header\" style=\"font: 11pt sans-serif; font-size:${fntz}\">' +\r\n      '<table>' +\r\n      headerStr +\r\n      '</table>' +\r\n      '</div>'\r\n    );\r\n  }\r\n  getPlanCardFooterForPrint(fntz) {\r\n    let footerData = this.getFooter();\r\n    footerData = footerData.replace(\r\n      '<Organization Name>',\r\n      '&lt;Organization Name&gt;'\r\n    );\r\n    return `<div style=\"text-align:center; font-size: 14px\"><p><strong> ${footerData} </strong></p></div>`;\r\n  }\r\n  // doPrintFrame(htmlstr) {\r\n  //    htmlstr = htmlstr + this.appendStyleForTable();\r\n  //   const frame1 = document.createElement('iframe');\r\n  //   frame1.name = 'frame1';\r\n  //   frame1.style.position = 'absolute';\r\n  //   frame1.style.top = '-1000000px';\r\n  //   document.body.appendChild(frame1);\r\n  //   const frameDoc = frame1.contentWindow ? frame1.contentWindow :\r\n  //     frame1.contentDocument['document'] ? frame1.contentDocument['document'] : frame1.contentDocument;\r\n  //   frameDoc.document.open();\r\n  //   frameDoc.document.write(htmlstr);\r\n  //   frameDoc.document.close();\r\n  //   if (frameDoc.queryCommandSupported && frameDoc.queryCommandSupported('print')) {\r\n  //     frameDoc.execCommand('print', false, null);\r\n  //   } else {\r\n  //     // window.frames['frame1'].focus();\r\n  //     // window.frames['frame1'].print();\r\n  //     frame1.contentWindow.document.write(htmlstr);\r\n  //     frame1.contentWindow.print();\r\n  //   }\r\n\r\n  // }\r\n  doPrintFrame(htmlstr) {\r\n    const ua = window.navigator.userAgent;\r\n    const msie = ua.indexOf('MSIE');\r\n    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\r\n      htmlstr = htmlstr + this.appendStyleForTable(true);\r\n    } else {\r\n      htmlstr = htmlstr + this.appendStyleForTable(false);\r\n    }\r\n    htmlstr = htmlstr + this.appendStyleForTable();\r\n    const frame1 = document.createElement('iframe');\r\n    frame1.name = 'frame1';\r\n    frame1.style.position = 'absolute';\r\n    frame1.style.top = '-1000000px';\r\n    document.body.appendChild(frame1);\r\n    const frameDoc = frame1.contentWindow\r\n      ? frame1.contentWindow\r\n      : frame1.contentDocument['document']\r\n      ? frame1.contentDocument['document']\r\n      : frame1.contentDocument;\r\n    frameDoc.document.open();\r\n    frameDoc.document.write(htmlstr);\r\n    frameDoc.document.close();\r\n    window.setTimeout(() => {\r\n      if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\r\n        const result = frame1.contentWindow.document.execCommand(\r\n          'print',\r\n          false,\r\n          null\r\n        );\r\n        if (!result) {\r\n          window.frames['frame1'].contentWindow.print();\r\n        }\r\n      } else {\r\n        frame1.contentWindow.print();\r\n      }\r\n    }, 1000);\r\n  }\r\n  appendStyleForTable(type?: boolean) {\r\n    // tslint:disable-next-line:max-line-length\r\n    // return '<style> @media all { table,th,td{ border: 1px solid black; border-collapse: collapse  }  table{ page-break-after: auto; width:100%; margin-top:10px;font-size:0.3vw;counter-reset: page 1;}tr {page-break-inside: avoid;page-break-after: always}td:not(:first-child){padding:1px; white-space: nowrap; }table { page-break-inside: auto}tr { page-break-inside: auto;page-break-after: auto}thead {display: table-header-group}tfoot {display: table-footer-group}@media all and (-webkit-min-device-pixel-ratio:0) {<style> table,th,td{ border: 1px solid black; border-collapse: collapse  }  table{ page-break-after: auto; width:100%; margin-top:10px;font-size:0.8vw;} tr{page-break-inside: avoid;page-break-after: auto} td:not(:first-child){padding:1px; white-space: nowrap; } table{ page-break-inside: auto} tr{ page-break-inside: auto;page-break-after: auto} thead{display: table-header-group} tfoot{display: table-footer-group </style>';\r\n    if (type) {\r\n      // tslint:disable-next-line:max-line-length\r\n      return '<style> @page {margin:1.5cm 0.4cm;} @media all { table,th,td{ border: 1px solid black; border-collapse: collapse  } .header td{width:50%;}table{ page-break-after: auto; width:100%; margin-top:10px;font-size:0.386vw;counter-reset: page 1;}tr {page-break-inside: avoid;page-break-after: always}td {padding:1px; white-space:wrap; max-width:10px; width:10px;word-wrap:break-word; }td:first-child{max-width:30px; width:30px;} th{ width:10px; word-wrap: break-word;} table { page-break-inside: auto}tr { page-break-inside: auto;page-break-after: auto}thead {display: table-header-group}tfoot {display: table-footer-group} } </style>';\r\n    } else {\r\n      // tslint:disable-next-line:max-line-length\r\n      return '<style>@media all and (-webkit-min-device-pixel-ratio:0) { table,th,td{ border: 1px solid black; border-collapse: collapse  } .header td{width:50%;} table{ page-break-after: auto; width:100%; margin-top:10px;font-size:0.8vw;} tr{page-break-inside: avoid;page-break-after: auto} td:not(:first-child){padding:1px; white-space: nowrap; } table{ page-break-inside: auto} tr{ page-break-inside: auto;page-break-after: auto} thead{display: table-header-group} tfoot{display: table-footer-group} </style>';\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Action } from './../models/action';\r\nimport { ResetPassword } from './../models/reset-password';\r\nimport { BaseConnectionService } from './base-connection.service';\r\nimport { PayloadCommandService } from './payload-command.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResetPasswordService {\r\n\r\n  constructor(private payloadCommandService: PayloadCommandService,\r\n    private baseConnectionService: BaseConnectionService) {\r\n\r\n  }\r\n  changeCurrUserPassword(params?: ResetPassword, actionParam?: Action): Observable<any> {\r\n    const moduleInfo = {\r\n      moduleName: 'NEWPLANTAB'\r\n    };\r\n    const passwordPayLoad = this.payloadCommandService.getCommandDetails('changeCurrUserPassword', params, null, null, moduleInfo);\r\n    return this.baseConnectionService.sendRequest(passwordPayLoad).pipe(map(data => data));\r\n    // return of([]);\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { Action } from '../models/action';\r\n\r\nexport class RestApiService {\r\n\r\n    constructor(\r\n        protected httpClient: HttpClient\r\n    ) {}\r\n\r\n    protected getMethod(endPointUrl: string, baseParam: Action, httpOptions: {}): Observable<any> {\r\n        return this.httpClient.get(`${endPointUrl}${baseParam.url}`, { ...httpOptions })\r\n            .pipe(map(res => this.handleResponse(res)), catchError(error => this.handleHttpError('get', error)));\r\n    }\r\n\r\n    protected postMethod(endPointUrl: string, baseParam: Action, httpOptions: {}, reqData: any): Observable<any> {\r\n        return this.httpClient.post(`${endPointUrl}${baseParam.url}`, reqData, { ...httpOptions })\r\n            .pipe(map(res => this.handleResponse(res)), catchError(error => this.handleHttpError('post', error)));\r\n    }\r\n\r\n    protected put(endPointUrl: string, baseParam: Action, httpOptions: {}, reqData: any): Observable<any> {\r\n        return this.httpClient.put(`${endPointUrl}${baseParam.url}`, reqData, { ...httpOptions })\r\n            .pipe(map(res => this.handleResponse(res)), catchError(error => this.handleHttpError('put', error)));\r\n    }\r\n\r\n    protected delete(endPointUrl: string, baseParam: Action, httpOptions: {}, id: string | number): Observable<any> {\r\n        return this.httpClient.delete(`${endPointUrl}${baseParam.url}/${id}`, { ...httpOptions })\r\n            .pipe(map(res => this.handleResponse(res)), catchError(error => this.handleHttpError('delete', error)));\r\n    }\r\n\r\n    private handleResponse(res: Response | any) {\r\n        return res.body ? res.body : res || {};\r\n    }\r\n\r\n    /**\r\n     * Handles error\r\n     * @param [operation]\r\n     * @param [result]\r\n     * @returns\r\n     */\r\n    private handleHttpError<T>(operation = 'operation', error: Error | HttpErrorResponse) {\r\n        let errMsg: string;\r\n        if (error instanceof HttpErrorResponse) {\r\n            if (!navigator.onLine) {\r\n                // No Internet connection\r\n                console.log('No Internet Connection');\r\n            }\r\n\r\n            // TODO\r\n            /* if (environment.production) {\r\n                if (error.status === 401 || error.status === 0) {\r\n                    // redirect to any where\r\n                }\r\n            } */\r\n\r\n            errMsg = `${error.status} - ${error.message || ''}`;\r\n        } else {\r\n            // server(api) side error\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n\r\n        console.log(`${operation} failed: ${error.message}`);\r\n        return Promise.reject(error);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { EncryptionAction } from '../utils/cache/encryption-action.enum';\r\nimport { Action } from './../models/action';\r\nimport { ServerParam } from './../models/server-param';\r\nimport { CacheKey } from './../utils/cache-key.enum';\r\nimport { CacheType } from './../utils/cache/cache-type.enum';\r\nimport { StoreType } from './../utils/cache/store-type.enum';\r\nimport { BaseConnectionService } from './base-connection.service';\r\nimport { PayloadCommandService } from './payload-command.service';\r\nimport { APIEndPoints } from '../models/api-end-points.enum';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ServerStatusService {\r\n\r\n    /**\r\n     * Creates an instance of server status service.\r\n     * @param payloadCommandService\r\n     * @param baseConnectionService\r\n     */\r\n    constructor(private payloadCommandService: PayloadCommandService,\r\n        private baseConnectionService: BaseConnectionService) {\r\n\r\n    }\r\n    serverStatus = null;\r\n\r\n    /**\r\n     * Gets server status\r\n     * @param serverInfo\r\n     * @param [cacheType]\r\n     * @returns\r\n     */\r\n    getServerStatus(serverInfo, actionParam?: Action): Observable<any> {\r\n        if (!serverInfo) {\r\n            throw new Error(`server Info can not be empty or undefined`);\r\n        }\r\n        if (!this.typeCheck(serverInfo)) {\r\n            throw new Error(`Invalid server Info object`);\r\n        }\r\n\r\n        actionParam = !actionParam ? {} as Action : actionParam;\r\n\r\n        actionParam.cacheType = CacheType.sticky;\r\n        actionParam.storeType = StoreType.Session;\r\n        actionParam.cacheKey = CacheKey.ServerKey;\r\n        actionParam.reportError = false;\r\n        actionParam.encryption = EncryptionAction.encrypt;\r\n        actionParam.cmdName = ''; // reset cmd name\r\n        actionParam.xmlRequest = '';\r\n\r\n        const moduleInfo = {\r\n            moduleName: 'NEWPLANTAB'\r\n        };\r\n\r\n        const headers = {\r\n            'jsonRequest': 'true'\r\n        };\r\n\r\n        if (actionParam.endPoint) {\r\n            actionParam.url = APIEndPoints.SERVER_STATUS;\r\n        }\r\n\r\n        const that = this;\r\n        // TODO Removed hard coded values\r\n        let serverStatusPayload;\r\n        if (actionParam.endPoint) {\r\n            serverStatusPayload = that.payloadCommandService.getApiRequest('getServerStatus', serverInfo, headers, moduleInfo);\r\n            return that.baseConnectionService.send(serverStatusPayload, actionParam\r\n                ).pipe(\r\n                    map(function (resp) {\r\n                        that.serverStatus = resp;\r\n                        return that.serverStatus;\r\n                    }));\r\n        } else {\r\n            serverStatusPayload = that.payloadCommandService.getCommandDetails('getServerStatus', serverInfo, null, null, moduleInfo);\r\n            return that.baseConnectionService.sendRequest(serverStatusPayload, actionParam\r\n                ).pipe(\r\n                    map(function (resp) {\r\n                        that.serverStatus = resp;\r\n                        return that.serverStatus;\r\n                    }));\r\n        }\r\n    }\r\n\r\n    private typeCheck(obj: any): obj is ServerParam {\r\n        return (obj.clientVersion !== undefined && obj.clientBuildID !== undefined && obj.clientBuildDate !== undefined);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { OverlayRef, Overlay } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { MatSpinner } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nimport { map, scan } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n  private spinnerRef: OverlayRef = this.cdkSpinnerCreate();\r\n  spin$: Subject<boolean> = new Subject();\r\n  constructor(private overlay: Overlay) {\r\n    this.spin$\r\n      .asObservable()\r\n      .pipe(\r\n        map(val => (val ? 1 : -1)),\r\n        scan((acc, one) => (acc + one >= 0 ? acc + one : 0), 0)\r\n      )\r\n      .subscribe(res => {\r\n        if (res === 1) {\r\n          this.showSpinner();\r\n        } else if (res === 0) {\r\n          if (this.spinnerRef.hasAttached()) {\r\n            this.stopSpinner();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  private cdkSpinnerCreate() {\r\n    return this.overlay.create({\r\n      hasBackdrop: true,\r\n      backdropClass: 'dark-backdrop',\r\n      positionStrategy: this.overlay\r\n        .position()\r\n        .global()\r\n        .centerHorizontally()\r\n        .centerVertically(),\r\n    });\r\n  }\r\n\r\n  showSpinner() {\r\n    this.spinnerRef.attach(new ComponentPortal(MatSpinner));\r\n  }\r\n\r\n  stopSpinner() {\r\n    this.spinnerRef.detach();\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { from, fromEvent, interval, merge, Observable, of, Subject, Subscription, timer } from 'rxjs';\r\nimport {\r\n  bufferTime,\r\n  distinctUntilChanged,\r\n  filter,\r\n  finalize,\r\n  map,\r\n  scan,\r\n  switchMap,\r\n  take,\r\n  takeUntil,\r\n  tap,\r\n} from 'rxjs/operators';\r\n\r\nimport { UserIdleConfig } from './../models/user-idle.config';\r\n\r\n/**\r\n * User's idle service.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserIdleService {\r\n  ping$: Observable<any>;\r\n\r\n  /**\r\n   * Events that can interrupts user's inactivity timer.\r\n   */\r\n  protected activityEvents$: Observable<any>;\r\n\r\n  protected timerStart$ = new Subject<boolean>();\r\n  protected timeout$ = new Subject<boolean>();\r\n  protected idle$: Observable<any>;\r\n  protected timer$: Observable<any>;\r\n  /**\r\n   * Idle value in seconds.\r\n   * Default equals to 10 minutes.\r\n   */\r\n  protected idle = 600;\r\n  /*   protected idle = 600; */\r\n  /**\r\n   * Timeout value in seconds.\r\n   * Default equals to 5 minutes.\r\n   */\r\n  protected timeout = 300;\r\n  /*   protected timeout = 3; */\r\n  /**\r\n   * Ping value in seconds.\r\n   * * Default equals to 2 minutes.\r\n   */\r\n  /*   protected ping = 1; */\r\n  protected ping = 120;\r\n  /**\r\n   * Timeout status.\r\n   */\r\n  protected isTimeout: boolean;\r\n  /**\r\n   * Timer of user's inactivity is in progress.\r\n   */\r\n  protected isInactivityTimer: boolean;\r\n\r\n  protected idleSubscription: Subscription;\r\n\r\n  constructor(@Optional() config: UserIdleConfig) {\r\n    if (config) {\r\n      this.idle = config.idle;\r\n      this.timeout = config.timeout;\r\n      this.ping = config.ping;\r\n    }\r\n\r\n    this.activityEvents$ = merge(\r\n      fromEvent(window, 'mousemove'),\r\n      fromEvent(window, 'resize'),\r\n      fromEvent(document, 'keydown'),\r\n      fromEvent(document, 'keyup')\r\n    );\r\n\r\n    this.idle$ = from(this.activityEvents$);\r\n  }\r\n\r\n  /**\r\n   * Start watching for user idle and setup timer and ping.\r\n   */\r\n  startWatching() {\r\n    if (this.idleSubscription) {\r\n      this.idleSubscription.unsubscribe();\r\n    }\r\n\r\n    // If any of user events is not active for idle-seconds when start timer.\r\n    this.idleSubscription = this.idle$\r\n      .pipe(\r\n        bufferTime(5000), // Starting point of detecting of user's inactivity\r\n        filter(arr => !arr.length && !this.isInactivityTimer),\r\n        tap(() => this.isInactivityTimer = true),\r\n        switchMap(() => interval(1000).pipe(\r\n          takeUntil(\r\n            merge(\r\n              this.activityEvents$,\r\n              timer(this.idle * 500).pipe(\r\n                tap(() => this.timerStart$.next(true))\r\n              )\r\n            )\r\n          ),\r\n          finalize(() => (this.isInactivityTimer = false))\r\n        )\r\n        )\r\n      )\r\n      .subscribe();\r\n\r\n    this.setupTimer(this.timeout);\r\n    this.setupPing(this.ping);\r\n  }\r\n\r\n  stopWatching() {\r\n    this.stopTimer();\r\n    if (this.idleSubscription) {\r\n      this.idleSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  stopTimer() {\r\n    this.timerStart$.next(false);\r\n  }\r\n\r\n  resetTimer() {\r\n    this.stopTimer();\r\n    this.isTimeout = false;\r\n  }\r\n\r\n  /**\r\n   * Return observable for timer's countdown number that emits after idle.\r\n   */\r\n  onTimerStart(): Observable<number> {\r\n    return this.timerStart$.pipe(\r\n      distinctUntilChanged(),\r\n      switchMap(start => (start ? this.timer$ : of(null)))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return observable for timeout is fired.\r\n   */\r\n  onTimeout(): Observable<boolean> {\r\n    return this.timeout$.pipe(\r\n      filter(timeout => !!timeout),\r\n      tap(() => this.isTimeout = true),\r\n      map(() => true)\r\n    );\r\n  }\r\n\r\n  getConfigValue(): UserIdleConfig {\r\n    return {\r\n      idle: this.idle,\r\n      timeout: this.timeout,\r\n      ping: this.ping\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Set config values.\r\n   * @param config\r\n   */\r\n  setConfigValues(config: UserIdleConfig) {\r\n    if (this.idleSubscription && !this.idleSubscription.closed) {\r\n      console.error('Call stopWatching() before set config values');\r\n      return;\r\n    }\r\n\r\n    if (config.idle) {\r\n      this.idle = config.idle;\r\n    }\r\n    if (config.ping) {\r\n      this.ping = config.ping;\r\n    }\r\n    if (config.timeout) {\r\n      this.timeout = config.timeout;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup timer.\r\n   *\r\n   * Counts every seconds and return n+1 and fire timeout for last count.\r\n   * @param timeout Timeout in seconds.\r\n   */\r\n  protected setupTimer(timeout: number) {\r\n    this.timer$ = interval(1000).pipe(\r\n      take(timeout),\r\n      map(() => 1),\r\n      scan((acc, n) => acc + n),\r\n      tap(count => {\r\n        if (count === timeout) {\r\n          this.timeout$.next(true);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Setup ping.\r\n   *\r\n   * Pings every ping-seconds only if is not timeout.\r\n   * @param ping\r\n   */\r\n  protected setupPing(ping: number) {\r\n    this.ping$ = interval(ping * 1000).pipe(\r\n      filter(() => !this.isTimeout)\r\n    );\r\n  }\r\n}\r\n","import { formatNumber } from '@angular/common';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { UrlSegment } from '@angular/router';\r\nimport * as momentNS from 'moment';\r\n\r\nconst moment = momentNS;\r\n\r\n/**\r\n * App util\r\n */\r\nexport class AppUtil {\r\n  /**\r\n   * Checks if the element exists in the given array\r\n   *\r\n   * @param arr\r\n   * @param element\r\n   * @returns\r\n   * @memberof AppUtil\r\n   */\r\n  static checkElementExistsInArray(arr: any[], element) {\r\n    if (arr === undefined || arr === null) {\r\n      throw new Error('arr should be defined');\r\n    }\r\n    if (!(arr instanceof Array)) {\r\n      throw new Error('arr should be an array');\r\n    }\r\n    if (element === undefined || element === null) {\r\n      throw new Error('element should be defined');\r\n    }\r\n    const result = arr.some(function (el) {\r\n      return el.key === element.key;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * extracts and concatenates the path from URL segments\r\n   *\r\n   * @param url\r\n   * @returns\r\n   * @memberof AppUtil\r\n   */\r\n\r\n  static extractPathFromUrl(url: UrlSegment[]) {\r\n    if (url === undefined || url === null) {\r\n      throw new Error('url must be defined');\r\n    }\r\n    if (!(url instanceof Array)) {\r\n      throw new Error('url must be of type UrlSegment');\r\n    }\r\n    const paths = url.map(segment => segment.path);\r\n    const path = paths.join('/');\r\n    return path;\r\n  }\r\n\r\n  static getInitials(text: string, separator: string): string {\r\n    if (text === undefined || text === null) {\r\n      throw new Error('text should be defined');\r\n    }\r\n    if (typeof text !== 'string') {\r\n      throw new Error('text should be string');\r\n    }\r\n    const arr = text.split(separator);\r\n    const initials = arr.map(t => {\r\n      return t\r\n        .trim()\r\n        .charAt(0)\r\n        .toUpperCase();\r\n    });\r\n    return initials.join('');\r\n  }\r\n\r\n  static getNameInitials(name: string, separator: string): string {\r\n    if (name === undefined || name === null) {\r\n      throw new Error('name should be defined');\r\n    }\r\n\r\n    if (typeof name !== 'string') {\r\n      throw new Error('name should be string');\r\n    }\r\n\r\n    const arr = name.split(separator);\r\n    const initials = [];\r\n    if (arr.length > 0) {\r\n      initials.push(\r\n        arr[0]\r\n          .trim()\r\n          .charAt(0)\r\n          .toUpperCase()\r\n      );\r\n    }\r\n    if (arr.length > 1) {\r\n      initials.push(\r\n        arr[arr.length - 1]\r\n          .trim()\r\n          .charAt(0)\r\n          .toUpperCase()\r\n      );\r\n    }\r\n    return initials.join('');\r\n  }\r\n\r\n  static generateUrl(baseHref: string, fragment: string): string {\r\n    let url =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.hostname +\r\n      ':' +\r\n      window.location.port +\r\n      '/';\r\n\r\n    if (baseHref) {\r\n      url += baseHref + '/';\r\n    }\r\n    if (fragment) {\r\n      url += fragment + '/';\r\n    }\r\n    url += 'index.html';\r\n\r\n    return url;\r\n  }\r\n\r\n  static generateFlexUrl(baseHref: string): string {\r\n    let url = '';\r\n    url +=\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.hostname +\r\n      ':' +\r\n      window.location.port +\r\n      '/';\r\n    if (baseHref) {\r\n      url += baseHref + '/';\r\n    }\r\n    return url;\r\n  }\r\n\r\n  static dayDiff(fromdt: any, todt: any): number {\r\n    const fromDate = moment(fromdt);\r\n    const toDate = moment(todt);\r\n    const daysDifference = toDate.diff(fromDate, 'days');\r\n    return daysDifference;\r\n    // const weekDiffernce = daysDifference / 7;\r\n    // return weekDiffernce.toFixed(1) + ` ` + `Weeks`;\r\n  }\r\n\r\n  static dateDiff(dt1: any, dt2: any, by?: string, num?: number) {\r\n    const fromDate = moment(dt1);\r\n    const toDate = moment(dt2);\r\n    const dayDiff = toDate.diff(fromDate, 'd');\r\n    if (by === 'd') {\r\n      return dayDiff;\r\n    } else {\r\n      const weekDiff = (dayDiff + 1) / 7;\r\n      return weekDiff.toFixed(num);\r\n    }\r\n  }\r\n  static dateAdd(date: any, num: number) {\r\n    return moment(date).add(num, 'days');\r\n  }\r\n  static dateSubstract(date: any, num: number) {\r\n    return moment(date).subtract(num, 'days');\r\n  }\r\n  static dateFormatter(date?: any) {\r\n    return moment(date).format('YYYY-MM-DD');\r\n  }\r\n\r\n  static formatDate(date?: any, format: string = 'YYYY-MM-DD') {\r\n    return moment(date).format(format);\r\n  }\r\n\r\n  static formatDateStrict(date?: any, format: string = 'DD-MMM-YYYY', emptyValue: string = ''): string {\r\n    if (this.isDefined(date)) {\r\n      return moment(date).format(format);\r\n    } else {\r\n      return emptyValue;\r\n    }\r\n  }\r\n\r\n  static dateCompare(dt1: any, dt2: any) {\r\n    const date1 = dt1;\r\n    const date2 = dt2;\r\n    const days = moment(date2).diff(moment(date1), 'days');\r\n    if (days >= 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /********************************************************************\r\n  * Function : isValidDate\r\n  * Purpose: Utility method to validate date formate & the value.\r\n  * Valid formate: DD-MMM-YYYY (For e.g. 05-Dec-2016). If user enters something which is not in this format\r\n  * then it will return false. For e.g. 05..Dec.2016 will return false\r\n  *********************************************************************/\r\n  static isValidDate(dateStr: any) {\r\n    const currVal = dateStr;\r\n    const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\r\n    if (currVal === '' && currVal) {\r\n      return false;\r\n    }\r\n    const dtPattern = /^(([1-9]|0[1-9]|1[0-9]|2[0-9]|3[0-1])(-)(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(-)((19|20)\\d{2}))$/i;\r\n    const dtArray = currVal.match(dtPattern);\r\n    if (dtArray === null || dtArray === undefined) {\r\n      return false;\r\n    }\r\n    const dtDay = parseInt(dtArray[1], 10);\r\n    let dtMonth = months.indexOf(dtArray[4].toUpperCase()) + 1;\r\n    const dtYear = parseInt(dtArray[6], 10);\r\n    if (isNaN(dtMonth)) {\r\n      for (let i = 4; i <= 15; i++) {\r\n        if ((dtArray[i])) {\r\n          dtMonth = i - 3;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (dtMonth < 1 || dtMonth > 12) {\r\n      return false;\r\n    } else if (dtDay < 1 || dtDay > 31) {\r\n      return false;\r\n    } else if ((dtMonth === 4 || dtMonth === 6 || dtMonth === 9 || dtMonth === 11) && dtDay === 31) {\r\n      return false;\r\n    } else if (dtMonth === 2) {\r\n      const isleap = (dtYear % 4 === 0 && (dtYear % 100 !== 0 || dtYear % 400 === 0));\r\n      if (dtDay > 29 || (dtDay === 29 && !isleap)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static isDefined(value: string | number, isNumber: boolean = false): boolean {\r\n    let isDefined = false;\r\n    if (value !== undefined && value !== null) {\r\n      isDefined = true;\r\n      if (isNumber) {\r\n        value = parseFloat(value.toString().split(',').join(''));\r\n        isDefined = (isDefined && !isNaN(<number>value) && isFinite(<number>value));\r\n      } else {\r\n        isDefined = (isDefined && value.toString().trim() !== '');\r\n      }\r\n    }\r\n    return isDefined;\r\n  }\r\n\r\n  static formatDecimal(value: number, format?: string): number {\r\n    const formattedValue = formatNumber(value, 'en-US', format);\r\n    value = Number(formattedValue.split(',').join(''));\r\n    if (isNaN(value)) {\r\n      value = null;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  static stripNonnumbers(value: string): string {\r\n    const regEx = /[^0-9]/g;\r\n    return value ? value.replace(regEx, '') : value;\r\n  }\r\n\r\n  static isValidNumber(inputNumber: any): boolean {\r\n    if (inputNumber && (typeof inputNumber === 'string')) {\r\n      inputNumber = inputNumber.toString().trim();\r\n    }\r\n    if (inputNumber || inputNumber === 0) {\r\n      return !isNaN(inputNumber);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Checks if the given arrays are equal. If yes returns true and false otherwise.\r\n   *\r\n   * @param a\r\n   * @param b\r\n   * @memberof AppUtil\r\n   */\r\n  static areArraysEqual(a: Array<any>, b: Array<any>): boolean {\r\n    let arraysEqual = false;\r\n    if (a && b) {\r\n      arraysEqual = [...a].sort().join(',') === [...b].sort().join(',');\r\n    }\r\n    return arraysEqual;\r\n  }\r\n\r\n  /**\r\n   * Clears the validators applied on the formgroup as well as all its descendants\r\n   * and updates their validity\r\n   *\r\n   * @param formGroup\r\n   * @memberof AppUtil\r\n   */\r\n  static clearFormGroupValidators(formGroup: FormGroup) {\r\n    if (formGroup) {\r\n      for (const field in formGroup.controls) {\r\n        if (formGroup.get(field)) {\r\n          const fg = formGroup.get(field);\r\n          fg.clearValidators();\r\n          fg.updateValueAndValidity();\r\n          if ((<FormGroup>fg).controls) {\r\n            this.clearFormGroupValidators(<FormGroup>fg);\r\n          }\r\n        }\r\n      }\r\n      formGroup.clearValidators();\r\n      formGroup.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the error if any set on the form group as well as all its descendants\r\n   *\r\n   * @param form\r\n   * @memberof AppUtil\r\n   */\r\n  static resetFormErrors(form: AbstractControl) {\r\n    if (form) {\r\n      form.setErrors(null);\r\n      const fg = <FormGroup>form;\r\n      if (fg && fg.controls && Object.keys(fg.controls).length > 0) {\r\n        for (const field in fg.controls) {\r\n          if (fg.get(field)) {\r\n            const fgEntry = fg.get(field);\r\n            this.resetFormErrors(fgEntry);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n    * Calcuaters rate per frequency\r\n    * @param rate\r\n    * @param reportingPeriodVal\r\n    * @returns rate per frequency\r\n    */\r\n  static calcuaterRatePerFrequency(rate: number, reportingPeriodVal: number, isModify?: boolean): number {\r\n    const ZERO = 0;\r\n    if (this.isDefined(rate)) {\r\n      if (rate !== ZERO) {\r\n        const freq = reportingPeriodVal;\r\n        // if (isModify && isModify === true) {\r\n        //   return rate * freq;\r\n        // } else {\r\n        //   return (rate / freq);\r\n        // }\r\n        return rate;\r\n      } else {\r\n        return ZERO;\r\n      }\r\n    } else {\r\n      return ZERO;\r\n    }\r\n  }\r\n\r\n  /**\r\n    * Checks not empty\r\n    * @param [param]\r\n    * @returns true if not empty\r\n    */\r\n  static checkNotEmpty(param?: any): boolean {\r\n    const EMPTY = '';\r\n    if (param !== null && param !== undefined) {\r\n      if (param !== EMPTY) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n* Dates formatters\r\n* @param [date]\r\n* @returns\r\n*/\r\n  static dateFormatters(date?: any) {\r\n    const EMPTY = '';\r\n    if (this.isDefined(date)) {\r\n      return moment(date).format('YYYY-MM-DD');\r\n    } return EMPTY;\r\n  }\r\n\r\n\r\n}\r\n","\r\n/**\r\n * Cache key\r\n */\r\nexport enum CacheKey {\r\n    TermErrorKey = 'TermErrorKey',\r\n    TermLoginKey = 'TermLoginKey',\r\n    TermApplicationKey = 'TermApplicationKey',\r\n    TermKey = 'TermKey',\r\n    ServerKey = 'ServerKey',\r\n    UserDataKey = 'UserDataKey',\r\n    StudyDataKey = 'StudyDataKey',\r\n    StudyTagkey = 'StudyTagKey',\r\n    FilterDataKey = 'FilterDataKey',\r\n    GetAppDataKey = 'GetAppDataKey',\r\n    GetPlanListKey = 'GetPlanListKey',\r\n    GetStudyPlanKey = 'GetStudyPlanKey',\r\n    GetStudySummary = 'GetStudySummaryKey',\r\n    GetPlanList = 'GetPlanListKey',\r\n    updatePlantList = 'updatePlanListKey',\r\n    getSourceCohortList = 'getSourceCohortList',\r\n    getAllCohortList = 'getAllCohortList',\r\n    GetBriefPlanList = 'GetBriefPlanList',\r\n    GetPlanDetails = 'getPlanDetails',\r\n    GetFilterCountryData = 'GetFilterCountryData',\r\n    GetInterimAnalysisList = 'GetInterimAnalysisList',\r\n    GetStudyDetails = 'getStudyDetails',\r\n    GetStudyTags = 'GetStudyTags',\r\n    GetStudySettings = 'getStudySettings',\r\n    GetCohortDetails = 'GetCohortDetails'\r\n}\r\n","\r\n/**\r\n * Cache type\r\n */\r\nexport enum CacheType {\r\n    sticky = 'Yes',\r\n    nonsticky = 'No'\r\n}\r\n","\r\n/**\r\n * Encryption action\r\n */\r\nexport enum EncryptionAction {\r\n    encrypt = 'true',\r\n    noencrypt = 'false'\r\n}\r\n","\r\n/**\r\n * Store type\r\n */\r\nexport enum StoreType {\r\n    InMemory = 'In-Memory',\r\n    Session = 'Session',\r\n    // IndexDB = 'Index-DB',\r\n}\r\n","import { RedirectComponent } from '../components/redirect/redirect.component';\r\n\r\nexport class CommonRoutes {\r\n    static data = [\r\n        {\r\n            'path': 'new-plans',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'app1',\r\n                'moduleId': 35\r\n            }\r\n        },\r\n        {\r\n            'path': 'new-study',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'app2',\r\n                'moduleId': 36\r\n            }\r\n        }, {\r\n            'path': 'new-countries',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'app3',\r\n                'moduleId': 9\r\n            }\r\n        }, {\r\n            'path': 'new-sites',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'app4',\r\n                'moduleId': 5\r\n            }\r\n        }, {\r\n            'path': 'new-login',\r\n            'component': RedirectComponent,\r\n            'data': {\r\n                'externalUrlFragment': 'login',\r\n                'moduleId': 39\r\n            }\r\n        }\r\n    ];\r\n}\r\n","/*\r\n    HELP_MAP maps the helpId to its corresponding view path in online-help.\r\n    You need to connect with tech pubs team for getting the helpId and its path.\r\n */\r\nexport const HELP_MAP = {\r\n    8007: 'New_Plans_Tab/Components_of_the_New_Plans_Tab.htm',\r\n    8008: 'New_Plans_Tab/About_the_Plan_Properties_View.htm',\r\n    8009: 'New_Plans_Tab/About_the_Plan_Design_View.htm',\r\n    8010: 'New_Plans_Tab/About_the_Countries_View.htm',\r\n    8011: 'New_Plans_Tab/About_the_Rate_Adjustments_View.htm',\r\n    8012: 'New_Plans_Tab/About_the_Reports_View.htm',\r\n    8014: 'New_Plans_Tab/Defining_Percent_Site_Initiation_Schedule.htm',\r\n    8015: 'New_Plans_Tab/Defining_Custom_Site_Initiation_Schedule.htm'\r\n};\r\n\r\n/*\r\n    HELP_ID_CONSTANTS maps the helpId constant to its corresponding helpId\r\n */\r\nexport const HELP_ID_CONSTANTS = {\r\n    NEW_PLANS_TAB_VIEW: 8007,\r\n    PLAN_PROPERTIES_VIEW: 8008,\r\n    PLAN_DESIGN_VIEW: 8009,\r\n    COUNTRIES_VIEW: 8010,\r\n    RATE_ADJUSTMENTS_VIEW: 8011,\r\n    REPORTS_VIEW: 8012,\r\n    PERCENT_SI_VIEW: 8014,\r\n    CUSTOM_SI_VIEW: 8015,\r\n    STUDY_ENROLLMENT_OVERVIEW_VIEW: 8016,\r\n    STUDY_MILESTONES_VIEW: 8017,\r\n    STUDY_REPORTS_VIEW: 8018,\r\n    SITE_ENROLLMENT_DETAILS: 7000,\r\n    SITE_SCORECARD: 7002,\r\n    SITE_DATA_MANAGMENT: 7003,\r\n    // TODO : Country team will change the later after discussing with Tejas\r\n    COUNTRY_PERFORMANCE_VIEW: 6000,\r\n    COHORT_PERFORMANCE_VIEW: 6000,\r\n    COHORT_PERFORMANCE_CHART: 6000\r\n};\r\n\r\nexport const DEFAULT_HELP_ID = 8007;\r\n\r\nexport const HELP_INDEX_PAGE_PATH = 'online-help/index.htm#t=';\r\n\r\nexport const HOSTED_HELP_COMMAND = 'HostedHelp';\r\n\r\nexport const HOSTED_HELP_URL = `${\r\n    window.location.origin\r\n    }/dv/StudyOptimizer/hostedhelp`;\r\n","\r\n/**\r\n * Http action type\r\n */\r\nexport enum HttpActionType {\r\n    get = 'Get',\r\n    post = 'Post',\r\n    delete = 'Delete',\r\n    put = 'Put'\r\n}\r\n\r\n","export enum Index {\r\n    FIRST = 0,\r\n    SECOND,\r\n    THIRD,\r\n    FOURTH,\r\n  }\r\n","\r\n\r\nexport const COMMON = {\r\n  RESULT_OK: 'OK',\r\n  RESULT_ERROR: 'ERROR'\r\n};\r\n\r\nexport const BASE_TERMS_PARAMS = {\r\n  commandName: 'GetTerms',\r\n  category: {\r\n    category: 'terms'\r\n  }\r\n};\r\n\r\nexport const LOCALE_APP_TERMS_PARAMS = {\r\n  commandName: 'GetTerms',\r\n  category: {\r\n    category: 'application'\r\n  }\r\n};\r\n\r\nexport const LOGOUT_PARAMS = {\r\n  commandName: 'Logout'\r\n};\r\n\r\nexport const LOGIN_PARAMS = {\r\n  commandName: 'GetTerms',\r\n  category: {\r\n    category: 'login'\r\n  }\r\n};\r\n\r\nexport const REPORTING_PERIOD_CONST = {\r\n  MONTH: 'MONTH',\r\n  WEEK: 'WEEK',\r\n  YEAR: 'YEAR',\r\n  QUARTER: 'QUARTER',\r\n  DAILY: 'DAY'\r\n};\r\n\r\nexport const BASE_HREF = 'dv/StudyOptimizer';\r\n\r\nexport const DEBOUNCE_TIME = 750;\r\n\r\nexport const DISPATCH_URL = `${\r\n  window.location.origin\r\n  }/dv/StudyOptimizer/dispatch`;\r\nexport const LOGGING_SERVLET_URL = `${\r\n  window.location.origin\r\n  }/dv/StudyOptimizer/loggingServlet`;\r\n\r\nexport const VALID_DATE_FORMATS = [\r\n  'MM-DD-YYYY',\r\n  'MM/DD/YYYY',\r\n  'YYYY-MM-DD',\r\n  'YYYY/MM/DD',\r\n  'DD-MMM-YYYY',\r\n  'DD/MMM/YYYY',\r\n  'DDMMMYYYY',\r\n  'YYYY-MMM-DD',\r\n  'YYYY/MMM/DD',\r\n  'MMM-DD-YYYY',\r\n  'MMM/DD/YYYY'\r\n];\r\n\r\nexport const DIALOG_CONFIG = {\r\n  LOGOUT: {\r\n    ID: 'LogoutDialog',\r\n    WIDTH: '25%',\r\n    PANEL_CLASS: 'logout-dialog'\r\n  },\r\n  ABOUT: {\r\n    ID: 'AboutDialog',\r\n    WIDTH: '50%',\r\n    PANEL_CLASS: 'about-dialog'\r\n  },\r\n  PASSWORD: {\r\n    ID: 'PasswordDialog',\r\n    WIDTH: '50%',\r\n    PANEL_CLASS: 'password-dialog'\r\n  },\r\n  CONFIRM_UNSAVED_DATA: {\r\n    WIDTH: '310px',\r\n    HEIGHT: '190',\r\n    PANEL_CLASS: 'unsaved-data-confirmation-dialog'\r\n  },\r\n  DELETE_PLAN: {\r\n    ID: 'DeletePlanDialog',\r\n    WIDTH: '310px',\r\n    HEIGHT: '180px',\r\n    PANEL_CLASS: 'delete-plan-confirmation-dialog'\r\n  },\r\n};\r\n\r\nexport const ALERT_TYPE = {\r\n  CancelLabel: 'CancelLabel',\r\n  OkLabel: 'OkLabel',\r\n  OK: 'OK',\r\n  YesLabel: 'YesLabel',\r\n  NoLabel: 'NoLabel'\r\n};\r\n\r\nexport const CUSTOM_ERROR_CODES = {\r\n  FSI_REQUIRED_FOR_FSS: {\r\n    error: 'FSIRequiredForFSS',\r\n    message: 'NonEmptyField'\r\n  },\r\n  REQUIRED: {\r\n    error: 'required',\r\n    message: 'NonEmptyField'\r\n  },\r\n  MIN: {\r\n    error: 'min',\r\n    message: 'minNumExceedError'\r\n  },\r\n  MAX: {\r\n    error: 'max',\r\n    message: 'maxNumExceedError'\r\n  },\r\n  MAT_DATEPICKER_PARSE: {\r\n    error: 'matDatepickerParse',\r\n    message: 'DateFormatIncorrect'\r\n  },\r\n  DAYS_TO_SI_AFTER_ARTB: {\r\n    error: 'daysToSIAfterARTB',\r\n    message: 'SIDateError'\r\n  },\r\n  ARTB_LT_EQ_FSI: {\r\n    error: 'ARTB_LT_EQ_FSI',\r\n    message: 'ARTblteqFSI'\r\n  },\r\n  ARTB__LT_EQ_FSS: {\r\n    error: 'ARTB__LT_EQ_FSS',\r\n    message: 'ARTblteqFSS'\r\n  },\r\n  FSI_GT_TLSS: {\r\n    error: 'FSI_GT_TLSS',\r\n    message: 'FSIgtTLSS'\r\n  },\r\n  FSILT_ERROR: {\r\n    error: 'FSILT_ERROR',\r\n    message: 'FSILTError'\r\n  },\r\n  DEPENDENCY_ERROR: {\r\n    error: 'DEPENDENCY_ERROR',\r\n    message: 'dependencyError'\r\n  }\r\n\r\n};\r\n\r\nexport const INDICATOR = {\r\n  INSERT: 'I',\r\n  UPDATE: 'U',\r\n  DELETE: 'D'\r\n};\r\nexport const DATE_FORMAT = {\r\n  NOTE_API_DATE_FORMAT: 'MMM-DD-YYYY HH:MM:SS',\r\n  NOTE_API_DATE_FORMAT_SMALL: 'MMM-DD-YYYY HH:mm:ss',\r\n  SERVER_DATE_FORMAT: 'YYYY-MM-DD',\r\n  MONTH_DATE_FORMAT: 'DD-MMM-YYYY'\r\n};\r\n\r\n","\r\n/**\r\n * String util\r\n */\r\nexport class StringUtil {\r\n\r\n    /**\r\n     * Escapes html\r\n     * @param text\r\n     * @returns html\r\n     */\r\n    static escapeHTML(text: string): string {\r\n        if (undefined === text || null === text) {\r\n            throw new Error('text should be defined');\r\n        }\r\n        if (typeof text !== 'string') {\r\n            throw new Error('text should be a string');\r\n        }\r\n        const replacements = {\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '&': '&amp;',\r\n            '\\\"': '&quot;',\r\n            '\\'': '&apos;'\r\n        };\r\n        const result = text.replace(/[<>&\"']/g, function (character) {\r\n            return replacements[character];\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Interpolates arguments into string\r\n     * for e.g. if str = test{0} and args=['abc']\r\n     * the method will return string 'testabc'\r\n     * @param str\r\n     * @param args\r\n     * @returns interpolate\r\n     */\r\n    static interpolate(str: string, args: string[]): string {\r\n        if (undefined === str || null === str) {\r\n            throw new Error('str should be defined');\r\n        }\r\n        if (typeof str !== 'string') {\r\n            throw new Error('str should be a string');\r\n        }\r\n        if (undefined === args || null === args) {\r\n            throw new Error('args should be defined');\r\n        }\r\n        if (!(args instanceof Array)) {\r\n            throw new Error('args should be an array');\r\n        }\r\n        if (args.length === 0) {\r\n            return str;\r\n        }\r\n        const result = str.replace(/(\\{([0-9])\\})/g, function (match, p1, idx) {\r\n            return args[idx];\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Converts a string into CamelCase\r\n     *\r\n     * @param s\r\n     * @returns string\r\n     * @memberof AppUtil\r\n     */\r\n    static camelize(s: string): string {\r\n        if (undefined === s || null === s) {\r\n            throw new Error('s should be defined');\r\n        }\r\n        let ret = '';\r\n        s = s.toLowerCase();\r\n        let arr = s.split(' ');\r\n        arr = arr.map((a) => {\r\n            const regex = /(?:^|[-_])(\\w)/g;\r\n            return a.replace(regex, function (stripped, letter) {\r\n                return letter ? letter.toUpperCase() : '';\r\n            });\r\n        });\r\n        ret = arr.join(' ');\r\n        return ret;\r\n    }\r\n\r\n    static substitute(str: string, args: string[]): string {\r\n        const result = str.replace(/(\\{([0-9])\\})/g, function (match, p1, idx) {\r\n            return args[idx];\r\n        });\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Public API Surface of common-library\r\n */\r\n\r\nexport * from './lib/common-library.module';\r\n\r\n// SERVICES\r\nexport * from './lib/services/base-connection.service';\r\nexport * from './lib/services/base-payload-command.service';\r\nexport * from './lib/services/payload-command.service';\r\nexport * from './lib/services/data.service';\r\nexport * from './lib/services/base-terms.service';\r\nexport * from './lib/services/error-terms.service';\r\nexport * from './lib/services/locale-app-resources.service';\r\nexport * from './lib/services/login-terms.service';\r\nexport * from './lib/services/server-status.service';\r\nexport * from './lib/services/user-idle.service';\r\nexport * from './lib/services/configuration.service';\r\nexport * from './lib/services/dependency-manager.service';\r\nexport * from './lib/services/error-terms-store.service';\r\nexport * from './lib/services/logout.service';\r\nexport * from './lib/services/reset-password.service';\r\nexport * from './lib/services/pce.service';\r\nexport * from './lib/services/cache/cache-store-manager.service';\r\nexport * from './lib/services/cache/encryption.service';\r\nexport * from './lib/services/spinner.service';\r\nexport * from './lib/services/dialog.service';\r\n\r\n\r\n// MODELS\r\nexport * from './lib/models/ApplicationError';\r\nexport * from './lib/models/user-idle.config';\r\nexport * from './lib/models/terms-param';\r\nexport * from './lib/models/server-param';\r\nexport * from './lib/models/environment-param';\r\nexport * from './lib/models/action';\r\nexport * from './lib/models/list-item';\r\nexport * from './lib/models/user-profile';\r\nexport * from './lib/models/appWindow';\r\nexport * from './lib/models/reset-password';\r\nexport * from './lib/models/search-list-input';\r\nexport * from './lib/models/search-list-item';\r\nexport * from './lib/models/confirmation';\r\nexport * from './lib/models/ctos-window';\r\nexport * from './lib/models/app-bootstrap';\r\nexport * from './lib/models/about-resource';\r\nexport * from './lib/models/password-resource';\r\nexport * from './lib/models/server-info';\r\nexport * from './lib/models/cache/cryptoJS-encryption';\r\nexport * from './lib/models/cache/encryption';\r\nexport * from './lib/models/tab-item';\r\nexport * from './lib/models/http-verbs';\r\nexport * from './lib/models/api-end-points.enum';\r\nexport * from './lib/models/nested-item';\r\n\r\n// UTILS\r\nexport * from './lib/utils/AppUtil';\r\nexport * from './lib/utils/string-util';\r\nexport * from './lib/utils/service-constant';\r\nexport * from './lib/utils/http-action-type.enum';\r\nexport * from './lib/utils/cache-key.enum';\r\nexport * from './lib/utils/common-routes';\r\nexport * from './lib/utils/cache/cache-type.enum';\r\nexport * from './lib/utils/cache/store-type.enum';\r\nexport * from './lib/utils/cache/encryption-action.enum';\r\nexport * from './lib/utils/help-constants';\r\n\r\n// COMPONENTS\r\nexport * from './lib/components/components.module';\r\nexport * from './lib/components/breadcrumb/breadcrumb.service';\r\nexport { ConfirmationDialogComponent } from './lib/components/confirmation-dialog/confirmation-dialog.component';\r\nexport { DisplayBannerComponent } from './lib/components/display-banner/display-banner.component';\r\nexport * from './lib/components/info/info.component';\r\nexport { NotesComponent } from './lib/components/notes/notes.component';\r\nexport * from './lib/components/nested-dropdown/nested-dropdown.component';\r\n\r\n// DIRECTIVES\r\nexport * from './lib/directives/confirm-equal-validator.directive';\r\nexport * from './lib/directives/signed-decimal.directive';\r\nexport * from './lib/directives/signed-integer.directive';\r\nexport * from './lib/directives/label-control.directive';\r\n\r\n// MODULES\r\nexport * from './lib/common-angular-material/common-angular-material.module';\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CustomPreloadStrategy } from './custom-preload-strategy';\r\n\r\nconst routes: Routes = [];\r\n\r\n\r\nimport { environment } from 'environments/environment';\r\nimport { AuthGuard } from 'so-common-library';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'sites',\r\n    // loadChildren: '../app/study/study.module#StudyModule',\r\n    loadChildren: () => import('../app/sites/sites.module').then(m => m.SitesModule),\r\n    canActivate: [AuthGuard],\r\n    data: { 'loginUrl': environment.login_url, 'moduleId': 5 }\r\n  },\r\n  {\r\n    path: '', redirectTo: 'sites', pathMatch: 'full', canActivate: [AuthGuard],\r\n    data: { 'loginUrl': environment.login_url, 'moduleId': 5 }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  // imports: [RouterModule.forRoot(routes)],\r\n  imports: [RouterModule.forRoot(appRoutes, { paramsInheritanceStrategy: 'always', preloadingStrategy: CustomPreloadStrategy })],\r\n  exports: [RouterModule],\r\n  providers: [CustomPreloadStrategy]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hcHA0L3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { CommonRoutes } from 'common-library';\r\nimport { UserDataService, WindowService } from 'so-common-library';\r\nimport { from, fromEvent, merge } from 'rxjs';\r\n\r\nimport { COEFFICIENT } from './app.constant';\r\nimport { environment } from 'environments/environment';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ctos-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(private router: Router,\r\n    private userDataService: UserDataService,\r\n    private windowService: WindowService) {\r\n    if (environment.production) {\r\n      this.router.config.unshift(\r\n        ...CommonRoutes.data\r\n      );\r\n      this.windowService.redirectAsPerParams();\r\n    }\r\n    // this.appBootstrapService.init();\r\n    // this.activityEvents();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize Appcues by identifying current user\r\n    (<any>window).Appcues.identify(this.userDataService.getUserId(), { // Replace with unique identifier for current user\r\n      name: this.userDataService.getUserName(),   // Current user's name\r\n      email: this.userDataService.getUserName(), // Current user's email\r\n      created_at: 1551171156765,    // Unix timestamp of user signup date\r\n    });\r\n\r\n    // Subscribe to router events\r\n    this.router.events.subscribe((res) => {\r\n      // check for NavigationEnd event to notify Appcues about 'page change'.\r\n      if (res instanceof NavigationEnd) {\r\n        if ((<any>window).Appcues) { // casting window as any to avoid, TypeScript compilation error.\r\n          (<any>window).Appcues.page();\r\n        }\r\n      }\r\n    });\r\n    // --- End of Appcues integration code. ---\r\n\r\n    // this.userDataService.userIdealWatch();\r\n    // this.userActiveEvents();\r\n  }\r\n\r\n  /**\r\n   * Monitor user activity events and store it in user ideal observable\r\n   */\r\n  activityEvents() {\r\n    this.userDataService.userIdeal$ = from(merge(\r\n      // fromEvent(document, 'keydown'),\r\n      // fromEvent(document, 'keyup'),\r\n      fromEvent(document, 'click')));\r\n  }\r\n\r\n  /**\r\n   * Monitor user activity events and call keep user alive api call periodically\r\n   */\r\n  userActiveEvents() {\r\n    const clicks$ = fromEvent(document, 'click');\r\n    clicks$.subscribe(e => this.userDataService.keepUserSessionAlive(COEFFICIENT));\r\n  }\r\n}\r\n","export const COEFFICIENT = 0.5;\r\n\r\nexport const USER_PARAMS = {\r\n    commandName: 'getUserData',\r\n    app: {\r\n        appType: 'SOMAIN'\r\n    }\r\n};\r\n\r\nexport const GSK_LOGO_URL = 'assets/images/';\r\nexport const ALERT_CONFIRM_URL = 'assets/images/alertConfirm.png';\r\n\r\nexport const ZERO = 0;\r\n\r\nexport const PAGE_IDS = {\r\n    ENROLLMENT_DETAILS: 'enrollment-details',\r\n    ENROLLMENT_SCORECARD: 'enrollment-scorecard',\r\n    DATA_MANAGEMENT_DETAILS: 'data-management-details'\r\n};\r\n\r\nexport const SITE_MODULE = 'SITES';\r\n\r\nexport const COMMAND = {\r\n    CENTER_SUMMARY : 'getCenterSummary',\r\n    RECRUITMENT_CENTER_LIST: 'getRecruitmentCenterList',\r\n    DM_CENTER_LIST: 'getDMCenterList'\r\n\r\n};\r\n\r\nexport const PAGES = {\r\n    ENROLLMENT_DETAILS: 'ENRODET',\r\n    DATA_MANAGEMENT_DETAILS: 'CNTRDM'\r\n};\r\n\r\nexport const SELECT_WORLD_WIDE = 'Worldwide';\r\nexport const DEFAULT_SELECTED = 'All';\r\nexport const WORLD_WIDE_CODE = 'WW';\r\nexport const UNMAPPED_COHORT = 'Unmapped';\r\nexport const NO_ID_IN_SOURCE = 'No ID in Source';\r\nexport const MAPPED_COHORT = 'Mapped';\r\nexport const YES = 'Y';\r\nexport const NO = 'N';\r\nexport const API_ENDPOINT = {\r\n    CENTER_SUMMARY : 'center/summary',\r\n    RECRUITMENT_CENTER_LIST: 'center/sitelist',\r\n    DM_CENTER_LIST: 'center/dmcenterlist'\r\n};\r\n\r\nexport const GEOGRAPHY_LEVEL = {\r\n    WORLDWIDE: 'WW',\r\n    COHORT: 'Cohort',\r\n    REGION: 'Region',\r\n    COUNTRY: 'Country',\r\n    SITE: 'Site'\r\n};\r\n\r\nexport const SITE_API_FORKJOIN_SEQ = {\r\n    CENTER_SUMMARY: 0,\r\n    RECRUITMENT_CENTER_LIST: 1,\r\n    STUDY_SUMMARY: 2,\r\n    DM_CENTER_LIST: 3\r\n};\r\n\r\nexport const SITE_DATA_MANAGEMENT_API_FORKJOIN_SEQ = {\r\n    CENTER_SUMMARY: 0,\r\n    DM_CENTER_LIST: 1\r\n};\r\n\r\nexport const ICON_CLEAR_TEMPLATE = '<i class=\"material-icons\" style=\"color: red;\"> clear </i>';\r\nexport const ICON_DONE_TEMPLATE = '<i class=\"material-icons\" style=\"color: green;\"> done </i>';\r\n\r\nexport const FILTER_PREFERENCES = {\r\n    SITE_FILTER_PREFERENCE: 'sites_filter_preference',\r\n    LASTVISITED_STUDYKEY: 'lastvisitedstudyID',\r\n    GEOGRAPHY: 'geography_key',\r\n    COHORT: 'cohort_key',\r\n    MONITOR: 'monitor_key',\r\n    RANDOMIZATION: 'randomization_key'\r\n};\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SoCommonLibraryModule, GlobalErrorHandler } from 'so-common-library';\r\nimport { AppService } from './app.service';\r\nimport { Interceptor } from './interceptor.service';\r\nimport { HeaderService } from './header/header.service';\r\nimport { AuthInterceptor } from './auth.interceptor';\r\n\r\nexport function init(appService: AppService) {\r\n  return () => {\r\n    return appService.load();\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    SoCommonLibraryModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    { provide: ErrorHandler, useClass: GlobalErrorHandler },\r\n    // {\r\n    //   provide: HTTP_INTERCEPTORS,\r\n    //   useClass: Interceptor,\r\n    //   multi: true\r\n    // },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: init,\r\n      deps: [AppService],\r\n      multi: true\r\n    },\r\n    AppService,\r\n    HeaderService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ServerInfo, Action } from 'common-library';\r\nimport { environment } from 'environments/environment';\r\nimport { BUILD_date, BUILD_type, BUILD_version } from 'product.constants';\r\nimport { AppBootstrapService } from 'so-common-library';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  constructor(private bootstrapService: AppBootstrapService) { }\r\n\r\n  // load() {\r\n  //   const  serverInfo: ServerInfo = {\r\n  //     clientVersion: BUILD_version,\r\n  //     clientBuildID: BUILD_type,\r\n  //     clientBuildDate: BUILD_date\r\n  //   };\r\n  //   return this.bootstrapService.call(environment, serverInfo);\r\n  // }\r\n\r\n  load() {\r\n    const  serverInfo: ServerInfo = {\r\n      clientVersion: BUILD_version,\r\n      clientBuildID: BUILD_type,\r\n      clientBuildDate: BUILD_date\r\n    };\r\n    const actionParam: Action = {};\r\n    actionParam.endPoint = true;\r\n    actionParam.prelogin = false;\r\n\r\n    return this.bootstrapService.call(environment, serverInfo, actionParam);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { environment } from 'environments/environment';\r\nimport { from, Observable, throwError } from 'rxjs';\r\nimport { catchError, map, finalize } from 'rxjs/operators';\r\nimport { ErrorTermsStoreService } from 'common-library';\r\nimport { ErrorMessageService, GlobalErrorHandler, LoadingScreenService } from 'so-common-library';\r\nimport { ZERO } from './app.constant';\r\n\r\n@Injectable()   // { providedIn: 'root' }\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n      private http: HttpClient,\r\n      private loadingScreenService: LoadingScreenService,\r\n      private errorMessageService: ErrorMessageService,\r\n      private errorTermsStoreService: ErrorTermsStoreService\r\n    ) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n      req = req.clone({\r\n        withCredentials: true\r\n      });\r\n\r\n      if (environment.production) {\r\n\r\n        return next.handle(req).pipe(catchError((error, caught) => {\r\n\r\n          // intercept the response error and display it in console\r\n          console.log('Error Occurred', error);\r\n\r\n          this.loadingScreenService.stopLoading();\r\n\r\n          // return the error to the method that called it\r\n          // TODO move error in new error inteceptor\r\n          if (error && error.status === ZERO) {\r\n            const globalErrorHandler = new GlobalErrorHandler(this.errorTermsStoreService, this.errorMessageService);\r\n            globalErrorHandler.handleError(error);\r\n          }\r\n          return throwError(error);\r\n\r\n        }) as any, finalize(() => {\r\n          this.loadingScreenService.stopLoading();\r\n        }));\r\n      } else {\r\n        // get command name - ex- getPlanDetails\r\n\r\n        const params = req.params;\r\n        /* console.log('Params : ', params.toString());\r\n        console.log('Params : ', params.get('category')); */\r\n\r\n        const parameter = params.get('category');\r\n        const commandName = req.headers.get('command');\r\n\r\n        if (!commandName) {\r\n          return next.handle(req);\r\n        }\r\n\r\n        // Fetch the respective static json and return as an observable\r\n        return from(this.http.get('./assets/data/' + commandName + '.json').pipe(map((data) => {\r\n          let responseData;\r\n          // If the static json consists of parameter nodes then fetch and send the respective node\r\n          // else send the complete json as respnse\r\n          if (parameter) {\r\n            if (data.hasOwnProperty(parameter)) {\r\n              responseData = data[parameter];\r\n            }\r\n          } else {\r\n            responseData = data;\r\n          }\r\n          // Wrap the json in HttpResponse object\r\n          return new HttpResponse({ status: 200, body: responseData });\r\n        })));\r\n      }\r\n    }\r\n}\r\n","import { PreloadingStrategy, Route } from '@angular/router';\r\n\r\nimport { Observable, of } from 'rxjs';\r\n\r\nexport class CustomPreloadStrategy implements PreloadingStrategy {\r\n  preload(route: Route, load: Function): Observable<any> {\r\n    return route.data && route.data.preload ? load() : of(null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  LocaleAppResourcesService, DialogService,\r\n  COMMON, ApplicationError, Action,\r\n  PayloadCommandService, CacheKey, BaseConnectionService, AppUtil, AboutResource, PasswordResource, APIEndPoints\r\n} from 'common-library';\r\nimport {\r\n  StudyListService, UserDataService, USER_PARAMS, COMMAND,\r\n  CTOSUtil, ResourceService, AppDataService, NOVALUE\r\n} from 'so-common-library';\r\nimport { BehaviorSubject, forkJoin, Observable } from 'rxjs';\r\nimport { map, mergeMap, catchError } from 'rxjs/operators';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { HttpVerbs } from 'projects/common-library/src/public_api';\r\n\r\n@Injectable()\r\nexport class HeaderService {\r\n  public studyRefreshDate: any;\r\n\r\n  private _studySummary: BehaviorSubject<any>;\r\n  searchListFormGroupName: FormGroup;\r\n\r\n  constructor(private localeAppResourcesService: LocaleAppResourcesService,\r\n    private studyListService: StudyListService,\r\n    private userDataService: UserDataService,\r\n    private dialogService: DialogService,\r\n    private payloadCommandService: PayloadCommandService,\r\n    private baseConnectionService: BaseConnectionService,\r\n    private resourceService: ResourceService,\r\n    private appDataService: AppDataService,\r\n    private studySearchFB: FormBuilder) {\r\n    this.searchListFormGroupName = this.studySearchFB.group({\r\n      searchListControl: [''],\r\n      filterListControl: ['']\r\n    });\r\n    this._studySummary = new BehaviorSubject(<any>{});\r\n  }\r\n\r\n  getLastVisitedStudyKey(): number {\r\n    return this.userDataService.getLastVisitedStudyKey();\r\n  }\r\n\r\n  get studySummary(): Observable<any> {\r\n    return this._studySummary.asObservable();\r\n  }\r\n\r\n  setSelectedStudyKey(data) {\r\n    this.dialogService.selectedStudyKey = data;\r\n  }\r\n\r\n  getStudytags(actionParam?: Action): Observable<any> {\r\n    return this.studyListService.getStudyTags(actionParam);\r\n  }\r\n\r\n  isCohortStudy(studyID: number): boolean {\r\n    const studyTag = this.studyListService.getStudyInfoByKey(studyID);\r\n    return studyTag && studyTag.cohortInd;\r\n  }\r\n\r\n  updateSelectedStudyPreferences(selectedStudy: any): Observable<any> {\r\n    const self = this;\r\n    const actionParam: Action = {};\r\n    actionParam.endPoint = true;\r\n\r\n          const userPreferences = self.userDataService.getUserPreferences();\r\n          const preferenceBookmarks = self.userDataService.getPreferenceBookmarks(\r\n            userPreferences\r\n          );\r\n          // update the found preference\r\n          preferenceBookmarks.lastVisitedStudy = selectedStudy.key;\r\n          preferenceBookmarks.mruStudyList = self.getUpdatedMRUStudyList(\r\n            preferenceBookmarks.mruStudyList.toString(),\r\n            selectedStudy\r\n          );\r\n          // create payload\r\n          const preferenceBookmarksIndex = self.userDataService.getPreferenceBookmarksIndex(\r\n            userPreferences\r\n          );\r\n\r\n          const preferenceBookmarksObj =\r\n            userPreferences[preferenceBookmarksIndex];\r\n          // call updateUserPreference API\r\n          actionParam.url = APIEndPoints.USER_PREFERENCE;\r\n          actionParam.httpMethod = HttpVerbs.put;\r\n          return self.userDataService\r\n            .updateUserPreference(preferenceBookmarksObj, actionParam)\r\n            .pipe(\r\n              map(resp => {\r\n                return resp;\r\n              }),\r\n              catchError(error => {\r\n                throw error;\r\n              })\r\n            );\r\n  }\r\n\r\n  // updateSelectedStudyPreferences(selectedStudy: any): Observable<any> {\r\n  //   const self = this;\r\n  //   const actionParam: Action = {};\r\n  //   actionParam.endPoint = true;\r\n  //   return self.userDataService.getUserData(USER_PARAMS, actionParam).pipe(\r\n  //     map((res: any) => res),\r\n  //     mergeMap((data: any) => {\r\n  //       if (data.result === COMMON.RESULT_OK) {\r\n  //         const userPreferences = self.userDataService.getUserPreferences();\r\n  //         const preferenceBookmarks = self.userDataService.getPreferenceBookmarks(\r\n  //           userPreferences\r\n  //         );\r\n  //         // update the found preference\r\n  //         preferenceBookmarks.lastVisitedStudy = selectedStudy.key;\r\n  //         preferenceBookmarks.mruStudyList = self.getUpdatedMRUStudyList(\r\n  //           preferenceBookmarks.mruStudyList.toString(),\r\n  //           selectedStudy\r\n  //         );\r\n  //         // create payload\r\n  //         const preferenceBookmarksIndex = self.userDataService.getPreferenceBookmarksIndex(\r\n  //           userPreferences\r\n  //         );\r\n\r\n  //         const preferenceBookmarksObj =\r\n  //           userPreferences[preferenceBookmarksIndex];\r\n  //         // call updateUserPreference API\r\n  //         actionParam.url = APIEndPoints.USER_PREFERENCE;\r\n  //         actionParam.httpMethod = HttpVerbs.put;\r\n  //         return self.userDataService\r\n  //           .updateUserPreference(preferenceBookmarksObj, actionParam)\r\n  //           .pipe(\r\n  //             map(resp => {\r\n  //               return resp;\r\n  //             }),\r\n  //             catchError(error => {\r\n  //               throw error;\r\n  //             })\r\n  //           );\r\n  //       } else {\r\n  //         throw new ApplicationError(data.error.message, data.error.errorCode);\r\n  //       }\r\n  //     }),\r\n  //     catchError(error => {\r\n  //       throw error;\r\n  //     })\r\n  //   );\r\n  // }\r\n\r\n  getStudyRefreshDate(): Observable<any> {\r\n    const self = this;\r\n    const studyKey = self.userDataService.getLastVisitedStudyKey();\r\n    return self.getStudySummaryDetails(studyKey).pipe(\r\n      map(resp => {\r\n        return self.studyRefreshDateMap(resp);\r\n      })\r\n    );\r\n  }\r\n\r\n  getUpdatedMRUStudyList(studyList: string, selectedStudy: any): string {\r\n    // tslint:disable-next-line:prefer-const\r\n    let studyListArr = studyList.split(';');\r\n    const index = studyListArr.indexOf(selectedStudy.key.toString());\r\n    if (index > -1) {\r\n      studyListArr.splice(index, 1);\r\n    }\r\n    if (studyListArr.length > 4) {\r\n      studyListArr.shift();\r\n    }\r\n    studyListArr.push(selectedStudy.key);\r\n    return studyListArr.join(';');\r\n  }\r\n\r\n  /**\r\n  * Gets study summary details\r\n  * @param studyKey\r\n  * @param [baseParam]\r\n  * @returns\r\n  */\r\n  getStudySummaryDetails(studyKey, baseParam?: Action) {\r\n    const studyParam = {\r\n      commandName: COMMAND.STUDYSUMMARY,\r\n      param: {\r\n        studyKey: studyKey\r\n      }\r\n    };\r\n    const that = this;\r\n    const moduleInfo = CTOSUtil.getModuleInfo('PLANCARD', studyKey);\r\n    // const planListPayLoad = that.payloadCommandService.getCommandDetails(\r\n    //   studyParam.commandName,\r\n    //   studyParam.param,\r\n    //   null,\r\n    //   null,\r\n    //   moduleInfo\r\n    // );\r\n    const payload = this.payloadCommandService.getApiRequest(\r\n      studyParam.commandName,\r\n      studyParam.param,\r\n      null,\r\n      moduleInfo\r\n    );\r\n\r\n\r\n    const actionParam: Action = {};\r\n    if (!baseParam) {\r\n      baseParam = actionParam;\r\n    }\r\n    // baseParam.cacheKey =\r\n    //   CacheKey.GetStudySummary + '_' + studyParam.param.studyKey;\r\n    baseParam.url = APIEndPoints.STUDY_SUMMARY;\r\n    // return that.baseConnectionService\r\n    //   .sendRequest(planListPayLoad, baseParam)\r\n    //   .pipe(\r\n    //     map(resp => {\r\n    //       this._studySummary.next(resp);\r\n    //       return resp.studySummary;\r\n    //     })\r\n    //   );\r\n    return this.baseConnectionService\r\n      .send(payload, baseParam)\r\n      .pipe(\r\n        map(response => {\r\n          this._studySummary.next(response);\r\n          return response.studySummary;\r\n        })\r\n      );\r\n  }\r\n\r\n  private studyRefreshDateMap(response): string {\r\n    let studyRefreshDate = '';\r\n    if (response && response.studyThumbnail && AppUtil.isDefined(response.studyThumbnail.studyRefreshDate, false)) {\r\n      studyRefreshDate = response.studyThumbnail.studyRefreshDate;\r\n    }\r\n    return studyRefreshDate;\r\n  }\r\n\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from 'environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}